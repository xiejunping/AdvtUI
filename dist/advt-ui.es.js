var render$5 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "c-weektime"
  }, [_c("div", {
    staticClass: "c-schedue"
  }), _c("div", {
    class: {
      "c-schedue": true,
      "c-schedue-notransi": _vm.mode
    },
    style: _vm.styleValue
  }), _c("table", {
    staticClass: "c-weektime-table",
    class: {
      "c-min-table": _vm.colspan < 2
    }
  }, [_c("thead", {
    staticClass: "c-weektime-head"
  }, [_c("tr", [_c("th", {
    staticClass: "week-td",
    attrs: {
      "rowspan": "8"
    }
  }, [_vm._v("\u661F\u671F/\u65F6\u95F4")]), _c("th", {
    attrs: {
      "colspan": 12 * _vm.colspan
    }
  }, [_vm._v("00:00 - 12:00")]), _c("th", {
    attrs: {
      "colspan": 12 * _vm.colspan
    }
  }, [_vm._v("12:00 - 24:00")])]), _c("tr", _vm._l(_vm.theadArr, function(t) {
    return _c("td", {
      key: t,
      attrs: {
        "colspan": _vm.colspan
      }
    }, [_vm._v(_vm._s(t))]);
  }), 0)]), _c("tbody", {
    staticClass: "c-weektime-body"
  }, [_vm._l(_vm.data, function(t) {
    return _c("tr", {
      key: t.row
    }, [_c("td", [_vm._v(_vm._s(t.value))]), _vm._l(t.child, function(n) {
      return _c("td", {
        key: `${n.row}-${n.col}`,
        staticClass: "weektime-atom-item",
        class: _vm.selectClasses(n),
        attrs: {
          "data-week": n.row,
          "data-time": n.col
        },
        on: {
          "mouseenter": function($event) {
            return _vm.cellEnter(n);
          },
          "mousedown": function($event) {
            return _vm.cellDown(n);
          },
          "mouseup": function($event) {
            return _vm.cellUp(n);
          }
        }
      });
    })], 2);
  }), _c("tr", [_c("td", {
    staticClass: "c-weektime-preview",
    attrs: {
      "colspan": "49"
    }
  }, [_c("div", {
    staticClass: "g-clearfix c-weektime-con"
  }, [_c("span", {
    staticClass: "g-pull-left"
  }, [_vm._v(_vm._s(_vm.selectState ? "\u5DF2\u9009\u62E9\u65F6\u95F4\u6BB5" : "\u53EF\u62D6\u52A8\u9F20\u6807\u9009\u62E9\u65F6\u95F4\u6BB5"))]), _c("a", {
    staticClass: "g-pull-right",
    on: {
      "click": function($event) {
        $event.preventDefault();
        return _vm.$emit("on-clear");
      }
    }
  }, [_vm._v("\u6E05\u7A7A\u9009\u62E9")])]), _vm.selectState ? _c("div", {
    staticClass: "c-weektime-time"
  }, _vm._l(_vm.selectValue, function(t) {
    return _c("div", {
      key: t.id
    }, [t.value ? _c("p", [_c("span", {
      staticClass: "g-tip-text"
    }, [_vm._v(_vm._s(t.week) + "\uFF1A")]), _c("span", [_vm._v(_vm._s(t.value))])]) : _vm._e()]);
  }), 0) : _vm._e()])])], 2)])]);
};
var staticRenderFns$5 = [];
;
var dragWeektime_vue_vue_type_style_index_0_scoped_true_lang = "";
function normalizeComponent(scriptExports, render2, staticRenderFns2, functionalTemplate, injectStyles, scopeId, moduleIdentifier, shadowMode) {
  var options = typeof scriptExports === "function" ? scriptExports.options : scriptExports;
  if (render2) {
    options.render = render2;
    options.staticRenderFns = staticRenderFns2;
    options._compiled = true;
  }
  if (functionalTemplate) {
    options.functional = true;
  }
  if (scopeId) {
    options._scopeId = "data-v-" + scopeId;
  }
  var hook;
  if (moduleIdentifier) {
    hook = function(context) {
      context = context || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext;
      if (!context && typeof __VUE_SSR_CONTEXT__ !== "undefined") {
        context = __VUE_SSR_CONTEXT__;
      }
      if (injectStyles) {
        injectStyles.call(this, context);
      }
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    };
    options._ssrRegister = hook;
  } else if (injectStyles) {
    hook = shadowMode ? function() {
      injectStyles.call(
        this,
<<<<<<< HEAD
        (options2.functional ? this.parent : this).$root.$options.shadowRoot
=======
        (options.functional ? this.parent : this).$root.$options.shadowRoot
>>>>>>> 512566f2f7dfc72d1e9ab0db6dd850af29a315dd
      );
    } : injectStyles;
  }
  if (hook) {
    if (options.functional) {
      options._injectStyles = hook;
      var originalRender = options.render;
      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      var existing = options.beforeCreate;
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }
  return {
    exports: scriptExports,
    options
  };
}
const createArr = (len) => {
  return Array.from(Array(len)).map((ret, id) => id);
};
const __vue2_script$5 = {
  name: "DragWeektime",
  props: {
    value: {
      type: Array
    },
    data: {
      type: Array
    },
    colspan: {
      type: Number,
      default() {
        return 2;
      }
    }
  },
  computed: {
    styleValue() {
      return {
        width: `${this.width}px`,
        height: `${this.height}px`,
        left: `${this.left}px`,
        top: `${this.top}px`
      };
    },
    selectValue() {
      return this.value;
    },
    selectState() {
      return this.value.some((ret) => ret.value);
    },
    selectClasses() {
      return (n) => n.check ? "ui-selected" : "";
    }
  },
  methods: {
    cellEnter(item) {
      const ele = document.querySelector(`td[data-week='${item.row}'][data-time='${item.col}']`);
      if (ele && !this.mode) {
        this.left = ele.offsetLeft;
        this.top = ele.offsetTop;
      } else {
        if (item.col <= this.col && item.row <= this.row) {
          this.width = (this.col - item.col + 1) * ele.offsetWidth;
          this.height = (this.row - item.row + 1) * ele.offsetHeight;
          this.left = ele.offsetLeft;
          this.top = ele.offsetTop;
        } else if (item.col >= this.col && item.row >= this.row) {
          this.width = (item.col - this.col + 1) * ele.offsetWidth;
          this.height = (item.row - this.row + 1) * ele.offsetHeight;
          if (item.col > this.col && item.row === this.row)
            this.top = ele.offsetTop;
          if (item.col === this.col && item.row > this.row)
            this.left = ele.offsetLeft;
        } else if (item.col > this.col && item.row < this.row) {
          this.width = (item.col - this.col + 1) * ele.offsetWidth;
          this.height = (this.row - item.row + 1) * ele.offsetHeight;
          this.top = ele.offsetTop;
        } else if (item.col < this.col && item.row > this.row) {
          this.width = (this.col - item.col + 1) * ele.offsetWidth;
          this.height = (item.row - this.row + 1) * ele.offsetHeight;
          this.left = ele.offsetLeft;
        }
      }
    },
    cellDown(item) {
      const ele = document.querySelector(`td[data-week='${item.row}'][data-time='${item.col}']`);
      this.check = Boolean(item.check);
      this.mode = 1;
      if (ele) {
        this.width = ele.offsetWidth;
        this.height = ele.offsetHeight;
      }
      this.row = item.row;
      this.col = item.col;
    },
    cellUp(item) {
      if (item.col <= this.col && item.row <= this.row) {
        this.selectWeek([item.row, this.row], [item.col, this.col], !this.check);
      } else if (item.col >= this.col && item.row >= this.row) {
        this.selectWeek([this.row, item.row], [this.col, item.col], !this.check);
      } else if (item.col > this.col && item.row < this.row) {
        this.selectWeek([item.row, this.row], [this.col, item.col], !this.check);
      } else if (item.col < this.col && item.row > this.row) {
        this.selectWeek([this.row, item.row], [item.col, this.col], !this.check);
      }
      this.width = 0;
      this.height = 0;
      this.mode = 0;
    },
    selectWeek(row, col, check) {
      const [minRow, maxRow] = row;
      const [minCol, maxCol] = col;
      this.data.forEach((item) => {
        item.child.forEach((t) => {
          if (t.row >= minRow && t.row <= maxRow && t.col >= minCol && t.col <= maxCol) {
            this.$set(t, "check", check);
          }
        });
      });
    }
  },
  data() {
    return {
      width: 0,
      height: 0,
      left: 0,
      top: 0,
      mode: 0,
      row: 0,
      col: 0,
      theadArr: []
    };
  },
  created() {
    this.theadArr = createArr(24);
  }
};
const __cssModules$5 = {};
var __component__$5 = /* @__PURE__ */ normalizeComponent(
  __vue2_script$5,
  render$5,
  staticRenderFns$5,
  false,
  __vue2_injectStyles$5,
<<<<<<< HEAD
  "182bc2f6",
=======
  "36169b38",
>>>>>>> 512566f2f7dfc72d1e9ab0db6dd850af29a315dd
  null,
  null
);
function __vue2_injectStyles$5(context) {
  for (let o in __cssModules$5) {
    this[o] = __cssModules$5[o];
  }
}
var DragWeektime = /* @__PURE__ */ function() {
  return __component__$5.exports;
}();
DragWeektime.install = function(Vue) {
  Vue.component(DragWeektime.name, DragWeektime);
};
var render$4 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "c-select-item"
  }, [_c("div", {
    staticClass: "c-header"
  }, [_c("span", {
    staticClass: "c-header-title"
  }, [_vm._v(_vm._s(_vm.title))]), _vm.clear ? _c("span", {
    staticClass: "c-header-clear",
    on: {
      "click": function($event) {
        return _vm.$emit("on-clear");
      }
    }
  }, [_vm._v(" \u6E05\u7A7A\u5168\u90E8 ")]) : _vm._e()]), _c("div", {
    staticClass: "c-selecter-content"
  }, [_vm._t("default")], 2)]);
};
var staticRenderFns$4 = [];
;
var selectItem_vue_vue_type_style_index_0_scoped_true_lang = "";
const __vue2_script$4 = {
  name: "selectItem",
  props: {
    title: {
      type: String
    },
    clear: {
      type: Boolean
    }
  }
};
const __cssModules$4 = {};
var __component__$4 = /* @__PURE__ */ normalizeComponent(
  __vue2_script$4,
  render$4,
  staticRenderFns$4,
  false,
  __vue2_injectStyles$4,
<<<<<<< HEAD
  "3d2f2883",
=======
  "20eb1028",
>>>>>>> 512566f2f7dfc72d1e9ab0db6dd850af29a315dd
  null,
  null
);
function __vue2_injectStyles$4(context) {
  for (let o in __cssModules$4) {
    this[o] = __cssModules$4[o];
  }
}
var SelectItem = /* @__PURE__ */ function() {
  return __component__$4.exports;
}();
<<<<<<< HEAD
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
function getAugmentedNamespace(n) {
  if (n.__esModule)
    return n;
  var a = Object.defineProperty({}, "__esModule", { value: true });
  Object.keys(n).forEach(function(k) {
    var d = Object.getOwnPropertyDescriptor(n, k);
    Object.defineProperty(a, k, d.get ? d : {
      enumerable: true,
      get: function() {
        return n[k];
      }
    });
  });
  return a;
}
var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/;
var babelHelperVueJsxMergeProps = function mergeJSXProps(objs) {
  return objs.reduce(function(a, b) {
    var aa, bb, key2, nestedKey, temp;
    for (key2 in b) {
      aa = a[key2];
      bb = b[key2];
      if (aa && nestRE.test(key2)) {
        if (key2 === "class") {
          if (typeof aa === "string") {
            temp = aa;
            a[key2] = aa = {};
            aa[temp] = true;
          }
          if (typeof bb === "string") {
            temp = bb;
            b[key2] = bb = {};
            bb[temp] = true;
          }
        }
        if (key2 === "on" || key2 === "nativeOn" || key2 === "hook") {
          for (nestedKey in bb) {
            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey]);
          }
        } else if (Array.isArray(aa)) {
          a[key2] = aa.concat(bb);
        } else if (Array.isArray(bb)) {
          a[key2] = [aa].concat(bb);
        } else {
          for (nestedKey in bb) {
            aa[nestedKey] = bb[nestedKey];
          }
        }
      } else {
        a[key2] = b[key2];
      }
    }
    return a;
  }, {});
};
function mergeFn(a, b) {
  return function() {
    a && a.apply(this, arguments);
    b && b.apply(this, arguments);
  };
}
var _mergeJSXProps = babelHelperVueJsxMergeProps;
var defineProperty$5 = { exports: {} };
var _global = { exports: {} };
var global$6 = _global.exports = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
if (typeof __g == "number")
  __g = global$6;
var _core = { exports: {} };
var core$3 = _core.exports = { version: "2.6.12" };
if (typeof __e == "number")
  __e = core$3;
var _aFunction = function(it) {
  if (typeof it != "function")
    throw TypeError(it + " is not a function!");
  return it;
};
var aFunction = _aFunction;
var _ctx = function(fn, that, length) {
  aFunction(fn);
  if (that === void 0)
    return fn;
  switch (length) {
    case 1:
      return function(a) {
        return fn.call(that, a);
      };
    case 2:
      return function(a, b) {
        return fn.call(that, a, b);
      };
    case 3:
      return function(a, b, c) {
        return fn.call(that, a, b, c);
      };
  }
  return function() {
    return fn.apply(that, arguments);
  };
};
var _objectDp = {};
var _isObject = function(it) {
  return typeof it === "object" ? it !== null : typeof it === "function";
};
var isObject$j = _isObject;
var _anObject = function(it) {
  if (!isObject$j(it))
    throw TypeError(it + " is not an object!");
  return it;
};
var _fails = function(exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};
var _descriptors = !_fails(function() {
  return Object.defineProperty({}, "a", { get: function() {
    return 7;
  } }).a != 7;
});
var isObject$i = _isObject;
var document$2 = _global.exports.document;
var is = isObject$i(document$2) && isObject$i(document$2.createElement);
var _domCreate = function(it) {
  return is ? document$2.createElement(it) : {};
};
var _ie8DomDefine = !_descriptors && !_fails(function() {
  return Object.defineProperty(_domCreate("div"), "a", { get: function() {
    return 7;
  } }).a != 7;
});
var isObject$h = _isObject;
var _toPrimitive = function(it, S) {
  if (!isObject$h(it))
    return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == "function" && !isObject$h(val = fn.call(it)))
    return val;
  if (typeof (fn = it.valueOf) == "function" && !isObject$h(val = fn.call(it)))
    return val;
  if (!S && typeof (fn = it.toString) == "function" && !isObject$h(val = fn.call(it)))
    return val;
  throw TypeError("Can't convert object to primitive value");
};
var anObject$5 = _anObject;
var IE8_DOM_DEFINE$1 = _ie8DomDefine;
var toPrimitive$2 = _toPrimitive;
var dP$3 = Object.defineProperty;
_objectDp.f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject$5(O);
  P = toPrimitive$2(P, true);
  anObject$5(Attributes);
  if (IE8_DOM_DEFINE$1)
    try {
      return dP$3(O, P, Attributes);
    } catch (e) {
    }
  if ("get" in Attributes || "set" in Attributes)
    throw TypeError("Accessors not supported!");
  if ("value" in Attributes)
    O[P] = Attributes.value;
  return O;
};
var _propertyDesc = function(bitmap, value27) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value27
  };
};
var dP$2 = _objectDp;
var createDesc$3 = _propertyDesc;
var _hide = _descriptors ? function(object3, key2, value27) {
  return dP$2.f(object3, key2, createDesc$3(1, value27));
} : function(object3, key2, value27) {
  object3[key2] = value27;
  return object3;
};
var hasOwnProperty$f = {}.hasOwnProperty;
var _has = function(it, key2) {
  return hasOwnProperty$f.call(it, key2);
};
var global$5 = _global.exports;
var core$2 = _core.exports;
var ctx$1 = _ctx;
var hide$2 = _hide;
var has$7 = _has;
var PROTOTYPE$2 = "prototype";
var $export$5 = function(type3, name, source) {
  var IS_FORCED = type3 & $export$5.F;
  var IS_GLOBAL = type3 & $export$5.G;
  var IS_STATIC = type3 & $export$5.S;
  var IS_PROTO = type3 & $export$5.P;
  var IS_BIND = type3 & $export$5.B;
  var IS_WRAP = type3 & $export$5.W;
  var exports = IS_GLOBAL ? core$2 : core$2[name] || (core$2[name] = {});
  var expProto = exports[PROTOTYPE$2];
  var target2 = IS_GLOBAL ? global$5 : IS_STATIC ? global$5[name] : (global$5[name] || {})[PROTOTYPE$2];
  var key2, own, out;
  if (IS_GLOBAL)
    source = name;
  for (key2 in source) {
    own = !IS_FORCED && target2 && target2[key2] !== void 0;
    if (own && has$7(exports, key2))
      continue;
    out = own ? target2[key2] : source[key2];
    exports[key2] = IS_GLOBAL && typeof target2[key2] != "function" ? source[key2] : IS_BIND && own ? ctx$1(out, global$5) : IS_WRAP && target2[key2] == out ? function(C) {
      var F = function(a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0:
              return new C();
            case 1:
              return new C(a);
            case 2:
              return new C(a, b);
          }
          return new C(a, b, c);
        }
        return C.apply(this, arguments);
      };
      F[PROTOTYPE$2] = C[PROTOTYPE$2];
      return F;
    }(out) : IS_PROTO && typeof out == "function" ? ctx$1(Function.call, out) : out;
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key2] = out;
      if (type3 & $export$5.R && expProto && !expProto[key2])
        hide$2(expProto, key2, out);
    }
  }
};
$export$5.F = 1;
$export$5.G = 2;
$export$5.S = 4;
$export$5.P = 8;
$export$5.B = 16;
$export$5.W = 32;
$export$5.U = 64;
$export$5.R = 128;
var _export = $export$5;
var $export$4 = _export;
$export$4($export$4.S + $export$4.F * !_descriptors, "Object", { defineProperty: _objectDp.f });
var $Object = _core.exports.Object;
var defineProperty$4 = function defineProperty2(it, key2, desc) {
  return $Object.defineProperty(it, key2, desc);
};
(function(module2) {
  module2.exports = { "default": defineProperty$4, __esModule: true };
})(defineProperty$5);
var _defineProperty$4 = defineProperty$5.exports;
var _defineProperty2$1 = _interopRequireDefault$5(_defineProperty$4);
function _interopRequireDefault$5(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var _default$8 = function(obj, key2, value27) {
  if (key2 in obj) {
    (0, _defineProperty2$1.default)(obj, key2, {
      value: value27,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value27;
  }
  return obj;
};
var iterator$1 = { exports: {} };
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function(it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};
var _defined = function(it) {
  if (it == void 0)
    throw TypeError("Can't call method on  " + it);
  return it;
};
var toInteger$6 = _toInteger;
var defined$2 = _defined;
var _stringAt = function(TO_STRING) {
  return function(that, pos) {
    var s = String(defined$2(that));
    var i = toInteger$6(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l)
      return TO_STRING ? "" : void 0;
    a = s.charCodeAt(i);
    return a < 55296 || a > 56319 || i + 1 === l || (b = s.charCodeAt(i + 1)) < 56320 || b > 57343 ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 55296 << 10) + (b - 56320) + 65536;
  };
};
var _library = true;
var _redefine = _hide;
var _iterators = {};
var toString$8 = {}.toString;
var _cof = function(it) {
  return toString$8.call(it).slice(8, -1);
};
var cof$2 = _cof;
var _iobject = Object("z").propertyIsEnumerable(0) ? Object : function(it) {
  return cof$2(it) == "String" ? it.split("") : Object(it);
};
var IObject$1 = _iobject;
var defined$1 = _defined;
var _toIobject = function(it) {
  return IObject$1(defined$1(it));
};
var toInteger$5 = _toInteger;
var min$2 = Math.min;
var _toLength = function(it) {
  return it > 0 ? min$2(toInteger$5(it), 9007199254740991) : 0;
};
var toInteger$4 = _toInteger;
var max$1 = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function(index2, length) {
  index2 = toInteger$4(index2);
  return index2 < 0 ? max$1(index2 + length, 0) : min$1(index2, length);
};
var toIObject$5 = _toIobject;
var toLength$1 = _toLength;
var toAbsoluteIndex = _toAbsoluteIndex;
var _arrayIncludes$1 = function(IS_INCLUDES) {
  return function($this, el, fromIndex) {
    var O = toIObject$5($this);
    var length = toLength$1(O.length);
    var index2 = toAbsoluteIndex(fromIndex, length);
    var value27;
    if (IS_INCLUDES && el != el)
      while (length > index2) {
        value27 = O[index2++];
        if (value27 != value27)
          return true;
      }
    else
      for (; length > index2; index2++)
        if (IS_INCLUDES || index2 in O) {
          if (O[index2] === el)
            return IS_INCLUDES || index2 || 0;
        }
    return !IS_INCLUDES && -1;
  };
};
var _shared = { exports: {} };
var core$1 = _core.exports;
var global$4 = _global.exports;
var SHARED = "__core-js_shared__";
var store$1 = global$4[SHARED] || (global$4[SHARED] = {});
(_shared.exports = function(key2, value27) {
  return store$1[key2] || (store$1[key2] = value27 !== void 0 ? value27 : {});
})("versions", []).push({
  version: core$1.version,
  mode: "pure",
  copyright: "\xA9 2020 Denis Pushkarev (zloirock.ru)"
});
var id$3 = 0;
var px = Math.random();
var _uid = function(key2) {
  return "Symbol(".concat(key2 === void 0 ? "" : key2, ")_", (++id$3 + px).toString(36));
};
var shared$1 = _shared.exports("keys");
var uid$3 = _uid;
var _sharedKey = function(key2) {
  return shared$1[key2] || (shared$1[key2] = uid$3(key2));
};
var has$6 = _has;
var toIObject$4 = _toIobject;
var arrayIndexOf = _arrayIncludes$1(false);
var IE_PROTO$2 = _sharedKey("IE_PROTO");
var _objectKeysInternal = function(object3, names) {
  var O = toIObject$4(object3);
  var i = 0;
  var result = [];
  var key2;
  for (key2 in O)
    if (key2 != IE_PROTO$2)
      has$6(O, key2) && result.push(key2);
  while (names.length > i)
    if (has$6(O, key2 = names[i++])) {
      ~arrayIndexOf(result, key2) || result.push(key2);
    }
  return result;
};
var _enumBugKeys = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
var $keys$2 = _objectKeysInternal;
var enumBugKeys$1 = _enumBugKeys;
var _objectKeys = Object.keys || function keys(O) {
  return $keys$2(O, enumBugKeys$1);
};
var dP$1 = _objectDp;
var anObject$4 = _anObject;
var getKeys$2 = _objectKeys;
var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$4(O);
  var keys3 = getKeys$2(Properties);
  var length = keys3.length;
  var i = 0;
  var P;
  while (length > i)
    dP$1.f(O, P = keys3[i++], Properties[P]);
  return O;
};
var document$1 = _global.exports.document;
var _html = document$1 && document$1.documentElement;
var anObject$3 = _anObject;
var dPs = _objectDps;
var enumBugKeys = _enumBugKeys;
var IE_PROTO$1 = _sharedKey("IE_PROTO");
var Empty$2 = function() {
};
var PROTOTYPE$1 = "prototype";
var createDict = function() {
  var iframe = _domCreate("iframe");
  var i = enumBugKeys.length;
  var lt = "<";
  var gt = ">";
  var iframeDocument;
  iframe.style.display = "none";
  _html.appendChild(iframe);
  iframe.src = "javascript:";
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + "script" + gt + "document.F=Object" + lt + "/script" + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--)
    delete createDict[PROTOTYPE$1][enumBugKeys[i]];
  return createDict();
};
var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty$2[PROTOTYPE$1] = anObject$3(O);
    result = new Empty$2();
    Empty$2[PROTOTYPE$1] = null;
    result[IE_PROTO$1] = O;
  } else
    result = createDict();
  return Properties === void 0 ? result : dPs(result, Properties);
};
var _wks = { exports: {} };
var store = _shared.exports("wks");
var uid$2 = _uid;
var Symbol$8 = _global.exports.Symbol;
var USE_SYMBOL = typeof Symbol$8 == "function";
var $exports = _wks.exports = function(name) {
  return store[name] || (store[name] = USE_SYMBOL && Symbol$8[name] || (USE_SYMBOL ? Symbol$8 : uid$2)("Symbol." + name));
};
$exports.store = store;
var def = _objectDp.f;
var has$5 = _has;
var TAG$1 = _wks.exports("toStringTag");
var _setToStringTag = function(it, tag, stat) {
  if (it && !has$5(it = stat ? it : it.prototype, TAG$1))
    def(it, TAG$1, { configurable: true, value: tag });
};
var create$2 = _objectCreate;
var descriptor = _propertyDesc;
var setToStringTag$2 = _setToStringTag;
var IteratorPrototype = {};
_hide(IteratorPrototype, _wks.exports("iterator"), function() {
  return this;
});
var _iterCreate = function(Constructor, NAME, next3) {
  Constructor.prototype = create$2(IteratorPrototype, { next: descriptor(1, next3) });
  setToStringTag$2(Constructor, NAME + " Iterator");
};
var defined = _defined;
var _toObject = function(it) {
  return Object(defined(it));
};
var has$4 = _has;
var toObject$5 = _toObject;
var IE_PROTO = _sharedKey("IE_PROTO");
var ObjectProto$1 = Object.prototype;
var _objectGpo = Object.getPrototypeOf || function(O) {
  O = toObject$5(O);
  if (has$4(O, IE_PROTO))
    return O[IE_PROTO];
  if (typeof O.constructor == "function" && O instanceof O.constructor) {
    return O.constructor.prototype;
  }
  return O instanceof Object ? ObjectProto$1 : null;
};
var $export$3 = _export;
var redefine$1 = _redefine;
var hide$1 = _hide;
var Iterators$5 = _iterators;
var $iterCreate = _iterCreate;
var setToStringTag$1 = _setToStringTag;
var getPrototypeOf = _objectGpo;
var ITERATOR$4 = _wks.exports("iterator");
var BUGGY = !([].keys && "next" in [].keys());
var FF_ITERATOR = "@@iterator";
var KEYS = "keys";
var VALUES = "values";
var returnThis = function() {
  return this;
};
var _iterDefine = function(Base2, NAME, Constructor, next3, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next3);
  var getMethod = function(kind) {
    if (!BUGGY && kind in proto2)
      return proto2[kind];
    switch (kind) {
      case KEYS:
        return function keys3() {
          return new Constructor(this, kind);
        };
      case VALUES:
        return function values() {
          return new Constructor(this, kind);
        };
    }
    return function entries() {
      return new Constructor(this, kind);
    };
  };
  var TAG2 = NAME + " Iterator";
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto2 = Base2.prototype;
  var $native = proto2[ITERATOR$4] || proto2[FF_ITERATOR] || DEFAULT && proto2[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod("entries") : void 0;
  var $anyNative = NAME == "Array" ? proto2.entries || $native : $native;
  var methods, key2, IteratorPrototype2;
  if ($anyNative) {
    IteratorPrototype2 = getPrototypeOf($anyNative.call(new Base2()));
    if (IteratorPrototype2 !== Object.prototype && IteratorPrototype2.next) {
      setToStringTag$1(IteratorPrototype2, TAG2, true);
    }
  }
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() {
      return $native.call(this);
    };
  }
  if (FORCED && (BUGGY || VALUES_BUG || !proto2[ITERATOR$4])) {
    hide$1(proto2, ITERATOR$4, $default);
  }
  Iterators$5[NAME] = $default;
  Iterators$5[TAG2] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED)
      for (key2 in methods) {
        if (!(key2 in proto2))
          redefine$1(proto2, key2, methods[key2]);
      }
    else
      $export$3($export$3.P + $export$3.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};
var $at = _stringAt(true);
_iterDefine(String, "String", function(iterated) {
  this._t = String(iterated);
  this._i = 0;
}, function() {
  var O = this._t;
  var index2 = this._i;
  var point;
  if (index2 >= O.length)
    return { value: void 0, done: true };
  point = $at(O, index2);
  this._i += point.length;
  return { value: point, done: false };
});
var _iterStep = function(done, value27) {
  return { value: value27, done: !!done };
};
var step = _iterStep;
var Iterators$4 = _iterators;
var toIObject$3 = _toIobject;
_iterDefine(Array, "Array", function(iterated, kind) {
  this._t = toIObject$3(iterated);
  this._i = 0;
  this._k = kind;
}, function() {
  var O = this._t;
  var kind = this._k;
  var index2 = this._i++;
  if (!O || index2 >= O.length) {
    this._t = void 0;
    return step(1);
  }
  if (kind == "keys")
    return step(0, index2);
  if (kind == "values")
    return step(0, O[index2]);
  return step(0, [index2, O[index2]]);
}, "values");
Iterators$4.Arguments = Iterators$4.Array;
var global$3 = _global.exports;
var hide = _hide;
var Iterators$3 = _iterators;
var TO_STRING_TAG = _wks.exports("toStringTag");
var DOMIterables = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(",");
for (var i$1 = 0; i$1 < DOMIterables.length; i$1++) {
  var NAME = DOMIterables[i$1];
  var Collection = global$3[NAME];
  var proto$3 = Collection && Collection.prototype;
  if (proto$3 && !proto$3[TO_STRING_TAG])
    hide(proto$3, TO_STRING_TAG, NAME);
  Iterators$3[NAME] = Iterators$3.Array;
}
var _wksExt = {};
_wksExt.f = _wks.exports;
var iterator = _wksExt.f("iterator");
(function(module2) {
  module2.exports = { "default": iterator, __esModule: true };
})(iterator$1);
var symbol$1 = { exports: {} };
var _meta = { exports: {} };
var META$1 = _uid("meta");
var isObject$g = _isObject;
var has$3 = _has;
var setDesc = _objectDp.f;
var id$2 = 0;
var isExtensible = Object.isExtensible || function() {
  return true;
};
var FREEZE = !_fails(function() {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it) {
  setDesc(it, META$1, { value: {
    i: "O" + ++id$2,
    w: {}
  } });
};
var fastKey = function(it, create5) {
  if (!isObject$g(it))
    return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
  if (!has$3(it, META$1)) {
    if (!isExtensible(it))
      return "F";
    if (!create5)
      return "E";
    setMeta(it);
  }
  return it[META$1].i;
};
var getWeak = function(it, create5) {
  if (!has$3(it, META$1)) {
    if (!isExtensible(it))
      return true;
    if (!create5)
      return false;
    setMeta(it);
  }
  return it[META$1].w;
};
var onFreeze = function(it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has$3(it, META$1))
    setMeta(it);
  return it;
};
var meta = _meta.exports = {
  KEY: META$1,
  NEED: false,
  fastKey,
  getWeak,
  onFreeze
};
var core = _core.exports;
var wksExt$1 = _wksExt;
var defineProperty$3 = _objectDp.f;
var _wksDefine = function(name) {
  var $Symbol2 = core.Symbol || (core.Symbol = {});
  if (name.charAt(0) != "_" && !(name in $Symbol2))
    defineProperty$3($Symbol2, name, { value: wksExt$1.f(name) });
};
var _objectGops = {};
_objectGops.f = Object.getOwnPropertySymbols;
var _objectPie = {};
_objectPie.f = {}.propertyIsEnumerable;
var getKeys$1 = _objectKeys;
var gOPS$1 = _objectGops;
var pIE$2 = _objectPie;
var _enumKeys = function(it) {
  var result = getKeys$1(it);
  var getSymbols2 = gOPS$1.f;
  if (getSymbols2) {
    var symbols = getSymbols2(it);
    var isEnum2 = pIE$2.f;
    var i = 0;
    var key2;
    while (symbols.length > i)
      if (isEnum2.call(it, key2 = symbols[i++]))
        result.push(key2);
  }
  return result;
};
var cof$1 = _cof;
var _isArray = Array.isArray || function isArray(arg) {
  return cof$1(arg) == "Array";
};
var _objectGopnExt = {};
var _objectGopn = {};
var $keys$1 = _objectKeysInternal;
var hiddenKeys = _enumBugKeys.concat("length", "prototype");
_objectGopn.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys$1(O, hiddenKeys);
};
var toIObject$2 = _toIobject;
var gOPN$1 = _objectGopn.f;
var toString$7 = {}.toString;
var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
var getWindowNames = function(it) {
  try {
    return gOPN$1(it);
  } catch (e) {
    return windowNames.slice();
  }
};
_objectGopnExt.f = function getOwnPropertyNames2(it) {
  return windowNames && toString$7.call(it) == "[object Window]" ? getWindowNames(it) : gOPN$1(toIObject$2(it));
};
var _objectGopd = {};
var pIE$1 = _objectPie;
var createDesc$2 = _propertyDesc;
var toIObject$1 = _toIobject;
var toPrimitive$1 = _toPrimitive;
var has$2 = _has;
var IE8_DOM_DEFINE = _ie8DomDefine;
var gOPD$1 = Object.getOwnPropertyDescriptor;
_objectGopd.f = _descriptors ? gOPD$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIObject$1(O);
  P = toPrimitive$1(P, true);
  if (IE8_DOM_DEFINE)
    try {
      return gOPD$1(O, P);
    } catch (e) {
    }
  if (has$2(O, P))
    return createDesc$2(!pIE$1.f.call(O, P), O[P]);
};
var global$2 = _global.exports;
var has$1 = _has;
var DESCRIPTORS$1 = _descriptors;
var $export$2 = _export;
var redefine = _redefine;
var META = _meta.exports.KEY;
var $fails = _fails;
var shared = _shared.exports;
var setToStringTag = _setToStringTag;
var uid$1 = _uid;
var wks = _wks.exports;
var wksExt = _wksExt;
var wksDefine = _wksDefine;
var enumKeys = _enumKeys;
var isArray$f = _isArray;
var anObject$2 = _anObject;
var isObject$f = _isObject;
var toObject$4 = _toObject;
var toIObject = _toIobject;
var toPrimitive = _toPrimitive;
var createDesc$1 = _propertyDesc;
var _create = _objectCreate;
var gOPNExt = _objectGopnExt;
var $GOPD = _objectGopd;
var $GOPS = _objectGops;
var $DP = _objectDp;
var $keys = _objectKeys;
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global$2.Symbol;
var $JSON = global$2.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = "prototype";
var HIDDEN = wks("_hidden");
var TO_PRIMITIVE = wks("toPrimitive");
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared("symbol-registry");
var AllSymbols = shared("symbols");
var OPSymbols = shared("op-symbols");
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == "function" && !!$GOPS.f;
var QObject = global$2.QObject;
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
var setSymbolDesc = DESCRIPTORS$1 && $fails(function() {
  return _create(dP({}, "a", {
    get: function() {
      return dP(this, "a", { value: 7 }).a;
    }
  })).a != 7;
}) ? function(it, key2, D) {
  var protoDesc = gOPD(ObjectProto, key2);
  if (protoDesc)
    delete ObjectProto[key2];
  dP(it, key2, D);
  if (protoDesc && it !== ObjectProto)
    dP(ObjectProto, key2, protoDesc);
} : dP;
var wrap = function(tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};
var isSymbol$5 = USE_NATIVE && typeof $Symbol.iterator == "symbol" ? function(it) {
  return typeof it == "symbol";
} : function(it) {
  return it instanceof $Symbol;
};
var $defineProperty$1 = function defineProperty3(it, key2, D) {
  if (it === ObjectProto)
    $defineProperty$1(OPSymbols, key2, D);
  anObject$2(it);
  key2 = toPrimitive(key2, true);
  anObject$2(D);
  if (has$1(AllSymbols, key2)) {
    if (!D.enumerable) {
      if (!has$1(it, HIDDEN))
        dP(it, HIDDEN, createDesc$1(1, {}));
      it[HIDDEN][key2] = true;
    } else {
      if (has$1(it, HIDDEN) && it[HIDDEN][key2])
        it[HIDDEN][key2] = false;
      D = _create(D, { enumerable: createDesc$1(0, false) });
    }
    return setSymbolDesc(it, key2, D);
  }
  return dP(it, key2, D);
};
var $defineProperties = function defineProperties2(it, P) {
  anObject$2(it);
  var keys3 = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys3.length;
  var key2;
  while (l > i)
    $defineProperty$1(it, key2 = keys3[i++], P[key2]);
  return it;
};
var $create = function create2(it, P) {
  return P === void 0 ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key2) {
  var E = isEnum.call(this, key2 = toPrimitive(key2, true));
  if (this === ObjectProto && has$1(AllSymbols, key2) && !has$1(OPSymbols, key2))
    return false;
  return E || !has$1(this, key2) || !has$1(AllSymbols, key2) || has$1(this, HIDDEN) && this[HIDDEN][key2] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor2(it, key2) {
  it = toIObject(it);
  key2 = toPrimitive(key2, true);
  if (it === ObjectProto && has$1(AllSymbols, key2) && !has$1(OPSymbols, key2))
    return;
  var D = gOPD(it, key2);
  if (D && has$1(AllSymbols, key2) && !(has$1(it, HIDDEN) && it[HIDDEN][key2]))
    D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames3(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key2;
  while (names.length > i) {
    if (!has$1(AllSymbols, key2 = names[i++]) && key2 != HIDDEN && key2 != META)
      result.push(key2);
  }
  return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key2;
  while (names.length > i) {
    if (has$1(AllSymbols, key2 = names[i++]) && (IS_OP ? has$1(ObjectProto, key2) : true))
      result.push(AllSymbols[key2]);
  }
  return result;
};
if (!USE_NATIVE) {
  $Symbol = function Symbol2() {
    if (this instanceof $Symbol)
      throw TypeError("Symbol is not a constructor!");
    var tag = uid$1(arguments.length > 0 ? arguments[0] : void 0);
    var $set = function(value27) {
      if (this === ObjectProto)
        $set.call(OPSymbols, value27);
      if (has$1(this, HIDDEN) && has$1(this[HIDDEN], tag))
        this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc$1(1, value27));
    };
    if (DESCRIPTORS$1 && setter)
      setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], "toString", function toString2() {
    return this._k;
  });
  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty$1;
  _objectGopn.f = gOPNExt.f = $getOwnPropertyNames;
  _objectPie.f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;
  if (DESCRIPTORS$1 && !_library) {
    redefine(ObjectProto, "propertyIsEnumerable", $propertyIsEnumerable);
  }
  wksExt.f = function(name) {
    return wrap(wks(name));
  };
}
$export$2($export$2.G + $export$2.W + $export$2.F * !USE_NATIVE, { Symbol: $Symbol });
for (var es6Symbols = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), j = 0; es6Symbols.length > j; )
  wks(es6Symbols[j++]);
for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k; )
  wksDefine(wellKnownSymbols[k++]);
$export$2($export$2.S + $export$2.F * !USE_NATIVE, "Symbol", {
  "for": function(key2) {
    return has$1(SymbolRegistry, key2 += "") ? SymbolRegistry[key2] : SymbolRegistry[key2] = $Symbol(key2);
  },
  keyFor: function keyFor(sym) {
    if (!isSymbol$5(sym))
      throw TypeError(sym + " is not a symbol!");
    for (var key2 in SymbolRegistry)
      if (SymbolRegistry[key2] === sym)
        return key2;
  },
  useSetter: function() {
    setter = true;
  },
  useSimple: function() {
    setter = false;
  }
});
$export$2($export$2.S + $export$2.F * !USE_NATIVE, "Object", {
  create: $create,
  defineProperty: $defineProperty$1,
  defineProperties: $defineProperties,
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  getOwnPropertyNames: $getOwnPropertyNames,
  getOwnPropertySymbols: $getOwnPropertySymbols
});
var FAILS_ON_PRIMITIVES = $fails(function() {
  $GOPS.f(1);
});
$export$2($export$2.S + $export$2.F * FAILS_ON_PRIMITIVES, "Object", {
  getOwnPropertySymbols: function getOwnPropertySymbols2(it) {
    return $GOPS.f(toObject$4(it));
  }
});
$JSON && $export$2($export$2.S + $export$2.F * (!USE_NATIVE || $fails(function() {
  var S = $Symbol();
  return _stringify([S]) != "[null]" || _stringify({ a: S }) != "{}" || _stringify(Object(S)) != "{}";
})), "JSON", {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i)
      args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject$f(replacer) && it === void 0 || isSymbol$5(it))
      return;
    if (!isArray$f(replacer))
      replacer = function(key2, value27) {
        if (typeof $replacer == "function")
          value27 = $replacer.call(this, key2, value27);
        if (!isSymbol$5(value27))
          return value27;
      };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});
$Symbol[PROTOTYPE][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
setToStringTag($Symbol, "Symbol");
setToStringTag(Math, "Math", true);
setToStringTag(global$2.JSON, "JSON", true);
_wksDefine("asyncIterator");
_wksDefine("observable");
var symbol = _core.exports.Symbol;
(function(module2) {
  module2.exports = { "default": symbol, __esModule: true };
})(symbol$1);
var _iterator = iterator$1.exports;
var _iterator2 = _interopRequireDefault$4(_iterator);
var _symbol = symbol$1.exports;
var _symbol2 = _interopRequireDefault$4(_symbol);
var _typeof$2 = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function(obj) {
  return typeof obj;
} : function(obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj;
};
function _interopRequireDefault$4(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var _default$7 = typeof _symbol2.default === "function" && _typeof$2(_iterator2.default) === "symbol" ? function(obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof$2(obj);
} : function(obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof$2(obj);
};
var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root$a = freeGlobal || freeSelf || Function("return this")();
var _root = root$a;
var root$9 = _root;
var Symbol$7 = root$9.Symbol;
var _Symbol = Symbol$7;
var Symbol$6 = _Symbol;
var objectProto$g = Object.prototype;
var hasOwnProperty$e = objectProto$g.hasOwnProperty;
var nativeObjectToString$1 = objectProto$g.toString;
var symToStringTag$1 = Symbol$6 ? Symbol$6.toStringTag : void 0;
function getRawTag$1(value27) {
  var isOwn = hasOwnProperty$e.call(value27, symToStringTag$1), tag = value27[symToStringTag$1];
  try {
    value27[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result = nativeObjectToString$1.call(value27);
  if (unmasked) {
    if (isOwn) {
      value27[symToStringTag$1] = tag;
    } else {
      delete value27[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$f = Object.prototype;
var nativeObjectToString = objectProto$f.toString;
function objectToString$1(value27) {
  return nativeObjectToString.call(value27);
}
var _objectToString = objectToString$1;
var Symbol$5 = _Symbol, getRawTag = _getRawTag, objectToString = _objectToString;
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$5 ? Symbol$5.toStringTag : void 0;
function baseGetTag$7(value27) {
  if (value27 == null) {
    return value27 === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value27) ? getRawTag(value27) : objectToString(value27);
}
var _baseGetTag = baseGetTag$7;
function overArg$2(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg$2;
var overArg$1 = _overArg;
var getPrototype$3 = overArg$1(Object.getPrototypeOf, Object);
var _getPrototype = getPrototype$3;
function isObjectLike$a(value27) {
  return value27 != null && typeof value27 == "object";
}
var isObjectLike_1 = isObjectLike$a;
var baseGetTag$6 = _baseGetTag, getPrototype$2 = _getPrototype, isObjectLike$9 = isObjectLike_1;
var objectTag$4 = "[object Object]";
var funcProto$2 = Function.prototype, objectProto$e = Object.prototype;
var funcToString$2 = funcProto$2.toString;
var hasOwnProperty$d = objectProto$e.hasOwnProperty;
var objectCtorString = funcToString$2.call(Object);
function isPlainObject$2(value27) {
  if (!isObjectLike$9(value27) || baseGetTag$6(value27) != objectTag$4) {
    return false;
  }
  var proto2 = getPrototype$2(value27);
  if (proto2 === null) {
    return true;
  }
  var Ctor = hasOwnProperty$d.call(proto2, "constructor") && proto2.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString$2.call(Ctor) == objectCtorString;
}
var isPlainObject_1 = isPlainObject$2;
var ObjProto = Object.prototype;
var toString$6 = ObjProto.toString;
var hasOwn = ObjProto.hasOwnProperty;
var FN_MATCH_REGEXP = /^\s*function (\w+)/;
var getType$1 = function getType(fn) {
  var type3 = fn !== null && fn !== void 0 ? fn.type ? fn.type : fn : null;
  var match5 = type3 && type3.toString().match(FN_MATCH_REGEXP);
  return match5 && match5[1];
};
var getNativeType = function getNativeType2(value27) {
  if (value27 === null || value27 === void 0)
    return null;
  var match5 = value27.constructor.toString().match(FN_MATCH_REGEXP);
  return match5 && match5[1];
};
var noop$Y = function noop() {
};
var isInteger$1 = Number.isInteger || function(value27) {
  return typeof value27 === "number" && isFinite(value27) && Math.floor(value27) === value27;
};
var isArray$e = Array.isArray || function(value27) {
  return toString$6.call(value27) === "[object Array]";
};
var isFunction$5 = function isFunction(value27) {
  return toString$6.call(value27) === "[object Function]";
};
var withDefault = function withDefault2(type3) {
  Object.defineProperty(type3, "def", {
    value: function value27(def2) {
      if (def2 === void 0 && this["default"] === void 0) {
        this["default"] = void 0;
        return this;
      }
      if (!isFunction$5(def2) && !validateType(this, def2)) {
        warn$2(this._vueTypes_name + ' - invalid default value: "' + def2 + '"');
        return this;
      }
      this["default"] = isArray$e(def2) || isPlainObject_1(def2) ? function() {
        return def2;
      } : def2;
      return this;
    },
    enumerable: false,
    writable: false
  });
};
var withRequired = function withRequired2(type3) {
  Object.defineProperty(type3, "isRequired", {
    get: function get4() {
      this.required = true;
      return this;
    },
    enumerable: false
  });
};
var toType = function toType2(name, obj) {
  Object.defineProperty(obj, "_vueTypes_name", {
    enumerable: false,
    writable: false,
    value: name
  });
  withRequired(obj);
  withDefault(obj);
  if (isFunction$5(obj.validator)) {
    obj.validator = obj.validator.bind(obj);
  }
  return obj;
};
var validateType = function validateType2(type3, value27) {
  var silent = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var typeToCheck = type3;
  var valid = true;
  var expectedType = void 0;
  if (!isPlainObject_1(type3)) {
    typeToCheck = { type: type3 };
  }
  typeToCheck._vueTypes_name ? typeToCheck._vueTypes_name + " - " : "";
  if (hasOwn.call(typeToCheck, "type") && typeToCheck.type !== null) {
    if (isArray$e(typeToCheck.type)) {
      valid = typeToCheck.type.some(function(type4) {
        return validateType2(type4, value27, true);
      });
      expectedType = typeToCheck.type.map(function(type4) {
        return getType$1(type4);
      }).join(" or ");
    } else {
      expectedType = getType$1(typeToCheck);
      if (expectedType === "Array") {
        valid = isArray$e(value27);
      } else if (expectedType === "Object") {
        valid = isPlainObject_1(value27);
      } else if (expectedType === "String" || expectedType === "Number" || expectedType === "Boolean" || expectedType === "Function") {
        valid = getNativeType(value27) === expectedType;
      } else {
        valid = value27 instanceof typeToCheck.type;
      }
    }
  }
  if (!valid) {
    silent === false && warn$2();
    return false;
  }
  if (hasOwn.call(typeToCheck, "validator") && isFunction$5(typeToCheck.validator)) {
    valid = typeToCheck.validator(value27);
    if (!valid && silent === false)
      warn$2();
    return valid;
  }
  return valid;
};
var warn$2 = noop$Y;
var VuePropTypes = {
  get any() {
    return toType("any", {
      type: null
    });
  },
  get func() {
    return toType("function", {
      type: Function
    }).def(currentDefaults.func);
  },
  get bool() {
    return toType("boolean", {
      type: Boolean
    }).def(currentDefaults.bool);
  },
  get string() {
    return toType("string", {
      type: String
    }).def(currentDefaults.string);
  },
  get number() {
    return toType("number", {
      type: Number
    }).def(currentDefaults.number);
  },
  get array() {
    return toType("array", {
      type: Array
    }).def(currentDefaults.array);
  },
  get object() {
    return toType("object", {
      type: Object
    }).def(currentDefaults.object);
  },
  get integer() {
    return toType("integer", {
      type: Number,
      validator: function validator10(value27) {
        return isInteger$1(value27);
      }
    }).def(currentDefaults.integer);
  },
  get symbol() {
    return toType("symbol", {
      type: null,
      validator: function validator10(value27) {
        return (typeof value27 === "undefined" ? "undefined" : _default$7(value27)) === "symbol";
      }
    });
  },
  custom: function custom(validatorFn) {
    var warnMsg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "custom validation failed";
    if (typeof validatorFn !== "function") {
      throw new TypeError("[VueTypes error]: You must provide a function as argument");
    }
    return toType(validatorFn.name || "<<anonymous function>>", {
      validator: function validator10() {
        var valid = validatorFn.apply(void 0, arguments);
        if (!valid)
          warn$2(this._vueTypes_name + " - " + warnMsg);
        return valid;
      }
    });
  },
  oneOf: function oneOf(arr) {
    if (!isArray$e(arr)) {
      throw new TypeError("[VueTypes error]: You must provide an array as argument");
    }
    'oneOf - value should be one of "' + arr.join('", "') + '"';
    var allowedTypes = arr.reduce(function(ret, v) {
      if (v !== null && v !== void 0) {
        ret.indexOf(v.constructor) === -1 && ret.push(v.constructor);
      }
      return ret;
    }, []);
    return toType("oneOf", {
      type: allowedTypes.length > 0 ? allowedTypes : null,
      validator: function validator10(value27) {
        var valid = arr.indexOf(value27) !== -1;
        if (!valid)
          warn$2();
        return valid;
      }
    });
  },
  instanceOf: function instanceOf(instanceConstructor) {
    return toType("instanceOf", {
      type: instanceConstructor
    });
  },
  oneOfType: function oneOfType(arr) {
    if (!isArray$e(arr)) {
      throw new TypeError("[VueTypes error]: You must provide an array as argument");
    }
    var hasCustomValidators = false;
    var nativeChecks = arr.reduce(function(ret, type3) {
      if (isPlainObject_1(type3)) {
        if (type3._vueTypes_name === "oneOf") {
          return ret.concat(type3.type || []);
        }
        if (type3.type && !isFunction$5(type3.validator)) {
          if (isArray$e(type3.type))
            return ret.concat(type3.type);
          ret.push(type3.type);
        } else if (isFunction$5(type3.validator)) {
          hasCustomValidators = true;
        }
        return ret;
      }
      ret.push(type3);
      return ret;
    }, []);
    if (!hasCustomValidators) {
      return toType("oneOfType", {
        type: nativeChecks
      }).def(void 0);
    }
    arr.map(function(type3) {
      if (type3 && isArray$e(type3.type)) {
        return type3.type.map(getType$1);
      }
      return getType$1(type3);
    }).reduce(function(ret, type3) {
      return ret.concat(isArray$e(type3) ? type3 : [type3]);
    }, []).join('", "');
    return this.custom(function oneOfType2(value27) {
      var valid = arr.some(function(type3) {
        if (type3._vueTypes_name === "oneOf") {
          return type3.type ? validateType(type3.type, value27, true) : true;
        }
        return validateType(type3, value27, true);
      });
      if (!valid)
        warn$2();
      return valid;
    }).def(void 0);
  },
  arrayOf: function arrayOf(type3) {
    return toType("arrayOf", {
      type: Array,
      validator: function validator10(values) {
        var valid = values.every(function(value27) {
          return validateType(type3, value27);
        });
        if (!valid)
          warn$2('arrayOf - value must be an array of "' + getType$1(type3) + '"');
        return valid;
      }
    });
  },
  objectOf: function objectOf(type3) {
    return toType("objectOf", {
      type: Object,
      validator: function validator10(obj) {
        var valid = Object.keys(obj).every(function(key2) {
          return validateType(type3, obj[key2]);
        });
        if (!valid)
          warn$2('objectOf - value must be an object of "' + getType$1(type3) + '"');
        return valid;
      }
    });
  },
  shape: function shape(obj) {
    var keys3 = Object.keys(obj);
    var requiredKeys = keys3.filter(function(key2) {
      return obj[key2] && obj[key2].required === true;
    });
    var type3 = toType("shape", {
      type: Object,
      validator: function validator10(value27) {
        var _this = this;
        if (!isPlainObject_1(value27)) {
          return false;
        }
        var valueKeys = Object.keys(value27);
        if (requiredKeys.length > 0 && requiredKeys.some(function(req) {
          return valueKeys.indexOf(req) === -1;
        })) {
          warn$2('shape - at least one of required properties "' + requiredKeys.join('", "') + '" is not present');
          return false;
        }
        return valueKeys.every(function(key2) {
          if (keys3.indexOf(key2) === -1) {
            if (_this._vueTypes_isLoose === true)
              return true;
            return false;
          }
          var type4 = obj[key2];
          return validateType(type4, value27[key2]);
        });
      }
    });
    Object.defineProperty(type3, "_vueTypes_isLoose", {
      enumerable: false,
      writable: true,
      value: false
    });
    Object.defineProperty(type3, "loose", {
      get: function get4() {
        this._vueTypes_isLoose = true;
        return this;
      },
      enumerable: false
    });
    return type3;
  }
};
var typeDefaults = function typeDefaults2() {
  return {
    func: void 0,
    bool: void 0,
    string: void 0,
    number: void 0,
    array: void 0,
    object: void 0,
    integer: void 0
  };
};
var currentDefaults = typeDefaults();
Object.defineProperty(VuePropTypes, "sensibleDefaults", {
  enumerable: false,
  set: function set(value27) {
    if (value27 === false) {
      currentDefaults = {};
    } else if (value27 === true) {
      currentDefaults = typeDefaults();
    } else if (isPlainObject_1(value27)) {
      currentDefaults = value27;
    }
  },
  get: function get() {
    return currentDefaults;
  }
});
var PropTypes = VuePropTypes;
var classnames = { exports: {} };
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
(function(module2) {
  (function() {
    var hasOwn2 = {}.hasOwnProperty;
    function classNames2() {
      var classes6 = [];
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (!arg)
          continue;
        var argType = typeof arg;
        if (argType === "string" || argType === "number") {
          classes6.push(arg);
        } else if (Array.isArray(arg)) {
          if (arg.length) {
            var inner = classNames2.apply(null, arg);
            if (inner) {
              classes6.push(inner);
            }
          }
        } else if (argType === "object") {
          if (arg.toString === Object.prototype.toString) {
            for (var key2 in arg) {
              if (hasOwn2.call(arg, key2) && arg[key2]) {
                classes6.push(key2);
              }
            }
          } else {
            classes6.push(arg.toString());
          }
        }
      }
      return classes6.join(" ");
    }
    if (module2.exports) {
      classNames2.default = classNames2;
      module2.exports = classNames2;
    } else {
      window.classNames = classNames2;
    }
  })();
})(classnames);
var classNames = classnames.exports;
var assign$1 = { exports: {} };
var DESCRIPTORS = _descriptors;
var getKeys = _objectKeys;
var gOPS = _objectGops;
var pIE = _objectPie;
var toObject$3 = _toObject;
var IObject = _iobject;
var $assign = Object.assign;
var _objectAssign = !$assign || _fails(function() {
  var A = {};
  var B = {};
  var S = Symbol();
  var K = "abcdefghijklmnopqrst";
  A[S] = 7;
  K.split("").forEach(function(k) {
    B[k] = k;
  });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join("") != K;
}) ? function assign(target2, source) {
  var T2 = toObject$3(target2);
  var aLen = arguments.length;
  var index2 = 1;
  var getSymbols2 = gOPS.f;
  var isEnum2 = pIE.f;
  while (aLen > index2) {
    var S = IObject(arguments[index2++]);
    var keys3 = getSymbols2 ? getKeys(S).concat(getSymbols2(S)) : getKeys(S);
    var length = keys3.length;
    var j = 0;
    var key2;
    while (length > j) {
      key2 = keys3[j++];
      if (!DESCRIPTORS || isEnum2.call(S, key2))
        T2[key2] = S[key2];
    }
  }
  return T2;
} : $assign;
var $export$1 = _export;
$export$1($export$1.S + $export$1.F, "Object", { assign: _objectAssign });
var assign2 = _core.exports.Object.assign;
(function(module2) {
  module2.exports = { "default": assign2, __esModule: true };
})(assign$1);
var _assign = assign$1.exports;
var _assign2 = _interopRequireDefault$3(_assign);
function _interopRequireDefault$3(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var _default$6 = _assign2.default || function(target2) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target2[key2] = source[key2];
      }
    }
  }
  return target2;
};
function omit$2(obj, fields) {
  var shallowCopy = _default$6({}, obj);
  for (var i = 0; i < fields.length; i++) {
    var key2 = fields[i];
    delete shallowCopy[key2];
  }
  return shallowCopy;
}
var MapShim = function() {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key2) {
    var result = -1;
    arr.some(function(entry, index2) {
      if (entry[0] === key2) {
        result = index2;
        return true;
      }
      return false;
    });
    return result;
  }
  return function() {
    function class_1() {
      this.__entries__ = [];
    }
    Object.defineProperty(class_1.prototype, "size", {
      get: function() {
        return this.__entries__.length;
      },
      enumerable: true,
      configurable: true
    });
    class_1.prototype.get = function(key2) {
      var index2 = getIndex(this.__entries__, key2);
      var entry = this.__entries__[index2];
      return entry && entry[1];
    };
    class_1.prototype.set = function(key2, value27) {
      var index2 = getIndex(this.__entries__, key2);
      if (~index2) {
        this.__entries__[index2][1] = value27;
      } else {
        this.__entries__.push([key2, value27]);
      }
    };
    class_1.prototype.delete = function(key2) {
      var entries = this.__entries__;
      var index2 = getIndex(entries, key2);
      if (~index2) {
        entries.splice(index2, 1);
      }
    };
    class_1.prototype.has = function(key2) {
      return !!~getIndex(this.__entries__, key2);
    };
    class_1.prototype.clear = function() {
      this.__entries__.splice(0);
    };
    class_1.prototype.forEach = function(callback, ctx2) {
      if (ctx2 === void 0) {
        ctx2 = null;
      }
      for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
        var entry = _a[_i];
        callback.call(ctx2, entry[1], entry[0]);
      }
    };
    return class_1;
  }();
}();
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1 = function() {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function(callback) {
    return setTimeout(function() {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
function throttle$2(callback, delay) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = function() {
  function ResizeObserverController2() {
    this.connected_ = false;
    this.mutationEventsAdded_ = false;
    this.mutationsObserver_ = null;
    this.observers_ = [];
    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle$2(this.refresh.bind(this), REFRESH_DELAY);
  }
  ResizeObserverController2.prototype.addObserver = function(observer) {
    if (!~this.observers_.indexOf(observer)) {
      this.observers_.push(observer);
    }
    if (!this.connected_) {
      this.connect_();
    }
  };
  ResizeObserverController2.prototype.removeObserver = function(observer) {
    var observers2 = this.observers_;
    var index2 = observers2.indexOf(observer);
    if (~index2) {
      observers2.splice(index2, 1);
    }
    if (!observers2.length && this.connected_) {
      this.disconnect_();
    }
  };
  ResizeObserverController2.prototype.refresh = function() {
    var changesDetected = this.updateObservers_();
    if (changesDetected) {
      this.refresh();
    }
  };
  ResizeObserverController2.prototype.updateObservers_ = function() {
    var activeObservers = this.observers_.filter(function(observer) {
      return observer.gatherActive(), observer.hasActive();
    });
    activeObservers.forEach(function(observer) {
      return observer.broadcastActive();
    });
    return activeObservers.length > 0;
  };
  ResizeObserverController2.prototype.connect_ = function() {
    if (!isBrowser || this.connected_) {
      return;
    }
    document.addEventListener("transitionend", this.onTransitionEnd_);
    window.addEventListener("resize", this.refresh);
    if (mutationObserverSupported) {
      this.mutationsObserver_ = new MutationObserver(this.refresh);
      this.mutationsObserver_.observe(document, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    } else {
      document.addEventListener("DOMSubtreeModified", this.refresh);
      this.mutationEventsAdded_ = true;
    }
    this.connected_ = true;
  };
  ResizeObserverController2.prototype.disconnect_ = function() {
    if (!isBrowser || !this.connected_) {
      return;
    }
    document.removeEventListener("transitionend", this.onTransitionEnd_);
    window.removeEventListener("resize", this.refresh);
    if (this.mutationsObserver_) {
      this.mutationsObserver_.disconnect();
    }
    if (this.mutationEventsAdded_) {
      document.removeEventListener("DOMSubtreeModified", this.refresh);
    }
    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
  };
  ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {
    var _b = _a.propertyName, propertyName = _b === void 0 ? "" : _b;
    var isReflowProperty = transitionKeys.some(function(key2) {
      return !!~propertyName.indexOf(key2);
    });
    if (isReflowProperty) {
      this.refresh();
    }
  };
  ResizeObserverController2.getInstance = function() {
    if (!this.instance_) {
      this.instance_ = new ResizeObserverController2();
    }
    return this.instance_;
  };
  ResizeObserverController2.instance_ = null;
  return ResizeObserverController2;
}();
var defineConfigurable = function(target2, props2) {
  for (var _i = 0, _a = Object.keys(props2); _i < _a.length; _i++) {
    var key2 = _a[_i];
    Object.defineProperty(target2, key2, {
      value: props2[key2],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target2;
};
var getWindowOf = function(target2) {
  var ownerGlobal = target2 && target2.ownerDocument && target2.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value27) {
  return parseFloat(value27) || 0;
}
function getBordersSize(styles) {
  var positions = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    positions[_i - 1] = arguments[_i];
  }
  return positions.reduce(function(size, position) {
    var value27 = styles["border-" + position + "-width"];
    return size + toFloat(value27);
  }, 0);
}
function getPaddings(styles) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position = positions_1[_i];
    var value27 = styles["padding-" + position];
    paddings[position] = toFloat(value27);
  }
  return paddings;
}
function getSVGContentRect(target2) {
  var bbox = target2.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target2) {
  var clientWidth = target2.clientWidth, clientHeight = target2.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles = getWindowOf(target2).getComputedStyle(target2);
  var paddings = getPaddings(styles);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles.width), height3 = toFloat(styles.height);
  if (styles.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles, "left", "right") + horizPad;
    }
    if (Math.round(height3 + vertPad) !== clientHeight) {
      height3 -= getBordersSize(styles, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target2)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height3 + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height3 -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height3);
}
var isSVGGraphicsElement = function() {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function(target2) {
      return target2 instanceof getWindowOf(target2).SVGGraphicsElement;
    };
  }
  return function(target2) {
    return target2 instanceof getWindowOf(target2).SVGElement && typeof target2.getBBox === "function";
  };
}();
function isDocumentElement(target2) {
  return target2 === getWindowOf(target2).document.documentElement;
}
function getContentRect(target2) {
  if (!isBrowser) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target2)) {
    return getSVGContentRect(target2);
  }
  return getHTMLElementContentRect(target2);
}
function createReadOnlyRect(_a) {
  var x = _a.x, y = _a.y, width = _a.width, height3 = _a.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x,
    y,
    width,
    height: height3,
    top: y,
    right: x + width,
    bottom: height3 + y,
    left: x
  });
  return rect;
}
function createRectInit(x, y, width, height3) {
  return { x, y, width, height: height3 };
}
var ResizeObservation = function() {
  function ResizeObservation2(target2) {
    this.broadcastWidth = 0;
    this.broadcastHeight = 0;
    this.contentRect_ = createRectInit(0, 0, 0, 0);
    this.target = target2;
  }
  ResizeObservation2.prototype.isActive = function() {
    var rect = getContentRect(this.target);
    this.contentRect_ = rect;
    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
  };
  ResizeObservation2.prototype.broadcastRect = function() {
    var rect = this.contentRect_;
    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;
    return rect;
  };
  return ResizeObservation2;
}();
var ResizeObserverEntry = function() {
  function ResizeObserverEntry2(target2, rectInit) {
    var contentRect = createReadOnlyRect(rectInit);
    defineConfigurable(this, { target: target2, contentRect });
  }
  return ResizeObserverEntry2;
}();
var ResizeObserverSPI = function() {
  function ResizeObserverSPI2(callback, controller, callbackCtx) {
    this.activeObservations_ = [];
    this.observations_ = new MapShim();
    if (typeof callback !== "function") {
      throw new TypeError("The callback provided as parameter 1 is not a function.");
    }
    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
  }
  ResizeObserverSPI2.prototype.observe = function(target2) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target2 instanceof getWindowOf(target2).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (observations.has(target2)) {
      return;
    }
    observations.set(target2, new ResizeObservation(target2));
    this.controller_.addObserver(this);
    this.controller_.refresh();
  };
  ResizeObserverSPI2.prototype.unobserve = function(target2) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target2 instanceof getWindowOf(target2).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (!observations.has(target2)) {
      return;
    }
    observations.delete(target2);
    if (!observations.size) {
      this.controller_.removeObserver(this);
    }
  };
  ResizeObserverSPI2.prototype.disconnect = function() {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
  };
  ResizeObserverSPI2.prototype.gatherActive = function() {
    var _this = this;
    this.clearActive();
    this.observations_.forEach(function(observation) {
      if (observation.isActive()) {
        _this.activeObservations_.push(observation);
      }
    });
  };
  ResizeObserverSPI2.prototype.broadcastActive = function() {
    if (!this.hasActive()) {
      return;
    }
    var ctx2 = this.callbackCtx_;
    var entries = this.activeObservations_.map(function(observation) {
      return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });
    this.callback_.call(ctx2, entries, ctx2);
    this.clearActive();
  };
  ResizeObserverSPI2.prototype.clearActive = function() {
    this.activeObservations_.splice(0);
  };
  ResizeObserverSPI2.prototype.hasActive = function() {
    return this.activeObservations_.length > 0;
  };
  return ResizeObserverSPI2;
}();
var observers = typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : new MapShim();
var ResizeObserver$1 = function() {
  function ResizeObserver2(callback) {
    if (!(this instanceof ResizeObserver2)) {
      throw new TypeError("Cannot call a class as a function.");
    }
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);
    observers.set(this, observer);
  }
  return ResizeObserver2;
}();
[
  "observe",
  "unobserve",
  "disconnect"
].forEach(function(method3) {
  ResizeObserver$1.prototype[method3] = function() {
    var _a;
    return (_a = observers.get(this))[method3].apply(_a, arguments);
  };
});
var index$3 = function() {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver$1;
}();
var ResizeObserver$2 = index$3;
var VueResizeObserver = {
  name: "ResizeObserver",
  props: {
    disabled: Boolean
  },
  data: function data() {
    this.currentElement = null;
    this.resizeObserver = null;
    return {
      width: 0,
      height: 0
    };
  },
  mounted: function mounted() {
    this.onComponentUpdated();
  },
  updated: function updated() {
    this.onComponentUpdated();
  },
  beforeDestroy: function beforeDestroy() {
    this.destroyObserver();
  },
  methods: {
    onComponentUpdated: function onComponentUpdated() {
      var disabled = this.$props.disabled;
      if (disabled) {
        this.destroyObserver();
        return;
      }
      var element = this.$el;
      var elementChanged = element !== this.currentElement;
      if (elementChanged) {
        this.destroyObserver();
        this.currentElement = element;
      }
      if (!this.resizeObserver && element) {
        this.resizeObserver = new ResizeObserver$2(this.onResize);
        this.resizeObserver.observe(element);
      }
    },
    onResize: function onResize(entries) {
      var target2 = entries[0].target;
      var _target$getBoundingCl = target2.getBoundingClientRect(), width = _target$getBoundingCl.width, height3 = _target$getBoundingCl.height;
      var fixedWidth = Math.floor(width);
      var fixedHeight = Math.floor(height3);
      if (this.width !== fixedWidth || this.height !== fixedHeight) {
        var size = { width: fixedWidth, height: fixedHeight };
        this.width = fixedWidth;
        this.height = fixedHeight;
        this.$emit("resize", size);
      }
    },
    destroyObserver: function destroyObserver() {
      if (this.resizeObserver) {
        this.resizeObserver.disconnect();
        this.resizeObserver = null;
      }
    }
  },
  render: function render() {
    return this.$slots["default"][0];
  }
};
var ResizeObserver = VueResizeObserver;
var from$2 = { exports: {} };
var anObject$1 = _anObject;
var _iterCall = function(iterator2, fn, value27, entries) {
  try {
    return entries ? fn(anObject$1(value27)[0], value27[1]) : fn(value27);
  } catch (e) {
    var ret = iterator2["return"];
    if (ret !== void 0)
      anObject$1(ret.call(iterator2));
    throw e;
  }
};
var Iterators$2 = _iterators;
var ITERATOR$3 = _wks.exports("iterator");
var ArrayProto = Array.prototype;
var _isArrayIter = function(it) {
  return it !== void 0 && (Iterators$2.Array === it || ArrayProto[ITERATOR$3] === it);
};
var $defineProperty = _objectDp;
var createDesc = _propertyDesc;
var _createProperty = function(object3, index2, value27) {
  if (index2 in object3)
    $defineProperty.f(object3, index2, createDesc(0, value27));
  else
    object3[index2] = value27;
};
var cof = _cof;
var TAG = _wks.exports("toStringTag");
var ARG = cof(function() {
  return arguments;
}()) == "Arguments";
var tryGet = function(it, key2) {
  try {
    return it[key2];
  } catch (e) {
  }
};
var _classof = function(it) {
  var O, T2, B;
  return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (T2 = tryGet(O = Object(it), TAG)) == "string" ? T2 : ARG ? cof(O) : (B = cof(O)) == "Object" && typeof O.callee == "function" ? "Arguments" : B;
};
var classof$1 = _classof;
var ITERATOR$2 = _wks.exports("iterator");
var Iterators$1 = _iterators;
var core_getIteratorMethod = _core.exports.getIteratorMethod = function(it) {
  if (it != void 0)
    return it[ITERATOR$2] || it["@@iterator"] || Iterators$1[classof$1(it)];
};
var ITERATOR$1 = _wks.exports("iterator");
var SAFE_CLOSING = false;
try {
  var riter = [7][ITERATOR$1]();
  riter["return"] = function() {
    SAFE_CLOSING = true;
  };
  Array.from(riter, function() {
    throw 2;
  });
} catch (e) {
}
var _iterDetect = function(exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING)
    return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR$1]();
    iter.next = function() {
      return { done: safe = true };
    };
    arr[ITERATOR$1] = function() {
      return iter;
    };
    exec(arr);
  } catch (e) {
  }
  return safe;
};
var ctx = _ctx;
var $export = _export;
var toObject$2 = _toObject;
var call$1 = _iterCall;
var isArrayIter = _isArrayIter;
var toLength = _toLength;
var createProperty = _createProperty;
var getIterFn = core_getIteratorMethod;
$export($export.S + $export.F * !_iterDetect(function(iter) {
  Array.from(iter);
}), "Array", {
  from: function from(arrayLike) {
    var O = toObject$2(arrayLike);
    var C = typeof this == "function" ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : void 0;
    var mapping = mapfn !== void 0;
    var index2 = 0;
    var iterFn = getIterFn(O);
    var length, result, step3, iterator2;
    if (mapping)
      mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : void 0, 2);
    if (iterFn != void 0 && !(C == Array && isArrayIter(iterFn))) {
      for (iterator2 = iterFn.call(O), result = new C(); !(step3 = iterator2.next()).done; index2++) {
        createProperty(result, index2, mapping ? call$1(iterator2, mapfn, [step3.value, index2], true) : step3.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index2; index2++) {
        createProperty(result, index2, mapping ? mapfn(O[index2], index2) : O[index2]);
      }
    }
    result.length = index2;
    return result;
  }
});
var from$1 = _core.exports.Array.from;
(function(module2) {
  module2.exports = { "default": from$1, __esModule: true };
})(from$2);
var _from = from$2.exports;
var _from2 = _interopRequireDefault$2(_from);
function _interopRequireDefault$2(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var _default$5 = function(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};
var isIterable$1 = { exports: {} };
var classof = _classof;
var ITERATOR = _wks.exports("iterator");
var Iterators = _iterators;
var core_isIterable = _core.exports.isIterable = function(it) {
  var O = Object(it);
  return O[ITERATOR] !== void 0 || "@@iterator" in O || Iterators.hasOwnProperty(classof(O));
};
var isIterable = core_isIterable;
(function(module2) {
  module2.exports = { "default": isIterable, __esModule: true };
})(isIterable$1);
var getIterator$1 = { exports: {} };
var anObject = _anObject;
var get$3 = core_getIteratorMethod;
var core_getIterator = _core.exports.getIterator = function(it) {
  var iterFn = get$3(it);
  if (typeof iterFn != "function")
    throw TypeError(it + " is not iterable!");
  return anObject(iterFn.call(it));
};
var getIterator = core_getIterator;
(function(module2) {
  module2.exports = { "default": getIterator, __esModule: true };
})(getIterator$1);
var _isIterable2 = isIterable$1.exports;
var _isIterable3 = _interopRequireDefault$1(_isIterable2);
var _getIterator2 = getIterator$1.exports;
var _getIterator3 = _interopRequireDefault$1(_getIterator2);
function _interopRequireDefault$1(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var _default$4 = function() {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = void 0;
    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"])
          _i["return"]();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
  return function(arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
function getType2(fn) {
  var match5 = fn && fn.toString().match(/^\s*function (\w+)/);
  return match5 ? match5[1] : "";
}
var camelizeRE = /-(\w)/g;
var camelize = function camelize2(str) {
  return str.replace(camelizeRE, function(_, c) {
    return c ? c.toUpperCase() : "";
  });
};
var parseStyleText = function parseStyleText2() {
  var cssText = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var camel = arguments[1];
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function(item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      if (tmp.length > 1) {
        var k = camel ? camelize(tmp[0].trim()) : tmp[0].trim();
        res[k] = tmp[1].trim();
      }
    }
  });
  return res;
};
var hasProp = function hasProp2(instance, prop) {
  var $options = instance.$options || {};
  var propsData = $options.propsData || {};
  return prop in propsData;
};
var filterProps = function filterProps2(props2) {
  var propsData = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var res = {};
  Object.keys(props2).forEach(function(k) {
    if (k in propsData || props2[k] !== void 0) {
      res[k] = props2[k];
    }
  });
  return res;
};
var getScopedSlots = function getScopedSlots2(ele) {
  return ele.data && ele.data.scopedSlots || {};
};
var getSlots = function getSlots2(ele) {
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }
  var children = ele.children || componentOptions.children || [];
  var slots = {};
  children.forEach(function(child) {
    if (!isEmptyElement(child)) {
      var name = child.data && child.data.slot || "default";
      slots[name] = slots[name] || [];
      slots[name].push(child);
    }
  });
  return _default$6({}, slots, getScopedSlots(ele));
};
var getSlot = function getSlot2(self2) {
  var name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "default";
  var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  return self2.$scopedSlots && self2.$scopedSlots[name] && self2.$scopedSlots[name](options2) || self2.$slots[name] || [];
};
var getAllChildren = function getAllChildren2(ele) {
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }
  return ele.children || componentOptions.children || [];
};
var getSlotOptions = function getSlotOptions2(ele) {
  if (ele.fnOptions) {
    return ele.fnOptions;
  }
  var componentOptions = ele.componentOptions;
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions;
  }
  return componentOptions ? componentOptions.Ctor.options || {} : {};
};
var getOptionProps = function getOptionProps2(instance) {
  if (instance.componentOptions) {
    var componentOptions = instance.componentOptions;
    var _componentOptions$pro = componentOptions.propsData, propsData = _componentOptions$pro === void 0 ? {} : _componentOptions$pro, _componentOptions$Cto = componentOptions.Ctor, Ctor = _componentOptions$Cto === void 0 ? {} : _componentOptions$Cto;
    var props2 = (Ctor.options || {}).props || {};
    var res = {};
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = void 0;
    try {
      for (var _iterator3 = Object.entries(props2)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator3.next()).done); _iteratorNormalCompletion = true) {
        var _ref = _step.value;
        var _ref2 = _default$4(_ref, 2);
        var k = _ref2[0];
        var v = _ref2[1];
        var def2 = v["default"];
        if (def2 !== void 0) {
          res[k] = typeof def2 === "function" && getType2(v.type) !== "Function" ? def2.call(instance) : def2;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator3["return"]) {
          _iterator3["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return _default$6({}, res, propsData);
  }
  var _instance$$options = instance.$options, $options = _instance$$options === void 0 ? {} : _instance$$options, _instance$$props = instance.$props, $props = _instance$$props === void 0 ? {} : _instance$$props;
  return filterProps($props, $options.propsData);
};
var getComponentFromProp = function getComponentFromProp2(instance, prop) {
  var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
  if (instance.$createElement) {
    var h = instance.$createElement;
    var temp = instance[prop];
    if (temp !== void 0) {
      return typeof temp === "function" && execute ? temp(h, options2) : temp;
    }
    return instance.$scopedSlots[prop] && execute && instance.$scopedSlots[prop](options2) || instance.$scopedSlots[prop] || instance.$slots[prop] || void 0;
  } else {
    var _h = instance.context.$createElement;
    var _temp = getPropsData(instance)[prop];
    if (_temp !== void 0) {
      return typeof _temp === "function" && execute ? _temp(_h, options2) : _temp;
    }
    var slotScope = getScopedSlots(instance)[prop];
    if (slotScope !== void 0) {
      return typeof slotScope === "function" && execute ? slotScope(_h, options2) : slotScope;
    }
    var slotsProp = [];
    var componentOptions = instance.componentOptions || {};
    (componentOptions.children || []).forEach(function(child) {
      if (child.data && child.data.slot === prop) {
        if (child.data.attrs) {
          delete child.data.attrs.slot;
        }
        if (child.tag === "template") {
          slotsProp.push(child.children);
        } else {
          slotsProp.push(child);
        }
      }
    });
    return slotsProp.length ? slotsProp : void 0;
  }
};
var getPropsData = function getPropsData2(ele) {
  var componentOptions = ele.componentOptions;
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions;
  }
  return componentOptions ? componentOptions.propsData || {} : {};
};
var getValueByProp = function getValueByProp2(ele, prop) {
  return getPropsData(ele)[prop];
};
var getAttrs = function getAttrs2(ele) {
  var data109 = ele.data;
  if (ele.$vnode) {
    data109 = ele.$vnode.data;
  }
  return data109 ? data109.attrs || {} : {};
};
var getKey = function getKey2(ele) {
  var key2 = ele.key;
  if (ele.$vnode) {
    key2 = ele.$vnode.key;
  }
  return key2;
};
function getEvents(child) {
  var events = {};
  if (child.componentOptions && child.componentOptions.listeners) {
    events = child.componentOptions.listeners;
  } else if (child.data && child.data.on) {
    events = child.data.on;
  }
  return _default$6({}, events);
}
function getDataEvents(child) {
  var events = {};
  if (child.data && child.data.on) {
    events = child.data.on;
  }
  return _default$6({}, events);
}
function getListeners(context) {
  return (context.$vnode ? context.$vnode.componentOptions.listeners : context.$listeners) || {};
}
function getClass(ele) {
  var data109 = {};
  if (ele.data) {
    data109 = ele.data;
  } else if (ele.$vnode && ele.$vnode.data) {
    data109 = ele.$vnode.data;
  }
  var tempCls = data109["class"] || {};
  var staticClass = data109.staticClass;
  var cls = {};
  staticClass && staticClass.split(" ").forEach(function(c) {
    cls[c.trim()] = true;
  });
  if (typeof tempCls === "string") {
    tempCls.split(" ").forEach(function(c) {
      cls[c.trim()] = true;
    });
  } else if (Array.isArray(tempCls)) {
    classNames(tempCls).split(" ").forEach(function(c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = _default$6({}, cls, tempCls);
  }
  return cls;
}
function getStyle$1(ele, camel) {
  var data109 = {};
  if (ele.data) {
    data109 = ele.data;
  } else if (ele.$vnode && ele.$vnode.data) {
    data109 = ele.$vnode.data;
  }
  var style3 = data109.style || data109.staticStyle;
  if (typeof style3 === "string") {
    style3 = parseStyleText(style3, camel);
  } else if (camel && style3) {
    var res = {};
    Object.keys(style3).forEach(function(k) {
      return res[camelize(k)] = style3[k];
    });
    return res;
  }
  return style3;
}
function isEmptyElement(c) {
  return !(c.tag || c.text && c.text.trim() !== "");
}
function isStringElement(c) {
  return !c.tag;
}
function filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return children.filter(function(c) {
    return !isEmptyElement(c);
  });
}
var initDefaultProps = function initDefaultProps2(propTypes2, defaultProps2) {
  Object.keys(defaultProps2).forEach(function(k) {
    if (propTypes2[k]) {
      propTypes2[k].def && (propTypes2[k] = propTypes2[k].def(defaultProps2[k]));
    } else {
      throw new Error("not have " + k + " prop");
    }
  });
  return propTypes2;
};
function mergeProps() {
  var args = [].slice.call(arguments, 0);
  var props2 = {};
  args.forEach(function() {
    var p = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = void 0;
    try {
      for (var _iterator22 = Object.entries(p)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator22.next()).done); _iteratorNormalCompletion2 = true) {
        var _ref3 = _step2.value;
        var _ref4 = _default$4(_ref3, 2);
        var k = _ref4[0];
        var v = _ref4[1];
        props2[k] = props2[k] || {};
        if (isPlainObject_1(v)) {
          _default$6(props2[k], v);
        } else {
          props2[k] = v;
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator22["return"]) {
          _iterator22["return"]();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  });
  return props2;
}
function isValidElement(element) {
  return element && (typeof element === "undefined" ? "undefined" : _default$7(element)) === "object" && "componentOptions" in element && "context" in element && element.tag !== void 0;
}
var BaseMixin = {
  methods: {
    setState: function setState() {
      var state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var callback = arguments[1];
      var newState = typeof state === "function" ? state(this.$data, this.$props) : state;
      if (this.getDerivedStateFromProps) {
        var s = this.getDerivedStateFromProps(getOptionProps(this), _default$6({}, this.$data, newState));
        if (s === null) {
          return;
        } else {
          newState = _default$6({}, newState, s || {});
        }
      }
      _default$6(this.$data, newState);
      this.$forceUpdate();
      this.$nextTick(function() {
        callback && callback();
      });
    },
    __emit: function __emit() {
      var args = [].slice.call(arguments, 0);
      var eventName = args[0];
      var event = this.$listeners[eventName];
      if (args.length && event) {
        if (Array.isArray(event)) {
          for (var i = 0, l = event.length; i < l; i++) {
            event[i].apply(event, _default$5(args.slice(1)));
          }
        } else {
          event.apply(void 0, _default$5(args.slice(1)));
        }
      }
    }
  }
};
var raf$3 = { exports: {} };
var performanceNow = { exports: {} };
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
  if (typeof performance !== "undefined" && performance !== null && performance.now) {
    performanceNow.exports = function() {
      return performance.now();
    };
  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
    performanceNow.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    performanceNow.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    performanceNow.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }
}).call(commonjsGlobal);
var now$5 = performanceNow.exports, root$8 = typeof window === "undefined" ? commonjsGlobal : window, vendors = ["moz", "webkit"], suffix = "AnimationFrame", raf$1 = root$8["request" + suffix], caf = root$8["cancel" + suffix] || root$8["cancelRequest" + suffix];
for (var i = 0; !raf$1 && i < vendors.length; i++) {
  raf$1 = root$8[vendors[i] + "Request" + suffix];
  caf = root$8[vendors[i] + "Cancel" + suffix] || root$8[vendors[i] + "CancelRequest" + suffix];
}
if (!raf$1 || !caf) {
  var last$2 = 0, id$1 = 0, queue = [], frameDuration = 1e3 / 60;
  raf$1 = function(callback) {
    if (queue.length === 0) {
      var _now = now$5(), next3 = Math.max(0, frameDuration - (_now - last$2));
      last$2 = next3 + _now;
      setTimeout(function() {
        var cp = queue.slice(0);
        queue.length = 0;
        for (var i = 0; i < cp.length; i++) {
          if (!cp[i].cancelled) {
            try {
              cp[i].callback(last$2);
            } catch (e) {
              setTimeout(function() {
                throw e;
              }, 0);
            }
          }
        }
      }, Math.round(next3));
    }
    queue.push({
      handle: ++id$1,
      callback,
      cancelled: false
    });
    return id$1;
  };
  caf = function(handle) {
    for (var i = 0; i < queue.length; i++) {
      if (queue[i].handle === handle) {
        queue[i].cancelled = true;
      }
    }
  };
}
raf$3.exports = function(fn) {
  return raf$1.call(root$8, fn);
};
raf$3.exports.cancel = function() {
  caf.apply(root$8, arguments);
};
raf$3.exports.polyfill = function(object3) {
  if (!object3) {
    object3 = root$8;
  }
  object3.requestAnimationFrame = raf$1;
  object3.cancelAnimationFrame = caf;
};
var raf$2 = raf$3.exports;
function throttleByAnimationFrame(fn) {
  var requestId = void 0;
  var later = function later2(args) {
    return function() {
      requestId = null;
      fn.apply(void 0, _default$5(args));
    };
  };
  var throttled = function throttled2() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (requestId == null) {
      requestId = raf$2(later(args));
    }
  };
  throttled.cancel = function() {
    return raf$2.cancel(requestId);
  };
  return throttled;
}
var enUS$2 = {
  items_per_page: "/ page",
  jump_to: "Go to",
  jump_to_confirm: "confirm",
  page: "",
  prev_page: "Previous Page",
  next_page: "Next Page",
  prev_5: "Previous 5 Pages",
  next_5: "Next 5 Pages",
  prev_3: "Previous 3 Pages",
  next_3: "Next 3 Pages"
};
var enUs = {
  today: "Today",
  now: "Now",
  backToToday: "Back to today",
  ok: "Ok",
  clear: "Clear",
  month: "Month",
  year: "Year",
  timeSelect: "select time",
  dateSelect: "select date",
  weekSelect: "Choose a week",
  monthSelect: "Choose a month",
  yearSelect: "Choose a year",
  decadeSelect: "Choose a decade",
  yearFormat: "YYYY",
  dateFormat: "M/D/YYYY",
  dayFormat: "D",
  dateTimeFormat: "M/D/YYYY HH:mm:ss",
  monthBeforeYear: true,
  previousMonth: "Previous month (PageUp)",
  nextMonth: "Next month (PageDown)",
  previousYear: "Last year (Control + left)",
  nextYear: "Next year (Control + right)",
  previousDecade: "Last decade",
  nextDecade: "Next decade",
  previousCentury: "Last century",
  nextCentury: "Next century"
};
var locale$2 = {
  placeholder: "Select time"
};
var enUS$1 = locale$2;
var locale$1 = {
  lang: _default$6({
    placeholder: "Select date",
    rangePlaceholder: ["Start date", "End date"]
  }, enUs),
  timePickerLocale: _default$6({}, enUS$1)
};
var enUS = locale$1;
var defaultLocale = {
  locale: "en",
  Pagination: enUS$2,
  DatePicker: enUS,
  TimePicker: enUS$1,
  Calendar: enUS,
  global: {
    placeholder: "Please select"
  },
  Table: {
    filterTitle: "Filter menu",
    filterConfirm: "OK",
    filterReset: "Reset",
    selectAll: "Select current page",
    selectInvert: "Invert current page",
    sortTitle: "Sort",
    expand: "Expand row",
    collapse: "Collapse row"
  },
  Modal: {
    okText: "OK",
    cancelText: "Cancel",
    justOkText: "OK"
  },
  Popconfirm: {
    okText: "OK",
    cancelText: "Cancel"
  },
  Transfer: {
    titles: ["", ""],
    searchPlaceholder: "Search here",
    itemUnit: "item",
    itemsUnit: "items"
  },
  Upload: {
    uploading: "Uploading...",
    removeFile: "Remove file",
    uploadError: "Upload error",
    previewFile: "Preview file",
    downloadFile: "Download file"
  },
  Empty: {
    description: "No Data"
  },
  Icon: {
    icon: "icon"
  },
  Text: {
    edit: "Edit",
    copy: "Copy",
    copied: "Copied",
    expand: "Expand"
  },
  PageHeader: {
    back: "Back"
  }
};
var LocaleReceiver = {
  name: "LocaleReceiver",
  props: {
    componentName: PropTypes.string.def("global"),
    defaultLocale: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
    children: PropTypes.func
  },
  inject: {
    localeData: { "default": function _default() {
      return {};
    } }
  },
  methods: {
    getLocale: function getLocale() {
      var componentName = this.componentName, defaultLocale$1 = this.defaultLocale;
      var locale3 = defaultLocale$1 || defaultLocale[componentName || "global"];
      var antLocale = this.localeData.antLocale;
      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};
      return _default$6({}, typeof locale3 === "function" ? locale3() : locale3, localeFromContext || {});
    },
    getLocaleCode: function getLocaleCode() {
      var antLocale = this.localeData.antLocale;
      var localeCode = antLocale && antLocale.locale;
      if (antLocale && antLocale.exist && !localeCode) {
        return defaultLocale.locale;
      }
      return localeCode;
    }
  },
  render: function render2() {
    var $scopedSlots = this.$scopedSlots;
    var children = this.children || $scopedSlots["default"];
    var antLocale = this.localeData.antLocale;
    return children(this.getLocale(), this.getLocaleCode(), antLocale);
  }
};
var DefaultEmptyImg = {
  functional: true,
  PRESENTED_IMAGE_DEFAULT: true,
  render: function render3() {
    var h = arguments[0];
    return h(
      "svg",
      {
        attrs: { width: "184", height: "152", viewBox: "0 0 184 152", xmlns: "http://www.w3.org/2000/svg" }
      },
      [h(
        "g",
        {
          attrs: { fill: "none", fillRule: "evenodd" }
        },
        [h(
          "g",
          {
            attrs: { transform: "translate(24 31.67)" }
          },
          [h("ellipse", {
            attrs: {
              fillOpacity: ".8",
              fill: "#F5F5F7",
              cx: "67.797",
              cy: "106.89",
              rx: "67.797",
              ry: "12.668"
            }
          }), h("path", {
            attrs: {
              d: "M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z",
              fill: "#AEB8C2"
            }
          }), h("path", {
            attrs: {
              d: "M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z",
              fill: "url(#linearGradient-1)",
              transform: "translate(13.56)"
            }
          }), h("path", {
            attrs: {
              d: "M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z",
              fill: "#F5F5F7"
            }
          }), h("path", {
            attrs: {
              d: "M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z",
              fill: "#DCE0E6"
            }
          })]
        ), h("path", {
          attrs: {
            d: "M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z",
            fill: "#DCE0E6"
          }
        }), h(
          "g",
          {
            attrs: { transform: "translate(149.65 15.383)", fill: "#FFF" }
          },
          [h("ellipse", {
            attrs: { cx: "20.654", cy: "3.167", rx: "2.849", ry: "2.815" }
          }), h("path", {
            attrs: { d: "M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z" }
          })]
        )]
      )]
    );
  }
};
var SimpleEmptyImg = {
  functional: true,
  PRESENTED_IMAGE_SIMPLE: true,
  render: function render4() {
    var h = arguments[0];
    return h(
      "svg",
      {
        attrs: { width: "64", height: "41", viewBox: "0 0 64 41", xmlns: "http://www.w3.org/2000/svg" }
      },
      [h(
        "g",
        {
          attrs: { transform: "translate(0 1)", fill: "none", fillRule: "evenodd" }
        },
        [h("ellipse", {
          attrs: { fill: "#F5F5F5", cx: "32", cy: "33", rx: "32", ry: "7" }
        }), h(
          "g",
          {
            attrs: { fillRule: "nonzero", stroke: "#D9D9D9" }
          },
          [h("path", {
            attrs: { d: "M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z" }
          }), h("path", {
            attrs: {
              d: "M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z",
              fill: "#FAFAFA"
            }
          })]
        )]
      )]
    );
  }
};
var vueRef = {};
Object.defineProperty(vueRef, "__esModule", {
  value: true
});
var _default$3 = vueRef.default = {
  install: function install(Vue2) {
    var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var directiveName = options2.name || "ref";
    Vue2.directive(directiveName, {
      bind: function bind(el, binding, vnode) {
        Vue2.nextTick(function() {
          binding.value(vnode.componentInstance || el, vnode.key);
        });
        binding.value(vnode.componentInstance || el, vnode.key);
      },
      update: function update(el, binding, vnode, oldVnode) {
        if (oldVnode.data && oldVnode.data.directives) {
          var oldBinding = oldVnode.data.directives.find(function(directive) {
            var name = directive.name;
            return name === directiveName;
          });
          if (oldBinding && oldBinding.value !== binding.value) {
            oldBinding && oldBinding.value(null, oldVnode.key);
            binding.value(vnode.componentInstance || el, vnode.key);
            return;
          }
        }
        if (vnode.componentInstance !== oldVnode.componentInstance || vnode.elm !== oldVnode.elm) {
          binding.value(vnode.componentInstance || el, vnode.key);
        }
      },
      unbind: function unbind(el, binding, vnode) {
        binding.value(null, vnode.key);
      }
    });
  }
};
var inBrowser$1 = typeof window !== "undefined";
var UA$1 = inBrowser$1 && window.navigator.userAgent.toLowerCase();
var isIE9 = UA$1 && UA$1.indexOf("msie 9.0") > 0;
function makeMap(str, expectsLowerCase) {
  var map2 = /* @__PURE__ */ Object.create(null);
  var list = str.split(",");
  for (var i = 0; i < list.length; i++) {
    map2[list[i]] = true;
  }
  return expectsLowerCase ? function(val) {
    return map2[val.toLowerCase()];
  } : function(val) {
    return map2[val];
  };
}
var isTextInputType = makeMap("text,number,password,search,email,tel,url");
function onCompositionStart(e) {
  e.target.composing = true;
}
function onCompositionEnd(e) {
  if (!e.target.composing)
    return;
  e.target.composing = false;
  trigger(e.target, "input");
}
function trigger(el, type3) {
  var e = document.createEvent("HTMLEvents");
  e.initEvent(type3, true, true);
  el.dispatchEvent(e);
}
if (isIE9) {
  document.addEventListener("selectionchange", function() {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, "input");
    }
  });
}
function antInput(Vue2) {
  return Vue2.directive("ant-input", {
    inserted: function inserted(el, binding, vnode) {
      if (vnode.tag === "textarea" || isTextInputType(el.type)) {
        if (!binding.modifiers || !binding.modifiers.lazy) {
          el.addEventListener("compositionstart", onCompositionStart);
          el.addEventListener("compositionend", onCompositionEnd);
          el.addEventListener("change", onCompositionEnd);
          if (isIE9) {
            el.vmodel = true;
          }
        }
      }
    }
  });
}
var antInputDirective = {
  install: function install2(Vue2) {
    antInput(Vue2);
  }
};
function antDecorator(Vue2) {
  return Vue2.directive("decorator", {});
}
var FormDecoratorDirective = {
  install: function install3(Vue2) {
    antDecorator(Vue2);
  }
};
function antPortal(Vue2) {
  return Vue2.directive("ant-portal", {
    inserted: function inserted(el, binding) {
      var value27 = binding.value;
      var parentNode = typeof value27 === "function" ? value27(el) : value27;
      if (parentNode !== el.parentNode) {
        parentNode.appendChild(el);
      }
    },
    componentUpdated: function componentUpdated(el, binding) {
      var value27 = binding.value;
      var parentNode = typeof value27 === "function" ? value27(el) : value27;
      if (parentNode !== el.parentNode) {
        parentNode.appendChild(el);
      }
    }
  });
}
var antDirective = {
  install: function install4(Vue2) {
    Vue2.use(_default$3, { name: "ant-ref" });
    antInput(Vue2);
    antDecorator(Vue2);
    antPortal(Vue2);
  }
};
var base = {};
var install$2 = function install5(Vue2) {
  base.Vue = Vue2;
  Vue2.use(antDirective);
};
base.install = install$2;
var Base = base;
var EmptyProps = function EmptyProps2() {
  return {
    prefixCls: PropTypes.string,
    image: PropTypes.any,
    description: PropTypes.any,
    imageStyle: PropTypes.object
  };
};
var Empty = {
  name: "AEmpty",
  props: _default$6({}, EmptyProps()),
  inject: {
    configProvider: { "default": function _default2() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    renderEmpty: function renderEmpty(contentLocale) {
      var h = this.$createElement;
      var _$props = this.$props, customizePrefixCls = _$props.prefixCls, imageStyle = _$props.imageStyle;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("empty", customizePrefixCls);
      var image = getComponentFromProp(this, "image") || h(DefaultEmptyImg);
      var description = getComponentFromProp(this, "description");
      var des = typeof description !== "undefined" ? description : contentLocale.description;
      var alt = typeof des === "string" ? des : "empty";
      var cls = _default$8({}, prefixCls2, true);
      var imageNode = null;
      if (typeof image === "string") {
        imageNode = h("img", {
          attrs: { alt, src: image }
        });
      } else if ((typeof image === "undefined" ? "undefined" : _default$7(image)) === "object" && image.PRESENTED_IMAGE_SIMPLE) {
        var Image2 = image;
        imageNode = h(Image2);
        cls[prefixCls2 + "-normal"] = true;
      } else {
        imageNode = image;
      }
      return h(
        "div",
        _mergeJSXProps([{ "class": cls }, { on: getListeners(this) }]),
        [h(
          "div",
          { "class": prefixCls2 + "-image", style: imageStyle },
          [imageNode]
        ), des && h(
          "p",
          { "class": prefixCls2 + "-description" },
          [des]
        ), this.$slots["default"] && h(
          "div",
          { "class": prefixCls2 + "-footer" },
          [this.$slots["default"]]
        )]
      );
    }
  },
  render: function render5() {
    var h = arguments[0];
    return h(LocaleReceiver, {
      attrs: { componentName: "Empty" },
      scopedSlots: { "default": this.renderEmpty }
    });
  }
};
Empty.PRESENTED_IMAGE_DEFAULT = DefaultEmptyImg;
Empty.PRESENTED_IMAGE_SIMPLE = SimpleEmptyImg;
Empty.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Empty.name, Empty);
};
var Empty$1 = Empty;
var RenderEmpty = {
  functional: true,
  inject: {
    configProvider: { "default": function _default3() {
      return ConfigConsumerProps;
    } }
  },
  props: {
    componentName: PropTypes.string
  },
  render: function render6(createElement, context) {
    var h = arguments[0];
    var props2 = context.props, injections = context.injections;
    function renderHtml(componentName) {
      var getPrefixCls5 = injections.configProvider.getPrefixCls;
      var prefix = getPrefixCls5("empty");
      switch (componentName) {
        case "Table":
        case "List":
          return h(Empty$1, {
            attrs: { image: Empty$1.PRESENTED_IMAGE_SIMPLE }
          });
        case "Select":
        case "TreeSelect":
        case "Cascader":
        case "Transfer":
        case "Mentions":
          return h(Empty$1, {
            attrs: { image: Empty$1.PRESENTED_IMAGE_SIMPLE },
            "class": prefix + "-small"
          });
        default:
          return h(Empty$1);
      }
    }
    return renderHtml(props2.componentName);
  }
};
function renderEmpty2(h, componentName) {
  return h(RenderEmpty, {
    attrs: { componentName }
  });
}
var ConfigConsumerProps = {
  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {
    if (customizePrefixCls)
      return customizePrefixCls;
    return "ant-" + suffixCls;
  },
  renderEmpty: renderEmpty2
};
var warned = {};
function warning$5(valid, message2) {
}
function call(method3, valid, message2) {
  if (!valid && !warned[message2]) {
    method3(false, message2);
    warned[message2] = true;
  }
}
function warningOnce(valid, message2) {
  call(warning$5, valid, message2);
}
var warning$4 = function(valid, component) {
  var message2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
  warningOnce(valid, "[antdv: " + component + "] " + message2);
};
var lib$2 = { exports: {} };
var EventObject = { exports: {} };
var EventBaseObject = { exports: {} };
(function(module2, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  function returnFalse() {
    return false;
  }
  function returnTrue() {
    return true;
  }
  function EventBaseObject2() {
    this.timeStamp = Date.now();
    this.target = void 0;
    this.currentTarget = void 0;
  }
  EventBaseObject2.prototype = {
    isEventObject: 1,
    constructor: EventBaseObject2,
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    preventDefault: function preventDefault2() {
      this.isDefaultPrevented = returnTrue;
    },
    stopPropagation: function stopPropagation2() {
      this.isPropagationStopped = returnTrue;
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      this.isImmediatePropagationStopped = returnTrue;
      this.stopPropagation();
    },
    halt: function halt(immediate) {
      if (immediate) {
        this.stopImmediatePropagation();
      } else {
        this.stopPropagation();
      }
      this.preventDefault();
    }
  };
  exports["default"] = EventBaseObject2;
  module2.exports = exports["default"];
})(EventBaseObject, EventBaseObject.exports);
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols3 = Object.getOwnPropertySymbols;
var hasOwnProperty$c = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject$1(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
      return test2[n];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target2, source) {
  var from3;
  var to2 = toObject$1(target2);
  var symbols;
  for (var s = 1; s < arguments.length; s++) {
    from3 = Object(arguments[s]);
    for (var key2 in from3) {
      if (hasOwnProperty$c.call(from3, key2)) {
        to2[key2] = from3[key2];
      }
    }
    if (getOwnPropertySymbols3) {
      symbols = getOwnPropertySymbols3(from3);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from3, symbols[i])) {
          to2[symbols[i]] = from3[symbols[i]];
        }
      }
    }
  }
  return to2;
};
(function(module2, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }
  var _EventBaseObject = EventBaseObject.exports;
  var _EventBaseObject2 = _interopRequireDefault2(_EventBaseObject);
  var _objectAssign2 = objectAssign;
  var _objectAssign22 = _interopRequireDefault2(_objectAssign2);
  var TRUE = true;
  var FALSE = false;
  var commonProps = ["altKey", "bubbles", "cancelable", "ctrlKey", "currentTarget", "eventPhase", "metaKey", "shiftKey", "target", "timeStamp", "view", "type"];
  function isNullOrUndefined(w) {
    return w === null || w === void 0;
  }
  var eventNormalizers = [{
    reg: /^key/,
    props: ["char", "charCode", "key", "keyCode", "which"],
    fix: function fix(event, nativeEvent) {
      if (isNullOrUndefined(event.which)) {
        event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;
      }
      if (event.metaKey === void 0) {
        event.metaKey = event.ctrlKey;
      }
    }
  }, {
    reg: /^touch/,
    props: ["touches", "changedTouches", "targetTouches"]
  }, {
    reg: /^hashchange$/,
    props: ["newURL", "oldURL"]
  }, {
    reg: /^gesturechange$/i,
    props: ["rotation", "scale"]
  }, {
    reg: /^(mousewheel|DOMMouseScroll)$/,
    props: [],
    fix: function fix(event, nativeEvent) {
      var deltaX = void 0;
      var deltaY = void 0;
      var delta = void 0;
      var wheelDelta = nativeEvent.wheelDelta;
      var axis = nativeEvent.axis;
      var wheelDeltaY = nativeEvent.wheelDeltaY;
      var wheelDeltaX = nativeEvent.wheelDeltaX;
      var detail = nativeEvent.detail;
      if (wheelDelta) {
        delta = wheelDelta / 120;
      }
      if (detail) {
        delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
      }
      if (axis !== void 0) {
        if (axis === event.HORIZONTAL_AXIS) {
          deltaY = 0;
          deltaX = 0 - delta;
        } else if (axis === event.VERTICAL_AXIS) {
          deltaX = 0;
          deltaY = delta;
        }
      }
      if (wheelDeltaY !== void 0) {
        deltaY = wheelDeltaY / 120;
      }
      if (wheelDeltaX !== void 0) {
        deltaX = -1 * wheelDeltaX / 120;
      }
      if (!deltaX && !deltaY) {
        deltaY = delta;
      }
      if (deltaX !== void 0) {
        event.deltaX = deltaX;
      }
      if (deltaY !== void 0) {
        event.deltaY = deltaY;
      }
      if (delta !== void 0) {
        event.delta = delta;
      }
    }
  }, {
    reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
    props: ["buttons", "clientX", "clientY", "button", "offsetX", "relatedTarget", "which", "fromElement", "toElement", "offsetY", "pageX", "pageY", "screenX", "screenY"],
    fix: function fix(event, nativeEvent) {
      var eventDoc = void 0;
      var doc = void 0;
      var body = void 0;
      var target2 = event.target;
      var button = nativeEvent.button;
      if (target2 && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
        eventDoc = target2.ownerDocument || document;
        doc = eventDoc.documentElement;
        body = eventDoc.body;
        event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
        event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
      }
      if (!event.which && button !== void 0) {
        if (button & 1) {
          event.which = 1;
        } else if (button & 2) {
          event.which = 3;
        } else if (button & 4) {
          event.which = 2;
        } else {
          event.which = 0;
        }
      }
      if (!event.relatedTarget && event.fromElement) {
        event.relatedTarget = event.fromElement === target2 ? event.toElement : event.fromElement;
      }
      return event;
    }
  }];
  function retTrue() {
    return TRUE;
  }
  function retFalse() {
    return FALSE;
  }
  function DomEventObject(nativeEvent) {
    var type3 = nativeEvent.type;
    var isNative = typeof nativeEvent.stopPropagation === "function" || typeof nativeEvent.cancelBubble === "boolean";
    _EventBaseObject2["default"].call(this);
    this.nativeEvent = nativeEvent;
    var isDefaultPrevented = retFalse;
    if ("defaultPrevented" in nativeEvent) {
      isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;
    } else if ("getPreventDefault" in nativeEvent) {
      isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;
    } else if ("returnValue" in nativeEvent) {
      isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;
    }
    this.isDefaultPrevented = isDefaultPrevented;
    var fixFns = [];
    var fixFn = void 0;
    var l = void 0;
    var prop = void 0;
    var props2 = commonProps.concat();
    eventNormalizers.forEach(function(normalizer) {
      if (type3.match(normalizer.reg)) {
        props2 = props2.concat(normalizer.props);
        if (normalizer.fix) {
          fixFns.push(normalizer.fix);
        }
      }
    });
    l = props2.length;
    while (l) {
      prop = props2[--l];
      this[prop] = nativeEvent[prop];
    }
    if (!this.target && isNative) {
      this.target = nativeEvent.srcElement || document;
    }
    if (this.target && this.target.nodeType === 3) {
      this.target = this.target.parentNode;
    }
    l = fixFns.length;
    while (l) {
      fixFn = fixFns[--l];
      fixFn(this, nativeEvent);
    }
    this.timeStamp = nativeEvent.timeStamp || Date.now();
  }
  var EventBaseObjectProto = _EventBaseObject2["default"].prototype;
  (0, _objectAssign22["default"])(DomEventObject.prototype, EventBaseObjectProto, {
    constructor: DomEventObject,
    preventDefault: function preventDefault2() {
      var e = this.nativeEvent;
      if (e.preventDefault) {
        e.preventDefault();
      } else {
        e.returnValue = FALSE;
      }
      EventBaseObjectProto.preventDefault.call(this);
    },
    stopPropagation: function stopPropagation2() {
      var e = this.nativeEvent;
      if (e.stopPropagation) {
        e.stopPropagation();
      } else {
        e.cancelBubble = TRUE;
      }
      EventBaseObjectProto.stopPropagation.call(this);
    }
  });
  exports["default"] = DomEventObject;
  module2.exports = exports["default"];
})(EventObject, EventObject.exports);
(function(module2, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = addEventListener2;
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }
  var _EventObject = EventObject.exports;
  var _EventObject2 = _interopRequireDefault2(_EventObject);
  function addEventListener2(target2, eventType, callback, option) {
    function wrapCallback(e) {
      var ne = new _EventObject2["default"](e);
      callback.call(target2, ne);
    }
    if (target2.addEventListener) {
      var _ret = function() {
        var useCapture = false;
        if (typeof option === "object") {
          useCapture = option.capture || false;
        } else if (typeof option === "boolean") {
          useCapture = option;
        }
        target2.addEventListener(eventType, wrapCallback, option || false);
        return {
          v: {
            remove: function remove3() {
              target2.removeEventListener(eventType, wrapCallback, useCapture);
            }
          }
        };
      }();
      if (typeof _ret === "object")
        return _ret.v;
    } else if (target2.attachEvent) {
      target2.attachEvent("on" + eventType, wrapCallback);
      return {
        remove: function remove3() {
          target2.detachEvent("on" + eventType, wrapCallback);
        }
      };
    }
  }
  module2.exports = exports["default"];
})(lib$2, lib$2.exports);
var addDOMEventListener = /* @__PURE__ */ getDefaultExportFromCjs(lib$2.exports);
function addEventListenerWrap(target2, eventType, cb, option) {
  return addDOMEventListener(target2, eventType, cb, option);
}
function getTargetRect(target2) {
  return target2 !== window ? target2.getBoundingClientRect() : { top: 0, bottom: window.innerHeight };
}
function getFixedTop(placeholderReact, targetRect, offsetTop2) {
  if (offsetTop2 !== void 0 && targetRect.top > placeholderReact.top - offsetTop2) {
    return offsetTop2 + targetRect.top + "px";
  }
  return void 0;
}
function getFixedBottom(placeholderReact, targetRect, offsetBottom2) {
  if (offsetBottom2 !== void 0 && targetRect.bottom < placeholderReact.bottom + offsetBottom2) {
    var targetBottomOffset = window.innerHeight - targetRect.bottom;
    return offsetBottom2 + targetBottomOffset + "px";
  }
  return void 0;
}
var TRIGGER_EVENTS = ["resize", "scroll", "touchstart", "touchmove", "touchend", "pageshow", "load"];
var observerEntities = [];
function addObserveTarget(target2, affix) {
  if (!target2)
    return;
  var entity = observerEntities.find(function(item) {
    return item.target === target2;
  });
  if (entity) {
    entity.affixList.push(affix);
  } else {
    entity = {
      target: target2,
      affixList: [affix],
      eventHandlers: {}
    };
    observerEntities.push(entity);
    TRIGGER_EVENTS.forEach(function(eventName) {
      entity.eventHandlers[eventName] = addEventListenerWrap(target2, eventName, function() {
        entity.affixList.forEach(function(targetAffix) {
          targetAffix.lazyUpdatePosition();
        });
      });
    });
  }
}
function removeObserveTarget(affix) {
  var observerEntity = observerEntities.find(function(oriObserverEntity) {
    var hasAffix = oriObserverEntity.affixList.some(function(item) {
      return item === affix;
    });
    if (hasAffix) {
      oriObserverEntity.affixList = oriObserverEntity.affixList.filter(function(item) {
        return item !== affix;
      });
    }
    return hasAffix;
  });
  if (observerEntity && observerEntity.affixList.length === 0) {
    observerEntities = observerEntities.filter(function(item) {
      return item !== observerEntity;
    });
    TRIGGER_EVENTS.forEach(function(eventName) {
      var handler8 = observerEntity.eventHandlers[eventName];
      if (handler8 && handler8.remove) {
        handler8.remove();
      }
    });
  }
}
function getDefaultTarget$1() {
  return typeof window !== "undefined" ? window : null;
}
var AffixProps = {
  offsetTop: PropTypes.number,
  offset: PropTypes.number,
  offsetBottom: PropTypes.number,
  target: PropTypes.func.def(getDefaultTarget$1),
  prefixCls: PropTypes.string
};
var AffixStatus = {
  None: "none",
  Prepare: "Prepare"
};
var Affix = {
  name: "AAffix",
  props: AffixProps,
  mixins: [BaseMixin],
  inject: {
    configProvider: { "default": function _default4() {
      return ConfigConsumerProps;
    } }
  },
  data: function data2() {
    return {
      affixStyle: void 0,
      placeholderStyle: void 0,
      status: AffixStatus.None,
      lastAffix: false,
      prevTarget: null
    };
  },
  beforeMount: function beforeMount() {
    this.updatePosition = throttleByAnimationFrame(this.updatePosition);
    this.lazyUpdatePosition = throttleByAnimationFrame(this.lazyUpdatePosition);
  },
  mounted: function mounted2() {
    var _this = this;
    var target2 = this.target;
    if (target2) {
      this.timeout = setTimeout(function() {
        addObserveTarget(target2(), _this);
        _this.updatePosition();
      });
    }
  },
  updated: function updated2() {
    this.measure();
  },
  watch: {
    target: function target(val) {
      var newTarget = null;
      if (val) {
        newTarget = val() || null;
      }
      if (this.prevTarget !== newTarget) {
        removeObserveTarget(this);
        if (newTarget) {
          addObserveTarget(newTarget, this);
          this.updatePosition();
        }
        this.prevTarget = newTarget;
      }
    },
    offsetTop: function offsetTop() {
      this.updatePosition();
    },
    offsetBottom: function offsetBottom() {
      this.updatePosition();
    }
  },
  beforeDestroy: function beforeDestroy2() {
    clearTimeout(this.timeout);
    removeObserveTarget(this);
    this.updatePosition.cancel();
    this.lazyUpdatePosition.cancel();
  },
  methods: {
    getOffsetTop: function getOffsetTop() {
      var offset4 = this.offset, offsetBottom2 = this.offsetBottom;
      var offsetTop2 = this.offsetTop;
      if (typeof offsetTop2 === "undefined") {
        offsetTop2 = offset4;
        warning$4(typeof offset4 === "undefined", "Affix", "`offset` is deprecated. Please use `offsetTop` instead.");
      }
      if (offsetBottom2 === void 0 && offsetTop2 === void 0) {
        offsetTop2 = 0;
      }
      return offsetTop2;
    },
    getOffsetBottom: function getOffsetBottom() {
      return this.offsetBottom;
    },
    measure: function measure() {
      var status = this.status, lastAffix = this.lastAffix;
      var target2 = this.target;
      if (status !== AffixStatus.Prepare || !this.$refs.fixedNode || !this.$refs.placeholderNode || !target2) {
        return;
      }
      var offsetTop2 = this.getOffsetTop();
      var offsetBottom2 = this.getOffsetBottom();
      var targetNode = target2();
      if (!targetNode) {
        return;
      }
      var newState = {
        status: AffixStatus.None
      };
      var targetRect = getTargetRect(targetNode);
      var placeholderReact = getTargetRect(this.$refs.placeholderNode);
      var fixedTop = getFixedTop(placeholderReact, targetRect, offsetTop2);
      var fixedBottom = getFixedBottom(placeholderReact, targetRect, offsetBottom2);
      if (fixedTop !== void 0) {
        newState.affixStyle = {
          position: "fixed",
          top: fixedTop,
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
        newState.placeholderStyle = {
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
      } else if (fixedBottom !== void 0) {
        newState.affixStyle = {
          position: "fixed",
          bottom: fixedBottom,
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
        newState.placeholderStyle = {
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
      }
      newState.lastAffix = !!newState.affixStyle;
      if (lastAffix !== newState.lastAffix) {
        this.$emit("change", newState.lastAffix);
      }
      this.setState(newState);
    },
    prepareMeasure: function prepareMeasure() {
      this.setState({
        status: AffixStatus.Prepare,
        affixStyle: void 0,
        placeholderStyle: void 0
      });
      this.$forceUpdate();
    },
    updatePosition: function updatePosition() {
      this.prepareMeasure();
    },
    lazyUpdatePosition: function lazyUpdatePosition() {
      var target2 = this.target;
      var affixStyle = this.affixStyle;
      if (target2 && affixStyle) {
        var offsetTop2 = this.getOffsetTop();
        var offsetBottom2 = this.getOffsetBottom();
        var targetNode = target2();
        if (targetNode && this.$refs.placeholderNode) {
          var targetRect = getTargetRect(targetNode);
          var placeholderReact = getTargetRect(this.$refs.placeholderNode);
          var fixedTop = getFixedTop(placeholderReact, targetRect, offsetTop2);
          var fixedBottom = getFixedBottom(placeholderReact, targetRect, offsetBottom2);
          if (fixedTop !== void 0 && affixStyle.top === fixedTop || fixedBottom !== void 0 && affixStyle.bottom === fixedBottom) {
            return;
          }
        }
      }
      this.prepareMeasure();
    }
  },
  render: function render7() {
    var _this2 = this;
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, affixStyle = this.affixStyle, placeholderStyle = this.placeholderStyle, $slots = this.$slots, $props = this.$props;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var className = classNames(_default$8({}, getPrefixCls5("affix", prefixCls2), affixStyle));
    var props2 = {
      attrs: omit$2($props, ["prefixCls", "offsetTop", "offsetBottom", "target"])
    };
    return h(
      ResizeObserver,
      {
        on: {
          "resize": function resize() {
            _this2.updatePosition();
          }
        }
      },
      [h(
        "div",
        _mergeJSXProps([props2, { style: placeholderStyle, ref: "placeholderNode" }]),
        [h(
          "div",
          { "class": className, ref: "fixedNode", style: affixStyle },
          [$slots["default"]]
        )]
      )]
    );
  }
};
Affix.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Affix.name, Affix);
};
var Affix$1 = Affix;
function getScroll$4(target2, top) {
  if (typeof window === "undefined") {
    return 0;
  }
  var prop = top ? "pageYOffset" : "pageXOffset";
  var method3 = top ? "scrollTop" : "scrollLeft";
  var isWindow2 = target2 === window;
  var ret = isWindow2 ? target2[prop] : target2[method3];
  if (isWindow2 && typeof ret !== "number") {
    ret = window.document.documentElement[method3];
  }
  return ret;
}
function easeInOutCubic(t, b, c, d) {
  var cc = c - b;
  t /= d / 2;
  if (t < 1) {
    return cc / 2 * t * t * t + b;
  }
  return cc / 2 * ((t -= 2) * t * t + 2) + b;
}
function scrollTo$1(y) {
  var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _options$getContainer = options2.getContainer, getContainer5 = _options$getContainer === void 0 ? function() {
    return window;
  } : _options$getContainer, callback = options2.callback, _options$duration = options2.duration, duration2 = _options$duration === void 0 ? 450 : _options$duration;
  var container = getContainer5();
  var scrollTop2 = getScroll$4(container, true);
  var startTime = Date.now();
  var frameFunc = function frameFunc2() {
    var timestamp = Date.now();
    var time = timestamp - startTime;
    var nextScrollTop = easeInOutCubic(time > duration2 ? duration2 : time, scrollTop2, y, duration2);
    if (container === window) {
      window.scrollTo(window.pageXOffset, nextScrollTop);
    } else {
      container.scrollTop = nextScrollTop;
    }
    if (time < duration2) {
      raf$2(frameFunc2);
    } else if (typeof callback === "function") {
      callback();
    }
  };
  raf$2(frameFunc);
}
function getDefaultContainer() {
  return window;
}
function getOffsetTop2(element, container) {
  if (!element) {
    return 0;
  }
  if (!element.getClientRects().length) {
    return 0;
  }
  var rect = element.getBoundingClientRect();
  if (rect.width || rect.height) {
    if (container === window) {
      container = element.ownerDocument.documentElement;
      return rect.top - container.clientTop;
    }
    return rect.top - container.getBoundingClientRect().top;
  }
  return rect.top;
}
var sharpMatcherRegx = /#([^#]+)$/;
var AnchorProps = {
  prefixCls: PropTypes.string,
  offsetTop: PropTypes.number,
  bounds: PropTypes.number,
  affix: PropTypes.bool,
  showInkInFixed: PropTypes.bool,
  getContainer: PropTypes.func,
  wrapperClass: PropTypes.string,
  wrapperStyle: PropTypes.object,
  getCurrentAnchor: PropTypes.func,
  targetOffset: PropTypes.number
};
var Anchor = {
  name: "AAnchor",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps(AnchorProps, {
    affix: true,
    showInkInFixed: false,
    getContainer: getDefaultContainer
  }),
  inject: {
    configProvider: { "default": function _default5() {
      return ConfigConsumerProps;
    } }
  },
  data: function data3() {
    this.links = [];
    this._sPrefixCls = "";
    return {
      activeLink: null
    };
  },
  provide: function provide() {
    var _this = this;
    return {
      antAnchor: {
        registerLink: function registerLink(link) {
          if (!_this.links.includes(link)) {
            _this.links.push(link);
          }
        },
        unregisterLink: function unregisterLink(link) {
          var index2 = _this.links.indexOf(link);
          if (index2 !== -1) {
            _this.links.splice(index2, 1);
          }
        },
        $data: this.$data,
        scrollTo: this.handleScrollTo
      },
      antAnchorContext: this
    };
  },
  mounted: function mounted3() {
    var _this2 = this;
    this.$nextTick(function() {
      var getContainer5 = _this2.getContainer;
      _this2.scrollContainer = getContainer5();
      _this2.scrollEvent = addEventListenerWrap(_this2.scrollContainer, "scroll", _this2.handleScroll);
      _this2.handleScroll();
    });
  },
  updated: function updated3() {
    var _this3 = this;
    this.$nextTick(function() {
      if (_this3.scrollEvent) {
        var getContainer5 = _this3.getContainer;
        var currentContainer = getContainer5();
        if (_this3.scrollContainer !== currentContainer) {
          _this3.scrollContainer = currentContainer;
          _this3.scrollEvent.remove();
          _this3.scrollEvent = addEventListenerWrap(_this3.scrollContainer, "scroll", _this3.handleScroll);
          _this3.handleScroll();
        }
      }
      _this3.updateInk();
    });
  },
  beforeDestroy: function beforeDestroy3() {
    if (this.scrollEvent) {
      this.scrollEvent.remove();
    }
  },
  methods: {
    getCurrentActiveLink: function getCurrentActiveLink() {
      var offsetTop2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      var bounds = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5;
      var getCurrentAnchor = this.getCurrentAnchor;
      if (typeof getCurrentAnchor === "function") {
        return getCurrentAnchor();
      }
      var activeLink = "";
      if (typeof document === "undefined") {
        return activeLink;
      }
      var linkSections = [];
      var getContainer5 = this.getContainer;
      var container = getContainer5();
      this.links.forEach(function(link) {
        var sharpLinkMatch = sharpMatcherRegx.exec(link.toString());
        if (!sharpLinkMatch) {
          return;
        }
        var target2 = document.getElementById(sharpLinkMatch[1]);
        if (target2) {
          var top = getOffsetTop2(target2, container);
          if (top < offsetTop2 + bounds) {
            linkSections.push({
              link,
              top
            });
          }
        }
      });
      if (linkSections.length) {
        var maxSection = linkSections.reduce(function(prev3, curr) {
          return curr.top > prev3.top ? curr : prev3;
        });
        return maxSection.link;
      }
      return "";
    },
    handleScrollTo: function handleScrollTo(link) {
      var _this4 = this;
      var offsetTop2 = this.offsetTop, getContainer5 = this.getContainer, targetOffset2 = this.targetOffset;
      this.setCurrentActiveLink(link);
      var container = getContainer5();
      var scrollTop2 = getScroll$4(container, true);
      var sharpLinkMatch = sharpMatcherRegx.exec(link);
      if (!sharpLinkMatch) {
        return;
      }
      var targetElement = document.getElementById(sharpLinkMatch[1]);
      if (!targetElement) {
        return;
      }
      var eleOffsetTop = getOffsetTop2(targetElement, container);
      var y = scrollTop2 + eleOffsetTop;
      y -= targetOffset2 !== void 0 ? targetOffset2 : offsetTop2 || 0;
      this.animating = true;
      scrollTo$1(y, {
        callback: function callback() {
          _this4.animating = false;
        },
        getContainer: getContainer5
      });
    },
    setCurrentActiveLink: function setCurrentActiveLink(link) {
      var activeLink = this.activeLink;
      if (activeLink !== link) {
        this.setState({
          activeLink: link
        });
        this.$emit("change", link);
      }
    },
    handleScroll: function handleScroll() {
      if (this.animating) {
        return;
      }
      var offsetTop2 = this.offsetTop, bounds = this.bounds, targetOffset2 = this.targetOffset;
      var currentActiveLink = this.getCurrentActiveLink(targetOffset2 !== void 0 ? targetOffset2 : offsetTop2 || 0, bounds);
      this.setCurrentActiveLink(currentActiveLink);
    },
    updateInk: function updateInk() {
      if (typeof document === "undefined") {
        return;
      }
      var _sPrefixCls = this._sPrefixCls;
      var linkNode = this.$el.getElementsByClassName(_sPrefixCls + "-link-title-active")[0];
      if (linkNode) {
        this.$refs.inkNode.style.top = linkNode.offsetTop + linkNode.clientHeight / 2 - 4.5 + "px";
      }
    }
  },
  render: function render8() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, offsetTop2 = this.offsetTop, affix = this.affix, showInkInFixed = this.showInkInFixed, activeLink = this.activeLink, $slots = this.$slots, getContainer5 = this.getContainer;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("anchor", customizePrefixCls);
    this._sPrefixCls = prefixCls2;
    var inkClass = classNames(prefixCls2 + "-ink-ball", {
      visible: activeLink
    });
    var wrapperClass = classNames(this.wrapperClass, prefixCls2 + "-wrapper");
    var anchorClass = classNames(prefixCls2, {
      fixed: !affix && !showInkInFixed
    });
    var wrapperStyle = _default$6({
      maxHeight: offsetTop2 ? "calc(100vh - " + offsetTop2 + "px)" : "100vh"
    }, this.wrapperStyle);
    var anchorContent = h(
      "div",
      { "class": wrapperClass, style: wrapperStyle },
      [h(
        "div",
        { "class": anchorClass },
        [h(
          "div",
          { "class": prefixCls2 + "-ink" },
          [h("span", { "class": inkClass, ref: "inkNode" })]
        ), $slots["default"]]
      )]
    );
    return !affix ? anchorContent : h(
      Affix$1,
      {
        attrs: { offsetTop: offsetTop2, target: getContainer5 }
      },
      [anchorContent]
    );
  }
};
var AnchorLinkProps = {
  prefixCls: PropTypes.string,
  href: PropTypes.string,
  title: PropTypes.any,
  target: PropTypes.string
};
var AnchorLink = {
  name: "AAnchorLink",
  props: initDefaultProps(AnchorLinkProps, {
    href: "#"
  }),
  inject: {
    antAnchor: { "default": function _default6() {
      return {};
    } },
    antAnchorContext: { "default": function _default7() {
      return {};
    } },
    configProvider: { "default": function _default8() {
      return ConfigConsumerProps;
    } }
  },
  watch: {
    href: function href(val, oldVal) {
      var _this = this;
      this.$nextTick(function() {
        _this.antAnchor.unregisterLink(oldVal);
        _this.antAnchor.registerLink(val);
      });
    }
  },
  mounted: function mounted4() {
    this.antAnchor.registerLink(this.href);
  },
  beforeDestroy: function beforeDestroy4() {
    this.antAnchor.unregisterLink(this.href);
  },
  methods: {
    handleClick: function handleClick(e) {
      this.antAnchor.scrollTo(this.href);
      var scrollTo3 = this.antAnchor.scrollTo;
      var _$props = this.$props, href2 = _$props.href, title = _$props.title;
      if (this.antAnchorContext.$emit) {
        this.antAnchorContext.$emit("click", e, { title, href: href2 });
      }
      scrollTo3(href2);
    }
  },
  render: function render9() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, href2 = this.href, $slots = this.$slots, target2 = this.target;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("anchor", customizePrefixCls);
    var title = getComponentFromProp(this, "title");
    var active = this.antAnchor.$data.activeLink === href2;
    var wrapperClassName = classNames(prefixCls2 + "-link", _default$8({}, prefixCls2 + "-link-active", active));
    var titleClassName = classNames(prefixCls2 + "-link-title", _default$8({}, prefixCls2 + "-link-title-active", active));
    return h(
      "div",
      { "class": wrapperClassName },
      [h(
        "a",
        {
          "class": titleClassName,
          attrs: {
            href: href2,
            title: typeof title === "string" ? title : "",
            target: target2
          },
          on: {
            "click": this.handleClick
          }
        },
        [title]
      ), $slots["default"]]
    );
  }
};
Anchor.Link = AnchorLink;
Anchor.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Anchor.name, Anchor);
  Vue2.component(Anchor.Link.name, Anchor.Link);
};
var KeyCode$1 = {
  MAC_ENTER: 3,
  BACKSPACE: 8,
  TAB: 9,
  NUM_CENTER: 12,
  ENTER: 13,
  SHIFT: 16,
  CTRL: 17,
  ALT: 18,
  PAUSE: 19,
  CAPS_LOCK: 20,
  ESC: 27,
  SPACE: 32,
  PAGE_UP: 33,
  PAGE_DOWN: 34,
  END: 35,
  HOME: 36,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,
  PRINT_SCREEN: 44,
  INSERT: 45,
  DELETE: 46,
  ZERO: 48,
  ONE: 49,
  TWO: 50,
  THREE: 51,
  FOUR: 52,
  FIVE: 53,
  SIX: 54,
  SEVEN: 55,
  EIGHT: 56,
  NINE: 57,
  QUESTION_MARK: 63,
  A: 65,
  B: 66,
  C: 67,
  D: 68,
  E: 69,
  F: 70,
  G: 71,
  H: 72,
  I: 73,
  J: 74,
  K: 75,
  L: 76,
  M: 77,
  N: 78,
  O: 79,
  P: 80,
  Q: 81,
  R: 82,
  S: 83,
  T: 84,
  U: 85,
  V: 86,
  W: 87,
  X: 88,
  Y: 89,
  Z: 90,
  META: 91,
  WIN_KEY_RIGHT: 92,
  CONTEXT_MENU: 93,
  NUM_ZERO: 96,
  NUM_ONE: 97,
  NUM_TWO: 98,
  NUM_THREE: 99,
  NUM_FOUR: 100,
  NUM_FIVE: 101,
  NUM_SIX: 102,
  NUM_SEVEN: 103,
  NUM_EIGHT: 104,
  NUM_NINE: 105,
  NUM_MULTIPLY: 106,
  NUM_PLUS: 107,
  NUM_MINUS: 109,
  NUM_PERIOD: 110,
  NUM_DIVISION: 111,
  F1: 112,
  F2: 113,
  F3: 114,
  F4: 115,
  F5: 116,
  F6: 117,
  F7: 118,
  F8: 119,
  F9: 120,
  F10: 121,
  F11: 122,
  F12: 123,
  NUMLOCK: 144,
  SEMICOLON: 186,
  DASH: 189,
  EQUALS: 187,
  COMMA: 188,
  PERIOD: 190,
  SLASH: 191,
  APOSTROPHE: 192,
  SINGLE_QUOTE: 222,
  OPEN_SQUARE_BRACKET: 219,
  BACKSLASH: 220,
  CLOSE_SQUARE_BRACKET: 221,
  WIN_KEY: 224,
  MAC_FF_META: 224,
  WIN_IME: 229
};
KeyCode$1.isTextModifyingKeyEvent = function isTextModifyingKeyEvent(e) {
  var keyCode = e.keyCode;
  if (e.altKey && !e.ctrlKey || e.metaKey || keyCode >= KeyCode$1.F1 && keyCode <= KeyCode$1.F12) {
    return false;
  }
  switch (keyCode) {
    case KeyCode$1.ALT:
    case KeyCode$1.CAPS_LOCK:
    case KeyCode$1.CONTEXT_MENU:
    case KeyCode$1.CTRL:
    case KeyCode$1.DOWN:
    case KeyCode$1.END:
    case KeyCode$1.ESC:
    case KeyCode$1.HOME:
    case KeyCode$1.INSERT:
    case KeyCode$1.LEFT:
    case KeyCode$1.MAC_FF_META:
    case KeyCode$1.META:
    case KeyCode$1.NUMLOCK:
    case KeyCode$1.NUM_CENTER:
    case KeyCode$1.PAGE_DOWN:
    case KeyCode$1.PAGE_UP:
    case KeyCode$1.PAUSE:
    case KeyCode$1.PRINT_SCREEN:
    case KeyCode$1.RIGHT:
    case KeyCode$1.SHIFT:
    case KeyCode$1.UP:
    case KeyCode$1.WIN_KEY:
    case KeyCode$1.WIN_KEY_RIGHT:
      return false;
    default:
      return true;
  }
};
KeyCode$1.isCharacterKey = function isCharacterKey(keyCode) {
  if (keyCode >= KeyCode$1.ZERO && keyCode <= KeyCode$1.NINE) {
    return true;
  }
  if (keyCode >= KeyCode$1.NUM_ZERO && keyCode <= KeyCode$1.NUM_MULTIPLY) {
    return true;
  }
  if (keyCode >= KeyCode$1.A && keyCode <= KeyCode$1.Z) {
    return true;
  }
  if (window.navigation.userAgent.indexOf("WebKit") !== -1 && keyCode === 0) {
    return true;
  }
  switch (keyCode) {
    case KeyCode$1.SPACE:
    case KeyCode$1.QUESTION_MARK:
    case KeyCode$1.NUM_PLUS:
    case KeyCode$1.NUM_MINUS:
    case KeyCode$1.NUM_PERIOD:
    case KeyCode$1.NUM_DIVISION:
    case KeyCode$1.SEMICOLON:
    case KeyCode$1.DASH:
    case KeyCode$1.EQUALS:
    case KeyCode$1.COMMA:
    case KeyCode$1.PERIOD:
    case KeyCode$1.SLASH:
    case KeyCode$1.APOSTROPHE:
    case KeyCode$1.SINGLE_QUOTE:
    case KeyCode$1.OPEN_SQUARE_BRACKET:
    case KeyCode$1.BACKSLASH:
    case KeyCode$1.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false;
  }
};
var KeyCode$2 = KeyCode$1;
var componentIndexof = function(arr, obj) {
  if (arr.indexOf)
    return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj)
      return i;
  }
  return -1;
};
try {
  var index$2 = require("indexof");
} catch (err) {
  var index$2 = componentIndexof;
}
var re = /\s+/;
var toString$5 = Object.prototype.toString;
var componentClasses = function(el) {
  return new ClassList(el);
};
function ClassList(el) {
  if (!el || !el.nodeType) {
    throw new Error("A DOM element reference is required");
  }
  this.el = el;
  this.list = el.classList;
}
ClassList.prototype.add = function(name) {
  if (this.list) {
    this.list.add(name);
    return this;
  }
  var arr = this.array();
  var i = index$2(arr, name);
  if (!~i)
    arr.push(name);
  this.el.className = arr.join(" ");
  return this;
};
ClassList.prototype.remove = function(name) {
  if ("[object RegExp]" == toString$5.call(name)) {
    return this.removeMatching(name);
  }
  if (this.list) {
    this.list.remove(name);
    return this;
  }
  var arr = this.array();
  var i = index$2(arr, name);
  if (~i)
    arr.splice(i, 1);
  this.el.className = arr.join(" ");
  return this;
};
ClassList.prototype.removeMatching = function(re2) {
  var arr = this.array();
  for (var i = 0; i < arr.length; i++) {
    if (re2.test(arr[i])) {
      this.remove(arr[i]);
    }
  }
  return this;
};
ClassList.prototype.toggle = function(name, force) {
  if (this.list) {
    if ("undefined" !== typeof force) {
      if (force !== this.list.toggle(name, force)) {
        this.list.toggle(name);
      }
    } else {
      this.list.toggle(name);
    }
    return this;
  }
  if ("undefined" !== typeof force) {
    if (!force) {
      this.remove(name);
    } else {
      this.add(name);
    }
  } else {
    if (this.has(name)) {
      this.remove(name);
    } else {
      this.add(name);
    }
  }
  return this;
};
ClassList.prototype.array = function() {
  var className = this.el.getAttribute("class") || "";
  var str = className.replace(/^\s+|\s+$/g, "");
  var arr = str.split(re);
  if ("" === arr[0])
    arr.shift();
  return arr;
};
ClassList.prototype.has = ClassList.prototype.contains = function(name) {
  return this.list ? this.list.contains(name) : !!~index$2(this.array(), name);
};
var storeShape = PropTypes.shape({
  subscribe: PropTypes.func.isRequired,
  setState: PropTypes.func.isRequired,
  getState: PropTypes.func.isRequired
});
var Provider = {
  name: "StoreProvider",
  props: {
    store: storeShape.isRequired
  },
  provide: function provide2() {
    return {
      storeContext: this.$props
    };
  },
  render: function render10() {
    return this.$slots["default"][0];
  }
};
var shallowequal = function shallowEqual(objA, objB, compare2, compareContext) {
  var ret = compare2 ? compare2.call(compareContext, objA, objB) : void 0;
  if (ret !== void 0) {
    return !!ret;
  }
  if (objA === objB) {
    return true;
  }
  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
  for (var idx = 0; idx < keysA.length; idx++) {
    var key2 = keysA[idx];
    if (!bHasOwnProperty(key2)) {
      return false;
    }
    var valueA = objA[key2];
    var valueB = objB[key2];
    ret = compare2 ? compare2.call(compareContext, valueA, valueB, key2) : void 0;
    if (ret === false || ret === void 0 && valueA !== valueB) {
      return false;
    }
  }
  return true;
};
var shallowEqual2 = shallowequal;
function getDisplayName$2(WrappedComponent) {
  return WrappedComponent.name || "Component";
}
function wrapWithConnect(WrappedComponent) {
  var tempProps = WrappedComponent.props || {};
  var methods = WrappedComponent.methods || {};
  var props2 = {};
  Object.keys(tempProps).forEach(function(k) {
    props2[k] = _default$6({}, tempProps[k], { required: false });
  });
  WrappedComponent.props.__propsSymbol__ = PropTypes.any;
  WrappedComponent.props.children = PropTypes.array.def([]);
  var ProxyWrappedComponent = {
    props: props2,
    model: WrappedComponent.model,
    name: "Proxy_" + getDisplayName$2(WrappedComponent),
    methods: {
      getProxyWrappedInstance: function getProxyWrappedInstance() {
        return this.$refs.wrappedInstance;
      }
    },
    render: function render249() {
      var h = arguments[0];
      var _$slots = this.$slots, $slots = _$slots === void 0 ? {} : _$slots, $scopedSlots = this.$scopedSlots;
      var props3 = getOptionProps(this);
      var wrapProps = {
        props: _default$6({}, props3, {
          __propsSymbol__: Symbol(),
          componentWillReceiveProps: _default$6({}, props3),
          children: $slots["default"] || props3.children || []
        }),
        on: getListeners(this)
      };
      if (Object.keys($scopedSlots).length) {
        wrapProps.scopedSlots = $scopedSlots;
      }
      var slotsKey = Object.keys($slots);
      return h(
        WrappedComponent,
        _mergeJSXProps([wrapProps, { ref: "wrappedInstance" }]),
        [slotsKey.length ? slotsKey.map(function(name) {
          return h(
            "template",
            { slot: name },
            [$slots[name]]
          );
        }) : null]
      );
    }
  };
  Object.keys(methods).map(function(m) {
    ProxyWrappedComponent.methods[m] = function() {
      var _getProxyWrappedInsta;
      return (_getProxyWrappedInsta = this.getProxyWrappedInstance())[m].apply(_getProxyWrappedInsta, arguments);
    };
  });
  return ProxyWrappedComponent;
}
function getDisplayName$1(WrappedComponent) {
  return WrappedComponent.name || "Component";
}
var defaultMapStateToProps = function defaultMapStateToProps2() {
  return {};
};
function connect(mapStateToProps) {
  var shouldSubscribe = !!mapStateToProps;
  var finalMapStateToProps = mapStateToProps || defaultMapStateToProps;
  return function wrapWithConnect$1(WrappedComponent) {
    var tempProps = omit$2(WrappedComponent.props || {}, ["store"]);
    var props2 = {
      __propsSymbol__: PropTypes.any
    };
    Object.keys(tempProps).forEach(function(k) {
      props2[k] = _default$6({}, tempProps[k], { required: false });
    });
    var Connect = {
      name: "Connect_" + getDisplayName$1(WrappedComponent),
      props: props2,
      inject: {
        storeContext: { "default": function _default130() {
          return {};
        } }
      },
      data: function data109() {
        this.store = this.storeContext.store;
        this.preProps = omit$2(getOptionProps(this), ["__propsSymbol__"]);
        return {
          subscribed: finalMapStateToProps(this.store.getState(), this.$props)
        };
      },
      watch: {
        __propsSymbol__: function __propsSymbol__6() {
          if (mapStateToProps && mapStateToProps.length === 2) {
            this.subscribed = finalMapStateToProps(this.store.getState(), this.$props);
          }
        }
      },
      mounted: function mounted70() {
        this.trySubscribe();
      },
      beforeDestroy: function beforeDestroy52() {
        this.tryUnsubscribe();
      },
      methods: {
        handleChange: function handleChange15() {
          if (!this.unsubscribe) {
            return;
          }
          var props3 = omit$2(getOptionProps(this), ["__propsSymbol__"]);
          var nextSubscribed = finalMapStateToProps(this.store.getState(), props3);
          if (!shallowEqual2(this.preProps, props3) || !shallowEqual2(this.subscribed, nextSubscribed)) {
            this.subscribed = nextSubscribed;
          }
        },
        trySubscribe: function trySubscribe() {
          if (shouldSubscribe) {
            this.unsubscribe = this.store.subscribe(this.handleChange);
            this.handleChange();
          }
        },
        tryUnsubscribe: function tryUnsubscribe() {
          if (this.unsubscribe) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        },
        getWrappedInstance: function getWrappedInstance() {
          return this.$refs.wrappedInstance;
        }
      },
      render: function render249() {
        var h = arguments[0];
        var _$slots = this.$slots, $slots = _$slots === void 0 ? {} : _$slots, $scopedSlots = this.$scopedSlots, subscribed = this.subscribed, store2 = this.store;
        var props3 = getOptionProps(this);
        this.preProps = _default$6({}, omit$2(props3, ["__propsSymbol__"]));
        var wrapProps = {
          props: _default$6({}, props3, subscribed, {
            store: store2
          }),
          on: getListeners(this),
          scopedSlots: $scopedSlots
        };
        return h(
          WrappedComponent,
          _mergeJSXProps([wrapProps, { ref: "wrappedInstance" }]),
          [Object.keys($slots).map(function(name) {
            return h(
              "template",
              { slot: name },
              [$slots[name]]
            );
          })]
        );
      }
    };
    return wrapWithConnect(Connect);
  };
}
function create$1(initialState) {
  var state = initialState;
  var listeners = [];
  function setState2(partial) {
    state = _default$6({}, state, partial);
    for (var i = 0; i < listeners.length; i++) {
      listeners[i]();
    }
  }
  function getState() {
    return state;
  }
  function subscribe2(listener) {
    listeners.push(listener);
    return function unsubscribe2() {
      var index2 = listeners.indexOf(listener);
      listeners.splice(index2, 1);
    };
  }
  return {
    setState: setState2,
    getState,
    subscribe: subscribe2
  };
}
var _default$2 = function(obj, keys3) {
  var target2 = {};
  for (var i in obj) {
    if (keys3.indexOf(i) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i))
      continue;
    target2[i] = obj[i];
  }
  return target2;
};
var applePhone = /iPhone/i;
var appleIpod = /iPod/i;
var appleTablet = /iPad/i;
var androidPhone = /\bAndroid(?:.+)Mobile\b/i;
var androidTablet = /Android/i;
var amazonPhone = /\bAndroid(?:.+)SD4930UR\b/i;
var amazonTablet = /\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i;
var windowsPhone = /Windows Phone/i;
var windowsTablet = /\bWindows(?:.+)ARM\b/i;
var otherBlackberry = /BlackBerry/i;
var otherBlackberry10 = /BB10/i;
var otherOpera = /Opera Mini/i;
var otherChrome = /\b(CriOS|Chrome)(?:.+)Mobile/i;
var otherFirefox = /Mobile(?:.+)Firefox\b/i;
function match(regex, userAgent) {
  return regex.test(userAgent);
}
function isMobile$2(userAgent) {
  var ua = userAgent || (typeof navigator !== "undefined" ? navigator.userAgent : "");
  var tmp = ua.split("[FBAN");
  if (typeof tmp[1] !== "undefined") {
    var _tmp = tmp;
    var _tmp2 = _default$4(_tmp, 1);
    ua = _tmp2[0];
  }
  tmp = ua.split("Twitter");
  if (typeof tmp[1] !== "undefined") {
    var _tmp3 = tmp;
    var _tmp4 = _default$4(_tmp3, 1);
    ua = _tmp4[0];
  }
  var result = {
    apple: {
      phone: match(applePhone, ua) && !match(windowsPhone, ua),
      ipod: match(appleIpod, ua),
      tablet: !match(applePhone, ua) && match(appleTablet, ua) && !match(windowsPhone, ua),
      device: (match(applePhone, ua) || match(appleIpod, ua) || match(appleTablet, ua)) && !match(windowsPhone, ua)
    },
    amazon: {
      phone: match(amazonPhone, ua),
      tablet: !match(amazonPhone, ua) && match(amazonTablet, ua),
      device: match(amazonPhone, ua) || match(amazonTablet, ua)
    },
    android: {
      phone: !match(windowsPhone, ua) && match(amazonPhone, ua) || !match(windowsPhone, ua) && match(androidPhone, ua),
      tablet: !match(windowsPhone, ua) && !match(amazonPhone, ua) && !match(androidPhone, ua) && (match(amazonTablet, ua) || match(androidTablet, ua)),
      device: !match(windowsPhone, ua) && (match(amazonPhone, ua) || match(amazonTablet, ua) || match(androidPhone, ua) || match(androidTablet, ua)) || match(/\bokhttp\b/i, ua)
    },
    windows: {
      phone: match(windowsPhone, ua),
      tablet: match(windowsTablet, ua),
      device: match(windowsPhone, ua) || match(windowsTablet, ua)
    },
    other: {
      blackberry: match(otherBlackberry, ua),
      blackberry10: match(otherBlackberry10, ua),
      opera: match(otherOpera, ua),
      firefox: match(otherFirefox, ua),
      chrome: match(otherChrome, ua),
      device: match(otherBlackberry, ua) || match(otherBlackberry10, ua) || match(otherOpera, ua) || match(otherFirefox, ua) || match(otherChrome, ua)
    },
    any: null,
    phone: null,
    tablet: null
  };
  result.any = result.apple.device || result.android.device || result.windows.device || result.other.device;
  result.phone = result.apple.phone || result.android.phone || result.windows.phone;
  result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;
  return result;
}
var defaultResult = _default$6({}, isMobile$2(), {
  isMobile: isMobile$2
});
var isMobile$3 = defaultResult;
function noop$X() {
}
function getKeyFromChildrenIndex(child, menuEventKey, index2) {
  var prefix = menuEventKey || "";
  return child.key === void 0 ? prefix + "item_" + index2 : child.key;
}
function getMenuIdFromSubMenuEventKey(eventKey) {
  return eventKey + "-menu-";
}
function loopMenuItem(children, cb) {
  var index2 = -1;
  children.forEach(function(c) {
    index2++;
    if (c && c.type && c.type.isMenuItemGroup) {
      c.$slots["default"].forEach(function(c2) {
        index2++;
        c.componentOptions && cb(c2, index2);
      });
    } else {
      c.componentOptions && cb(c, index2);
    }
  });
}
function loopMenuItemRecursively(children, keys3, ret) {
  if (!children || ret.find) {
    return;
  }
  children.forEach(function(c) {
    if (ret.find) {
      return;
    }
    if (c.data && c.data.slot && c.data.slot !== "default") {
      return;
    }
    if (c && c.componentOptions) {
      var options2 = c.componentOptions.Ctor.options;
      if (!options2 || !(options2.isSubMenu || options2.isMenuItem || options2.isMenuItemGroup)) {
        return;
      }
      if (keys3.indexOf(c.key) !== -1) {
        ret.find = true;
      } else if (c.componentOptions.children) {
        loopMenuItemRecursively(c.componentOptions.children, keys3, ret);
      }
    }
  });
}
var menuAllProps = {
  props: [
    "defaultSelectedKeys",
    "selectedKeys",
    "defaultOpenKeys",
    "openKeys",
    "mode",
    "getPopupContainer",
    "openTransitionName",
    "openAnimation",
    "subMenuOpenDelay",
    "subMenuCloseDelay",
    "forceSubMenuRender",
    "triggerSubMenuAction",
    "level",
    "selectable",
    "multiple",
    "visible",
    "focusable",
    "defaultActiveFirst",
    "prefixCls",
    "inlineIndent",
    "parentMenu",
    "title",
    "rootPrefixCls",
    "eventKey",
    "active",
    "popupAlign",
    "popupOffset",
    "isOpen",
    "renderMenuItem",
    "manualRef",
    "subMenuKey",
    "disabled",
    "index",
    "isSelected",
    "store",
    "activeKey",
    "builtinPlacements",
    "overflowedIndicator",
    "attribute",
    "value",
    "popupClassName",
    "inlineCollapsed",
    "menu",
    "theme",
    "itemIcon",
    "expandIcon"
  ],
  on: ["select", "deselect", "destroy", "openChange", "itemHover", "titleMouseenter", "titleMouseleave", "titleClick"]
};
var getWidth = function getWidth2(elem) {
  var width = elem && typeof elem.getBoundingClientRect === "function" && elem.getBoundingClientRect().width;
  if (width) {
    width = +width.toFixed(6);
  }
  return width || 0;
};
var setStyle$1 = function setStyle(elem, styleProperty, value27) {
  if (elem && _default$7(elem.style) === "object") {
    elem.style[styleProperty] = value27;
  }
};
var isMobileDevice = function isMobileDevice2() {
  return isMobile$3.any;
};
function contains(root2, n) {
  var node = n;
  while (node) {
    if (node === root2) {
      return true;
    }
    node = node.parentNode;
  }
  return false;
}
var availablePrefixs = ["moz", "ms", "webkit"];
function requestAnimationFramePolyfill() {
  var lastTime = 0;
  return function(callback) {
    var currTime = new Date().getTime();
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
    var id2 = window.setTimeout(function() {
      callback(currTime + timeToCall);
    }, timeToCall);
    lastTime = currTime + timeToCall;
    return id2;
  };
}
function getRequestAnimationFrame() {
  if (typeof window === "undefined") {
    return function() {
    };
  }
  if (window.requestAnimationFrame) {
    return window.requestAnimationFrame.bind(window);
  }
  var prefix = availablePrefixs.filter(function(key2) {
    return key2 + "RequestAnimationFrame" in window;
  })[0];
  return prefix ? window[prefix + "RequestAnimationFrame"] : requestAnimationFramePolyfill();
}
function cancelRequestAnimationFrame(id2) {
  if (typeof window === "undefined") {
    return null;
  }
  if (window.cancelAnimationFrame) {
    return window.cancelAnimationFrame(id2);
  }
  var prefix = availablePrefixs.filter(function(key2) {
    return key2 + "CancelAnimationFrame" in window || key2 + "CancelRequestAnimationFrame" in window;
  })[0];
  return prefix ? (window[prefix + "CancelAnimationFrame"] || window[prefix + "CancelRequestAnimationFrame"]).call(this, id2) : clearTimeout(id2);
}
var raf = getRequestAnimationFrame();
var cancelAnimationTimeout = function cancelAnimationTimeout2(frame) {
  return cancelRequestAnimationFrame(frame.id);
};
var requestAnimationTimeout = function requestAnimationTimeout2(callback, delay) {
  var start = Date.now();
  function timeout() {
    if (Date.now() - start >= delay) {
      callback.call();
    } else {
      frame.id = raf(timeout);
    }
  }
  var frame = {
    id: raf(timeout)
  };
  return frame;
};
function ownKeys$1(object3, enumerableOnly) {
  var keys3 = Object.keys(object3);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object3);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object3, sym).enumerable;
      });
    }
    keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread2$1(target2) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$1(Object(source), true).forEach(function(key2) {
        _defineProperty$3(target2, key2, source[key2]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target2, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$1(Object(source)).forEach(function(key2) {
        Object.defineProperty(target2, key2, Object.getOwnPropertyDescriptor(source, key2));
      });
    }
  }
  return target2;
}
function _typeof$1(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$1 = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$1 = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$1(obj);
}
function _defineProperty$3(obj, key2, value27) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value: value27,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value27;
  }
  return obj;
}
var vendorPrefix;
var jsCssMap = {
  Webkit: "-webkit-",
  Moz: "-moz-",
  ms: "-ms-",
  O: "-o-"
};
function getVendorPrefix() {
  if (vendorPrefix !== void 0) {
    return vendorPrefix;
  }
  vendorPrefix = "";
  var style3 = document.createElement("p").style;
  var testProp = "Transform";
  for (var key2 in jsCssMap) {
    if (key2 + testProp in style3) {
      vendorPrefix = key2;
    }
  }
  return vendorPrefix;
}
function getTransitionName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "TransitionProperty") : "transitionProperty";
}
function getTransformName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "Transform") : "transform";
}
function setTransitionProperty(node, value27) {
  var name = getTransitionName();
  if (name) {
    node.style[name] = value27;
    if (name !== "transitionProperty") {
      node.style.transitionProperty = value27;
    }
  }
}
function setTransform$1(node, value27) {
  var name = getTransformName();
  if (name) {
    node.style[name] = value27;
    if (name !== "transform") {
      node.style.transform = value27;
    }
  }
}
function getTransitionProperty(node) {
  return node.style.transitionProperty || node.style[getTransitionName()];
}
function getTransformXY(node) {
  var style3 = window.getComputedStyle(node, null);
  var transform = style3.getPropertyValue("transform") || style3.getPropertyValue(getTransformName());
  if (transform && transform !== "none") {
    var matrix = transform.replace(/[^0-9\-.,]/g, "").split(",");
    return {
      x: parseFloat(matrix[12] || matrix[4], 0),
      y: parseFloat(matrix[13] || matrix[5], 0)
    };
  }
  return {
    x: 0,
    y: 0
  };
}
var matrix2d = /matrix\((.*)\)/;
var matrix3d = /matrix3d\((.*)\)/;
function setTransformXY(node, xy) {
  var style3 = window.getComputedStyle(node, null);
  var transform = style3.getPropertyValue("transform") || style3.getPropertyValue(getTransformName());
  if (transform && transform !== "none") {
    var arr;
    var match2d = transform.match(matrix2d);
    if (match2d) {
      match2d = match2d[1];
      arr = match2d.split(",").map(function(item) {
        return parseFloat(item, 10);
      });
      arr[4] = xy.x;
      arr[5] = xy.y;
      setTransform$1(node, "matrix(".concat(arr.join(","), ")"));
    } else {
      var match3d = transform.match(matrix3d)[1];
      arr = match3d.split(",").map(function(item) {
        return parseFloat(item, 10);
      });
      arr[12] = xy.x;
      arr[13] = xy.y;
      setTransform$1(node, "matrix3d(".concat(arr.join(","), ")"));
    }
  } else {
    setTransform$1(node, "translateX(".concat(xy.x, "px) translateY(").concat(xy.y, "px) translateZ(0)"));
  }
}
var RE_NUM$1 = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
var getComputedStyleX$1;
function forceRelayout(elem) {
  var originalStyle = elem.style.display;
  elem.style.display = "none";
  elem.offsetHeight;
  elem.style.display = originalStyle;
}
function css$1(el, name, v) {
  var value27 = v;
  if (_typeof$1(name) === "object") {
    for (var i in name) {
      if (name.hasOwnProperty(i)) {
        css$1(el, i, name[i]);
      }
    }
    return void 0;
  }
  if (typeof value27 !== "undefined") {
    if (typeof value27 === "number") {
      value27 = "".concat(value27, "px");
    }
    el.style[name] = value27;
    return void 0;
  }
  return getComputedStyleX$1(el, name);
}
function getClientPosition$2(elem) {
  var box;
  var x;
  var y;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  box = elem.getBoundingClientRect();
  x = Math.floor(box.left);
  y = Math.floor(box.top);
  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x,
    top: y
  };
}
function getScroll$3(w, top) {
  var ret = w["page".concat(top ? "Y" : "X", "Offset")];
  var method3 = "scroll".concat(top ? "Top" : "Left");
  if (typeof ret !== "number") {
    var d = w.document;
    ret = d.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d.body[method3];
    }
  }
  return ret;
}
function getScrollLeft$1(w) {
  return getScroll$3(w);
}
function getScrollTop$1(w) {
  return getScroll$3(w, true);
}
function getOffset$1(el) {
  var pos = getClientPosition$2(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft$1(w);
  pos.top += getScrollTop$1(w);
  return pos;
}
function isWindow$2(obj) {
  return obj !== null && obj !== void 0 && obj == obj.window;
}
function getDocument(node) {
  if (isWindow$2(node)) {
    return node.document;
  }
  if (node.nodeType === 9) {
    return node;
  }
  return node.ownerDocument;
}
function _getComputedStyle$1(elem, name, cs) {
  var computedStyle2 = cs;
  var val = "";
  var d = getDocument(elem);
  computedStyle2 = computedStyle2 || d.defaultView.getComputedStyle(elem, null);
  if (computedStyle2) {
    val = computedStyle2.getPropertyValue(name) || computedStyle2[name];
  }
  return val;
}
var _RE_NUM_NO_PX$1 = new RegExp("^(".concat(RE_NUM$1, ")(?!px)[a-z%]+$"), "i");
var RE_POS$1 = /^(top|right|bottom|left)$/;
var CURRENT_STYLE$1 = "currentStyle";
var RUNTIME_STYLE$1 = "runtimeStyle";
var LEFT$1 = "left";
var PX$1 = "px";
function _getComputedStyleIE$1(elem, name) {
  var ret = elem[CURRENT_STYLE$1] && elem[CURRENT_STYLE$1][name];
  if (_RE_NUM_NO_PX$1.test(ret) && !RE_POS$1.test(name)) {
    var style3 = elem.style;
    var left = style3[LEFT$1];
    var rsLeft = elem[RUNTIME_STYLE$1][LEFT$1];
    elem[RUNTIME_STYLE$1][LEFT$1] = elem[CURRENT_STYLE$1][LEFT$1];
    style3[LEFT$1] = name === "fontSize" ? "1em" : ret || 0;
    ret = style3.pixelLeft + PX$1;
    style3[LEFT$1] = left;
    elem[RUNTIME_STYLE$1][LEFT$1] = rsLeft;
  }
  return ret === "" ? "auto" : ret;
}
if (typeof window !== "undefined") {
  getComputedStyleX$1 = window.getComputedStyle ? _getComputedStyle$1 : _getComputedStyleIE$1;
}
function getOffsetDirection(dir, option) {
  if (dir === "left") {
    return option.useCssRight ? "right" : dir;
  }
  return option.useCssBottom ? "bottom" : dir;
}
function oppositeOffsetDirection(dir) {
  if (dir === "left") {
    return "right";
  } else if (dir === "right") {
    return "left";
  } else if (dir === "top") {
    return "bottom";
  } else if (dir === "bottom") {
    return "top";
  }
}
function setLeftTop(elem, offset4, option) {
  if (css$1(elem, "position") === "static") {
    elem.style.position = "relative";
  }
  var presetH = -999;
  var presetV = -999;
  var horizontalProperty = getOffsetDirection("left", option);
  var verticalProperty = getOffsetDirection("top", option);
  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);
  if (horizontalProperty !== "left") {
    presetH = 999;
  }
  if (verticalProperty !== "top") {
    presetV = 999;
  }
  var originalTransition = "";
  var originalOffset = getOffset$1(elem);
  if ("left" in offset4 || "top" in offset4) {
    originalTransition = getTransitionProperty(elem) || "";
    setTransitionProperty(elem, "none");
  }
  if ("left" in offset4) {
    elem.style[oppositeHorizontalProperty] = "";
    elem.style[horizontalProperty] = "".concat(presetH, "px");
  }
  if ("top" in offset4) {
    elem.style[oppositeVerticalProperty] = "";
    elem.style[verticalProperty] = "".concat(presetV, "px");
  }
  forceRelayout(elem);
  var old = getOffset$1(elem);
  var originalStyle = {};
  for (var key2 in offset4) {
    if (offset4.hasOwnProperty(key2)) {
      var dir = getOffsetDirection(key2, option);
      var preset = key2 === "left" ? presetH : presetV;
      var off = originalOffset[key2] - old[key2];
      if (dir === key2) {
        originalStyle[dir] = preset + off;
      } else {
        originalStyle[dir] = preset - off;
      }
    }
  }
  css$1(elem, originalStyle);
  forceRelayout(elem);
  if ("left" in offset4 || "top" in offset4) {
    setTransitionProperty(elem, originalTransition);
  }
  var ret = {};
  for (var _key in offset4) {
    if (offset4.hasOwnProperty(_key)) {
      var _dir = getOffsetDirection(_key, option);
      var _off = offset4[_key] - originalOffset[_key];
      if (_key === _dir) {
        ret[_dir] = originalStyle[_dir] + _off;
      } else {
        ret[_dir] = originalStyle[_dir] - _off;
      }
    }
  }
  css$1(elem, ret);
}
function setTransform$1$1(elem, offset4) {
  var originalOffset = getOffset$1(elem);
  var originalXY = getTransformXY(elem);
  var resultXY = {
    x: originalXY.x,
    y: originalXY.y
  };
  if ("left" in offset4) {
    resultXY.x = originalXY.x + offset4.left - originalOffset.left;
  }
  if ("top" in offset4) {
    resultXY.y = originalXY.y + offset4.top - originalOffset.top;
  }
  setTransformXY(elem, resultXY);
}
function setOffset$1(elem, offset4, option) {
  if (option.ignoreShake) {
    var oriOffset = getOffset$1(elem);
    var oLeft = oriOffset.left.toFixed(0);
    var oTop = oriOffset.top.toFixed(0);
    var tLeft = offset4.left.toFixed(0);
    var tTop = offset4.top.toFixed(0);
    if (oLeft === tLeft && oTop === tTop) {
      return;
    }
  }
  if (option.useCssRight || option.useCssBottom) {
    setLeftTop(elem, offset4, option);
  } else if (option.useCssTransform && getTransformName() in document.body.style) {
    setTransform$1$1(elem, offset4);
  } else {
    setLeftTop(elem, offset4, option);
  }
}
function each$1(arr, fn) {
  for (var i = 0; i < arr.length; i++) {
    fn(arr[i]);
  }
}
function isBorderBoxFn$1(elem) {
  return getComputedStyleX$1(elem, "boxSizing") === "border-box";
}
var BOX_MODELS$1 = ["margin", "border", "padding"];
var CONTENT_INDEX$1 = -1;
var PADDING_INDEX$1 = 2;
var BORDER_INDEX$1 = 1;
var MARGIN_INDEX$1 = 0;
function swap$1(elem, options2, callback) {
  var old = {};
  var style3 = elem.style;
  var name;
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      old[name] = style3[name];
      style3[name] = options2[name];
    }
  }
  callback.call(elem);
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      style3[name] = old[name];
    }
  }
}
function getPBMWidth$1(elem, props2, which) {
  var value27 = 0;
  var prop;
  var j;
  var i;
  for (j = 0; j < props2.length; j++) {
    prop = props2[j];
    if (prop) {
      for (i = 0; i < which.length; i++) {
        var cssProp = void 0;
        if (prop === "border") {
          cssProp = "".concat(prop).concat(which[i], "Width");
        } else {
          cssProp = prop + which[i];
        }
        value27 += parseFloat(getComputedStyleX$1(elem, cssProp)) || 0;
      }
    }
  }
  return value27;
}
var domUtils$1 = {
  getParent: function getParent(element) {
    var parent2 = element;
    do {
      if (parent2.nodeType === 11 && parent2.host) {
        parent2 = parent2.host;
      } else {
        parent2 = parent2.parentNode;
      }
    } while (parent2 && parent2.nodeType !== 1 && parent2.nodeType !== 9);
    return parent2;
  }
};
each$1(["Width", "Height"], function(name) {
  domUtils$1["doc".concat(name)] = function(refWin) {
    var d = refWin.document;
    return Math.max(
      d.documentElement["scroll".concat(name)],
      d.body["scroll".concat(name)],
      domUtils$1["viewport".concat(name)](d)
    );
  };
  domUtils$1["viewport".concat(name)] = function(win) {
    var prop = "client".concat(name);
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop];
    return doc.compatMode === "CSS1Compat" && documentElementProp || body && body[prop] || documentElementProp;
  };
});
function getWH$1(elem, name, ex) {
  var extra = ex;
  if (isWindow$2(elem)) {
    return name === "width" ? domUtils$1.viewportWidth(elem) : domUtils$1.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === "width" ? domUtils$1.docWidth(elem) : domUtils$1.docHeight(elem);
  }
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  var borderBoxValue = name === "width" ? Math.floor(elem.getBoundingClientRect().width) : Math.floor(elem.getBoundingClientRect().height);
  var isBorderBox = isBorderBoxFn$1(elem);
  var cssBoxValue = 0;
  if (borderBoxValue === null || borderBoxValue === void 0 || borderBoxValue <= 0) {
    borderBoxValue = void 0;
    cssBoxValue = getComputedStyleX$1(elem, name);
    if (cssBoxValue === null || cssBoxValue === void 0 || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    }
    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }
  if (extra === void 0) {
    extra = isBorderBox ? BORDER_INDEX$1 : CONTENT_INDEX$1;
  }
  var borderBoxValueOrIsBorderBox = borderBoxValue !== void 0 || isBorderBox;
  var val = borderBoxValue || cssBoxValue;
  if (extra === CONTENT_INDEX$1) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth$1(elem, ["border", "padding"], which);
    }
    return cssBoxValue;
  } else if (borderBoxValueOrIsBorderBox) {
    if (extra === BORDER_INDEX$1) {
      return val;
    }
    return val + (extra === PADDING_INDEX$1 ? -getPBMWidth$1(elem, ["border"], which) : getPBMWidth$1(elem, ["margin"], which));
  }
  return cssBoxValue + getPBMWidth$1(elem, BOX_MODELS$1.slice(extra), which);
}
var cssShow$1 = {
  position: "absolute",
  visibility: "hidden",
  display: "block"
};
function getWHIgnoreDisplay$1() {
  for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
    args[_key2] = arguments[_key2];
  }
  var val;
  var elem = args[0];
  if (elem.offsetWidth !== 0) {
    val = getWH$1.apply(void 0, args);
  } else {
    swap$1(elem, cssShow$1, function() {
      val = getWH$1.apply(void 0, args);
    });
  }
  return val;
}
each$1(["width", "height"], function(name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);
  domUtils$1["outer".concat(first)] = function(el, includeMargin) {
    return el && getWHIgnoreDisplay$1(el, name, includeMargin ? MARGIN_INDEX$1 : BORDER_INDEX$1);
  };
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  domUtils$1[name] = function(elem, v) {
    var val = v;
    if (val !== void 0) {
      if (elem) {
        var isBorderBox = isBorderBoxFn$1(elem);
        if (isBorderBox) {
          val += getPBMWidth$1(elem, ["padding", "border"], which);
        }
        return css$1(elem, name, val);
      }
      return void 0;
    }
    return elem && getWHIgnoreDisplay$1(elem, name, CONTENT_INDEX$1);
  };
});
function mix(to2, from3) {
  for (var i in from3) {
    if (from3.hasOwnProperty(i)) {
      to2[i] = from3[i];
    }
  }
  return to2;
}
var utils = {
  getWindow: function getWindow(node) {
    if (node && node.document && node.setTimeout) {
      return node;
    }
    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },
  getDocument,
  offset: function offset(el, value27, option) {
    if (typeof value27 !== "undefined") {
      setOffset$1(el, value27, option || {});
    } else {
      return getOffset$1(el);
    }
  },
  isWindow: isWindow$2,
  each: each$1,
  css: css$1,
  clone: function clone(obj) {
    var i;
    var ret = {};
    for (i in obj) {
      if (obj.hasOwnProperty(i)) {
        ret[i] = obj[i];
      }
    }
    var overflow3 = obj.overflow;
    if (overflow3) {
      for (i in obj) {
        if (obj.hasOwnProperty(i)) {
          ret.overflow[i] = obj.overflow[i];
        }
      }
    }
    return ret;
  },
  mix,
  getWindowScrollLeft: function getWindowScrollLeft(w) {
    return getScrollLeft$1(w);
  },
  getWindowScrollTop: function getWindowScrollTop(w) {
    return getScrollTop$1(w);
  },
  merge: function merge() {
    var ret = {};
    for (var i = 0; i < arguments.length; i++) {
      utils.mix(ret, i < 0 || arguments.length <= i ? void 0 : arguments[i]);
    }
    return ret;
  },
  viewportWidth: 0,
  viewportHeight: 0
};
mix(utils, domUtils$1);
var getParent2 = utils.getParent;
function getOffsetParent(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return null;
  }
  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent2;
  var positionStyle = utils.css(element, "position");
  var skipStatic = positionStyle === "fixed" || positionStyle === "absolute";
  if (!skipStatic) {
    return element.nodeName.toLowerCase() === "html" ? null : getParent2(element);
  }
  for (parent2 = getParent2(element); parent2 && parent2 !== body && parent2.nodeType !== 9; parent2 = getParent2(parent2)) {
    positionStyle = utils.css(parent2, "position");
    if (positionStyle !== "static") {
      return parent2;
    }
  }
  return null;
}
var getParent$1 = utils.getParent;
function isAncestorFixed(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return false;
  }
  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent2 = null;
  for (parent2 = getParent$1(element); parent2 && parent2 !== body && parent2 !== doc; parent2 = getParent$1(parent2)) {
    var positionStyle = utils.css(parent2, "position");
    if (positionStyle === "fixed") {
      return true;
    }
  }
  return false;
}
function getVisibleRectForElement(element, alwaysByViewport) {
  var visibleRect = {
    left: 0,
    right: Infinity,
    top: 0,
    bottom: Infinity
  };
  var el = getOffsetParent(element);
  var doc = utils.getDocument(element);
  var win = doc.defaultView || doc.parentWindow;
  var body = doc.body;
  var documentElement = doc.documentElement;
  while (el) {
    if ((navigator.userAgent.indexOf("MSIE") === -1 || el.clientWidth !== 0) && el !== body && el !== documentElement && utils.css(el, "overflow") !== "visible") {
      var pos = utils.offset(el);
      pos.left += el.clientLeft;
      pos.top += el.clientTop;
      visibleRect.top = Math.max(visibleRect.top, pos.top);
      visibleRect.right = Math.min(
        visibleRect.right,
        pos.left + el.clientWidth
      );
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.left);
    } else if (el === body || el === documentElement) {
      break;
    }
    el = getOffsetParent(el);
  }
  var originalPosition = null;
  if (!utils.isWindow(element) && element.nodeType !== 9) {
    originalPosition = element.style.position;
    var position = utils.css(element, "position");
    if (position === "absolute") {
      element.style.position = "fixed";
    }
  }
  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);
  var documentWidth = documentElement.scrollWidth;
  var documentHeight = documentElement.scrollHeight;
  var bodyStyle = window.getComputedStyle(body);
  if (bodyStyle.overflowX === "hidden") {
    documentWidth = win.innerWidth;
  }
  if (bodyStyle.overflowY === "hidden") {
    documentHeight = win.innerHeight;
  }
  if (element.style) {
    element.style.position = originalPosition;
  }
  if (alwaysByViewport || isAncestorFixed(element)) {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY);
    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);
    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);
  } else {
    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);
    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);
    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);
    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);
  }
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
}
function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow3) {
  var pos = utils.clone(elFuturePos);
  var size = {
    width: elRegion.width,
    height: elRegion.height
  };
  if (overflow3.adjustX && pos.left < visibleRect.left) {
    pos.left = visibleRect.left;
  }
  if (overflow3.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
    size.width -= pos.left + size.width - visibleRect.right;
  }
  if (overflow3.adjustX && pos.left + size.width > visibleRect.right) {
    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
  }
  if (overflow3.adjustY && pos.top < visibleRect.top) {
    pos.top = visibleRect.top;
  }
  if (overflow3.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
    size.height -= pos.top + size.height - visibleRect.bottom;
  }
  if (overflow3.adjustY && pos.top + size.height > visibleRect.bottom) {
    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
  }
  return utils.mix(pos, size);
}
function getRegion(node) {
  var offset4;
  var w;
  var h;
  if (!utils.isWindow(node) && node.nodeType !== 9) {
    offset4 = utils.offset(node);
    w = utils.outerWidth(node);
    h = utils.outerHeight(node);
  } else {
    var win = utils.getWindow(node);
    offset4 = {
      left: utils.getWindowScrollLeft(win),
      top: utils.getWindowScrollTop(win)
    };
    w = utils.viewportWidth(win);
    h = utils.viewportHeight(win);
  }
  offset4.width = w;
  offset4.height = h;
  return offset4;
}
function getAlignOffset(region, align) {
  var V = align.charAt(0);
  var H = align.charAt(1);
  var w = region.width;
  var h = region.height;
  var x = region.left;
  var y = region.top;
  if (V === "c") {
    y += h / 2;
  } else if (V === "b") {
    y += h;
  }
  if (H === "c") {
    x += w / 2;
  } else if (H === "r") {
    x += w;
  }
  return {
    left: x,
    top: y
  };
}
function getElFuturePos(elRegion, refNodeRegion, points, offset4, targetOffset2) {
  var p1 = getAlignOffset(refNodeRegion, points[1]);
  var p2 = getAlignOffset(elRegion, points[0]);
  var diff2 = [p2.left - p1.left, p2.top - p1.top];
  return {
    left: Math.round(elRegion.left - diff2[0] + offset4[0] - targetOffset2[0]),
    top: Math.round(elRegion.top - diff2[1] + offset4[1] - targetOffset2[1])
  };
}
function isFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
}
function isFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
}
function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
}
function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
}
function flip(points, reg, map2) {
  var ret = [];
  utils.each(points, function(p) {
    ret.push(p.replace(reg, function(m) {
      return map2[m];
    }));
  });
  return ret;
}
function flipOffset(offset4, index2) {
  offset4[index2] = -offset4[index2];
  return offset4;
}
function convertOffset(str, offsetLen) {
  var n;
  if (/%$/.test(str)) {
    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
  } else {
    n = parseInt(str, 10);
  }
  return n || 0;
}
function normalizeOffset(offset4, el) {
  offset4[0] = convertOffset(offset4[0], el.width);
  offset4[1] = convertOffset(offset4[1], el.height);
}
function doAlign(el, tgtRegion, align, isTgtRegionVisible) {
  var points = align.points;
  var offset4 = align.offset || [0, 0];
  var targetOffset2 = align.targetOffset || [0, 0];
  var overflow3 = align.overflow;
  var source = align.source || el;
  offset4 = [].concat(offset4);
  targetOffset2 = [].concat(targetOffset2);
  overflow3 = overflow3 || {};
  var newOverflowCfg = {};
  var fail = 0;
  var alwaysByViewport = !!(overflow3 && overflow3.alwaysByViewport);
  var visibleRect = getVisibleRectForElement(source, alwaysByViewport);
  var elRegion = getRegion(source);
  normalizeOffset(offset4, elRegion);
  normalizeOffset(targetOffset2, tgtRegion);
  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset4, targetOffset2);
  var newElRegion = utils.merge(elRegion, elFuturePos);
  if (visibleRect && (overflow3.adjustX || overflow3.adjustY) && isTgtRegionVisible) {
    if (overflow3.adjustX) {
      if (isFailX(elFuturePos, elRegion, visibleRect)) {
        var newPoints = flip(points, /[lr]/gi, {
          l: "r",
          r: "l"
        });
        var newOffset = flipOffset(offset4, 0);
        var newTargetOffset = flipOffset(targetOffset2, 0);
        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);
        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = newPoints;
          offset4 = newOffset;
          targetOffset2 = newTargetOffset;
        }
      }
    }
    if (overflow3.adjustY) {
      if (isFailY(elFuturePos, elRegion, visibleRect)) {
        var _newPoints = flip(points, /[tb]/gi, {
          t: "b",
          b: "t"
        });
        var _newOffset = flipOffset(offset4, 1);
        var _newTargetOffset = flipOffset(targetOffset2, 1);
        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);
        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = _newPoints;
          offset4 = _newOffset;
          targetOffset2 = _newTargetOffset;
        }
      }
    }
    if (fail) {
      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset4, targetOffset2);
      utils.mix(newElRegion, elFuturePos);
    }
    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);
    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);
    if (isStillFailX || isStillFailY) {
      var _newPoints2 = points;
      if (isStillFailX) {
        _newPoints2 = flip(points, /[lr]/gi, {
          l: "r",
          r: "l"
        });
      }
      if (isStillFailY) {
        _newPoints2 = flip(points, /[tb]/gi, {
          t: "b",
          b: "t"
        });
      }
      points = _newPoints2;
      offset4 = align.offset || [0, 0];
      targetOffset2 = align.targetOffset || [0, 0];
    }
    newOverflowCfg.adjustX = overflow3.adjustX && isStillFailX;
    newOverflowCfg.adjustY = overflow3.adjustY && isStillFailY;
    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);
    }
  }
  if (newElRegion.width !== elRegion.width) {
    utils.css(source, "width", utils.width(source) + newElRegion.width - elRegion.width);
  }
  if (newElRegion.height !== elRegion.height) {
    utils.css(source, "height", utils.height(source) + newElRegion.height - elRegion.height);
  }
  utils.offset(source, {
    left: newElRegion.left,
    top: newElRegion.top
  }, {
    useCssRight: align.useCssRight,
    useCssBottom: align.useCssBottom,
    useCssTransform: align.useCssTransform,
    ignoreShake: align.ignoreShake
  });
  return {
    points,
    offset: offset4,
    targetOffset: targetOffset2,
    overflow: newOverflowCfg
  };
}
function isOutOfVisibleRect(target2, alwaysByViewport) {
  var visibleRect = getVisibleRectForElement(target2, alwaysByViewport);
  var targetRegion = getRegion(target2);
  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;
}
function alignElement(el, refNode, align) {
  var target2 = align.target || refNode;
  var refNodeRegion = getRegion(target2);
  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target2, align.overflow && align.overflow.alwaysByViewport);
  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);
}
alignElement.__getOffsetParent = getOffsetParent;
alignElement.__getVisibleRectForElement = getVisibleRectForElement;
function alignPoint(el, tgtPoint, align) {
  var pageX;
  var pageY;
  var doc = utils.getDocument(el);
  var win = doc.defaultView || doc.parentWindow;
  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);
  if ("pageX" in tgtPoint) {
    pageX = tgtPoint.pageX;
  } else {
    pageX = scrollX + tgtPoint.clientX;
  }
  if ("pageY" in tgtPoint) {
    pageY = tgtPoint.pageY;
  } else {
    pageY = scrollY + tgtPoint.clientY;
  }
  var tgtRegion = {
    left: pageX,
    top: pageY,
    width: 0,
    height: 0
  };
  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;
  var points = [align.points[0], "cc"];
  return doAlign(el, tgtRegion, _objectSpread2$1(_objectSpread2$1({}, align), {}, {
    points
  }), pointInView);
}
function buffer(fn, ms) {
  var timer = void 0;
  function clear3() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function bufferFn() {
    clear3();
    timer = setTimeout(fn, ms);
  }
  bufferFn.clear = clear3;
  return bufferFn;
}
function isSamePoint(prev3, next3) {
  if (prev3 === next3)
    return true;
  if (!prev3 || !next3)
    return false;
  if ("pageX" in next3 && "pageY" in next3) {
    return prev3.pageX === next3.pageX && prev3.pageY === next3.pageY;
  }
  if ("clientX" in next3 && "clientY" in next3) {
    return prev3.clientX === next3.clientX && prev3.clientY === next3.clientY;
  }
  return false;
}
function isWindow$1(obj) {
  return obj && (typeof obj === "undefined" ? "undefined" : _default$7(obj)) === "object" && obj.window === obj;
}
function isSimilarValue(val1, val2) {
  var int1 = Math.floor(val1);
  var int2 = Math.floor(val2);
  return Math.abs(int1 - int2) <= 1;
}
function restoreFocus(activeElement, container) {
  if (activeElement !== document.activeElement && contains(container, activeElement)) {
    activeElement.focus();
  }
}
function cloneVNode(vnode, deep) {
  var componentOptions = vnode.componentOptions;
  var data109 = vnode.data;
  var listeners = {};
  if (componentOptions && componentOptions.listeners) {
    listeners = _default$6({}, componentOptions.listeners);
  }
  var on = {};
  if (data109 && data109.on) {
    on = _default$6({}, data109.on);
  }
  var cloned = new vnode.constructor(vnode.tag, data109 ? _default$6({}, data109, { on }) : data109, vnode.children, vnode.text, vnode.elm, vnode.context, componentOptions ? _default$6({}, componentOptions, { listeners }) : componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;
  if (deep) {
    if (vnode.children) {
      cloned.children = cloneVNodes(vnode.children, true);
    }
    if (componentOptions && componentOptions.children) {
      componentOptions.children = cloneVNodes(componentOptions.children, true);
    }
  }
  return cloned;
}
function cloneVNodes(vnodes, deep) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i], deep);
  }
  return res;
}
function cloneElement(n) {
  var nodeProps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var deep = arguments[2];
  var ele = n;
  if (Array.isArray(n)) {
    ele = filterEmpty(n)[0];
  }
  if (!ele) {
    return null;
  }
  var node = cloneVNode(ele, deep);
  var _nodeProps$props = nodeProps.props, props2 = _nodeProps$props === void 0 ? {} : _nodeProps$props, key2 = nodeProps.key, _nodeProps$on = nodeProps.on, on = _nodeProps$on === void 0 ? {} : _nodeProps$on, _nodeProps$nativeOn = nodeProps.nativeOn, nativeOn = _nodeProps$nativeOn === void 0 ? {} : _nodeProps$nativeOn, children = nodeProps.children, _nodeProps$directives = nodeProps.directives, directives = _nodeProps$directives === void 0 ? [] : _nodeProps$directives;
  var data109 = node.data || {};
  var cls = {};
  var style3 = {};
  var _nodeProps$attrs = nodeProps.attrs, attrs = _nodeProps$attrs === void 0 ? {} : _nodeProps$attrs, ref = nodeProps.ref, _nodeProps$domProps = nodeProps.domProps, domProps = _nodeProps$domProps === void 0 ? {} : _nodeProps$domProps, _nodeProps$style = nodeProps.style, tempStyle = _nodeProps$style === void 0 ? {} : _nodeProps$style, _nodeProps$class = nodeProps["class"], tempCls = _nodeProps$class === void 0 ? {} : _nodeProps$class, _nodeProps$scopedSlot = nodeProps.scopedSlots, scopedSlots = _nodeProps$scopedSlot === void 0 ? {} : _nodeProps$scopedSlot;
  if (typeof data109.style === "string") {
    style3 = parseStyleText(data109.style);
  } else {
    style3 = _default$6({}, data109.style, style3);
  }
  if (typeof tempStyle === "string") {
    style3 = _default$6({}, style3, parseStyleText(style3));
  } else {
    style3 = _default$6({}, style3, tempStyle);
  }
  if (typeof data109["class"] === "string" && data109["class"].trim() !== "") {
    data109["class"].split(" ").forEach(function(c) {
      cls[c.trim()] = true;
    });
  } else if (Array.isArray(data109["class"])) {
    classNames(data109["class"]).split(" ").forEach(function(c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = _default$6({}, data109["class"], cls);
  }
  if (typeof tempCls === "string" && tempCls.trim() !== "") {
    tempCls.split(" ").forEach(function(c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = _default$6({}, cls, tempCls);
  }
  node.data = _default$6({}, data109, {
    style: style3,
    attrs: _default$6({}, data109.attrs, attrs),
    "class": cls,
    domProps: _default$6({}, data109.domProps, domProps),
    scopedSlots: _default$6({}, data109.scopedSlots, scopedSlots),
    directives: [].concat(_default$5(data109.directives || []), _default$5(directives))
  });
  if (node.componentOptions) {
    node.componentOptions.propsData = node.componentOptions.propsData || {};
    node.componentOptions.listeners = node.componentOptions.listeners || {};
    node.componentOptions.propsData = _default$6({}, node.componentOptions.propsData, props2);
    node.componentOptions.listeners = _default$6({}, node.componentOptions.listeners, on);
    if (children) {
      node.componentOptions.children = children;
    }
  } else {
    if (children) {
      node.children = children;
    }
    node.data.on = _default$6({}, node.data.on || {}, on);
  }
  node.data.on = _default$6({}, node.data.on || {}, nativeOn);
  if (key2 !== void 0) {
    node.key = key2;
    node.data.key = key2;
  }
  if (typeof ref === "string") {
    node.data.ref = ref;
  }
  return node;
}
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
function eq$5(value27, other) {
  return value27 === other || value27 !== value27 && other !== other;
}
var eq_1 = eq$5;
var eq$4 = eq_1;
function assocIndexOf$4(array3, key2) {
  var length = array3.length;
  while (length--) {
    if (eq$4(array3[length][0], key2)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key2) {
  var data109 = this.__data__, index2 = assocIndexOf$3(data109, key2);
  if (index2 < 0) {
    return false;
  }
  var lastIndex = data109.length - 1;
  if (index2 == lastIndex) {
    data109.pop();
  } else {
    splice.call(data109, index2, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key2) {
  var data109 = this.__data__, index2 = assocIndexOf$2(data109, key2);
  return index2 < 0 ? void 0 : data109[index2][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key2) {
  return assocIndexOf$1(this.__data__, key2) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key2, value27) {
  var data109 = this.__data__, index2 = assocIndexOf(data109, key2);
  if (index2 < 0) {
    ++this.size;
    data109.push([key2, value27]);
  } else {
    data109[index2][1] = value27;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear, listCacheDelete = _listCacheDelete, listCacheGet = _listCacheGet, listCacheHas = _listCacheHas, listCacheSet = _listCacheSet;
function ListCache$4(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
ListCache$4.prototype.clear = listCacheClear;
ListCache$4.prototype["delete"] = listCacheDelete;
ListCache$4.prototype.get = listCacheGet;
ListCache$4.prototype.has = listCacheHas;
ListCache$4.prototype.set = listCacheSet;
var _ListCache = ListCache$4;
var ListCache$3 = _ListCache;
function stackClear$1() {
  this.__data__ = new ListCache$3();
  this.size = 0;
}
var _stackClear = stackClear$1;
function stackDelete$1(key2) {
  var data109 = this.__data__, result = data109["delete"](key2);
  this.size = data109.size;
  return result;
}
var _stackDelete = stackDelete$1;
function stackGet$1(key2) {
  return this.__data__.get(key2);
}
var _stackGet = stackGet$1;
function stackHas$1(key2) {
  return this.__data__.has(key2);
}
var _stackHas = stackHas$1;
function isObject$e(value27) {
  var type3 = typeof value27;
  return value27 != null && (type3 == "object" || type3 == "function");
}
var isObject_1 = isObject$e;
var baseGetTag$5 = _baseGetTag, isObject$d = isObject_1;
var asyncTag = "[object AsyncFunction]", funcTag$2 = "[object Function]", genTag$1 = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
function isFunction$4(value27) {
  if (!isObject$d(value27)) {
    return false;
  }
  var tag = baseGetTag$5(value27);
  return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction$4;
var root$7 = _root;
var coreJsData$1 = root$7["__core-js_shared__"];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = function() {
  var uid2 = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid2 ? "Symbol(src)_1." + uid2 : "";
}();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource$2(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var _toSource = toSource$2;
var isFunction$3 = isFunction_1, isMasked = _isMasked, isObject$c = isObject_1, toSource$1 = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype, objectProto$d = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$b = objectProto$d.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString.call(hasOwnProperty$b).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative$1(value27) {
  if (!isObject$c(value27) || isMasked(value27)) {
    return false;
  }
  var pattern2 = isFunction$3(value27) ? reIsNative : reIsHostCtor;
  return pattern2.test(toSource$1(value27));
}
var _baseIsNative = baseIsNative$1;
function getValue$2(object3, key2) {
  return object3 == null ? void 0 : object3[key2];
}
var _getValue = getValue$2;
var baseIsNative = _baseIsNative, getValue$1 = _getValue;
function getNative$7(object3, key2) {
  var value27 = getValue$1(object3, key2);
  return baseIsNative(value27) ? value27 : void 0;
}
var _getNative = getNative$7;
var getNative$6 = _getNative, root$6 = _root;
var Map$4 = getNative$6(root$6, "Map");
var _Map = Map$4;
var getNative$5 = _getNative;
var nativeCreate$4 = getNative$5(Object, "create");
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key2) {
  var result = this.has(key2) && delete this.__data__[key2];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
var objectProto$c = Object.prototype;
var hasOwnProperty$a = objectProto$c.hasOwnProperty;
function hashGet$1(key2) {
  var data109 = this.__data__;
  if (nativeCreate$2) {
    var result = data109[key2];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$a.call(data109, key2) ? data109[key2] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto$b = Object.prototype;
var hasOwnProperty$9 = objectProto$b.hasOwnProperty;
function hashHas$1(key2) {
  var data109 = this.__data__;
  return nativeCreate$1 ? data109[key2] !== void 0 : hasOwnProperty$9.call(data109, key2);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet$1(key2, value27) {
  var data109 = this.__data__;
  this.size += this.has(key2) ? 0 : 1;
  data109[key2] = nativeCreate && value27 === void 0 ? HASH_UNDEFINED$1 : value27;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear, hashDelete = _hashDelete, hashGet = _hashGet, hashHas = _hashHas, hashSet = _hashSet;
function Hash$1(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype["delete"] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
var Hash = _Hash, ListCache$2 = _ListCache, Map$3 = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map$3 || ListCache$2)(),
    "string": new Hash()
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value27) {
  var type3 = typeof value27;
  return type3 == "string" || type3 == "number" || type3 == "symbol" || type3 == "boolean" ? value27 !== "__proto__" : value27 === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map2, key2) {
  var data109 = map2.__data__;
  return isKeyable(key2) ? data109[typeof key2 == "string" ? "string" : "hash"] : data109.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key2) {
  var result = getMapData$3(this, key2)["delete"](key2);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key2) {
  return getMapData$2(this, key2).get(key2);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key2) {
  return getMapData$1(this, key2).has(key2);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key2, value27) {
  var data109 = getMapData(this, key2), size = data109.size;
  data109.set(key2, value27);
  this.size += data109.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear, mapCacheDelete = _mapCacheDelete, mapCacheGet = _mapCacheGet, mapCacheHas = _mapCacheHas, mapCacheSet = _mapCacheSet;
function MapCache$3(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
MapCache$3.prototype.clear = mapCacheClear;
MapCache$3.prototype["delete"] = mapCacheDelete;
MapCache$3.prototype.get = mapCacheGet;
MapCache$3.prototype.has = mapCacheHas;
MapCache$3.prototype.set = mapCacheSet;
var _MapCache = MapCache$3;
var ListCache$1 = _ListCache, Map$2 = _Map, MapCache$2 = _MapCache;
var LARGE_ARRAY_SIZE$1 = 200;
function stackSet$1(key2, value27) {
  var data109 = this.__data__;
  if (data109 instanceof ListCache$1) {
    var pairs = data109.__data__;
    if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE$1 - 1) {
      pairs.push([key2, value27]);
      this.size = ++data109.size;
      return this;
    }
    data109 = this.__data__ = new MapCache$2(pairs);
  }
  data109.set(key2, value27);
  this.size = data109.size;
  return this;
}
var _stackSet = stackSet$1;
var ListCache = _ListCache, stackClear = _stackClear, stackDelete = _stackDelete, stackGet = _stackGet, stackHas = _stackHas, stackSet = _stackSet;
function Stack$4(entries) {
  var data109 = this.__data__ = new ListCache(entries);
  this.size = data109.size;
}
Stack$4.prototype.clear = stackClear;
Stack$4.prototype["delete"] = stackDelete;
Stack$4.prototype.get = stackGet;
Stack$4.prototype.has = stackHas;
Stack$4.prototype.set = stackSet;
var _Stack = Stack$4;
function arrayEach$1(array3, iteratee) {
  var index2 = -1, length = array3 == null ? 0 : array3.length;
  while (++index2 < length) {
    if (iteratee(array3[index2], index2, array3) === false) {
      break;
    }
  }
  return array3;
}
var _arrayEach = arrayEach$1;
var getNative$4 = _getNative;
var defineProperty$2 = function() {
  try {
    var func = getNative$4(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var _defineProperty$2 = defineProperty$2;
var defineProperty$1 = _defineProperty$2;
function baseAssignValue$3(object3, key2, value27) {
  if (key2 == "__proto__" && defineProperty$1) {
    defineProperty$1(object3, key2, {
      "configurable": true,
      "enumerable": true,
      "value": value27,
      "writable": true
    });
  } else {
    object3[key2] = value27;
  }
}
var _baseAssignValue = baseAssignValue$3;
var baseAssignValue$2 = _baseAssignValue, eq$3 = eq_1;
var objectProto$a = Object.prototype;
var hasOwnProperty$8 = objectProto$a.hasOwnProperty;
function assignValue$3(object3, key2, value27) {
  var objValue = object3[key2];
  if (!(hasOwnProperty$8.call(object3, key2) && eq$3(objValue, value27)) || value27 === void 0 && !(key2 in object3)) {
    baseAssignValue$2(object3, key2, value27);
  }
}
var _assignValue = assignValue$3;
var assignValue$2 = _assignValue, baseAssignValue$1 = _baseAssignValue;
function copyObject$6(source, props2, object3, customizer) {
  var isNew = !object3;
  object3 || (object3 = {});
  var index2 = -1, length = props2.length;
  while (++index2 < length) {
    var key2 = props2[index2];
    var newValue = customizer ? customizer(object3[key2], source[key2], key2, object3, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key2];
    }
    if (isNew) {
      baseAssignValue$1(object3, key2, newValue);
    } else {
      assignValue$2(object3, key2, newValue);
    }
  }
  return object3;
}
var _copyObject = copyObject$6;
function baseTimes$1(n, iteratee) {
  var index2 = -1, result = Array(n);
  while (++index2 < n) {
    result[index2] = iteratee(index2);
  }
  return result;
}
var _baseTimes = baseTimes$1;
var baseGetTag$4 = _baseGetTag, isObjectLike$8 = isObjectLike_1;
var argsTag$3 = "[object Arguments]";
function baseIsArguments$1(value27) {
  return isObjectLike$8(value27) && baseGetTag$4(value27) == argsTag$3;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments, isObjectLike$7 = isObjectLike_1;
var objectProto$9 = Object.prototype;
var hasOwnProperty$7 = objectProto$9.hasOwnProperty;
var propertyIsEnumerable$1 = objectProto$9.propertyIsEnumerable;
var isArguments$4 = baseIsArguments(function() {
  return arguments;
}()) ? baseIsArguments : function(value27) {
  return isObjectLike$7(value27) && hasOwnProperty$7.call(value27, "callee") && !propertyIsEnumerable$1.call(value27, "callee");
};
var isArguments_1 = isArguments$4;
var isArray$d = Array.isArray;
var isArray_1 = isArray$d;
var isBuffer$4 = { exports: {} };
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
(function(module2, exports) {
  var root2 = _root, stubFalse2 = stubFalse_1;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root2.Buffer : void 0;
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
  var isBuffer2 = nativeIsBuffer || stubFalse2;
  module2.exports = isBuffer2;
})(isBuffer$4, isBuffer$4.exports);
var MAX_SAFE_INTEGER$3 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex$4(value27, length) {
  var type3 = typeof value27;
  length = length == null ? MAX_SAFE_INTEGER$3 : length;
  return !!length && (type3 == "number" || type3 != "symbol" && reIsUint.test(value27)) && (value27 > -1 && value27 % 1 == 0 && value27 < length);
}
var _isIndex = isIndex$4;
var MAX_SAFE_INTEGER$2 = 9007199254740991;
function isLength$3(value27) {
  return typeof value27 == "number" && value27 > -1 && value27 % 1 == 0 && value27 <= MAX_SAFE_INTEGER$2;
}
var isLength_1 = isLength$3;
var baseGetTag$3 = _baseGetTag, isLength$2 = isLength_1, isObjectLike$6 = isObjectLike_1;
var argsTag$2 = "[object Arguments]", arrayTag$2 = "[object Array]", boolTag$3 = "[object Boolean]", dateTag$3 = "[object Date]", errorTag$2 = "[object Error]", funcTag$1 = "[object Function]", mapTag$5 = "[object Map]", numberTag$3 = "[object Number]", objectTag$3 = "[object Object]", regexpTag$4 = "[object RegExp]", setTag$5 = "[object Set]", stringTag$3 = "[object String]", weakMapTag$2 = "[object WeakMap]";
var arrayBufferTag$3 = "[object ArrayBuffer]", dataViewTag$4 = "[object DataView]", float32Tag$2 = "[object Float32Array]", float64Tag$2 = "[object Float64Array]", int8Tag$2 = "[object Int8Array]", int16Tag$2 = "[object Int16Array]", int32Tag$2 = "[object Int32Array]", uint8Tag$2 = "[object Uint8Array]", uint8ClampedTag$2 = "[object Uint8ClampedArray]", uint16Tag$2 = "[object Uint16Array]", uint32Tag$2 = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] = typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] = typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] = typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] = typedArrayTags[uint32Tag$2] = true;
typedArrayTags[argsTag$2] = typedArrayTags[arrayTag$2] = typedArrayTags[arrayBufferTag$3] = typedArrayTags[boolTag$3] = typedArrayTags[dataViewTag$4] = typedArrayTags[dateTag$3] = typedArrayTags[errorTag$2] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$5] = typedArrayTags[numberTag$3] = typedArrayTags[objectTag$3] = typedArrayTags[regexpTag$4] = typedArrayTags[setTag$5] = typedArrayTags[stringTag$3] = typedArrayTags[weakMapTag$2] = false;
function baseIsTypedArray$1(value27) {
  return isObjectLike$6(value27) && isLength$2(value27.length) && !!typedArrayTags[baseGetTag$3(value27)];
}
var _baseIsTypedArray = baseIsTypedArray$1;
function baseUnary$4(func) {
  return function(value27) {
    return func(value27);
  };
}
var _baseUnary = baseUnary$4;
var _nodeUtil = { exports: {} };
(function(module2, exports) {
  var freeGlobal2 = _freeGlobal;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal2.process;
  var nodeUtil2 = function() {
    try {
      var types2 = freeModule && freeModule.require && freeModule.require("util").types;
      if (types2) {
        return types2;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e) {
    }
  }();
  module2.exports = nodeUtil2;
})(_nodeUtil, _nodeUtil.exports);
var baseIsTypedArray = _baseIsTypedArray, baseUnary$3 = _baseUnary, nodeUtil$3 = _nodeUtil.exports;
var nodeIsTypedArray = nodeUtil$3 && nodeUtil$3.isTypedArray;
var isTypedArray$3 = nodeIsTypedArray ? baseUnary$3(nodeIsTypedArray) : baseIsTypedArray;
var isTypedArray_1 = isTypedArray$3;
var baseTimes = _baseTimes, isArguments$3 = isArguments_1, isArray$c = isArray_1, isBuffer$3 = isBuffer$4.exports, isIndex$3 = _isIndex, isTypedArray$2 = isTypedArray_1;
var objectProto$8 = Object.prototype;
var hasOwnProperty$6 = objectProto$8.hasOwnProperty;
function arrayLikeKeys$2(value27, inherited) {
  var isArr = isArray$c(value27), isArg = !isArr && isArguments$3(value27), isBuff = !isArr && !isArg && isBuffer$3(value27), isType = !isArr && !isArg && !isBuff && isTypedArray$2(value27), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value27.length, String) : [], length = result.length;
  for (var key2 in value27) {
    if ((inherited || hasOwnProperty$6.call(value27, key2)) && !(skipIndexes && (key2 == "length" || isBuff && (key2 == "offset" || key2 == "parent") || isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || isIndex$3(key2, length)))) {
      result.push(key2);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys$2;
var objectProto$7 = Object.prototype;
function isPrototype$3(value27) {
  var Ctor = value27 && value27.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto$7;
  return value27 === proto2;
}
var _isPrototype = isPrototype$3;
var overArg = _overArg;
var nativeKeys$1 = overArg(Object.keys, Object);
var _nativeKeys = nativeKeys$1;
var isPrototype$2 = _isPrototype, nativeKeys = _nativeKeys;
var objectProto$6 = Object.prototype;
var hasOwnProperty$5 = objectProto$6.hasOwnProperty;
function baseKeys$1(object3) {
  if (!isPrototype$2(object3)) {
    return nativeKeys(object3);
  }
  var result = [];
  for (var key2 in Object(object3)) {
    if (hasOwnProperty$5.call(object3, key2) && key2 != "constructor") {
      result.push(key2);
    }
  }
  return result;
}
var _baseKeys = baseKeys$1;
var isFunction$2 = isFunction_1, isLength$1 = isLength_1;
function isArrayLike$6(value27) {
  return value27 != null && isLength$1(value27.length) && !isFunction$2(value27);
}
var isArrayLike_1 = isArrayLike$6;
var arrayLikeKeys$1 = _arrayLikeKeys, baseKeys = _baseKeys, isArrayLike$5 = isArrayLike_1;
function keys$7(object3) {
  return isArrayLike$5(object3) ? arrayLikeKeys$1(object3) : baseKeys(object3);
}
var keys_1 = keys$7;
var copyObject$5 = _copyObject, keys$6 = keys_1;
function baseAssign$1(object3, source) {
  return object3 && copyObject$5(source, keys$6(source), object3);
}
var _baseAssign = baseAssign$1;
function nativeKeysIn$1(object3) {
  var result = [];
  if (object3 != null) {
    for (var key2 in Object(object3)) {
      result.push(key2);
    }
  }
  return result;
}
var _nativeKeysIn = nativeKeysIn$1;
var isObject$b = isObject_1, isPrototype$1 = _isPrototype, nativeKeysIn = _nativeKeysIn;
var objectProto$5 = Object.prototype;
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
function baseKeysIn$1(object3) {
  if (!isObject$b(object3)) {
    return nativeKeysIn(object3);
  }
  var isProto = isPrototype$1(object3), result = [];
  for (var key2 in object3) {
    if (!(key2 == "constructor" && (isProto || !hasOwnProperty$4.call(object3, key2)))) {
      result.push(key2);
    }
  }
  return result;
}
var _baseKeysIn = baseKeysIn$1;
var arrayLikeKeys = _arrayLikeKeys, baseKeysIn = _baseKeysIn, isArrayLike$4 = isArrayLike_1;
function keysIn$5(object3) {
  return isArrayLike$4(object3) ? arrayLikeKeys(object3, true) : baseKeysIn(object3);
}
var keysIn_1 = keysIn$5;
var copyObject$4 = _copyObject, keysIn$4 = keysIn_1;
function baseAssignIn$1(object3, source) {
  return object3 && copyObject$4(source, keysIn$4(source), object3);
}
var _baseAssignIn = baseAssignIn$1;
var _cloneBuffer = { exports: {} };
(function(module2, exports) {
  var root2 = _root;
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root2.Buffer : void 0, allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
  function cloneBuffer2(buffer2, isDeep) {
    if (isDeep) {
      return buffer2.slice();
    }
    var length = buffer2.length, result = allocUnsafe ? allocUnsafe(length) : new buffer2.constructor(length);
    buffer2.copy(result);
    return result;
  }
  module2.exports = cloneBuffer2;
})(_cloneBuffer, _cloneBuffer.exports);
function copyArray$2(source, array3) {
  var index2 = -1, length = source.length;
  array3 || (array3 = Array(length));
  while (++index2 < length) {
    array3[index2] = source[index2];
  }
  return array3;
}
var _copyArray = copyArray$2;
function arrayFilter$1(array3, predicate) {
  var index2 = -1, length = array3 == null ? 0 : array3.length, resIndex = 0, result = [];
  while (++index2 < length) {
    var value27 = array3[index2];
    if (predicate(value27, index2, array3)) {
      result[resIndex++] = value27;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter$1;
function stubArray$2() {
  return [];
}
var stubArray_1 = stubArray$2;
var arrayFilter = _arrayFilter, stubArray$1 = stubArray_1;
var objectProto$4 = Object.prototype;
var propertyIsEnumerable2 = objectProto$4.propertyIsEnumerable;
var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
var getSymbols$3 = !nativeGetSymbols$1 ? stubArray$1 : function(object3) {
  if (object3 == null) {
    return [];
  }
  object3 = Object(object3);
  return arrayFilter(nativeGetSymbols$1(object3), function(symbol2) {
    return propertyIsEnumerable2.call(object3, symbol2);
  });
};
var _getSymbols = getSymbols$3;
var copyObject$3 = _copyObject, getSymbols$2 = _getSymbols;
function copySymbols$1(source, object3) {
  return copyObject$3(source, getSymbols$2(source), object3);
}
var _copySymbols = copySymbols$1;
function arrayPush$3(array3, values) {
  var index2 = -1, length = values.length, offset4 = array3.length;
  while (++index2 < length) {
    array3[offset4 + index2] = values[index2];
  }
  return array3;
}
var _arrayPush = arrayPush$3;
var arrayPush$2 = _arrayPush, getPrototype$1 = _getPrototype, getSymbols$1 = _getSymbols, stubArray = stubArray_1;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbolsIn$2 = !nativeGetSymbols ? stubArray : function(object3) {
  var result = [];
  while (object3) {
    arrayPush$2(result, getSymbols$1(object3));
    object3 = getPrototype$1(object3);
  }
  return result;
};
var _getSymbolsIn = getSymbolsIn$2;
var copyObject$2 = _copyObject, getSymbolsIn$1 = _getSymbolsIn;
function copySymbolsIn$1(source, object3) {
  return copyObject$2(source, getSymbolsIn$1(source), object3);
}
var _copySymbolsIn = copySymbolsIn$1;
var arrayPush$1 = _arrayPush, isArray$b = isArray_1;
function baseGetAllKeys$2(object3, keysFunc, symbolsFunc) {
  var result = keysFunc(object3);
  return isArray$b(object3) ? result : arrayPush$1(result, symbolsFunc(object3));
}
var _baseGetAllKeys = baseGetAllKeys$2;
var baseGetAllKeys$1 = _baseGetAllKeys, getSymbols = _getSymbols, keys$5 = keys_1;
function getAllKeys$2(object3) {
  return baseGetAllKeys$1(object3, keys$5, getSymbols);
}
var _getAllKeys = getAllKeys$2;
var baseGetAllKeys = _baseGetAllKeys, getSymbolsIn = _getSymbolsIn, keysIn$3 = keysIn_1;
function getAllKeysIn$2(object3) {
  return baseGetAllKeys(object3, keysIn$3, getSymbolsIn);
}
var _getAllKeysIn = getAllKeysIn$2;
var getNative$3 = _getNative, root$5 = _root;
var DataView$1 = getNative$3(root$5, "DataView");
var _DataView = DataView$1;
var getNative$2 = _getNative, root$4 = _root;
var Promise$2 = getNative$2(root$4, "Promise");
var _Promise = Promise$2;
var getNative$1 = _getNative, root$3 = _root;
var Set$3 = getNative$1(root$3, "Set");
var _Set = Set$3;
var getNative = _getNative, root$2 = _root;
var WeakMap$2 = getNative(root$2, "WeakMap");
var _WeakMap = WeakMap$2;
var DataView = _DataView, Map$1 = _Map, Promise$1 = _Promise, Set$2 = _Set, WeakMap$1 = _WeakMap, baseGetTag$2 = _baseGetTag, toSource = _toSource;
var mapTag$4 = "[object Map]", objectTag$2 = "[object Object]", promiseTag = "[object Promise]", setTag$4 = "[object Set]", weakMapTag$1 = "[object WeakMap]";
var dataViewTag$3 = "[object DataView]";
var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map$1), promiseCtorString = toSource(Promise$1), setCtorString = toSource(Set$2), weakMapCtorString = toSource(WeakMap$1);
var getTag$4 = baseGetTag$2;
if (DataView && getTag$4(new DataView(new ArrayBuffer(1))) != dataViewTag$3 || Map$1 && getTag$4(new Map$1()) != mapTag$4 || Promise$1 && getTag$4(Promise$1.resolve()) != promiseTag || Set$2 && getTag$4(new Set$2()) != setTag$4 || WeakMap$1 && getTag$4(new WeakMap$1()) != weakMapTag$1) {
  getTag$4 = function(value27) {
    var result = baseGetTag$2(value27), Ctor = result == objectTag$2 ? value27.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag$3;
        case mapCtorString:
          return mapTag$4;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag$4;
        case weakMapCtorString:
          return weakMapTag$1;
      }
    }
    return result;
  };
}
var _getTag = getTag$4;
var objectProto$3 = Object.prototype;
var hasOwnProperty$3 = objectProto$3.hasOwnProperty;
function initCloneArray$1(array3) {
  var length = array3.length, result = new array3.constructor(length);
  if (length && typeof array3[0] == "string" && hasOwnProperty$3.call(array3, "index")) {
    result.index = array3.index;
    result.input = array3.input;
  }
  return result;
}
var _initCloneArray = initCloneArray$1;
var root$1 = _root;
var Uint8Array$2 = root$1.Uint8Array;
var _Uint8Array = Uint8Array$2;
var Uint8Array$1 = _Uint8Array;
function cloneArrayBuffer$3(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array$1(result).set(new Uint8Array$1(arrayBuffer));
  return result;
}
var _cloneArrayBuffer = cloneArrayBuffer$3;
var cloneArrayBuffer$2 = _cloneArrayBuffer;
function cloneDataView$1(dataView, isDeep) {
  var buffer2 = isDeep ? cloneArrayBuffer$2(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer2, dataView.byteOffset, dataView.byteLength);
}
var _cloneDataView = cloneDataView$1;
var reFlags = /\w*$/;
function cloneRegExp$1(regexp3) {
  var result = new regexp3.constructor(regexp3.source, reFlags.exec(regexp3));
  result.lastIndex = regexp3.lastIndex;
  return result;
}
var _cloneRegExp = cloneRegExp$1;
var Symbol$4 = _Symbol;
var symbolProto$2 = Symbol$4 ? Symbol$4.prototype : void 0, symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : void 0;
function cloneSymbol$1(symbol2) {
  return symbolValueOf$1 ? Object(symbolValueOf$1.call(symbol2)) : {};
}
var _cloneSymbol = cloneSymbol$1;
var cloneArrayBuffer$1 = _cloneArrayBuffer;
function cloneTypedArray$2(typedArray, isDeep) {
  var buffer2 = isDeep ? cloneArrayBuffer$1(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer2, typedArray.byteOffset, typedArray.length);
}
var _cloneTypedArray = cloneTypedArray$2;
var cloneArrayBuffer = _cloneArrayBuffer, cloneDataView = _cloneDataView, cloneRegExp = _cloneRegExp, cloneSymbol = _cloneSymbol, cloneTypedArray$1 = _cloneTypedArray;
var boolTag$2 = "[object Boolean]", dateTag$2 = "[object Date]", mapTag$3 = "[object Map]", numberTag$2 = "[object Number]", regexpTag$3 = "[object RegExp]", setTag$3 = "[object Set]", stringTag$2 = "[object String]", symbolTag$3 = "[object Symbol]";
var arrayBufferTag$2 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]", float32Tag$1 = "[object Float32Array]", float64Tag$1 = "[object Float64Array]", int8Tag$1 = "[object Int8Array]", int16Tag$1 = "[object Int16Array]", int32Tag$1 = "[object Int32Array]", uint8Tag$1 = "[object Uint8Array]", uint8ClampedTag$1 = "[object Uint8ClampedArray]", uint16Tag$1 = "[object Uint16Array]", uint32Tag$1 = "[object Uint32Array]";
function initCloneByTag$1(object3, tag, isDeep) {
  var Ctor = object3.constructor;
  switch (tag) {
    case arrayBufferTag$2:
      return cloneArrayBuffer(object3);
    case boolTag$2:
    case dateTag$2:
      return new Ctor(+object3);
    case dataViewTag$2:
      return cloneDataView(object3, isDeep);
    case float32Tag$1:
    case float64Tag$1:
    case int8Tag$1:
    case int16Tag$1:
    case int32Tag$1:
    case uint8Tag$1:
    case uint8ClampedTag$1:
    case uint16Tag$1:
    case uint32Tag$1:
      return cloneTypedArray$1(object3, isDeep);
    case mapTag$3:
      return new Ctor();
    case numberTag$2:
    case stringTag$2:
      return new Ctor(object3);
    case regexpTag$3:
      return cloneRegExp(object3);
    case setTag$3:
      return new Ctor();
    case symbolTag$3:
      return cloneSymbol(object3);
  }
}
var _initCloneByTag = initCloneByTag$1;
var isObject$a = isObject_1;
var objectCreate = Object.create;
var baseCreate$1 = function() {
  function object3() {
  }
  return function(proto2) {
    if (!isObject$a(proto2)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto2);
    }
    object3.prototype = proto2;
    var result = new object3();
    object3.prototype = void 0;
    return result;
  };
}();
var _baseCreate = baseCreate$1;
var baseCreate = _baseCreate, getPrototype = _getPrototype, isPrototype = _isPrototype;
function initCloneObject$2(object3) {
  return typeof object3.constructor == "function" && !isPrototype(object3) ? baseCreate(getPrototype(object3)) : {};
}
var _initCloneObject = initCloneObject$2;
var getTag$3 = _getTag, isObjectLike$5 = isObjectLike_1;
var mapTag$2 = "[object Map]";
function baseIsMap$1(value27) {
  return isObjectLike$5(value27) && getTag$3(value27) == mapTag$2;
}
var _baseIsMap = baseIsMap$1;
var baseIsMap = _baseIsMap, baseUnary$2 = _baseUnary, nodeUtil$2 = _nodeUtil.exports;
var nodeIsMap = nodeUtil$2 && nodeUtil$2.isMap;
var isMap$1 = nodeIsMap ? baseUnary$2(nodeIsMap) : baseIsMap;
var isMap_1 = isMap$1;
var getTag$2 = _getTag, isObjectLike$4 = isObjectLike_1;
var setTag$2 = "[object Set]";
function baseIsSet$1(value27) {
  return isObjectLike$4(value27) && getTag$2(value27) == setTag$2;
}
var _baseIsSet = baseIsSet$1;
var baseIsSet = _baseIsSet, baseUnary$1 = _baseUnary, nodeUtil$1 = _nodeUtil.exports;
var nodeIsSet = nodeUtil$1 && nodeUtil$1.isSet;
var isSet$1 = nodeIsSet ? baseUnary$1(nodeIsSet) : baseIsSet;
var isSet_1 = isSet$1;
var Stack$3 = _Stack, arrayEach = _arrayEach, assignValue$1 = _assignValue, baseAssign = _baseAssign, baseAssignIn = _baseAssignIn, cloneBuffer$1 = _cloneBuffer.exports, copyArray$1 = _copyArray, copySymbols = _copySymbols, copySymbolsIn = _copySymbolsIn, getAllKeys$1 = _getAllKeys, getAllKeysIn$1 = _getAllKeysIn, getTag$1 = _getTag, initCloneArray = _initCloneArray, initCloneByTag = _initCloneByTag, initCloneObject$1 = _initCloneObject, isArray$a = isArray_1, isBuffer$2 = isBuffer$4.exports, isMap = isMap_1, isObject$9 = isObject_1, isSet = isSet_1, keys$4 = keys_1, keysIn$2 = keysIn_1;
var CLONE_DEEP_FLAG$2 = 1, CLONE_FLAT_FLAG$1 = 2, CLONE_SYMBOLS_FLAG$2 = 4;
var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag$1 = "[object Boolean]", dateTag$1 = "[object Date]", errorTag$1 = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag$1 = "[object Map]", numberTag$1 = "[object Number]", objectTag$1 = "[object Object]", regexpTag$2 = "[object RegExp]", setTag$1 = "[object Set]", stringTag$1 = "[object String]", symbolTag$2 = "[object Symbol]", weakMapTag = "[object WeakMap]";
var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag$1] = cloneableTags[arrayTag$1] = cloneableTags[arrayBufferTag$1] = cloneableTags[dataViewTag$1] = cloneableTags[boolTag$1] = cloneableTags[dateTag$1] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag$1] = cloneableTags[numberTag$1] = cloneableTags[objectTag$1] = cloneableTags[regexpTag$2] = cloneableTags[setTag$1] = cloneableTags[stringTag$1] = cloneableTags[symbolTag$2] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag$1] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
function baseClone$2(value27, bitmask, customizer, key2, object3, stack) {
  var result, isDeep = bitmask & CLONE_DEEP_FLAG$2, isFlat = bitmask & CLONE_FLAT_FLAG$1, isFull = bitmask & CLONE_SYMBOLS_FLAG$2;
  if (customizer) {
    result = object3 ? customizer(value27, key2, object3, stack) : customizer(value27);
  }
  if (result !== void 0) {
    return result;
  }
  if (!isObject$9(value27)) {
    return value27;
  }
  var isArr = isArray$a(value27);
  if (isArr) {
    result = initCloneArray(value27);
    if (!isDeep) {
      return copyArray$1(value27, result);
    }
  } else {
    var tag = getTag$1(value27), isFunc = tag == funcTag || tag == genTag;
    if (isBuffer$2(value27)) {
      return cloneBuffer$1(value27, isDeep);
    }
    if (tag == objectTag$1 || tag == argsTag$1 || isFunc && !object3) {
      result = isFlat || isFunc ? {} : initCloneObject$1(value27);
      if (!isDeep) {
        return isFlat ? copySymbolsIn(value27, baseAssignIn(result, value27)) : copySymbols(value27, baseAssign(result, value27));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object3 ? value27 : {};
      }
      result = initCloneByTag(value27, tag, isDeep);
    }
  }
  stack || (stack = new Stack$3());
  var stacked = stack.get(value27);
  if (stacked) {
    return stacked;
  }
  stack.set(value27, result);
  if (isSet(value27)) {
    value27.forEach(function(subValue) {
      result.add(baseClone$2(subValue, bitmask, customizer, subValue, value27, stack));
    });
  } else if (isMap(value27)) {
    value27.forEach(function(subValue, key3) {
      result.set(key3, baseClone$2(subValue, bitmask, customizer, key3, value27, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn$1 : getAllKeys$1 : isFlat ? keysIn$2 : keys$4;
  var props2 = isArr ? void 0 : keysFunc(value27);
  arrayEach(props2 || value27, function(subValue, key3) {
    if (props2) {
      key3 = subValue;
      subValue = value27[key3];
    }
    assignValue$1(result, key3, baseClone$2(subValue, bitmask, customizer, key3, value27, stack));
  });
  return result;
}
var _baseClone = baseClone$2;
var baseClone$1 = _baseClone;
var CLONE_DEEP_FLAG$1 = 1, CLONE_SYMBOLS_FLAG$1 = 4;
function cloneDeep(value27) {
  return baseClone$1(value27, CLONE_DEEP_FLAG$1 | CLONE_SYMBOLS_FLAG$1);
}
var cloneDeep_1 = cloneDeep;
var cloneDeep$1 = cloneDeep_1;
function getElement(func) {
  if (typeof func !== "function" || !func)
    return null;
  return func();
}
function getPoint(point) {
  if ((typeof point === "undefined" ? "undefined" : _default$7(point)) !== "object" || !point)
    return null;
  return point;
}
var Align = {
  props: {
    childrenProps: PropTypes.object,
    align: PropTypes.object.isRequired,
    target: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).def(function() {
      return window;
    }),
    monitorBufferTime: PropTypes.number.def(50),
    monitorWindowResize: PropTypes.bool.def(false),
    disabled: PropTypes.bool.def(false)
  },
  data: function data4() {
    this.aligned = false;
    return {};
  },
  mounted: function mounted5() {
    var _this = this;
    this.$nextTick(function() {
      _this.prevProps = _default$6({}, _this.$props);
      var props2 = _this.$props;
      !_this.aligned && _this.forceAlign();
      if (!props2.disabled && props2.monitorWindowResize) {
        _this.startMonitorWindowResize();
      }
    });
  },
  updated: function updated4() {
    var _this2 = this;
    this.$nextTick(function() {
      var prevProps = _this2.prevProps;
      var props2 = _this2.$props;
      var reAlign = false;
      if (!props2.disabled) {
        var source = _this2.$el;
        var sourceRect = source ? source.getBoundingClientRect() : null;
        if (prevProps.disabled) {
          reAlign = true;
        } else {
          var lastElement = getElement(prevProps.target);
          var currentElement = getElement(props2.target);
          var lastPoint = getPoint(prevProps.target);
          var currentPoint = getPoint(props2.target);
          if (isWindow$1(lastElement) && isWindow$1(currentElement)) {
            reAlign = false;
          } else if (lastElement !== currentElement || lastElement && !currentElement && currentPoint || lastPoint && currentPoint && currentElement || currentPoint && !isSamePoint(lastPoint, currentPoint)) {
            reAlign = true;
          }
          var preRect = _this2.sourceRect || {};
          if (!reAlign && source && (!isSimilarValue(preRect.width, sourceRect.width) || !isSimilarValue(preRect.height, sourceRect.height))) {
            reAlign = true;
          }
        }
        _this2.sourceRect = sourceRect;
      }
      if (reAlign) {
        _this2.forceAlign();
      }
      if (props2.monitorWindowResize && !props2.disabled) {
        _this2.startMonitorWindowResize();
      } else {
        _this2.stopMonitorWindowResize();
      }
      _this2.prevProps = _default$6({}, _this2.$props, { align: cloneDeep$1(_this2.$props.align) });
    });
  },
  beforeDestroy: function beforeDestroy5() {
    this.stopMonitorWindowResize();
  },
  methods: {
    startMonitorWindowResize: function startMonitorWindowResize() {
      if (!this.resizeHandler) {
        this.bufferMonitor = buffer(this.forceAlign, this.$props.monitorBufferTime);
        this.resizeHandler = addEventListenerWrap(window, "resize", this.bufferMonitor);
      }
    },
    stopMonitorWindowResize: function stopMonitorWindowResize() {
      if (this.resizeHandler) {
        this.bufferMonitor.clear();
        this.resizeHandler.remove();
        this.resizeHandler = null;
      }
    },
    forceAlign: function forceAlign() {
      var _$props = this.$props, disabled = _$props.disabled, target2 = _$props.target, align = _$props.align;
      if (!disabled && target2) {
        var source = this.$el;
        var listeners = getListeners(this);
        var result = void 0;
        var element = getElement(target2);
        var point = getPoint(target2);
        var activeElement = document.activeElement;
        if (element) {
          result = alignElement(source, element, align);
        } else if (point) {
          result = alignPoint(source, point, align);
        }
        restoreFocus(activeElement, source);
        this.aligned = true;
        listeners.align && listeners.align(source, result);
      }
    }
  },
  render: function render11() {
    var childrenProps = this.$props.childrenProps;
    var child = getSlot(this)[0];
    if (child && childrenProps) {
      return cloneElement(child, { props: childrenProps });
    }
    return child;
  }
};
var LazyRenderBox$1 = {
  props: {
    visible: PropTypes.bool,
    hiddenClassName: PropTypes.string
  },
  render: function render12() {
    var h = arguments[0];
    var _$props = this.$props, hiddenClassName = _$props.hiddenClassName;
    _$props.visible;
    var children = null;
    if (hiddenClassName || !this.$slots["default"] || this.$slots["default"].length > 1) {
      var cls = "";
      children = h(
        "div",
        { "class": cls },
        [this.$slots["default"]]
      );
    } else {
      children = this.$slots["default"][0];
    }
    return children;
  }
};
var PopupInner = {
  props: {
    hiddenClassName: PropTypes.string.def(""),
    prefixCls: PropTypes.string,
    visible: PropTypes.bool
  },
  render: function render13() {
    var h = arguments[0];
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, visible11 = _$props.visible, hiddenClassName = _$props.hiddenClassName;
    var divProps = {
      on: getListeners(this)
    };
    return h(
      "div",
      _mergeJSXProps([divProps, { "class": !visible11 ? hiddenClassName : "" }]),
      [h(
        LazyRenderBox$1,
        {
          "class": prefixCls2 + "-content",
          attrs: { visible: visible11 }
        },
        [this.$slots["default"]]
      )]
    );
  }
};
var START_EVENT_NAME_MAP = {
  transitionstart: {
    transition: "transitionstart",
    WebkitTransition: "webkitTransitionStart",
    MozTransition: "mozTransitionStart",
    OTransition: "oTransitionStart",
    msTransition: "MSTransitionStart"
  },
  animationstart: {
    animation: "animationstart",
    WebkitAnimation: "webkitAnimationStart",
    MozAnimation: "mozAnimationStart",
    OAnimation: "oAnimationStart",
    msAnimation: "MSAnimationStart"
  }
};
var END_EVENT_NAME_MAP = {
  transitionend: {
    transition: "transitionend",
    WebkitTransition: "webkitTransitionEnd",
    MozTransition: "mozTransitionEnd",
    OTransition: "oTransitionEnd",
    msTransition: "MSTransitionEnd"
  },
  animationend: {
    animation: "animationend",
    WebkitAnimation: "webkitAnimationEnd",
    MozAnimation: "mozAnimationEnd",
    OAnimation: "oAnimationEnd",
    msAnimation: "MSAnimationEnd"
  }
};
var startEvents = [];
var endEvents = [];
function detectEvents() {
  var testEl = document.createElement("div");
  var style3 = testEl.style;
  if (!("AnimationEvent" in window)) {
    delete START_EVENT_NAME_MAP.animationstart.animation;
    delete END_EVENT_NAME_MAP.animationend.animation;
  }
  if (!("TransitionEvent" in window)) {
    delete START_EVENT_NAME_MAP.transitionstart.transition;
    delete END_EVENT_NAME_MAP.transitionend.transition;
  }
  function process2(EVENT_NAME_MAP, events) {
    for (var baseEventName in EVENT_NAME_MAP) {
      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
        var baseEvents = EVENT_NAME_MAP[baseEventName];
        for (var styleName in baseEvents) {
          if (styleName in style3) {
            events.push(baseEvents[styleName]);
            break;
          }
        }
      }
    }
  }
  process2(START_EVENT_NAME_MAP, startEvents);
  process2(END_EVENT_NAME_MAP, endEvents);
}
if (typeof window !== "undefined" && typeof document !== "undefined") {
  detectEvents();
}
function addEventListener$1(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}
function removeEventListener$1(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}
var TransitionEvents = {
  startEvents,
  addStartEventListener: function addStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    startEvents.forEach(function(startEvent) {
      addEventListener$1(node, startEvent, eventListener);
    });
  },
  removeStartEventListener: function removeStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      return;
    }
    startEvents.forEach(function(startEvent) {
      removeEventListener$1(node, startEvent, eventListener);
    });
  },
  endEvents,
  addEndEventListener: function addEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    endEvents.forEach(function(endEvent) {
      addEventListener$1(node, endEvent, eventListener);
    });
  },
  removeEndEventListener: function removeEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }
    endEvents.forEach(function(endEvent) {
      removeEventListener$1(node, endEvent, eventListener);
    });
  }
};
var TransitionEvents$1 = TransitionEvents;
var isCssAnimationSupported = TransitionEvents$1.endEvents.length !== 0;
var capitalPrefixes = [
  "Webkit",
  "Moz",
  "O",
  "ms"
];
var prefixes = ["-webkit-", "-moz-", "-o-", "ms-", ""];
function getStyleProperty(node, name) {
  var style3 = window.getComputedStyle(node, null);
  var ret = "";
  for (var i = 0; i < prefixes.length; i++) {
    ret = style3.getPropertyValue(prefixes[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
}
function fixBrowserByTimeout(node) {
  if (isCssAnimationSupported) {
    var transitionDelay = parseFloat(getStyleProperty(node, "transition-delay")) || 0;
    var transitionDuration = parseFloat(getStyleProperty(node, "transition-duration")) || 0;
    var animationDelay = parseFloat(getStyleProperty(node, "animation-delay")) || 0;
    var animationDuration = parseFloat(getStyleProperty(node, "animation-duration")) || 0;
    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
    node.rcEndAnimTimeout = setTimeout(function() {
      node.rcEndAnimTimeout = null;
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }, time * 1e3 + 200);
  }
}
function clearBrowserBugTimeout(node) {
  if (node.rcEndAnimTimeout) {
    clearTimeout(node.rcEndAnimTimeout);
    node.rcEndAnimTimeout = null;
  }
}
var cssAnimation = function cssAnimation2(node, transitionName2, endCallback) {
  var nameIsObj = (typeof transitionName2 === "undefined" ? "undefined" : _default$7(transitionName2)) === "object";
  var className = nameIsObj ? transitionName2.name : transitionName2;
  var activeClassName = nameIsObj ? transitionName2.active : transitionName2 + "-active";
  var end = endCallback;
  var start = void 0;
  var active = void 0;
  var nodeClasses = componentClasses(node);
  if (endCallback && Object.prototype.toString.call(endCallback) === "[object Object]") {
    end = endCallback.end;
    start = endCallback.start;
    active = endCallback.active;
  }
  if (node.rcEndListener) {
    node.rcEndListener();
  }
  node.rcEndListener = function(e) {
    if (e && e.target !== node) {
      return;
    }
    if (node.rcAnimTimeout) {
      cancelAnimationTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }
    clearBrowserBugTimeout(node);
    nodeClasses.remove(className);
    nodeClasses.remove(activeClassName);
    TransitionEvents$1.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;
    if (end) {
      end();
    }
  };
  TransitionEvents$1.addEndEventListener(node, node.rcEndListener);
  if (start) {
    start();
  }
  nodeClasses.add(className);
  node.rcAnimTimeout = requestAnimationTimeout(function() {
    node.rcAnimTimeout = null;
    nodeClasses.add(className);
    nodeClasses.add(activeClassName);
    if (active) {
      requestAnimationTimeout(active, 0);
    }
    fixBrowserByTimeout(node);
  }, 30);
  return {
    stop: function stop2() {
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }
  };
};
cssAnimation.style = function(node, style3, callback) {
  if (node.rcEndListener) {
    node.rcEndListener();
  }
  node.rcEndListener = function(e) {
    if (e && e.target !== node) {
      return;
    }
    if (node.rcAnimTimeout) {
      cancelAnimationTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }
    clearBrowserBugTimeout(node);
    TransitionEvents$1.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;
    if (callback) {
      callback();
    }
  };
  TransitionEvents$1.addEndEventListener(node, node.rcEndListener);
  node.rcAnimTimeout = requestAnimationTimeout(function() {
    for (var s in style3) {
      if (style3.hasOwnProperty(s)) {
        node.style[s] = style3[s];
      }
    }
    node.rcAnimTimeout = null;
    fixBrowserByTimeout(node);
  }, 0);
};
cssAnimation.setTransition = function(node, p, value27) {
  var property2 = p;
  var v = value27;
  if (value27 === void 0) {
    v = property2;
    property2 = "";
  }
  property2 = property2 || "";
  capitalPrefixes.forEach(function(prefix) {
    node.style[prefix + "Transition" + property2] = v;
  });
};
cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
var cssAnimation$1 = cssAnimation;
var Popup = {
  name: "VCTriggerPopup",
  mixins: [BaseMixin],
  props: {
    visible: PropTypes.bool,
    getClassNameFromAlign: PropTypes.func,
    getRootDomNode: PropTypes.func,
    align: PropTypes.any,
    destroyPopupOnHide: PropTypes.bool,
    prefixCls: PropTypes.string,
    getContainer: PropTypes.func,
    transitionName: PropTypes.string,
    animation: PropTypes.any,
    maskAnimation: PropTypes.string,
    maskTransitionName: PropTypes.string,
    mask: PropTypes.bool,
    zIndex: PropTypes.number,
    popupClassName: PropTypes.any,
    popupStyle: PropTypes.object.def(function() {
      return {};
    }),
    stretch: PropTypes.string,
    point: PropTypes.shape({
      pageX: PropTypes.number,
      pageY: PropTypes.number
    })
  },
  data: function data5() {
    this.domEl = null;
    return {
      stretchChecked: false,
      targetWidth: void 0,
      targetHeight: void 0
    };
  },
  mounted: function mounted6() {
    var _this = this;
    this.$nextTick(function() {
      _this.rootNode = _this.getPopupDomNode();
      _this.setStretchSize();
    });
  },
  updated: function updated5() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.setStretchSize();
    });
  },
  beforeDestroy: function beforeDestroy6() {
    if (this.$el.parentNode) {
      this.$el.parentNode.removeChild(this.$el);
    } else if (this.$el.remove) {
      this.$el.remove();
    }
  },
  methods: {
    onAlign: function onAlign(popupDomNode, align) {
      var props2 = this.$props;
      var currentAlignClassName = props2.getClassNameFromAlign(align);
      if (this.currentAlignClassName !== currentAlignClassName) {
        this.currentAlignClassName = currentAlignClassName;
        popupDomNode.className = this.getClassName(currentAlignClassName);
      }
      var listeners = getListeners(this);
      listeners.align && listeners.align(popupDomNode, align);
    },
    setStretchSize: function setStretchSize() {
      var _$props = this.$props, stretch = _$props.stretch, getRootDomNode2 = _$props.getRootDomNode, visible11 = _$props.visible;
      var _$data = this.$data, stretchChecked = _$data.stretchChecked, targetHeight = _$data.targetHeight, targetWidth = _$data.targetWidth;
      if (!stretch || !visible11) {
        if (stretchChecked) {
          this.setState({ stretchChecked: false });
        }
        return;
      }
      var $ele = getRootDomNode2();
      if (!$ele)
        return;
      var height3 = $ele.offsetHeight;
      var width = $ele.offsetWidth;
      if (targetHeight !== height3 || targetWidth !== width || !stretchChecked) {
        this.setState({
          stretchChecked: true,
          targetHeight: height3,
          targetWidth: width
        });
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.popupInstance ? this.$refs.popupInstance.$el : null;
    },
    getTargetElement: function getTargetElement() {
      return this.$props.getRootDomNode();
    },
    getAlignTarget: function getAlignTarget() {
      var point = this.$props.point;
      if (point) {
        return point;
      }
      return this.getTargetElement;
    },
    getMaskTransitionName: function getMaskTransitionName() {
      var props2 = this.$props;
      var transitionName2 = props2.maskTransitionName;
      var animation2 = props2.maskAnimation;
      if (!transitionName2 && animation2) {
        transitionName2 = props2.prefixCls + "-" + animation2;
      }
      return transitionName2;
    },
    getTransitionName: function getTransitionName2() {
      var props2 = this.$props;
      var transitionName2 = props2.transitionName;
      var animation2 = props2.animation;
      if (!transitionName2) {
        if (typeof animation2 === "string") {
          transitionName2 = "" + animation2;
        } else if (animation2 && animation2.props && animation2.props.name) {
          transitionName2 = animation2.props.name;
        }
      }
      return transitionName2;
    },
    getClassName: function getClassName(currentAlignClassName) {
      return this.$props.prefixCls + " " + this.$props.popupClassName + " " + currentAlignClassName;
    },
    getPopupElement: function getPopupElement() {
      var _this3 = this;
      var h = this.$createElement;
      var props2 = this.$props, $slots = this.$slots, getTransitionName6 = this.getTransitionName;
      var _$data2 = this.$data, stretchChecked = _$data2.stretchChecked, targetHeight = _$data2.targetHeight, targetWidth = _$data2.targetWidth;
      var align = props2.align, visible11 = props2.visible, prefixCls2 = props2.prefixCls, animation2 = props2.animation, popupStyle = props2.popupStyle, getClassNameFromAlign = props2.getClassNameFromAlign, destroyPopupOnHide = props2.destroyPopupOnHide, stretch = props2.stretch;
      var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align));
      if (!visible11) {
        this.currentAlignClassName = null;
      }
      var sizeStyle = {};
      if (stretch) {
        if (stretch.indexOf("height") !== -1) {
          sizeStyle.height = typeof targetHeight === "number" ? targetHeight + "px" : targetHeight;
        } else if (stretch.indexOf("minHeight") !== -1) {
          sizeStyle.minHeight = typeof targetHeight === "number" ? targetHeight + "px" : targetHeight;
        }
        if (stretch.indexOf("width") !== -1) {
          sizeStyle.width = typeof targetWidth === "number" ? targetWidth + "px" : targetWidth;
        } else if (stretch.indexOf("minWidth") !== -1) {
          sizeStyle.minWidth = typeof targetWidth === "number" ? targetWidth + "px" : targetWidth;
        }
        if (!stretchChecked) {
          setTimeout(function() {
            if (_this3.$refs.alignInstance) {
              _this3.$refs.alignInstance.forceAlign();
            }
          }, 0);
        }
      }
      var popupInnerProps = {
        props: {
          prefixCls: prefixCls2,
          visible: visible11
        },
        "class": className,
        on: getListeners(this),
        ref: "popupInstance",
        style: _default$6({}, sizeStyle, popupStyle, this.getZIndexStyle())
      };
      var transitionProps = {
        props: {
          appear: true,
          css: false
        }
      };
      var transitionName2 = getTransitionName6();
      var useTransition = !!transitionName2;
      var transitionEvent = {
        beforeEnter: function beforeEnter() {
        },
        enter: function enter2(el, done) {
          _this3.$nextTick(function() {
            if (_this3.$refs.alignInstance) {
              _this3.$refs.alignInstance.$nextTick(function() {
                _this3.domEl = el;
                cssAnimation$1(el, transitionName2 + "-enter", done);
              });
            } else {
              done();
            }
          });
        },
        beforeLeave: function beforeLeave() {
          _this3.domEl = null;
        },
        leave: function leave2(el, done) {
          cssAnimation$1(el, transitionName2 + "-leave", done);
        }
      };
      if ((typeof animation2 === "undefined" ? "undefined" : _default$7(animation2)) === "object") {
        useTransition = true;
        var _animation$on = animation2.on, on = _animation$on === void 0 ? {} : _animation$on, _animation$props = animation2.props, _props = _animation$props === void 0 ? {} : _animation$props;
        transitionProps.props = _default$6({}, transitionProps.props, _props);
        transitionProps.on = _default$6({}, transitionEvent, on);
      } else {
        transitionProps.on = transitionEvent;
      }
      if (!useTransition) {
        transitionProps = {};
      }
      if (destroyPopupOnHide) {
        return h(
          "transition",
          transitionProps,
          [visible11 ? h(
            Align,
            {
              attrs: {
                target: this.getAlignTarget(),
                monitorWindowResize: true,
                align
              },
              key: "popup",
              ref: "alignInstance",
              on: {
                "align": this.onAlign
              }
            },
            [h(
              PopupInner,
              popupInnerProps,
              [$slots["default"]]
            )]
          ) : null]
        );
      }
      return h(
        "transition",
        transitionProps,
        [h(
          Align,
          {
            directives: [{
              name: "show",
              value: visible11
            }],
            attrs: {
              target: this.getAlignTarget(),
              monitorWindowResize: true,
              disabled: !visible11,
              align
            },
            key: "popup",
            ref: "alignInstance",
            on: {
              "align": this.onAlign
            }
          },
          [h(
            PopupInner,
            popupInnerProps,
            [$slots["default"]]
          )]
        )]
      );
    },
    getZIndexStyle: function getZIndexStyle() {
      var style3 = {};
      var props2 = this.$props;
      if (props2.zIndex !== void 0) {
        style3.zIndex = props2.zIndex;
      }
      return style3;
    },
    getMaskElement: function getMaskElement() {
      var h = this.$createElement;
      var props2 = this.$props;
      var maskElement = null;
      if (props2.mask) {
        var maskTransition = this.getMaskTransitionName();
        maskElement = h(LazyRenderBox$1, {
          directives: [{
            name: "show",
            value: props2.visible
          }],
          style: this.getZIndexStyle(),
          key: "mask",
          "class": props2.prefixCls + "-mask",
          attrs: {
            visible: props2.visible
          }
        });
        if (maskTransition) {
          maskElement = h(
            "transition",
            {
              attrs: { appear: true, name: maskTransition }
            },
            [maskElement]
          );
        }
      }
      return maskElement;
    }
  },
  render: function render14() {
    var h = arguments[0];
    var getMaskElement3 = this.getMaskElement, getPopupElement3 = this.getPopupElement;
    return h("div", [getMaskElement3(), getPopupElement3()]);
  }
};
function isPointsEq(a1, a2, isAlignPoint) {
  if (isAlignPoint) {
    return a1[0] === a2[0];
  }
  return a1[0] === a2[0] && a1[1] === a2[1];
}
function getAlignFromPlacement(builtinPlacements, placementStr, align) {
  var baseAlign = builtinPlacements[placementStr] || {};
  return _default$6({}, baseAlign, align);
}
function getAlignPopupClassName(builtinPlacements, prefixCls2, align, isAlignPoint) {
  var points = align.points;
  for (var placement2 in builtinPlacements) {
    if (builtinPlacements.hasOwnProperty(placement2)) {
      if (isPointsEq(builtinPlacements[placement2].points, points, isAlignPoint)) {
        return prefixCls2 + "-placement-" + placement2;
      }
    }
  }
  return "";
}
function noop$W() {
}
var ContainerRender = {
  props: {
    autoMount: PropTypes.bool.def(true),
    autoDestroy: PropTypes.bool.def(true),
    visible: PropTypes.bool,
    forceRender: PropTypes.bool.def(false),
    parent: PropTypes.any,
    getComponent: PropTypes.func.isRequired,
    getContainer: PropTypes.func.isRequired,
    children: PropTypes.func.isRequired
  },
  mounted: function mounted7() {
    if (this.autoMount) {
      this.renderComponent();
    }
  },
  updated: function updated6() {
    if (this.autoMount) {
      this.renderComponent();
    }
  },
  beforeDestroy: function beforeDestroy7() {
    if (this.autoDestroy) {
      this.removeContainer();
    }
  },
  methods: {
    removeContainer: function removeContainer() {
      if (this.container) {
        this._component && this._component.$destroy();
        this.container.parentNode.removeChild(this.container);
        this.container = null;
        this._component = null;
      }
    },
    renderComponent: function renderComponent() {
      var props2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var ready = arguments[1];
      var visible11 = this.visible, forceRender = this.forceRender, getContainer5 = this.getContainer, parent2 = this.parent;
      var self2 = this;
      if (visible11 || parent2._component || parent2.$refs._component || forceRender) {
        var el = this.componentEl;
        if (!this.container) {
          this.container = getContainer5();
          el = document.createElement("div");
          this.componentEl = el;
          this.container.appendChild(el);
        }
        var com = { component: self2.getComponent(props2) };
        if (!this._component) {
          this._component = new this.$root.constructor({
            el,
            parent: self2,
            data: {
              _com: com
            },
            mounted: function mounted70() {
              this.$nextTick(function() {
                if (ready) {
                  ready.call(self2);
                }
              });
            },
            updated: function updated46() {
              this.$nextTick(function() {
                if (ready) {
                  ready.call(self2);
                }
              });
            },
            methods: {
              setComponent: function setComponent(_com) {
                this.$data._com = _com;
              }
            },
            render: function render249() {
              return this.$data._com.component;
            }
          });
        } else {
          this._component.setComponent(com);
        }
      }
    }
  },
  render: function render15() {
    return this.children({
      renderComponent: this.renderComponent,
      removeContainer: this.removeContainer
    });
  }
};
Vue.use(_default$3, { name: "ant-ref" });
function returnEmptyString() {
  return "";
}
function returnDocument() {
  return window.document;
}
var ALL_HANDLERS = ["click", "mousedown", "touchstart", "mouseenter", "mouseleave", "focus", "blur", "contextmenu"];
var Trigger = {
  name: "Trigger",
  mixins: [BaseMixin],
  props: {
    action: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).def([]),
    showAction: PropTypes.any.def([]),
    hideAction: PropTypes.any.def([]),
    getPopupClassNameFromAlign: PropTypes.any.def(returnEmptyString),
    afterPopupVisibleChange: PropTypes.func.def(noop$W),
    popup: PropTypes.any,
    popupStyle: PropTypes.object.def(function() {
      return {};
    }),
    prefixCls: PropTypes.string.def("rc-trigger-popup"),
    popupClassName: PropTypes.string.def(""),
    popupPlacement: PropTypes.string,
    builtinPlacements: PropTypes.object,
    popupTransitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    popupAnimation: PropTypes.any,
    mouseEnterDelay: PropTypes.number.def(0),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    zIndex: PropTypes.number,
    focusDelay: PropTypes.number.def(0),
    blurDelay: PropTypes.number.def(0.15),
    getPopupContainer: PropTypes.func,
    getDocument: PropTypes.func.def(returnDocument),
    forceRender: PropTypes.bool,
    destroyPopupOnHide: PropTypes.bool.def(false),
    mask: PropTypes.bool.def(false),
    maskClosable: PropTypes.bool.def(true),
    popupAlign: PropTypes.object.def(function() {
      return {};
    }),
    popupVisible: PropTypes.bool,
    defaultPopupVisible: PropTypes.bool.def(false),
    maskTransitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    maskAnimation: PropTypes.string,
    stretch: PropTypes.string,
    alignPoint: PropTypes.bool
  },
  provide: function provide3() {
    return {
      vcTriggerContext: this
    };
  },
  inject: {
    vcTriggerContext: { "default": function _default9() {
      return {};
    } },
    savePopupRef: { "default": function _default10() {
      return noop$W;
    } },
    dialogContext: { "default": function _default11() {
      return null;
    } }
  },
  data: function data6() {
    var _this = this;
    var props2 = this.$props;
    var popupVisible4 = void 0;
    if (hasProp(this, "popupVisible")) {
      popupVisible4 = !!props2.popupVisible;
    } else {
      popupVisible4 = !!props2.defaultPopupVisible;
    }
    ALL_HANDLERS.forEach(function(h) {
      _this["fire" + h] = function(e) {
        _this.fireEvents(h, e);
      };
    });
    return {
      prevPopupVisible: popupVisible4,
      sPopupVisible: popupVisible4,
      point: null
    };
  },
  watch: {
    popupVisible: function popupVisible(val) {
      if (val !== void 0) {
        this.prevPopupVisible = this.sPopupVisible;
        this.sPopupVisible = val;
      }
    }
  },
  deactivated: function deactivated() {
    this.setPopupVisible(false);
  },
  mounted: function mounted8() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.renderComponent(null);
      _this2.updatedCal();
    });
  },
  updated: function updated7() {
    var _this3 = this;
    var triggerAfterPopupVisibleChange = function triggerAfterPopupVisibleChange2() {
      if (_this3.sPopupVisible !== _this3.prevPopupVisible) {
        _this3.afterPopupVisibleChange(_this3.sPopupVisible);
      }
      _this3.prevPopupVisible = _this3.sPopupVisible;
    };
    this.renderComponent(null, triggerAfterPopupVisibleChange);
    this.$nextTick(function() {
      _this3.updatedCal();
    });
  },
  beforeDestroy: function beforeDestroy8() {
    this.clearDelayTimer();
    this.clearOutsideHandler();
    clearTimeout(this.mouseDownTimeout);
  },
  methods: {
    updatedCal: function updatedCal() {
      var props2 = this.$props;
      var state = this.$data;
      if (state.sPopupVisible) {
        var currentDocument = void 0;
        if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextmenuToShow())) {
          currentDocument = props2.getDocument();
          this.clickOutsideHandler = addEventListenerWrap(currentDocument, "mousedown", this.onDocumentClick);
        }
        if (!this.touchOutsideHandler) {
          currentDocument = currentDocument || props2.getDocument();
          this.touchOutsideHandler = addEventListenerWrap(currentDocument, "touchstart", this.onDocumentClick);
        }
        if (!this.contextmenuOutsideHandler1 && this.isContextmenuToShow()) {
          currentDocument = currentDocument || props2.getDocument();
          this.contextmenuOutsideHandler1 = addEventListenerWrap(currentDocument, "scroll", this.onContextmenuClose);
        }
        if (!this.contextmenuOutsideHandler2 && this.isContextmenuToShow()) {
          this.contextmenuOutsideHandler2 = addEventListenerWrap(window, "blur", this.onContextmenuClose);
        }
      } else {
        this.clearOutsideHandler();
      }
    },
    onMouseenter: function onMouseenter(e) {
      var mouseEnterDelay = this.$props.mouseEnterDelay;
      this.fireEvents("mouseenter", e);
      this.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);
    },
    onMouseMove: function onMouseMove(e) {
      this.fireEvents("mousemove", e);
      this.setPoint(e);
    },
    onMouseleave: function onMouseleave(e) {
      this.fireEvents("mouseleave", e);
      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onPopupMouseenter: function onPopupMouseenter() {
      this.clearDelayTimer();
    },
    onPopupMouseleave: function onPopupMouseleave(e) {
      if (e && e.relatedTarget && !e.relatedTarget.setTimeout && this._component && this._component.getPopupDomNode && contains(this._component.getPopupDomNode(), e.relatedTarget)) {
        return;
      }
      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onFocus: function onFocus(e) {
      this.fireEvents("focus", e);
      this.clearDelayTimer();
      if (this.isFocusToShow()) {
        this.focusTime = Date.now();
        this.delaySetPopupVisible(true, this.$props.focusDelay);
      }
    },
    onMousedown: function onMousedown(e) {
      this.fireEvents("mousedown", e);
      this.preClickTime = Date.now();
    },
    onTouchstart: function onTouchstart(e) {
      this.fireEvents("touchstart", e);
      this.preTouchTime = Date.now();
    },
    onBlur: function onBlur(e) {
      if (!contains(e.target, e.relatedTarget || document.activeElement)) {
        this.fireEvents("blur", e);
        this.clearDelayTimer();
        if (this.isBlurToHide()) {
          this.delaySetPopupVisible(false, this.$props.blurDelay);
        }
      }
    },
    onContextmenu: function onContextmenu(e) {
      e.preventDefault();
      this.fireEvents("contextmenu", e);
      this.setPopupVisible(true, e);
    },
    onContextmenuClose: function onContextmenuClose() {
      if (this.isContextmenuToShow()) {
        this.close();
      }
    },
    onClick: function onClick(event) {
      this.fireEvents("click", event);
      if (this.focusTime) {
        var preTime = void 0;
        if (this.preClickTime && this.preTouchTime) {
          preTime = Math.min(this.preClickTime, this.preTouchTime);
        } else if (this.preClickTime) {
          preTime = this.preClickTime;
        } else if (this.preTouchTime) {
          preTime = this.preTouchTime;
        }
        if (Math.abs(preTime - this.focusTime) < 20) {
          return;
        }
        this.focusTime = 0;
      }
      this.preClickTime = 0;
      this.preTouchTime = 0;
      if (this.isClickToShow() && (this.isClickToHide() || this.isBlurToHide()) && event && event.preventDefault) {
        event.preventDefault();
      }
      if (event && event.domEvent) {
        event.domEvent.preventDefault();
      }
      var nextVisible = !this.$data.sPopupVisible;
      if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
        this.setPopupVisible(!this.$data.sPopupVisible, event);
      }
    },
    onPopupMouseDown: function onPopupMouseDown() {
      var _this4 = this;
      var _vcTriggerContext = this.vcTriggerContext, vcTriggerContext = _vcTriggerContext === void 0 ? {} : _vcTriggerContext;
      this.hasPopupMouseDown = true;
      clearTimeout(this.mouseDownTimeout);
      this.mouseDownTimeout = setTimeout(function() {
        _this4.hasPopupMouseDown = false;
      }, 0);
      if (vcTriggerContext.onPopupMouseDown) {
        vcTriggerContext.onPopupMouseDown.apply(vcTriggerContext, arguments);
      }
    },
    onDocumentClick: function onDocumentClick(event) {
      if (this.$props.mask && !this.$props.maskClosable) {
        return;
      }
      var target2 = event.target;
      var root2 = this.$el;
      if (!contains(root2, target2) && !this.hasPopupMouseDown) {
        this.close();
      }
    },
    getPopupDomNode: function getPopupDomNode2() {
      if (this._component && this._component.getPopupDomNode) {
        return this._component.getPopupDomNode();
      }
      return null;
    },
    getRootDomNode: function getRootDomNode() {
      return this.$el;
    },
    handleGetPopupClassFromAlign: function handleGetPopupClassFromAlign(align) {
      var className = [];
      var props2 = this.$props;
      var popupPlacement = props2.popupPlacement, builtinPlacements = props2.builtinPlacements, prefixCls2 = props2.prefixCls, alignPoint2 = props2.alignPoint, getPopupClassNameFromAlign = props2.getPopupClassNameFromAlign;
      if (popupPlacement && builtinPlacements) {
        className.push(getAlignPopupClassName(builtinPlacements, prefixCls2, align, alignPoint2));
      }
      if (getPopupClassNameFromAlign) {
        className.push(getPopupClassNameFromAlign(align));
      }
      return className.join(" ");
    },
    getPopupAlign: function getPopupAlign() {
      var props2 = this.$props;
      var popupPlacement = props2.popupPlacement, popupAlign = props2.popupAlign, builtinPlacements = props2.builtinPlacements;
      if (popupPlacement && builtinPlacements) {
        return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);
      }
      return popupAlign;
    },
    savePopup: function savePopup(node) {
      this._component = node;
      this.savePopupRef(node);
    },
    getComponent: function getComponent() {
      var h = this.$createElement;
      var self2 = this;
      var mouseProps = {};
      if (this.isMouseEnterToShow()) {
        mouseProps.mouseenter = self2.onPopupMouseenter;
      }
      if (this.isMouseLeaveToHide()) {
        mouseProps.mouseleave = self2.onPopupMouseleave;
      }
      mouseProps.mousedown = this.onPopupMouseDown;
      mouseProps.touchstart = this.onPopupMouseDown;
      var handleGetPopupClassFromAlign2 = self2.handleGetPopupClassFromAlign, getRootDomNode2 = self2.getRootDomNode, getContainer5 = self2.getContainer;
      var _self$$props = self2.$props, prefixCls2 = _self$$props.prefixCls, destroyPopupOnHide = _self$$props.destroyPopupOnHide, popupClassName = _self$$props.popupClassName, action = _self$$props.action, popupAnimation = _self$$props.popupAnimation, popupTransitionName = _self$$props.popupTransitionName, popupStyle = _self$$props.popupStyle, mask = _self$$props.mask, maskAnimation = _self$$props.maskAnimation, maskTransitionName = _self$$props.maskTransitionName, zIndex = _self$$props.zIndex, stretch = _self$$props.stretch, alignPoint2 = _self$$props.alignPoint;
      var _$data = this.$data, sPopupVisible = _$data.sPopupVisible, point = _$data.point;
      var align = this.getPopupAlign();
      var popupProps = {
        props: {
          prefixCls: prefixCls2,
          destroyPopupOnHide,
          visible: sPopupVisible,
          point: alignPoint2 && point,
          action,
          align,
          animation: popupAnimation,
          getClassNameFromAlign: handleGetPopupClassFromAlign2,
          stretch,
          getRootDomNode: getRootDomNode2,
          mask,
          zIndex,
          transitionName: popupTransitionName,
          maskAnimation,
          maskTransitionName,
          getContainer: getContainer5,
          popupClassName,
          popupStyle
        },
        on: _default$6({
          align: getListeners(this).popupAlign || noop$W
        }, mouseProps),
        directives: [{
          name: "ant-ref",
          value: this.savePopup
        }]
      };
      return h(
        Popup,
        popupProps,
        [getComponentFromProp(self2, "popup")]
      );
    },
    getContainer: function getContainer() {
      var props2 = this.$props, dialogContext = this.dialogContext;
      var popupContainer = document.createElement("div");
      popupContainer.style.position = "absolute";
      popupContainer.style.top = "0";
      popupContainer.style.left = "0";
      popupContainer.style.width = "100%";
      var mountNode = props2.getPopupContainer ? props2.getPopupContainer(this.$el, dialogContext) : props2.getDocument().body;
      mountNode.appendChild(popupContainer);
      this.popupContainer = popupContainer;
      return popupContainer;
    },
    setPopupVisible: function setPopupVisible(sPopupVisible, event) {
      var alignPoint2 = this.alignPoint, prevPopupVisible = this.sPopupVisible;
      this.clearDelayTimer();
      if (prevPopupVisible !== sPopupVisible) {
        if (!hasProp(this, "popupVisible")) {
          this.setState({
            sPopupVisible,
            prevPopupVisible
          });
        }
        var listeners = getListeners(this);
        listeners.popupVisibleChange && listeners.popupVisibleChange(sPopupVisible);
      }
      if (alignPoint2 && event) {
        this.setPoint(event);
      }
    },
    setPoint: function setPoint(point) {
      var alignPoint2 = this.$props.alignPoint;
      if (!alignPoint2 || !point)
        return;
      this.setState({
        point: {
          pageX: point.pageX,
          pageY: point.pageY
        }
      });
    },
    delaySetPopupVisible: function delaySetPopupVisible(visible11, delayS, event) {
      var _this5 = this;
      var delay = delayS * 1e3;
      this.clearDelayTimer();
      if (delay) {
        var point = event ? { pageX: event.pageX, pageY: event.pageY } : null;
        this.delayTimer = requestAnimationTimeout(function() {
          _this5.setPopupVisible(visible11, point);
          _this5.clearDelayTimer();
        }, delay);
      } else {
        this.setPopupVisible(visible11, event);
      }
    },
    clearDelayTimer: function clearDelayTimer() {
      if (this.delayTimer) {
        cancelAnimationTimeout(this.delayTimer);
        this.delayTimer = null;
      }
    },
    clearOutsideHandler: function clearOutsideHandler() {
      if (this.clickOutsideHandler) {
        this.clickOutsideHandler.remove();
        this.clickOutsideHandler = null;
      }
      if (this.contextmenuOutsideHandler1) {
        this.contextmenuOutsideHandler1.remove();
        this.contextmenuOutsideHandler1 = null;
      }
      if (this.contextmenuOutsideHandler2) {
        this.contextmenuOutsideHandler2.remove();
        this.contextmenuOutsideHandler2 = null;
      }
      if (this.touchOutsideHandler) {
        this.touchOutsideHandler.remove();
        this.touchOutsideHandler = null;
      }
    },
    createTwoChains: function createTwoChains(event) {
      var fn = function fn2() {
      };
      var events = getListeners(this);
      if (this.childOriginEvents[event] && events[event]) {
        return this["fire" + event];
      }
      fn = this.childOriginEvents[event] || events[event] || fn;
      return fn;
    },
    isClickToShow: function isClickToShow() {
      var _$props = this.$props, action = _$props.action, showAction = _$props.showAction;
      return action.indexOf("click") !== -1 || showAction.indexOf("click") !== -1;
    },
    isContextmenuToShow: function isContextmenuToShow() {
      var _$props2 = this.$props, action = _$props2.action, showAction = _$props2.showAction;
      return action.indexOf("contextmenu") !== -1 || showAction.indexOf("contextmenu") !== -1;
    },
    isClickToHide: function isClickToHide() {
      var _$props3 = this.$props, action = _$props3.action, hideAction = _$props3.hideAction;
      return action.indexOf("click") !== -1 || hideAction.indexOf("click") !== -1;
    },
    isMouseEnterToShow: function isMouseEnterToShow() {
      var _$props4 = this.$props, action = _$props4.action, showAction = _$props4.showAction;
      return action.indexOf("hover") !== -1 || showAction.indexOf("mouseenter") !== -1;
    },
    isMouseLeaveToHide: function isMouseLeaveToHide() {
      var _$props5 = this.$props, action = _$props5.action, hideAction = _$props5.hideAction;
      return action.indexOf("hover") !== -1 || hideAction.indexOf("mouseleave") !== -1;
    },
    isFocusToShow: function isFocusToShow() {
      var _$props6 = this.$props, action = _$props6.action, showAction = _$props6.showAction;
      return action.indexOf("focus") !== -1 || showAction.indexOf("focus") !== -1;
    },
    isBlurToHide: function isBlurToHide() {
      var _$props7 = this.$props, action = _$props7.action, hideAction = _$props7.hideAction;
      return action.indexOf("focus") !== -1 || hideAction.indexOf("blur") !== -1;
    },
    forcePopupAlign: function forcePopupAlign() {
      if (this.$data.sPopupVisible && this._component && this._component.$refs.alignInstance) {
        this._component.$refs.alignInstance.forceAlign();
      }
    },
    fireEvents: function fireEvents(type3, e) {
      if (this.childOriginEvents[type3]) {
        this.childOriginEvents[type3](e);
      }
      this.__emit(type3, e);
    },
    close: function close() {
      this.setPopupVisible(false);
    }
  },
  render: function render16() {
    var _this6 = this;
    var h = arguments[0];
    var sPopupVisible = this.sPopupVisible;
    var children = filterEmpty(this.$slots["default"]);
    var _$props8 = this.$props, forceRender = _$props8.forceRender, alignPoint2 = _$props8.alignPoint;
    if (children.length > 1) {
      warning$4(false, "Trigger $slots.default.length > 1, just support only one default", true);
    }
    var child = children[0];
    this.childOriginEvents = getDataEvents(child);
    var newChildProps = {
      props: {},
      nativeOn: {},
      key: "trigger"
    };
    if (this.isContextmenuToShow()) {
      newChildProps.nativeOn.contextmenu = this.onContextmenu;
    } else {
      newChildProps.nativeOn.contextmenu = this.createTwoChains("contextmenu");
    }
    if (this.isClickToHide() || this.isClickToShow()) {
      newChildProps.nativeOn.click = this.onClick;
      newChildProps.nativeOn.mousedown = this.onMousedown;
      newChildProps.nativeOn.touchstart = this.onTouchstart;
    } else {
      newChildProps.nativeOn.click = this.createTwoChains("click");
      newChildProps.nativeOn.mousedown = this.createTwoChains("mousedown");
      newChildProps.nativeOn.touchstart = this.createTwoChains("onTouchstart");
    }
    if (this.isMouseEnterToShow()) {
      newChildProps.nativeOn.mouseenter = this.onMouseenter;
      if (alignPoint2) {
        newChildProps.nativeOn.mousemove = this.onMouseMove;
      }
    } else {
      newChildProps.nativeOn.mouseenter = this.createTwoChains("mouseenter");
    }
    if (this.isMouseLeaveToHide()) {
      newChildProps.nativeOn.mouseleave = this.onMouseleave;
    } else {
      newChildProps.nativeOn.mouseleave = this.createTwoChains("mouseleave");
    }
    if (this.isFocusToShow() || this.isBlurToHide()) {
      newChildProps.nativeOn.focus = this.onFocus;
      newChildProps.nativeOn.blur = this.onBlur;
    } else {
      newChildProps.nativeOn.focus = this.createTwoChains("focus");
      newChildProps.nativeOn.blur = function(e) {
        if (e && (!e.relatedTarget || !contains(e.target, e.relatedTarget))) {
          _this6.createTwoChains("blur")(e);
        }
      };
    }
    this.trigger = cloneElement(child, newChildProps);
    return h(ContainerRender, {
      attrs: {
        parent: this,
        visible: sPopupVisible,
        autoMount: false,
        forceRender,
        getComponent: this.getComponent,
        getContainer: this.getContainer,
        children: function children2(_ref) {
          var renderComponent2 = _ref.renderComponent;
          _this6.renderComponent = renderComponent2;
          return _this6.trigger;
        }
      }
    });
  }
};
var autoAdjustOverflow$4 = {
  adjustX: 1,
  adjustY: 1
};
var placements$7 = {
  topLeft: {
    points: ["bl", "tl"],
    overflow: autoAdjustOverflow$4,
    offset: [0, -7]
  },
  bottomLeft: {
    points: ["tl", "bl"],
    overflow: autoAdjustOverflow$4,
    offset: [0, 7]
  },
  leftTop: {
    points: ["tr", "tl"],
    overflow: autoAdjustOverflow$4,
    offset: [-4, 0]
  },
  rightTop: {
    points: ["tl", "tr"],
    overflow: autoAdjustOverflow$4,
    offset: [4, 0]
  }
};
var placements$8 = placements$7;
var noop$V = function noop2() {
};
var getTransitionProps = function getTransitionProps2(transitionName2) {
  var opt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var beforeEnter = opt.beforeEnter, enter2 = opt.enter, afterEnter = opt.afterEnter, leave2 = opt.leave, afterLeave = opt.afterLeave, _opt$appear = opt.appear, appear = _opt$appear === void 0 ? true : _opt$appear, tag = opt.tag, nativeOn = opt.nativeOn;
  var transitionProps = {
    props: {
      appear,
      css: false
    },
    on: {
      beforeEnter: beforeEnter || noop$V,
      enter: enter2 || function(el, done) {
        cssAnimation$1(el, transitionName2 + "-enter", done);
      },
      afterEnter: afterEnter || noop$V,
      leave: leave2 || function(el, done) {
        cssAnimation$1(el, transitionName2 + "-leave", done);
      },
      afterLeave: afterLeave || noop$V
    },
    nativeOn
  };
  if (tag) {
    transitionProps.tag = tag;
  }
  return transitionProps;
};
var getTransitionProps$1 = getTransitionProps;
var guid = 0;
var popupPlacementMap = {
  horizontal: "bottomLeft",
  vertical: "rightTop",
  "vertical-left": "rightTop",
  "vertical-right": "leftTop"
};
var updateDefaultActiveFirst = function updateDefaultActiveFirst2(store2, eventKey, defaultActiveFirst) {
  var menuId = getMenuIdFromSubMenuEventKey(eventKey);
  var state = store2.getState();
  store2.setState({
    defaultActiveFirst: _default$6({}, state.defaultActiveFirst, _default$8({}, menuId, defaultActiveFirst))
  });
};
var SubMenu$1 = {
  name: "SubMenu",
  props: {
    parentMenu: PropTypes.object,
    title: PropTypes.any,
    selectedKeys: PropTypes.array.def([]),
    openKeys: PropTypes.array.def([]),
    openChange: PropTypes.func.def(noop$X),
    rootPrefixCls: PropTypes.string,
    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    multiple: PropTypes.bool,
    active: PropTypes.bool,
    isRootMenu: PropTypes.bool.def(false),
    index: PropTypes.number,
    triggerSubMenuAction: PropTypes.string,
    popupClassName: PropTypes.string,
    getPopupContainer: PropTypes.func,
    forceSubMenuRender: PropTypes.bool,
    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    disabled: PropTypes.bool,
    subMenuOpenDelay: PropTypes.number.def(0.1),
    subMenuCloseDelay: PropTypes.number.def(0.1),
    level: PropTypes.number.def(1),
    inlineIndent: PropTypes.number.def(24),
    openTransitionName: PropTypes.string,
    popupOffset: PropTypes.array,
    isOpen: PropTypes.bool,
    store: PropTypes.object,
    mode: PropTypes.oneOf(["horizontal", "vertical", "vertical-left", "vertical-right", "inline"]).def("vertical"),
    manualRef: PropTypes.func.def(noop$X),
    builtinPlacements: PropTypes.object.def(function() {
      return {};
    }),
    itemIcon: PropTypes.any,
    expandIcon: PropTypes.any,
    subMenuKey: PropTypes.string
  },
  mixins: [BaseMixin],
  isSubMenu: true,
  data: function data7() {
    var props2 = this.$props;
    var store2 = props2.store;
    var eventKey = props2.eventKey;
    var defaultActiveFirst = store2.getState().defaultActiveFirst;
    var value27 = false;
    if (defaultActiveFirst) {
      value27 = defaultActiveFirst[eventKey];
    }
    updateDefaultActiveFirst(store2, eventKey, value27);
    return {};
  },
  mounted: function mounted9() {
    var _this = this;
    this.$nextTick(function() {
      _this.handleUpdated();
    });
  },
  updated: function updated8() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.handleUpdated();
    });
  },
  beforeDestroy: function beforeDestroy9() {
    var eventKey = this.eventKey;
    this.__emit("destroy", eventKey);
    if (this.minWidthTimeout) {
      cancelAnimationTimeout(this.minWidthTimeout);
      this.minWidthTimeout = null;
    }
    if (this.mouseenterTimeout) {
      cancelAnimationTimeout(this.mouseenterTimeout);
      this.mouseenterTimeout = null;
    }
  },
  methods: {
    handleUpdated: function handleUpdated() {
      var _this3 = this;
      var _$props = this.$props, mode5 = _$props.mode, parentMenu = _$props.parentMenu, manualRef = _$props.manualRef;
      if (manualRef) {
        manualRef(this);
      }
      if (mode5 !== "horizontal" || !parentMenu.isRootMenu || !this.isOpen) {
        return;
      }
      this.minWidthTimeout = requestAnimationTimeout(function() {
        return _this3.adjustWidth();
      }, 0);
    },
    onKeyDown: function onKeyDown(e) {
      var keyCode = e.keyCode;
      var menu = this.menuInstance;
      var _$props2 = this.$props, store2 = _$props2.store, isOpen = _$props2.isOpen;
      if (keyCode === KeyCode$2.ENTER) {
        this.onTitleClick(e);
        updateDefaultActiveFirst(store2, this.eventKey, true);
        return true;
      }
      if (keyCode === KeyCode$2.RIGHT) {
        if (isOpen) {
          menu.onKeyDown(e);
        } else {
          this.triggerOpenChange(true);
          updateDefaultActiveFirst(store2, this.eventKey, true);
        }
        return true;
      }
      if (keyCode === KeyCode$2.LEFT) {
        var handled = void 0;
        if (isOpen) {
          handled = menu.onKeyDown(e);
        } else {
          return void 0;
        }
        if (!handled) {
          this.triggerOpenChange(false);
          handled = true;
        }
        return handled;
      }
      if (isOpen && (keyCode === KeyCode$2.UP || keyCode === KeyCode$2.DOWN)) {
        return menu.onKeyDown(e);
      }
      return void 0;
    },
    onPopupVisibleChange: function onPopupVisibleChange(visible11) {
      this.triggerOpenChange(visible11, visible11 ? "mouseenter" : "mouseleave");
    },
    onMouseEnter: function onMouseEnter(e) {
      var _$props3 = this.$props, key2 = _$props3.eventKey, store2 = _$props3.store;
      updateDefaultActiveFirst(store2, key2, false);
      this.__emit("mouseenter", {
        key: key2,
        domEvent: e
      });
    },
    onMouseLeave: function onMouseLeave(e) {
      var eventKey = this.eventKey, parentMenu = this.parentMenu;
      parentMenu.subMenuInstance = this;
      this.__emit("mouseleave", {
        key: eventKey,
        domEvent: e
      });
    },
    onTitleMouseEnter: function onTitleMouseEnter(domEvent) {
      var key2 = this.$props.eventKey;
      this.__emit("itemHover", {
        key: key2,
        hover: true
      });
      this.__emit("titleMouseenter", {
        key: key2,
        domEvent
      });
    },
    onTitleMouseLeave: function onTitleMouseLeave(e) {
      var eventKey = this.eventKey, parentMenu = this.parentMenu;
      parentMenu.subMenuInstance = this;
      this.__emit("itemHover", {
        key: eventKey,
        hover: false
      });
      this.__emit("titleMouseleave", {
        key: eventKey,
        domEvent: e
      });
    },
    onTitleClick: function onTitleClick(e) {
      var _$props4 = this.$props, triggerSubMenuAction = _$props4.triggerSubMenuAction, eventKey = _$props4.eventKey, isOpen = _$props4.isOpen, store2 = _$props4.store;
      this.__emit("titleClick", {
        key: eventKey,
        domEvent: e
      });
      if (triggerSubMenuAction === "hover") {
        return;
      }
      this.triggerOpenChange(!isOpen, "click");
      updateDefaultActiveFirst(store2, eventKey, false);
    },
    onSubMenuClick: function onSubMenuClick(info3) {
      this.__emit("click", this.addKeyPath(info3));
    },
    getPrefixCls: function getPrefixCls2() {
      return this.$props.rootPrefixCls + "-submenu";
    },
    getActiveClassName: function getActiveClassName() {
      return this.getPrefixCls() + "-active";
    },
    getDisabledClassName: function getDisabledClassName() {
      return this.getPrefixCls() + "-disabled";
    },
    getSelectedClassName: function getSelectedClassName() {
      return this.getPrefixCls() + "-selected";
    },
    getOpenClassName: function getOpenClassName() {
      return this.$props.rootPrefixCls + "-submenu-open";
    },
    saveMenuInstance: function saveMenuInstance(c) {
      this.menuInstance = c;
    },
    addKeyPath: function addKeyPath(info3) {
      return _default$6({}, info3, {
        keyPath: (info3.keyPath || []).concat(this.$props.eventKey)
      });
    },
    triggerOpenChange: function triggerOpenChange(open6, type3) {
      var _this4 = this;
      var key2 = this.$props.eventKey;
      var openChange = function openChange2() {
        _this4.__emit("openChange", {
          key: key2,
          item: _this4,
          trigger: type3,
          open: open6
        });
      };
      if (type3 === "mouseenter") {
        this.mouseenterTimeout = requestAnimationTimeout(function() {
          openChange();
        }, 0);
      } else {
        openChange();
      }
    },
    isChildrenSelected: function isChildrenSelected() {
      var ret = { find: false };
      loopMenuItemRecursively(this.$slots["default"], this.$props.selectedKeys, ret);
      return ret.find;
    },
    adjustWidth: function adjustWidth() {
      if (!this.$refs.subMenuTitle || !this.menuInstance) {
        return;
      }
      var popupMenu = this.menuInstance.$el;
      if (popupMenu.offsetWidth >= this.$refs.subMenuTitle.offsetWidth) {
        return;
      }
      popupMenu.style.minWidth = this.$refs.subMenuTitle.offsetWidth + "px";
    },
    renderChildren: function renderChildren(children) {
      var h = this.$createElement;
      var props2 = this.$props;
      var _getListeners = getListeners(this), select2 = _getListeners.select, deselect = _getListeners.deselect, openChange = _getListeners.openChange;
      var subPopupMenuProps = {
        props: {
          mode: props2.mode === "horizontal" ? "vertical" : props2.mode,
          visible: props2.isOpen,
          level: props2.level + 1,
          inlineIndent: props2.inlineIndent,
          focusable: false,
          selectedKeys: props2.selectedKeys,
          eventKey: props2.eventKey + "-menu-",
          openKeys: props2.openKeys,
          openTransitionName: props2.openTransitionName,
          openAnimation: props2.openAnimation,
          subMenuOpenDelay: props2.subMenuOpenDelay,
          parentMenu: this,
          subMenuCloseDelay: props2.subMenuCloseDelay,
          forceSubMenuRender: props2.forceSubMenuRender,
          triggerSubMenuAction: props2.triggerSubMenuAction,
          builtinPlacements: props2.builtinPlacements,
          defaultActiveFirst: props2.store.getState().defaultActiveFirst[getMenuIdFromSubMenuEventKey(props2.eventKey)],
          multiple: props2.multiple,
          prefixCls: props2.rootPrefixCls,
          manualRef: this.saveMenuInstance,
          itemIcon: getComponentFromProp(this, "itemIcon"),
          expandIcon: getComponentFromProp(this, "expandIcon"),
          children
        },
        on: {
          click: this.onSubMenuClick,
          select: select2,
          deselect,
          openChange
        },
        id: this.internalMenuId
      };
      var baseProps = subPopupMenuProps.props;
      var haveRendered = this.haveRendered;
      this.haveRendered = true;
      this.haveOpened = this.haveOpened || baseProps.visible || baseProps.forceSubMenuRender;
      if (!this.haveOpened) {
        return h("div");
      }
      var transitionAppear = haveRendered || !baseProps.visible || !baseProps.mode === "inline";
      subPopupMenuProps["class"] = " " + baseProps.prefixCls + "-sub";
      var animProps = { appear: transitionAppear, css: false };
      var transitionProps = {
        props: animProps,
        on: {}
      };
      if (baseProps.openTransitionName) {
        transitionProps = getTransitionProps$1(baseProps.openTransitionName, {
          appear: transitionAppear
        });
      } else if (_default$7(baseProps.openAnimation) === "object") {
        animProps = _default$6({}, animProps, baseProps.openAnimation.props || {});
        if (!transitionAppear) {
          animProps.appear = false;
        }
      } else if (typeof baseProps.openAnimation === "string") {
        transitionProps = getTransitionProps$1(baseProps.openAnimation, { appear: transitionAppear });
      }
      if (_default$7(baseProps.openAnimation) === "object" && baseProps.openAnimation.on) {
        transitionProps.on = baseProps.openAnimation.on;
      }
      return h(
        "transition",
        transitionProps,
        [h(SubPopupMenu$1, _mergeJSXProps([{
          directives: [{
            name: "show",
            value: props2.isOpen
          }]
        }, subPopupMenuProps]))]
      );
    }
  },
  render: function render17() {
    var _className, _attrs;
    var h = arguments[0];
    var props2 = this.$props;
    var rootPrefixCls = this.rootPrefixCls, parentMenu = this.parentMenu;
    var isOpen = props2.isOpen;
    var prefixCls2 = this.getPrefixCls();
    var isInlineMode = props2.mode === "inline";
    var className = (_className = {}, _default$8(_className, prefixCls2, true), _default$8(_className, prefixCls2 + "-" + props2.mode, true), _default$8(_className, this.getOpenClassName(), isOpen), _default$8(_className, this.getActiveClassName(), props2.active || isOpen && !isInlineMode), _default$8(_className, this.getDisabledClassName(), props2.disabled), _default$8(_className, this.getSelectedClassName(), this.isChildrenSelected()), _className);
    if (!this.internalMenuId) {
      if (props2.eventKey) {
        this.internalMenuId = props2.eventKey + "$Menu";
      } else {
        this.internalMenuId = "$__$" + ++guid + "$Menu";
      }
    }
    var mouseEvents = {};
    var titleClickEvents = {};
    var titleMouseEvents = {};
    if (!props2.disabled) {
      mouseEvents = {
        mouseleave: this.onMouseLeave,
        mouseenter: this.onMouseEnter
      };
      titleClickEvents = {
        click: this.onTitleClick
      };
      titleMouseEvents = {
        mouseenter: this.onTitleMouseEnter,
        mouseleave: this.onTitleMouseLeave
      };
    }
    var style3 = {};
    if (isInlineMode) {
      style3.paddingLeft = props2.inlineIndent * props2.level + "px";
    }
    var ariaOwns = {};
    if (isOpen) {
      ariaOwns = {
        "aria-owns": this.internalMenuId
      };
    }
    var titleProps = {
      attrs: _default$6({
        "aria-expanded": isOpen
      }, ariaOwns, {
        "aria-haspopup": "true",
        title: typeof props2.title === "string" ? props2.title : void 0
      }),
      on: _default$6({}, titleMouseEvents, titleClickEvents),
      style: style3,
      "class": prefixCls2 + "-title",
      ref: "subMenuTitle"
    };
    var icon = null;
    if (props2.mode !== "horizontal") {
      icon = getComponentFromProp(this, "expandIcon", props2);
    }
    var title = h(
      "div",
      titleProps,
      [getComponentFromProp(this, "title"), icon || h("i", { "class": prefixCls2 + "-arrow" })]
    );
    var children = this.renderChildren(filterEmpty(this.$slots["default"]));
    var getPopupContainer = this.parentMenu.isRootMenu ? this.parentMenu.getPopupContainer : function(triggerNode) {
      return triggerNode.parentNode;
    };
    var popupPlacement = popupPlacementMap[props2.mode];
    var popupAlign = props2.popupOffset ? { offset: props2.popupOffset } : {};
    var popupClassName = props2.mode === "inline" ? "" : props2.popupClassName;
    var liProps = {
      on: _default$6({}, omit$2(getListeners(this), ["click"]), mouseEvents),
      "class": className
    };
    return h(
      "li",
      _mergeJSXProps([liProps, {
        attrs: { role: "menuitem" }
      }]),
      [isInlineMode && title, isInlineMode && children, !isInlineMode && h(
        Trigger,
        {
          attrs: (_attrs = {
            prefixCls: prefixCls2,
            popupClassName: prefixCls2 + "-popup " + rootPrefixCls + "-" + parentMenu.theme + " " + (popupClassName || ""),
            getPopupContainer,
            builtinPlacements: placements$8
          }, _default$8(_attrs, "builtinPlacements", _default$6({}, placements$8, props2.builtinPlacements)), _default$8(_attrs, "popupPlacement", popupPlacement), _default$8(_attrs, "popupVisible", isOpen), _default$8(_attrs, "popupAlign", popupAlign), _default$8(_attrs, "action", props2.disabled ? [] : [props2.triggerSubMenuAction]), _default$8(_attrs, "mouseEnterDelay", props2.subMenuOpenDelay), _default$8(_attrs, "mouseLeaveDelay", props2.subMenuCloseDelay), _default$8(_attrs, "forceRender", props2.forceSubMenuRender), _attrs),
          on: {
            "popupVisibleChange": this.onPopupVisibleChange
          }
        },
        [h(
          "template",
          { slot: "popup" },
          [children]
        ), title]
      )]
    );
  }
};
var connected$1 = connect(function(_ref, _ref2) {
  var openKeys2 = _ref.openKeys, activeKey2 = _ref.activeKey, selectedKeys3 = _ref.selectedKeys;
  var eventKey = _ref2.eventKey, subMenuKey = _ref2.subMenuKey;
  return {
    isOpen: openKeys2.indexOf(eventKey) > -1,
    active: activeKey2[subMenuKey] === eventKey,
    selectedKeys: selectedKeys3
  };
})(SubMenu$1);
connected$1.isSubMenu = true;
var SubMenu$2 = connected$1;
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
var MENUITEM_OVERFLOWED_CLASSNAME = "menuitem-overflowed";
var FLOAT_PRECISION_ADJUST = 0.5;
if (canUseDOM) {
  require("mutationobserver-shim");
}
var DOMWrap = {
  name: "DOMWrap",
  mixins: [BaseMixin],
  data: function data8() {
    this.resizeObserver = null;
    this.mutationObserver = null;
    this.originalTotalWidth = 0;
    this.overflowedItems = [];
    this.menuItemSizes = [];
    return {
      lastVisibleIndex: void 0
    };
  },
  mounted: function mounted10() {
    var _this = this;
    this.$nextTick(function() {
      _this.setChildrenWidthAndResize();
      if (_this.level === 1 && _this.mode === "horizontal") {
        var menuUl = _this.$el;
        if (!menuUl) {
          return;
        }
        _this.resizeObserver = new ResizeObserver$2(function(entries) {
          entries.forEach(_this.setChildrenWidthAndResize);
        });
        [].slice.call(menuUl.children).concat(menuUl).forEach(function(el) {
          _this.resizeObserver.observe(el);
        });
        if (typeof MutationObserver !== "undefined") {
          _this.mutationObserver = new MutationObserver(function() {
            _this.resizeObserver.disconnect();
            [].slice.call(menuUl.children).concat(menuUl).forEach(function(el) {
              _this.resizeObserver.observe(el);
            });
            _this.setChildrenWidthAndResize();
          });
          _this.mutationObserver.observe(menuUl, {
            attributes: false,
            childList: true,
            subTree: false
          });
        }
      }
    });
  },
  beforeDestroy: function beforeDestroy10() {
    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    }
    if (this.mutationObserver) {
      this.mutationObserver.disconnect();
    }
  },
  methods: {
    getMenuItemNodes: function getMenuItemNodes() {
      var prefixCls2 = this.$props.prefixCls;
      var ul = this.$el;
      if (!ul) {
        return [];
      }
      return [].slice.call(ul.children).filter(function(node) {
        return node.className.split(" ").indexOf(prefixCls2 + "-overflowed-submenu") < 0;
      });
    },
    getOverflowedSubMenuItem: function getOverflowedSubMenuItem(keyPrefix, overflowedItems, renderPlaceholder) {
      var h = this.$createElement;
      var _$props = this.$props, overflowedIndicator = _$props.overflowedIndicator, level2 = _$props.level, mode5 = _$props.mode, prefixCls2 = _$props.prefixCls, theme = _$props.theme;
      if (level2 !== 1 || mode5 !== "horizontal") {
        return null;
      }
      var copy = this.$slots["default"][0];
      var _getPropsData = getPropsData(copy);
      _getPropsData.title;
      var rest = _default$2(_getPropsData, ["title"]);
      var events = getEvents(copy);
      var style3 = {};
      var key2 = keyPrefix + "-overflowed-indicator";
      var eventKey = keyPrefix + "-overflowed-indicator";
      if (overflowedItems.length === 0 && renderPlaceholder !== true) {
        style3 = {
          display: "none"
        };
      } else if (renderPlaceholder) {
        style3 = {
          visibility: "hidden",
          position: "absolute"
        };
        key2 = key2 + "-placeholder";
        eventKey = eventKey + "-placeholder";
      }
      var popupClassName = theme ? prefixCls2 + "-" + theme : "";
      var props2 = {};
      var on = {};
      menuAllProps.props.forEach(function(k) {
        if (rest[k] !== void 0) {
          props2[k] = rest[k];
        }
      });
      menuAllProps.on.forEach(function(k) {
        if (events[k] !== void 0) {
          on[k] = events[k];
        }
      });
      var subMenuProps = {
        props: _default$6({
          title: overflowedIndicator,
          popupClassName
        }, props2, {
          eventKey,
          disabled: false
        }),
        "class": prefixCls2 + "-overflowed-submenu",
        key: key2,
        style: style3,
        on
      };
      return h(
        SubMenu$2,
        subMenuProps,
        [overflowedItems]
      );
    },
    setChildrenWidthAndResize: function setChildrenWidthAndResize() {
      if (this.mode !== "horizontal") {
        return;
      }
      var ul = this.$el;
      if (!ul) {
        return;
      }
      var ulChildrenNodes = ul.children;
      if (!ulChildrenNodes || ulChildrenNodes.length === 0) {
        return;
      }
      var lastOverflowedIndicatorPlaceholder = ul.children[ulChildrenNodes.length - 1];
      setStyle$1(lastOverflowedIndicatorPlaceholder, "display", "inline-block");
      var menuItemNodes = this.getMenuItemNodes();
      var overflowedItems = menuItemNodes.filter(function(c) {
        return c.className.split(" ").indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0;
      });
      overflowedItems.forEach(function(c) {
        setStyle$1(c, "display", "inline-block");
      });
      this.menuItemSizes = menuItemNodes.map(function(c) {
        return getWidth(c);
      });
      overflowedItems.forEach(function(c) {
        setStyle$1(c, "display", "none");
      });
      this.overflowedIndicatorWidth = getWidth(ul.children[ul.children.length - 1]);
      this.originalTotalWidth = this.menuItemSizes.reduce(function(acc, cur) {
        return acc + cur;
      }, 0);
      this.handleResize();
      setStyle$1(lastOverflowedIndicatorPlaceholder, "display", "none");
    },
    handleResize: function handleResize() {
      var _this2 = this;
      if (this.mode !== "horizontal") {
        return;
      }
      var ul = this.$el;
      if (!ul) {
        return;
      }
      var width = getWidth(ul);
      this.overflowedItems = [];
      var currentSumWidth = 0;
      var lastVisibleIndex = void 0;
      if (this.originalTotalWidth > width + FLOAT_PRECISION_ADJUST) {
        lastVisibleIndex = -1;
        this.menuItemSizes.forEach(function(liWidth) {
          currentSumWidth += liWidth;
          if (currentSumWidth + _this2.overflowedIndicatorWidth <= width) {
            lastVisibleIndex += 1;
          }
        });
      }
      this.setState({ lastVisibleIndex });
    },
    renderChildren: function renderChildren2(children) {
      var _this3 = this;
      var lastVisibleIndex = this.$data.lastVisibleIndex;
      var className = getClass(this);
      return (children || []).reduce(function(acc, childNode, index2) {
        var item = childNode;
        var eventKey = getPropsData(childNode).eventKey;
        if (_this3.mode === "horizontal") {
          var overflowed = _this3.getOverflowedSubMenuItem(eventKey, []);
          if (lastVisibleIndex !== void 0 && className[_this3.prefixCls + "-root"] !== -1) {
            if (index2 > lastVisibleIndex) {
              item = cloneElement(
                childNode,
                {
                  style: { display: "none" },
                  props: { eventKey: eventKey + "-hidden" },
                  "class": MENUITEM_OVERFLOWED_CLASSNAME
                }
              );
            }
            if (index2 === lastVisibleIndex + 1) {
              _this3.overflowedItems = children.slice(lastVisibleIndex + 1).map(function(c) {
                return cloneElement(
                  c,
                  {
                    key: getPropsData(c).eventKey,
                    props: { mode: "vertical-left" }
                  }
                );
              });
              overflowed = _this3.getOverflowedSubMenuItem(eventKey, _this3.overflowedItems);
            }
          }
          var ret = [].concat(_default$5(acc), [overflowed, item]);
          if (index2 === children.length - 1) {
            ret.push(_this3.getOverflowedSubMenuItem(eventKey, [], true));
          }
          return ret;
        }
        return [].concat(_default$5(acc), [item]);
      }, []);
    }
  },
  render: function render18() {
    var h = arguments[0];
    var Tag2 = this.$props.tag;
    var tagProps = {
      on: getListeners(this)
    };
    return h(
      Tag2,
      tagProps,
      [this.renderChildren(this.$slots["default"])]
    );
  }
};
DOMWrap.props = {
  mode: PropTypes.oneOf(["horizontal", "vertical", "vertical-left", "vertical-right", "inline"]),
  prefixCls: PropTypes.string,
  level: PropTypes.number,
  theme: PropTypes.string,
  overflowedIndicator: PropTypes.node,
  visible: PropTypes.bool,
  hiddenClassName: PropTypes.string,
  tag: PropTypes.string.def("div")
};
var DOMWrap$1 = DOMWrap;
function allDisabled(arr) {
  if (!arr.length) {
    return true;
  }
  return arr.every(function(c) {
    return !!c.disabled;
  });
}
function updateActiveKey(store2, menuId, activeKey2) {
  var state = store2.getState();
  store2.setState({
    activeKey: _default$6({}, state.activeKey, _default$8({}, menuId, activeKey2))
  });
}
function getEventKey(props2) {
  return props2.eventKey || "0-menu-";
}
function saveRef$1(key2, c) {
  if (c) {
    var index2 = this.instanceArrayKeyIndexMap[key2];
    this.instanceArray[index2] = c;
  }
}
function getActiveKey(props2, originalActiveKey) {
  var activeKey2 = originalActiveKey;
  var eventKey = props2.eventKey, defaultActiveFirst = props2.defaultActiveFirst, children = props2.children;
  if (activeKey2 !== void 0 && activeKey2 !== null) {
    var found = void 0;
    loopMenuItem(children, function(c, i) {
      var propsData = c.componentOptions.propsData || {};
      if (c && !propsData.disabled && activeKey2 === getKeyFromChildrenIndex(c, eventKey, i)) {
        found = true;
      }
    });
    if (found) {
      return activeKey2;
    }
  }
  activeKey2 = null;
  if (defaultActiveFirst) {
    loopMenuItem(children, function(c, i) {
      var propsData = c.componentOptions.propsData || {};
      var noActiveKey = activeKey2 === null || activeKey2 === void 0;
      if (noActiveKey && c && !propsData.disabled) {
        activeKey2 = getKeyFromChildrenIndex(c, eventKey, i);
      }
    });
    return activeKey2;
  }
  return activeKey2;
}
var SubPopupMenu = {
  name: "SubPopupMenu",
  props: initDefaultProps({
    prefixCls: PropTypes.string,
    openTransitionName: PropTypes.string,
    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    openKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    visible: PropTypes.bool,
    parentMenu: PropTypes.object,
    eventKey: PropTypes.string,
    store: PropTypes.object,
    forceSubMenuRender: PropTypes.bool,
    focusable: PropTypes.bool,
    multiple: PropTypes.bool,
    defaultActiveFirst: PropTypes.bool,
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    defaultSelectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    defaultOpenKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    level: PropTypes.number,
    mode: PropTypes.oneOf(["horizontal", "vertical", "vertical-left", "vertical-right", "inline"]),
    triggerSubMenuAction: PropTypes.oneOf(["click", "hover"]),
    inlineIndent: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    manualRef: PropTypes.func,
    itemIcon: PropTypes.any,
    expandIcon: PropTypes.any,
    overflowedIndicator: PropTypes.any,
    children: PropTypes.any.def([]),
    __propsSymbol__: PropTypes.any
  }, {
    prefixCls: "rc-menu",
    mode: "vertical",
    level: 1,
    inlineIndent: 24,
    visible: true,
    focusable: true,
    manualRef: noop$X
  }),
  mixins: [BaseMixin],
  created: function created() {
    var props2 = getOptionProps(this);
    this.prevProps = _default$6({}, props2);
    props2.store.setState({
      activeKey: _default$6({}, props2.store.getState().activeKey, _default$8({}, props2.eventKey, getActiveKey(props2, props2.activeKey)))
    });
    this.instanceArray = [];
  },
  mounted: function mounted11() {
    if (this.manualRef) {
      this.manualRef(this);
    }
  },
  updated: function updated9() {
    var props2 = getOptionProps(this);
    var prevProps = this.prevProps;
    var originalActiveKey = "activeKey" in props2 ? props2.activeKey : props2.store.getState().activeKey[getEventKey(props2)];
    var activeKey2 = getActiveKey(props2, originalActiveKey);
    if (activeKey2 !== originalActiveKey) {
      updateActiveKey(props2.store, getEventKey(props2), activeKey2);
    } else if ("activeKey" in prevProps) {
      var prevActiveKey = getActiveKey(prevProps, prevProps.activeKey);
      if (activeKey2 !== prevActiveKey) {
        updateActiveKey(props2.store, getEventKey(props2), activeKey2);
      }
    }
    this.prevProps = _default$6({}, props2);
  },
  methods: {
    onKeyDown: function onKeyDown2(e, callback) {
      var keyCode = e.keyCode;
      var handled = void 0;
      this.getFlatInstanceArray().forEach(function(obj) {
        if (obj && obj.active && obj.onKeyDown) {
          handled = obj.onKeyDown(e);
        }
      });
      if (handled) {
        return 1;
      }
      var activeItem = null;
      if (keyCode === KeyCode$2.UP || keyCode === KeyCode$2.DOWN) {
        activeItem = this.step(keyCode === KeyCode$2.UP ? -1 : 1);
      }
      if (activeItem) {
        e.preventDefault();
        updateActiveKey(this.$props.store, getEventKey(this.$props), activeItem.eventKey);
        if (typeof callback === "function") {
          callback(activeItem);
        }
        return 1;
      }
      return void 0;
    },
    onItemHover: function onItemHover(e) {
      var key2 = e.key, hover = e.hover;
      updateActiveKey(this.$props.store, getEventKey(this.$props), hover ? key2 : null);
    },
    onDeselect: function onDeselect(selectInfo) {
      this.__emit("deselect", selectInfo);
    },
    onSelect: function onSelect(selectInfo) {
      this.__emit("select", selectInfo);
    },
    onClick: function onClick2(e) {
      this.__emit("click", e);
    },
    onOpenChange: function onOpenChange(e) {
      this.__emit("openChange", e);
    },
    onDestroy: function onDestroy(key2) {
      this.__emit("destroy", key2);
    },
    getFlatInstanceArray: function getFlatInstanceArray() {
      return this.instanceArray;
    },
    getOpenTransitionName: function getOpenTransitionName() {
      return this.$props.openTransitionName;
    },
    step: function step2(direction) {
      var children = this.getFlatInstanceArray();
      var activeKey2 = this.$props.store.getState().activeKey[getEventKey(this.$props)];
      var len = children.length;
      if (!len) {
        return null;
      }
      if (direction < 0) {
        children = children.concat().reverse();
      }
      var activeIndex = -1;
      children.every(function(c, ci) {
        if (c && c.eventKey === activeKey2) {
          activeIndex = ci;
          return false;
        }
        return true;
      });
      if (!this.defaultActiveFirst && activeIndex !== -1 && allDisabled(children.slice(activeIndex, len - 1))) {
        return void 0;
      }
      var start = (activeIndex + 1) % len;
      var i = start;
      do {
        var child = children[i];
        if (!child || child.disabled) {
          i = (i + 1) % len;
        } else {
          return child;
        }
      } while (i !== start);
      return null;
    },
    getIcon: function getIcon(instance, name) {
      if (instance.$createElement) {
        var temp = instance[name];
        if (temp !== void 0) {
          return temp;
        }
        return instance.$slots[name] || instance.$scopedSlots[name];
      } else {
        var _temp = getPropsData(instance)[name];
        if (_temp !== void 0) {
          return _temp;
        }
        var slotsProp = [];
        var componentOptions = instance.componentOptions || {};
        (componentOptions.children || []).forEach(function(child) {
          if (child.data && child.data.slot === name) {
            if (child.tag === "template") {
              slotsProp.push(child.children);
            } else {
              slotsProp.push(child);
            }
          }
        });
        return slotsProp.length ? slotsProp : void 0;
      }
    },
    renderCommonMenuItem: function renderCommonMenuItem(child, i, extraProps) {
      var _this = this;
      if (child.tag === void 0) {
        return child;
      }
      var state = this.$props.store.getState();
      var props2 = this.$props;
      var key2 = getKeyFromChildrenIndex(child, props2.eventKey, i);
      var childProps = child.componentOptions.propsData || {};
      var isActive = key2 === state.activeKey[getEventKey(this.$props)];
      if (!childProps.disabled) {
        this.instanceArrayKeyIndexMap[key2] = Object.keys(this.instanceArrayKeyIndexMap).length;
      }
      var childListeners = getEvents(child);
      var newChildProps = {
        props: _default$6({
          mode: childProps.mode || props2.mode,
          level: props2.level,
          inlineIndent: props2.inlineIndent,
          renderMenuItem: this.renderMenuItem,
          rootPrefixCls: props2.prefixCls,
          index: i,
          parentMenu: props2.parentMenu,
          manualRef: childProps.disabled ? noop$X : saveRef$1.bind(this, key2),
          eventKey: key2,
          active: !childProps.disabled && isActive,
          multiple: props2.multiple,
          openTransitionName: this.getOpenTransitionName(),
          openAnimation: props2.openAnimation,
          subMenuOpenDelay: props2.subMenuOpenDelay,
          subMenuCloseDelay: props2.subMenuCloseDelay,
          forceSubMenuRender: props2.forceSubMenuRender,
          builtinPlacements: props2.builtinPlacements,
          itemIcon: this.getIcon(child, "itemIcon") || this.getIcon(this, "itemIcon"),
          expandIcon: this.getIcon(child, "expandIcon") || this.getIcon(this, "expandIcon")
        }, extraProps),
        on: {
          click: function click(e) {
            (childListeners.click || noop$X)(e);
            _this.onClick(e);
          },
          itemHover: this.onItemHover,
          openChange: this.onOpenChange,
          deselect: this.onDeselect,
          select: this.onSelect
        }
      };
      if (props2.mode === "inline" || isMobileDevice()) {
        newChildProps.props.triggerSubMenuAction = "click";
      }
      return cloneElement(child, newChildProps);
    },
    renderMenuItem: function renderMenuItem(c, i, subMenuKey) {
      if (!c) {
        return null;
      }
      var state = this.$props.store.getState();
      var extraProps = {
        openKeys: state.openKeys,
        selectedKeys: state.selectedKeys,
        triggerSubMenuAction: this.triggerSubMenuAction,
        isRootMenu: false,
        subMenuKey
      };
      return this.renderCommonMenuItem(c, i, extraProps);
    }
  },
  render: function render19() {
    var _this2 = this;
    var h = arguments[0];
    var props2 = _default$2(this.$props, []);
    var eventKey = props2.eventKey, prefixCls2 = props2.prefixCls, visible11 = props2.visible, level2 = props2.level, mode5 = props2.mode, theme = props2.theme;
    this.instanceArray = [];
    this.instanceArrayKeyIndexMap = {};
    var className = classNames(props2.prefixCls, props2.prefixCls + "-" + props2.mode);
    var domWrapProps = {
      props: {
        tag: "ul",
        visible: visible11,
        prefixCls: prefixCls2,
        level: level2,
        mode: mode5,
        theme,
        overflowedIndicator: getComponentFromProp(this, "overflowedIndicator")
      },
      attrs: {
        role: props2.role || "menu"
      },
      "class": className,
      on: omit$2(getListeners(this), ["click"])
    };
    if (props2.focusable) {
      domWrapProps.attrs.tabIndex = "0";
      domWrapProps.on.keydown = this.onKeyDown;
    }
    return h(
      DOMWrap$1,
      domWrapProps,
      [props2.children.map(function(c, i) {
        return _this2.renderMenuItem(c, i, eventKey || "0-menu-");
      })]
    );
  }
};
var SubPopupMenu$1 = connect()(SubPopupMenu);
var commonPropsType = {
  prefixCls: PropTypes.string.def("rc-menu"),
  focusable: PropTypes.bool.def(true),
  multiple: PropTypes.bool,
  defaultActiveFirst: PropTypes.bool,
  visible: PropTypes.bool.def(true),
  activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).def([]),
  defaultOpenKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).def([]),
  openKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  mode: PropTypes.oneOf(["horizontal", "vertical", "vertical-left", "vertical-right", "inline"]).def("vertical"),
  triggerSubMenuAction: PropTypes.string.def("hover"),
  subMenuOpenDelay: PropTypes.number.def(0.1),
  subMenuCloseDelay: PropTypes.number.def(0.1),
  level: PropTypes.number.def(1),
  inlineIndent: PropTypes.number.def(24),
  theme: PropTypes.oneOf(["light", "dark"]).def("light"),
  getPopupContainer: PropTypes.func,
  openTransitionName: PropTypes.string,
  forceSubMenuRender: PropTypes.bool,
  selectable: PropTypes.bool,
  isRootMenu: PropTypes.bool.def(true),
  builtinPlacements: PropTypes.object.def(function() {
    return {};
  }),
  itemIcon: PropTypes.any,
  expandIcon: PropTypes.any,
  overflowedIndicator: PropTypes.any
};
var Menu$2 = {
  name: "Menu",
  props: _default$6({}, commonPropsType, {
    selectable: PropTypes.bool.def(true)
  }),
  mixins: [BaseMixin],
  data: function data9() {
    var props2 = getOptionProps(this);
    var selectedKeys3 = props2.defaultSelectedKeys;
    var openKeys2 = props2.defaultOpenKeys;
    if ("selectedKeys" in props2) {
      selectedKeys3 = props2.selectedKeys || [];
    }
    if ("openKeys" in props2) {
      openKeys2 = props2.openKeys || [];
    }
    this.store = create$1({
      selectedKeys: selectedKeys3,
      openKeys: openKeys2,
      activeKey: {
        "0-menu-": getActiveKey(_default$6({}, props2, { children: this.$slots["default"] || [] }), props2.activeKey)
      }
    });
    return {};
  },
  mounted: function mounted12() {
    this.updateMiniStore();
  },
  updated: function updated10() {
    this.updateMiniStore();
  },
  methods: {
    onSelect: function onSelect2(selectInfo) {
      var props2 = this.$props;
      if (props2.selectable) {
        var selectedKeys3 = this.store.getState().selectedKeys;
        var selectedKey = selectInfo.key;
        if (props2.multiple) {
          selectedKeys3 = selectedKeys3.concat([selectedKey]);
        } else {
          selectedKeys3 = [selectedKey];
        }
        if (!hasProp(this, "selectedKeys")) {
          this.store.setState({
            selectedKeys: selectedKeys3
          });
        }
        this.__emit("select", _default$6({}, selectInfo, {
          selectedKeys: selectedKeys3
        }));
      }
    },
    onClick: function onClick3(e) {
      this.__emit("click", e);
    },
    onKeyDown: function onKeyDown3(e, callback) {
      this.$refs.innerMenu.getWrappedInstance().onKeyDown(e, callback);
    },
    onOpenChange: function onOpenChange2(event) {
      var openKeys2 = this.store.getState().openKeys.concat();
      var changed = false;
      var processSingle = function processSingle2(e) {
        var oneChanged = false;
        if (e.open) {
          oneChanged = openKeys2.indexOf(e.key) === -1;
          if (oneChanged) {
            openKeys2.push(e.key);
          }
        } else {
          var index2 = openKeys2.indexOf(e.key);
          oneChanged = index2 !== -1;
          if (oneChanged) {
            openKeys2.splice(index2, 1);
          }
        }
        changed = changed || oneChanged;
      };
      if (Array.isArray(event)) {
        event.forEach(processSingle);
      } else {
        processSingle(event);
      }
      if (changed) {
        if (!hasProp(this, "openKeys")) {
          this.store.setState({ openKeys: openKeys2 });
        }
        this.__emit("openChange", openKeys2);
      }
    },
    onDeselect: function onDeselect2(selectInfo) {
      var props2 = this.$props;
      if (props2.selectable) {
        var selectedKeys3 = this.store.getState().selectedKeys.concat();
        var selectedKey = selectInfo.key;
        var index2 = selectedKeys3.indexOf(selectedKey);
        if (index2 !== -1) {
          selectedKeys3.splice(index2, 1);
        }
        if (!hasProp(this, "selectedKeys")) {
          this.store.setState({
            selectedKeys: selectedKeys3
          });
        }
        this.__emit("deselect", _default$6({}, selectInfo, {
          selectedKeys: selectedKeys3
        }));
      }
    },
    getOpenTransitionName: function getOpenTransitionName2() {
      var props2 = this.$props;
      var transitionName2 = props2.openTransitionName;
      var animationName = props2.openAnimation;
      if (!transitionName2 && typeof animationName === "string") {
        transitionName2 = props2.prefixCls + "-open-" + animationName;
      }
      return transitionName2;
    },
    updateMiniStore: function updateMiniStore() {
      var props2 = getOptionProps(this);
      if ("selectedKeys" in props2) {
        this.store.setState({
          selectedKeys: props2.selectedKeys || []
        });
      }
      if ("openKeys" in props2) {
        this.store.setState({
          openKeys: props2.openKeys || []
        });
      }
    }
  },
  render: function render20() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var subPopupMenuProps = {
      props: _default$6({}, props2, {
        itemIcon: getComponentFromProp(this, "itemIcon", props2),
        expandIcon: getComponentFromProp(this, "expandIcon", props2),
        overflowedIndicator: getComponentFromProp(this, "overflowedIndicator", props2) || h("span", ["\xB7\xB7\xB7"]),
        openTransitionName: this.getOpenTransitionName(),
        parentMenu: this,
        children: filterEmpty(this.$slots["default"] || [])
      }),
      "class": props2.prefixCls + "-root",
      on: _default$6({}, getListeners(this), {
        click: this.onClick,
        openChange: this.onOpenChange,
        deselect: this.onDeselect,
        select: this.onSelect
      }),
      ref: "innerMenu"
    };
    return h(
      Provider,
      {
        attrs: { store: this.store }
      },
      [h(SubPopupMenu$1, subPopupMenuProps)]
    );
  }
};
var Menu$3 = Menu$2;
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function _defineProperty$1(obj, key2, value27) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value: value27,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value27;
  }
  return obj;
}
function ownKeys(object3, enumerableOnly) {
  var keys3 = Object.keys(object3);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object3);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object3, sym).enumerable;
      });
    keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread2(target2) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(source, true).forEach(function(key2) {
        _defineProperty$1(target2, key2, source[key2]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target2, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function(key2) {
        Object.defineProperty(target2, key2, Object.getOwnPropertyDescriptor(source, key2));
      });
    }
  }
  return target2;
}
var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
function getClientPosition$1(elem) {
  var box;
  var x;
  var y;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  box = elem.getBoundingClientRect();
  x = box.left;
  y = box.top;
  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x,
    top: y
  };
}
function getScroll$2(w, top) {
  var ret = w["page".concat(top ? "Y" : "X", "Offset")];
  var method3 = "scroll".concat(top ? "Top" : "Left");
  if (typeof ret !== "number") {
    var d = w.document;
    ret = d.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d.body[method3];
    }
  }
  return ret;
}
function getScrollLeft(w) {
  return getScroll$2(w);
}
function getScrollTop(w) {
  return getScroll$2(w, true);
}
function getOffset(el) {
  var pos = getClientPosition$1(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft(w);
  pos.top += getScrollTop(w);
  return pos;
}
function _getComputedStyle(elem, name, computedStyle_) {
  var val = "";
  var d = elem.ownerDocument;
  var computedStyle2 = computedStyle_ || d.defaultView.getComputedStyle(elem, null);
  if (computedStyle2) {
    val = computedStyle2.getPropertyValue(name) || computedStyle2[name];
  }
  return val;
}
var _RE_NUM_NO_PX = new RegExp("^(".concat(RE_NUM, ")(?!px)[a-z%]+$"), "i");
var RE_POS = /^(top|right|bottom|left)$/;
var CURRENT_STYLE = "currentStyle";
var RUNTIME_STYLE = "runtimeStyle";
var LEFT = "left";
var PX = "px";
function _getComputedStyleIE(elem, name) {
  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];
  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
    var style3 = elem.style;
    var left = style3[LEFT];
    var rsLeft = elem[RUNTIME_STYLE][LEFT];
    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];
    style3[LEFT] = name === "fontSize" ? "1em" : ret || 0;
    ret = style3.pixelLeft + PX;
    style3[LEFT] = left;
    elem[RUNTIME_STYLE][LEFT] = rsLeft;
  }
  return ret === "" ? "auto" : ret;
}
var getComputedStyleX;
if (typeof window !== "undefined") {
  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
}
function each(arr, fn) {
  for (var i = 0; i < arr.length; i++) {
    fn(arr[i]);
  }
}
function isBorderBoxFn(elem) {
  return getComputedStyleX(elem, "boxSizing") === "border-box";
}
var BOX_MODELS = ["margin", "border", "padding"];
var CONTENT_INDEX = -1;
var PADDING_INDEX = 2;
var BORDER_INDEX = 1;
var MARGIN_INDEX = 0;
function swap(elem, options2, callback) {
  var old = {};
  var style3 = elem.style;
  var name;
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      old[name] = style3[name];
      style3[name] = options2[name];
    }
  }
  callback.call(elem);
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      style3[name] = old[name];
    }
  }
}
function getPBMWidth(elem, props2, which) {
  var value27 = 0;
  var prop;
  var j;
  var i;
  for (j = 0; j < props2.length; j++) {
    prop = props2[j];
    if (prop) {
      for (i = 0; i < which.length; i++) {
        var cssProp = void 0;
        if (prop === "border") {
          cssProp = "".concat(prop + which[i], "Width");
        } else {
          cssProp = prop + which[i];
        }
        value27 += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
      }
    }
  }
  return value27;
}
function isWindow(obj) {
  return obj != null && obj == obj.window;
}
var domUtils = {};
each(["Width", "Height"], function(name) {
  domUtils["doc".concat(name)] = function(refWin) {
    var d = refWin.document;
    return Math.max(
      d.documentElement["scroll".concat(name)],
      d.body["scroll".concat(name)],
      domUtils["viewport".concat(name)](d)
    );
  };
  domUtils["viewport".concat(name)] = function(win) {
    var prop = "client".concat(name);
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop];
    return doc.compatMode === "CSS1Compat" && documentElementProp || body && body[prop] || documentElementProp;
  };
});
function getWH(elem, name, extra) {
  if (isWindow(elem)) {
    return name === "width" ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === "width" ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
  }
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  var borderBoxValue = name === "width" ? elem.offsetWidth : elem.offsetHeight;
  getComputedStyleX(elem);
  var isBorderBox = isBorderBoxFn(elem);
  var cssBoxValue = 0;
  if (borderBoxValue == null || borderBoxValue <= 0) {
    borderBoxValue = void 0;
    cssBoxValue = getComputedStyleX(elem, name);
    if (cssBoxValue == null || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    }
    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }
  if (extra === void 0) {
    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
  }
  var borderBoxValueOrIsBorderBox = borderBoxValue !== void 0 || isBorderBox;
  var val = borderBoxValue || cssBoxValue;
  if (extra === CONTENT_INDEX) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth(elem, ["border", "padding"], which);
    }
    return cssBoxValue;
  }
  if (borderBoxValueOrIsBorderBox) {
    var padding = extra === PADDING_INDEX ? -getPBMWidth(elem, ["border"], which) : getPBMWidth(elem, ["margin"], which);
    return val + (extra === BORDER_INDEX ? 0 : padding);
  }
  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which);
}
var cssShow = {
  position: "absolute",
  visibility: "hidden",
  display: "block"
};
function getWHIgnoreDisplay(elem) {
  var val;
  var args = arguments;
  if (elem.offsetWidth !== 0) {
    val = getWH.apply(void 0, args);
  } else {
    swap(elem, cssShow, function() {
      val = getWH.apply(void 0, args);
    });
  }
  return val;
}
function css(el, name, v) {
  var value27 = v;
  if (_typeof(name) === "object") {
    for (var i in name) {
      if (name.hasOwnProperty(i)) {
        css(el, i, name[i]);
      }
    }
    return void 0;
  }
  if (typeof value27 !== "undefined") {
    if (typeof value27 === "number") {
      value27 += "px";
    }
    el.style[name] = value27;
    return void 0;
  }
  return getComputedStyleX(el, name);
}
each(["width", "height"], function(name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);
  domUtils["outer".concat(first)] = function(el, includeMargin) {
    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
  };
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  domUtils[name] = function(elem, val) {
    if (val !== void 0) {
      if (elem) {
        getComputedStyleX(elem);
        var isBorderBox = isBorderBoxFn(elem);
        if (isBorderBox) {
          val += getPBMWidth(elem, ["padding", "border"], which);
        }
        return css(elem, name, val);
      }
      return void 0;
    }
    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
  };
});
function setOffset(elem, offset4) {
  if (css(elem, "position") === "static") {
    elem.style.position = "relative";
  }
  var old = getOffset(elem);
  var ret = {};
  var current2;
  var key2;
  for (key2 in offset4) {
    if (offset4.hasOwnProperty(key2)) {
      current2 = parseFloat(css(elem, key2)) || 0;
      ret[key2] = current2 + offset4[key2] - old[key2];
    }
  }
  css(elem, ret);
}
var util = _objectSpread2({
  getWindow: function getWindow2(node) {
    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },
  offset: function offset2(el, value27) {
    if (typeof value27 !== "undefined") {
      setOffset(el, value27);
    } else {
      return getOffset(el);
    }
  },
  isWindow,
  each,
  css,
  clone: function clone2(obj) {
    var ret = {};
    for (var i in obj) {
      if (obj.hasOwnProperty(i)) {
        ret[i] = obj[i];
      }
    }
    var overflow3 = obj.overflow;
    if (overflow3) {
      for (var _i in obj) {
        if (obj.hasOwnProperty(_i)) {
          ret.overflow[_i] = obj.overflow[_i];
        }
      }
    }
    return ret;
  },
  scrollLeft: function scrollLeft(w, v) {
    if (isWindow(w)) {
      if (v === void 0) {
        return getScrollLeft(w);
      }
      window.scrollTo(v, getScrollTop(w));
    } else {
      if (v === void 0) {
        return w.scrollLeft;
      }
      w.scrollLeft = v;
    }
  },
  scrollTop: function scrollTop(w, v) {
    if (isWindow(w)) {
      if (v === void 0) {
        return getScrollTop(w);
      }
      window.scrollTo(getScrollLeft(w), v);
    } else {
      if (v === void 0) {
        return w.scrollTop;
      }
      w.scrollTop = v;
    }
  },
  viewportWidth: 0,
  viewportHeight: 0
}, domUtils);
function scrollIntoView(elem, container, config2) {
  config2 = config2 || {};
  if (container.nodeType === 9) {
    container = util.getWindow(container);
  }
  var allowHorizontalScroll = config2.allowHorizontalScroll;
  var onlyScrollIfNeeded = config2.onlyScrollIfNeeded;
  var alignWithTop = config2.alignWithTop;
  var alignWithLeft = config2.alignWithLeft;
  var offsetTop2 = config2.offsetTop || 0;
  var offsetLeft = config2.offsetLeft || 0;
  var offsetBottom2 = config2.offsetBottom || 0;
  var offsetRight = config2.offsetRight || 0;
  allowHorizontalScroll = allowHorizontalScroll === void 0 ? true : allowHorizontalScroll;
  var isWin = util.isWindow(container);
  var elemOffset = util.offset(elem);
  var eh = util.outerHeight(elem);
  var ew = util.outerWidth(elem);
  var containerOffset;
  var ch;
  var cw;
  var containerScroll;
  var diffTop;
  var diffBottom;
  var win;
  var winScroll;
  var ww;
  var wh;
  if (isWin) {
    win = container;
    wh = util.height(win);
    ww = util.width(win);
    winScroll = {
      left: util.scrollLeft(win),
      top: util.scrollTop(win)
    };
    diffTop = {
      left: elemOffset.left - winScroll.left - offsetLeft,
      top: elemOffset.top - winScroll.top - offsetTop2
    };
    diffBottom = {
      left: elemOffset.left + ew - (winScroll.left + ww) + offsetRight,
      top: elemOffset.top + eh - (winScroll.top + wh) + offsetBottom2
    };
    containerScroll = winScroll;
  } else {
    containerOffset = util.offset(container);
    ch = container.clientHeight;
    cw = container.clientWidth;
    containerScroll = {
      left: container.scrollLeft,
      top: container.scrollTop
    };
    diffTop = {
      left: elemOffset.left - (containerOffset.left + (parseFloat(util.css(container, "borderLeftWidth")) || 0)) - offsetLeft,
      top: elemOffset.top - (containerOffset.top + (parseFloat(util.css(container, "borderTopWidth")) || 0)) - offsetTop2
    };
    diffBottom = {
      left: elemOffset.left + ew - (containerOffset.left + cw + (parseFloat(util.css(container, "borderRightWidth")) || 0)) + offsetRight,
      top: elemOffset.top + eh - (containerOffset.top + ch + (parseFloat(util.css(container, "borderBottomWidth")) || 0)) + offsetBottom2
    };
  }
  if (diffTop.top < 0 || diffBottom.top > 0) {
    if (alignWithTop === true) {
      util.scrollTop(container, containerScroll.top + diffTop.top);
    } else if (alignWithTop === false) {
      util.scrollTop(container, containerScroll.top + diffBottom.top);
    } else {
      if (diffTop.top < 0) {
        util.scrollTop(container, containerScroll.top + diffTop.top);
      } else {
        util.scrollTop(container, containerScroll.top + diffBottom.top);
      }
    }
  } else {
    if (!onlyScrollIfNeeded) {
      alignWithTop = alignWithTop === void 0 ? true : !!alignWithTop;
      if (alignWithTop) {
        util.scrollTop(container, containerScroll.top + diffTop.top);
      } else {
        util.scrollTop(container, containerScroll.top + diffBottom.top);
      }
    }
  }
  if (allowHorizontalScroll) {
    if (diffTop.left < 0 || diffBottom.left > 0) {
      if (alignWithLeft === true) {
        util.scrollLeft(container, containerScroll.left + diffTop.left);
      } else if (alignWithLeft === false) {
        util.scrollLeft(container, containerScroll.left + diffBottom.left);
      } else {
        if (diffTop.left < 0) {
          util.scrollLeft(container, containerScroll.left + diffTop.left);
        } else {
          util.scrollLeft(container, containerScroll.left + diffBottom.left);
        }
      }
    } else {
      if (!onlyScrollIfNeeded) {
        alignWithLeft = alignWithLeft === void 0 ? true : !!alignWithLeft;
        if (alignWithLeft) {
          util.scrollLeft(container, containerScroll.left + diffTop.left);
        } else {
          util.scrollLeft(container, containerScroll.left + diffBottom.left);
        }
      }
    }
  }
}
var props$3 = {
  attribute: PropTypes.object,
  rootPrefixCls: PropTypes.string,
  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  active: PropTypes.bool,
  selectedKeys: PropTypes.array,
  disabled: PropTypes.bool,
  title: PropTypes.any,
  index: PropTypes.number,
  inlineIndent: PropTypes.number.def(24),
  level: PropTypes.number.def(1),
  mode: PropTypes.oneOf(["horizontal", "vertical", "vertical-left", "vertical-right", "inline"]).def("vertical"),
  parentMenu: PropTypes.object,
  multiple: PropTypes.bool,
  value: PropTypes.any,
  isSelected: PropTypes.bool,
  manualRef: PropTypes.func.def(noop$X),
  role: PropTypes.any,
  subMenuKey: PropTypes.string,
  itemIcon: PropTypes.any
};
var MenuItem = {
  name: "MenuItem",
  props: props$3,
  mixins: [BaseMixin],
  isMenuItem: true,
  created: function created2() {
    this.prevActive = this.active;
    this.callRef();
  },
  updated: function updated11() {
    var _this = this;
    this.$nextTick(function() {
      var _$props = _this.$props, active = _$props.active, parentMenu = _$props.parentMenu, eventKey = _$props.eventKey;
      if (!_this.prevActive && active && (!parentMenu || !parentMenu["scrolled-" + eventKey])) {
        scrollIntoView(_this.$el, _this.parentMenu.$el, {
          onlyScrollIfNeeded: true
        });
        parentMenu["scrolled-" + eventKey] = true;
      } else if (parentMenu && parentMenu["scrolled-" + eventKey]) {
        delete parentMenu["scrolled-" + eventKey];
      }
      _this.prevActive = active;
    });
    this.callRef();
  },
  beforeDestroy: function beforeDestroy11() {
    var props2 = this.$props;
    this.__emit("destroy", props2.eventKey);
  },
  methods: {
    onKeyDown: function onKeyDown4(e) {
      var keyCode = e.keyCode;
      if (keyCode === KeyCode$2.ENTER) {
        this.onClick(e);
        return true;
      }
    },
    onMouseLeave: function onMouseLeave2(e) {
      var eventKey = this.$props.eventKey;
      this.__emit("itemHover", {
        key: eventKey,
        hover: false
      });
      this.__emit("mouseleave", {
        key: eventKey,
        domEvent: e
      });
    },
    onMouseEnter: function onMouseEnter2(e) {
      var eventKey = this.eventKey;
      this.__emit("itemHover", {
        key: eventKey,
        hover: true
      });
      this.__emit("mouseenter", {
        key: eventKey,
        domEvent: e
      });
    },
    onClick: function onClick4(e) {
      var _$props2 = this.$props, eventKey = _$props2.eventKey, multiple = _$props2.multiple, isSelected = _$props2.isSelected;
      var info3 = {
        key: eventKey,
        keyPath: [eventKey],
        item: this,
        domEvent: e
      };
      this.__emit("click", info3);
      if (multiple) {
        if (isSelected) {
          this.__emit("deselect", info3);
        } else {
          this.__emit("select", info3);
        }
      } else if (!isSelected) {
        this.__emit("select", info3);
      }
    },
    getPrefixCls: function getPrefixCls3() {
      return this.$props.rootPrefixCls + "-item";
    },
    getActiveClassName: function getActiveClassName2() {
      return this.getPrefixCls() + "-active";
    },
    getSelectedClassName: function getSelectedClassName2() {
      return this.getPrefixCls() + "-selected";
    },
    getDisabledClassName: function getDisabledClassName2() {
      return this.getPrefixCls() + "-disabled";
    },
    callRef: function callRef() {
      if (this.manualRef) {
        this.manualRef(this);
      }
    }
  },
  render: function render21() {
    var _className;
    var h = arguments[0];
    var props2 = _default$6({}, this.$props);
    var className = (_className = {}, _default$8(_className, this.getPrefixCls(), true), _default$8(_className, this.getActiveClassName(), !props2.disabled && props2.active), _default$8(_className, this.getSelectedClassName(), props2.isSelected), _default$8(_className, this.getDisabledClassName(), props2.disabled), _className);
    var attrs = _default$6({}, props2.attribute, {
      title: props2.title,
      role: props2.role || "menuitem",
      "aria-disabled": props2.disabled
    });
    if (props2.role === "option") {
      attrs = _default$6({}, attrs, {
        role: "option",
        "aria-selected": props2.isSelected
      });
    } else if (props2.role === null || props2.role === "none") {
      attrs.role = "none";
    }
    var mouseEvent = {
      click: props2.disabled ? noop$X : this.onClick,
      mouseleave: props2.disabled ? noop$X : this.onMouseLeave,
      mouseenter: props2.disabled ? noop$X : this.onMouseEnter
    };
    var style3 = {};
    if (props2.mode === "inline") {
      style3.paddingLeft = props2.inlineIndent * props2.level + "px";
    }
    var listeners = _default$6({}, getListeners(this));
    menuAllProps.props.forEach(function(key2) {
      return delete props2[key2];
    });
    menuAllProps.on.forEach(function(key2) {
      return delete listeners[key2];
    });
    var liProps = {
      attrs: _default$6({}, props2, attrs),
      on: _default$6({}, listeners, mouseEvent)
    };
    return h(
      "li",
      _mergeJSXProps([liProps, { style: style3, "class": className }]),
      [this.$slots["default"], getComponentFromProp(this, "itemIcon", props2)]
    );
  }
};
var connected = connect(function(_ref, _ref2) {
  var activeKey2 = _ref.activeKey, selectedKeys3 = _ref.selectedKeys;
  var eventKey = _ref2.eventKey, subMenuKey = _ref2.subMenuKey;
  return {
    active: activeKey2[subMenuKey] === eventKey,
    isSelected: selectedKeys3.indexOf(eventKey) !== -1
  };
})(MenuItem);
var MenuItem$1 = connected;
var MenuItemGroup = {
  name: "MenuItemGroup",
  props: {
    renderMenuItem: PropTypes.func,
    index: PropTypes.number,
    className: PropTypes.string,
    subMenuKey: PropTypes.string,
    rootPrefixCls: PropTypes.string,
    disabled: PropTypes.bool.def(true),
    title: PropTypes.any
  },
  isMenuItemGroup: true,
  methods: {
    renderInnerMenuItem: function renderInnerMenuItem(item) {
      var _$props = this.$props, renderMenuItem3 = _$props.renderMenuItem, index2 = _$props.index, subMenuKey = _$props.subMenuKey;
      return renderMenuItem3(item, index2, subMenuKey);
    }
  },
  render: function render22() {
    var h = arguments[0];
    var props2 = _default$6({}, this.$props);
    var rootPrefixCls = props2.rootPrefixCls, title = props2.title;
    var titleClassName = rootPrefixCls + "-item-group-title";
    var listClassName = rootPrefixCls + "-item-group-list";
    var listeners = _default$6({}, getListeners(this));
    delete listeners.click;
    return h(
      "li",
      { on: listeners, "class": rootPrefixCls + "-item-group" },
      [h(
        "div",
        {
          "class": titleClassName,
          attrs: { title: typeof title === "string" ? title : void 0 }
        },
        [getComponentFromProp(this, "title")]
      ), h(
        "ul",
        { "class": listClassName },
        [this.$slots["default"] && this.$slots["default"].map(this.renderInnerMenuItem)]
      )]
    );
  }
};
var ItemGroup = MenuItemGroup;
var Divider$2 = {
  name: "MenuDivider",
  props: {
    disabled: {
      type: Boolean,
      "default": true
    },
    rootPrefixCls: String
  },
  render: function render23() {
    var h = arguments[0];
    var rootPrefixCls = this.$props.rootPrefixCls;
    return h("li", { "class": rootPrefixCls + "-item-divider" });
  }
};
var warning$2 = function() {
};
var warning_1 = warning$2;
var warning$3 = warning_1;
var Option$3 = {
  props: {
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    disabled: PropTypes.bool,
    title: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
  },
  isSelectOption: true
};
var OptGroup = {
  props: {
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
  },
  isSelectOptGroup: true
};
function toTitle$1(title) {
  if (typeof title === "string") {
    return title.trim();
  }
  return "";
}
function getValuePropValue(child) {
  if (!child) {
    return null;
  }
  var props2 = getPropsData(child);
  if ("value" in props2) {
    return props2.value;
  }
  if (getKey(child) !== void 0) {
    return getKey(child);
  }
  if (getSlotOptions(child).isSelectOptGroup) {
    var label = getComponentFromProp(child, "label");
    if (label) {
      return label;
    }
  }
  throw new Error("Need at least a key or a value or a label (only for OptGroup) for " + child);
}
function getPropValue(child, prop) {
  if (prop === "value") {
    return getValuePropValue(child);
  }
  if (prop === "children") {
    var newChild = child.$slots ? cloneVNodes(child.$slots["default"], true) : cloneVNodes(child.componentOptions.children, true);
    if (newChild.length === 1 && !newChild[0].tag) {
      return newChild[0].text;
    }
    return newChild;
  }
  var data109 = getPropsData(child);
  if (prop in data109) {
    return data109[prop];
  } else {
    return getAttrs(child)[prop];
  }
}
function isMultiple(props2) {
  return props2.multiple;
}
function isCombobox(props2) {
  return props2.combobox;
}
function isMultipleOrTags(props2) {
  return props2.multiple || props2.tags;
}
function isMultipleOrTagsOrCombobox(props2) {
  return isMultipleOrTags(props2) || isCombobox(props2);
}
function isSingleMode(props2) {
  return !isMultipleOrTagsOrCombobox(props2);
}
function toArray$5(value27) {
  var ret = value27;
  if (value27 === void 0) {
    ret = [];
  } else if (!Array.isArray(value27)) {
    ret = [value27];
  }
  return ret;
}
function getMapKey(value27) {
  return (typeof value27 === "undefined" ? "undefined" : _default$7(value27)) + "-" + value27;
}
function preventDefaultEvent(e) {
  e.preventDefault();
}
function findIndexInValueBySingleValue(value27, singleValue) {
  var index2 = -1;
  if (value27) {
    for (var i = 0; i < value27.length; i++) {
      if (value27[i] === singleValue) {
        index2 = i;
        break;
      }
    }
  }
  return index2;
}
function getLabelFromPropsValue(value27, key2) {
  var label = void 0;
  value27 = toArray$5(value27);
  if (value27) {
    for (var i = 0; i < value27.length; i++) {
      if (value27[i].key === key2) {
        label = value27[i].label;
        break;
      }
    }
  }
  return label;
}
function getSelectKeys(menuItems, value27) {
  if (value27 === null || value27 === void 0) {
    return [];
  }
  var selectedKeys3 = [];
  menuItems.forEach(function(item) {
    if (getSlotOptions(item).isMenuItemGroup) {
      selectedKeys3 = selectedKeys3.concat(getSelectKeys(item.componentOptions.children, value27));
    } else {
      var itemValue = getValuePropValue(item);
      var itemKey = item.key;
      if (findIndexInValueBySingleValue(value27, itemValue) !== -1 && itemKey !== void 0) {
        selectedKeys3.push(itemKey);
      }
    }
  });
  return selectedKeys3;
}
var UNSELECTABLE_STYLE$1 = {
  userSelect: "none",
  WebkitUserSelect: "none"
};
var UNSELECTABLE_ATTRIBUTE$1 = {
  unselectable: "on"
};
function findFirstMenuItem(children) {
  for (var i = 0; i < children.length; i++) {
    var child = children[i];
    var props2 = getPropsData(child);
    if (getSlotOptions(child).isMenuItemGroup) {
      var found = findFirstMenuItem(child.componentOptions.children);
      if (found) {
        return found;
      }
    } else if (!(props2.disabled || props2.disabled === "")) {
      return child;
    }
  }
  return null;
}
function includesSeparators(str, separators) {
  for (var i = 0; i < separators.length; ++i) {
    if (str.lastIndexOf(separators[i]) > 0) {
      return true;
    }
  }
  return false;
}
function splitBySeparators(str, separators) {
  var reg = new RegExp("[" + separators.join() + "]");
  return str.split(reg).filter(function(token2) {
    return token2;
  });
}
function defaultFilterFn(input, child) {
  var props2 = getPropsData(child);
  if (props2.disabled) {
    return false;
  }
  var value27 = getPropValue(child, this.optionFilterProp);
  if (value27.length && value27[0].text) {
    value27 = value27[0].text;
  } else {
    value27 = String(value27);
  }
  return value27.toLowerCase().indexOf(input.toLowerCase()) > -1;
}
function validateOptionValue(value27, props2) {
  if (isSingleMode(props2) || isMultiple(props2)) {
    return;
  }
  if (typeof value27 !== "string") {
    throw new Error("Invalid `value` of type `" + (typeof value27 === "undefined" ? "undefined" : _default$7(value27)) + "` supplied to Option, expected `string` when `tags/combobox` is `true`.");
  }
}
function saveRef(instance, name) {
  return function(node) {
    instance[name] = node;
  };
}
function generateUUID() {
  var d = new Date().getTime();
  var uuid2 = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c === "x" ? r : r & 7 | 8).toString(16);
  });
  return uuid2;
}
var DropdownMenu$1 = {
  name: "DropdownMenu",
  mixins: [BaseMixin],
  props: {
    ariaId: PropTypes.string,
    defaultActiveFirstOption: PropTypes.bool,
    value: PropTypes.any,
    dropdownMenuStyle: PropTypes.object,
    multiple: PropTypes.bool,
    prefixCls: PropTypes.string,
    menuItems: PropTypes.any,
    inputValue: PropTypes.string,
    visible: PropTypes.bool,
    backfillValue: PropTypes.any,
    firstActiveValue: PropTypes.string,
    menuItemSelectedIcon: PropTypes.any
  },
  watch: {
    visible: function visible(val) {
      var _this = this;
      if (!val) {
        this.lastVisible = val;
      } else {
        this.$nextTick(function() {
          _this.scrollActiveItemToView();
        });
      }
    }
  },
  created: function created3() {
    this.rafInstance = null;
    this.lastInputValue = this.$props.inputValue;
    this.lastVisible = false;
  },
  mounted: function mounted13() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.scrollActiveItemToView();
    });
    this.lastVisible = this.$props.visible;
  },
  updated: function updated12() {
    var props2 = this.$props;
    this.lastVisible = props2.visible;
    this.lastInputValue = props2.inputValue;
    this.prevVisible = this.visible;
  },
  beforeDestroy: function beforeDestroy12() {
    if (this.rafInstance) {
      raf$2.cancel(this.rafInstance);
    }
  },
  methods: {
    scrollActiveItemToView: function scrollActiveItemToView() {
      var _this3 = this;
      var itemComponent = this.firstActiveItem && this.firstActiveItem.$el;
      var props2 = this.$props;
      var value27 = props2.value, visible11 = props2.visible, firstActiveValue = props2.firstActiveValue;
      if (!itemComponent || !visible11) {
        return;
      }
      var scrollIntoViewOpts = {
        onlyScrollIfNeeded: true
      };
      if ((!value27 || value27.length === 0) && firstActiveValue) {
        scrollIntoViewOpts.alignWithTop = true;
      }
      this.rafInstance = raf$2(function() {
        scrollIntoView(itemComponent, _this3.$refs.menuRef.$el, scrollIntoViewOpts);
      });
    },
    renderMenu: function renderMenu() {
      var _this4 = this;
      var h = this.$createElement;
      var props2 = this.$props;
      var menuItems = props2.menuItems, defaultActiveFirstOption = props2.defaultActiveFirstOption, value27 = props2.value, prefixCls2 = props2.prefixCls, multiple = props2.multiple, inputValue = props2.inputValue, firstActiveValue = props2.firstActiveValue, dropdownMenuStyle = props2.dropdownMenuStyle, backfillValue = props2.backfillValue, visible11 = props2.visible;
      var menuItemSelectedIcon = getComponentFromProp(this, "menuItemSelectedIcon");
      var _getListeners = getListeners(this), menuDeselect = _getListeners.menuDeselect, menuSelect = _getListeners.menuSelect, popupScroll = _getListeners.popupScroll;
      if (menuItems && menuItems.length) {
        var selectedKeys3 = getSelectKeys(menuItems, value27);
        var menuProps2 = {
          props: {
            multiple,
            itemIcon: multiple ? menuItemSelectedIcon : null,
            selectedKeys: selectedKeys3,
            prefixCls: prefixCls2 + "-menu"
          },
          on: {},
          style: dropdownMenuStyle,
          ref: "menuRef",
          attrs: {
            role: "listbox"
          }
        };
        if (popupScroll) {
          menuProps2.on.scroll = popupScroll;
        }
        if (multiple) {
          menuProps2.on.deselect = menuDeselect;
          menuProps2.on.select = menuSelect;
        } else {
          menuProps2.on.click = menuSelect;
        }
        var activeKeyProps = {};
        var defaultActiveFirst = defaultActiveFirstOption;
        var clonedMenuItems = menuItems;
        if (selectedKeys3.length || firstActiveValue) {
          if (props2.visible && !this.lastVisible) {
            activeKeyProps.activeKey = selectedKeys3[0] || firstActiveValue;
          } else if (!visible11) {
            if (selectedKeys3[0]) {
              defaultActiveFirst = false;
            }
            activeKeyProps.activeKey = void 0;
          }
          var foundFirst = false;
          var clone4 = function clone5(item) {
            if (!foundFirst && selectedKeys3.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys3.length && firstActiveValue.indexOf(item.key) !== -1) {
              foundFirst = true;
              return cloneElement(item, {
                directives: [{
                  name: "ant-ref",
                  value: function value28(ref) {
                    _this4.firstActiveItem = ref;
                  }
                }]
              });
            }
            return item;
          };
          clonedMenuItems = menuItems.map(function(item) {
            if (getSlotOptions(item).isMenuItemGroup) {
              var children = item.componentOptions.children.map(clone4);
              return cloneElement(item, { children });
            }
            return clone4(item);
          });
        } else {
          this.firstActiveItem = null;
        }
        var lastValue = value27 && value27[value27.length - 1];
        if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {
          activeKeyProps.activeKey = "";
        }
        menuProps2.props = _default$6({}, activeKeyProps, menuProps2.props, { defaultActiveFirst });
        return h(
          Menu$3,
          menuProps2,
          [clonedMenuItems]
        );
      }
      return null;
    }
  },
  render: function render24() {
    var h = arguments[0];
    var renderMenu2 = this.renderMenu();
    var _getListeners2 = getListeners(this), popupFocus = _getListeners2.popupFocus, popupScroll = _getListeners2.popupScroll;
    return renderMenu2 ? h(
      "div",
      {
        style: {
          overflow: "auto",
          transform: "translateZ(0)"
        },
        attrs: {
          id: this.$props.ariaId,
          tabIndex: "-1"
        },
        on: {
          "focus": popupFocus,
          "mousedown": preventDefaultEvent,
          "scroll": popupScroll
        },
        ref: "menuContainer"
      },
      [renderMenu2]
    ) : null;
  }
};
var BUILT_IN_PLACEMENTS$3 = {
  bottomLeft: {
    points: ["tl", "bl"],
    offset: [0, 4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  },
  topLeft: {
    points: ["bl", "tl"],
    offset: [0, -4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  }
};
var SelectTrigger$2 = {
  name: "SelectTrigger",
  mixins: [BaseMixin],
  props: {
    dropdownMatchSelectWidth: PropTypes.bool,
    defaultActiveFirstOption: PropTypes.bool,
    dropdownAlign: PropTypes.object,
    visible: PropTypes.bool,
    disabled: PropTypes.bool,
    showSearch: PropTypes.bool,
    dropdownClassName: PropTypes.string,
    dropdownStyle: PropTypes.object,
    dropdownMenuStyle: PropTypes.object,
    multiple: PropTypes.bool,
    inputValue: PropTypes.string,
    filterOption: PropTypes.any,
    empty: PropTypes.bool,
    options: PropTypes.any,
    prefixCls: PropTypes.string,
    popupClassName: PropTypes.string,
    value: PropTypes.array,
    showAction: PropTypes.arrayOf(PropTypes.string),
    combobox: PropTypes.bool,
    animation: PropTypes.string,
    transitionName: PropTypes.string,
    getPopupContainer: PropTypes.func,
    backfillValue: PropTypes.any,
    menuItemSelectedIcon: PropTypes.any,
    dropdownRender: PropTypes.func,
    ariaId: PropTypes.string
  },
  data: function data10() {
    return {
      dropdownWidth: 0
    };
  },
  created: function created4() {
    this.rafInstance = null;
    this.saveDropdownMenuRef = saveRef(this, "dropdownMenuRef");
    this.saveTriggerRef = saveRef(this, "triggerRef");
  },
  mounted: function mounted14() {
    var _this = this;
    this.$nextTick(function() {
      _this.setDropdownWidth();
    });
  },
  updated: function updated13() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.setDropdownWidth();
    });
  },
  beforeDestroy: function beforeDestroy13() {
    this.cancelRafInstance();
  },
  methods: {
    setDropdownWidth: function setDropdownWidth() {
      var _this3 = this;
      this.cancelRafInstance();
      this.rafInstance = raf$2(function() {
        var width = _this3.$el.offsetWidth;
        if (width !== _this3.dropdownWidth) {
          _this3.setState({ dropdownWidth: width });
        }
      });
    },
    cancelRafInstance: function cancelRafInstance() {
      if (this.rafInstance) {
        raf$2.cancel(this.rafInstance);
      }
    },
    getInnerMenu: function getInnerMenu() {
      return this.dropdownMenuRef && this.dropdownMenuRef.$refs.menuRef;
    },
    getPopupDOMNode: function getPopupDOMNode() {
      return this.triggerRef.getPopupDomNode();
    },
    getDropdownElement: function getDropdownElement(newProps) {
      var h = this.$createElement;
      var value27 = this.value, firstActiveValue = this.firstActiveValue, defaultActiveFirstOption = this.defaultActiveFirstOption, dropdownMenuStyle = this.dropdownMenuStyle, getDropdownPrefixCls2 = this.getDropdownPrefixCls, backfillValue = this.backfillValue, menuItemSelectedIcon = this.menuItemSelectedIcon;
      var _getListeners = getListeners(this), menuSelect = _getListeners.menuSelect, menuDeselect = _getListeners.menuDeselect, popupScroll = _getListeners.popupScroll;
      var props2 = this.$props;
      var dropdownRender = props2.dropdownRender, ariaId2 = props2.ariaId;
      var dropdownMenuProps = {
        props: _default$6({}, newProps.props, {
          ariaId: ariaId2,
          prefixCls: getDropdownPrefixCls2(),
          value: value27,
          firstActiveValue,
          defaultActiveFirstOption,
          dropdownMenuStyle,
          backfillValue,
          menuItemSelectedIcon
        }),
        on: _default$6({}, newProps.on, {
          menuSelect,
          menuDeselect,
          popupScroll
        }),
        directives: [{
          name: "ant-ref",
          value: this.saveDropdownMenuRef
        }]
      };
      var menuNode = h(DropdownMenu$1, dropdownMenuProps);
      if (dropdownRender) {
        return dropdownRender(menuNode, props2);
      }
      return null;
    },
    getDropdownTransitionName: function getDropdownTransitionName() {
      var props2 = this.$props;
      var transitionName2 = props2.transitionName;
      if (!transitionName2 && props2.animation) {
        transitionName2 = this.getDropdownPrefixCls() + "-" + props2.animation;
      }
      return transitionName2;
    },
    getDropdownPrefixCls: function getDropdownPrefixCls() {
      return this.prefixCls + "-dropdown";
    }
  },
  render: function render25() {
    var _popupClassName;
    var h = arguments[0];
    var $props = this.$props, $slots = this.$slots;
    var multiple = $props.multiple, visible11 = $props.visible, inputValue = $props.inputValue, dropdownAlign = $props.dropdownAlign, disabled = $props.disabled, showSearch = $props.showSearch, dropdownClassName = $props.dropdownClassName, dropdownStyle = $props.dropdownStyle, dropdownMatchSelectWidth = $props.dropdownMatchSelectWidth, options2 = $props.options, getPopupContainer = $props.getPopupContainer, showAction = $props.showAction, empty2 = $props.empty;
    var _getListeners2 = getListeners(this), mouseenter = _getListeners2.mouseenter, mouseleave = _getListeners2.mouseleave, popupFocus = _getListeners2.popupFocus, dropdownVisibleChange2 = _getListeners2.dropdownVisibleChange;
    var dropdownPrefixCls = this.getDropdownPrefixCls();
    var popupClassName = (_popupClassName = {}, _default$8(_popupClassName, dropdownClassName, !!dropdownClassName), _default$8(_popupClassName, dropdownPrefixCls + "--" + (multiple ? "multiple" : "single"), 1), _default$8(_popupClassName, dropdownPrefixCls + "--empty", empty2), _popupClassName);
    var popupElement = this.getDropdownElement({
      props: {
        menuItems: options2,
        multiple,
        inputValue,
        visible: visible11
      },
      on: {
        popupFocus
      }
    });
    var hideAction = void 0;
    if (disabled) {
      hideAction = [];
    } else if (isSingleMode($props) && !showSearch) {
      hideAction = ["click"];
    } else {
      hideAction = ["blur"];
    }
    var popupStyle = _default$6({}, dropdownStyle);
    var widthProp = dropdownMatchSelectWidth ? "width" : "minWidth";
    if (this.dropdownWidth) {
      popupStyle[widthProp] = this.dropdownWidth + "px";
    }
    var triggerProps = {
      props: _default$6({}, $props, {
        showAction: disabled ? [] : showAction,
        hideAction,
        ref: "triggerRef",
        popupPlacement: "bottomLeft",
        builtinPlacements: BUILT_IN_PLACEMENTS$3,
        prefixCls: dropdownPrefixCls,
        popupTransitionName: this.getDropdownTransitionName(),
        popupAlign: dropdownAlign,
        popupVisible: visible11,
        getPopupContainer,
        popupClassName: classNames(popupClassName),
        popupStyle
      }),
      on: {
        popupVisibleChange: dropdownVisibleChange2
      },
      directives: [{
        name: "ant-ref",
        value: this.saveTriggerRef
      }]
    };
    if (mouseenter) {
      triggerProps.on.mouseenter = mouseenter;
    }
    if (mouseleave) {
      triggerProps.on.mouseleave = mouseleave;
    }
    return h(
      Trigger,
      triggerProps,
      [$slots["default"], h(
        "template",
        { slot: "popup" },
        [popupElement]
      )]
    );
  }
};
var SelectPropTypes$1 = {
  defaultActiveFirstOption: PropTypes.bool,
  multiple: PropTypes.bool,
  filterOption: PropTypes.any,
  showSearch: PropTypes.bool,
  disabled: PropTypes.bool,
  allowClear: PropTypes.bool,
  showArrow: PropTypes.bool,
  tags: PropTypes.bool,
  prefixCls: PropTypes.string,
  transitionName: PropTypes.string,
  optionLabelProp: PropTypes.string,
  optionFilterProp: PropTypes.string,
  animation: PropTypes.string,
  choiceTransitionName: PropTypes.string,
  open: PropTypes.bool,
  defaultOpen: PropTypes.bool,
  placeholder: PropTypes.any,
  labelInValue: PropTypes.bool,
  loading: PropTypes.bool,
  value: PropTypes.any,
  defaultValue: PropTypes.any,
  dropdownStyle: PropTypes.object,
  dropdownClassName: PropTypes.string,
  maxTagTextLength: PropTypes.number,
  maxTagCount: PropTypes.number,
  maxTagPlaceholder: PropTypes.any,
  tokenSeparators: PropTypes.arrayOf(PropTypes.string),
  getInputElement: PropTypes.func,
  showAction: PropTypes.arrayOf(PropTypes.string),
  autoFocus: PropTypes.bool,
  getPopupContainer: PropTypes.func,
  clearIcon: PropTypes.any,
  inputIcon: PropTypes.any,
  removeIcon: PropTypes.any,
  menuItemSelectedIcon: PropTypes.any,
  dropdownRender: PropTypes.func,
  mode: PropTypes.oneOf(["multiple", "tags"]),
  backfill: PropTypes.bool,
  dropdownAlign: PropTypes.any,
  dropdownMatchSelectWidth: PropTypes.bool,
  dropdownMenuStyle: PropTypes.object,
  notFoundContent: PropTypes.oneOfType([String, Number]),
  tabIndex: PropTypes.oneOfType([String, Number])
};
var inBrowser = typeof window !== "undefined";
var inWeex = typeof WXEnvironment !== "undefined" && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
UA && UA.indexOf("msie 9.0") > 0;
var isEdge = UA && UA.indexOf("edge/") > 0;
UA && UA.indexOf("android") > 0 || weexPlatform === "android";
UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === "ios";
UA && /chrome\/\d+/.test(UA) && !isEdge;
UA && /phantomjs/.test(UA);
UA && UA.match(/firefox\/(\d+)/);
Vue.use(_default$3, { name: "ant-ref" });
var SELECT_EMPTY_VALUE_KEY = "RC_SELECT_EMPTY_VALUE_KEY";
var noop$U = function noop3() {
  return null;
};
function isHidden$2(node) {
  return !node || node.offsetParent === null;
}
function chaining$1() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    for (var i = 0; i < fns.length; i++) {
      if (fns[i] && typeof fns[i] === "function") {
        fns[i].apply(chaining$1, args);
      }
    }
  };
}
var Select$6 = {
  inheritAttrs: false,
  Option: Option$3,
  OptGroup,
  name: "Select",
  mixins: [BaseMixin],
  props: _default$6({}, SelectPropTypes$1, {
    prefixCls: SelectPropTypes$1.prefixCls.def("rc-select"),
    defaultOpen: PropTypes.bool.def(false),
    labelInValue: SelectPropTypes$1.labelInValue.def(false),
    defaultActiveFirstOption: SelectPropTypes$1.defaultActiveFirstOption.def(true),
    showSearch: SelectPropTypes$1.showSearch.def(true),
    allowClear: SelectPropTypes$1.allowClear.def(false),
    placeholder: SelectPropTypes$1.placeholder.def(""),
    dropdownMatchSelectWidth: PropTypes.bool.def(true),
    dropdownStyle: SelectPropTypes$1.dropdownStyle.def(function() {
      return {};
    }),
    dropdownMenuStyle: PropTypes.object.def(function() {
      return {};
    }),
    optionFilterProp: SelectPropTypes$1.optionFilterProp.def("value"),
    optionLabelProp: SelectPropTypes$1.optionLabelProp.def("value"),
    notFoundContent: PropTypes.any.def("Not Found"),
    backfill: PropTypes.bool.def(false),
    showAction: SelectPropTypes$1.showAction.def(["click"]),
    combobox: PropTypes.bool.def(false),
    tokenSeparators: PropTypes.arrayOf(PropTypes.string).def([]),
    autoClearSearchValue: PropTypes.bool.def(true),
    tabIndex: PropTypes.any.def(0),
    dropdownRender: PropTypes.func.def(function(menu) {
      return menu;
    })
  }),
  model: {
    prop: "value",
    event: "change"
  },
  created: function created5() {
    this.saveInputRef = saveRef(this, "inputRef");
    this.saveInputMirrorRef = saveRef(this, "inputMirrorRef");
    this.saveTopCtrlRef = saveRef(this, "topCtrlRef");
    this.saveSelectTriggerRef = saveRef(this, "selectTriggerRef");
    this.saveRootRef = saveRef(this, "rootRef");
    this.saveSelectionRef = saveRef(this, "selectionRef");
    this._focused = false;
    this._mouseDown = false;
    this._options = [];
    this._empty = false;
  },
  data: function data11() {
    var props2 = getOptionProps(this);
    var optionsInfo = this.getOptionsInfoFromProps(props2);
    warning$3(this.__propsSymbol__);
    if (props2.tags && typeof props2.filterOption !== "function") {
      Object.keys(optionsInfo).some(function(key2) {
        return optionsInfo[key2].disabled;
      });
      warning$3();
    }
    var state = {
      _value: this.getValueFromProps(props2, true),
      _inputValue: props2.combobox ? this.getInputValueForCombobox(
        props2,
        optionsInfo,
        true
      ) : "",
      _open: props2.defaultOpen,
      _optionsInfo: optionsInfo,
      _backfillValue: "",
      _skipBuildOptionsInfo: true,
      _ariaId: generateUUID()
    };
    return _default$6({}, state, {
      _mirrorInputValue: state._inputValue
    }, this.getDerivedState(props2, state));
  },
  mounted: function mounted15() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus || _this._open) {
        _this.focus();
      }
    });
  },
  watch: {
    __propsSymbol__: function __propsSymbol__() {
      _default$6(this.$data, this.getDerivedState(getOptionProps(this), this.$data));
    },
    "$data._inputValue": function $data_inputValue(val) {
      this.$data._mirrorInputValue = val;
    }
  },
  updated: function updated14() {
    var _this2 = this;
    this.$nextTick(function() {
      if (isMultipleOrTags(_this2.$props)) {
        var inputNode = _this2.getInputDOMNode();
        var mirrorNode = _this2.getInputMirrorDOMNode();
        if (inputNode && inputNode.value && mirrorNode) {
          inputNode.style.width = "";
          inputNode.style.width = mirrorNode.clientWidth + 10 + "px";
        } else if (inputNode) {
          inputNode.style.width = "";
        }
      }
      _this2.forcePopupAlign();
    });
  },
  beforeDestroy: function beforeDestroy14() {
    this.clearFocusTime();
    this.clearBlurTime();
    this.clearComboboxTime();
    if (this.dropdownContainer) {
      document.body.removeChild(this.dropdownContainer);
      this.dropdownContainer = null;
    }
  },
  methods: {
    getDerivedState: function getDerivedState(nextProps, prevState) {
      var optionsInfo = prevState._skipBuildOptionsInfo ? prevState._optionsInfo : this.getOptionsInfoFromProps(nextProps, prevState);
      var newState = {
        _optionsInfo: optionsInfo,
        _skipBuildOptionsInfo: false
      };
      if ("open" in nextProps) {
        newState._open = nextProps.open;
      }
      if ("value" in nextProps) {
        var value27 = this.getValueFromProps(nextProps);
        newState._value = value27;
        if (nextProps.combobox) {
          newState._inputValue = this.getInputValueForCombobox(nextProps, optionsInfo);
        }
      }
      return newState;
    },
    getOptionsFromChildren: function getOptionsFromChildren() {
      var _this3 = this;
      var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      children.forEach(function(child) {
        if (!child.data || child.data.slot !== void 0) {
          return;
        }
        if (getSlotOptions(child).isSelectOptGroup) {
          _this3.getOptionsFromChildren(child.componentOptions.children, options2);
        } else {
          options2.push(child);
        }
      });
      return options2;
    },
    getInputValueForCombobox: function getInputValueForCombobox(props2, optionsInfo, useDefaultValue) {
      var value27 = [];
      if ("value" in props2 && !useDefaultValue) {
        value27 = toArray$5(props2.value);
      }
      if ("defaultValue" in props2 && useDefaultValue) {
        value27 = toArray$5(props2.defaultValue);
      }
      if (value27.length) {
        value27 = value27[0];
      } else {
        return "";
      }
      var label = value27;
      if (props2.labelInValue) {
        label = value27.label;
      } else if (optionsInfo[getMapKey(value27)]) {
        label = optionsInfo[getMapKey(value27)].label;
      }
      if (label === void 0) {
        label = "";
      }
      return label;
    },
    getLabelFromOption: function getLabelFromOption(props2, option) {
      return getPropValue(option, props2.optionLabelProp);
    },
    getOptionsInfoFromProps: function getOptionsInfoFromProps(props2, preState) {
      var _this4 = this;
      var options2 = this.getOptionsFromChildren(this.$props.children);
      var optionsInfo = {};
      options2.forEach(function(option) {
        var singleValue = getValuePropValue(option);
        optionsInfo[getMapKey(singleValue)] = {
          option,
          value: singleValue,
          label: _this4.getLabelFromOption(props2, option),
          title: getValueByProp(option, "title"),
          disabled: getValueByProp(option, "disabled")
        };
      });
      if (preState) {
        var oldOptionsInfo = preState._optionsInfo;
        var value27 = preState._value;
        if (value27) {
          value27.forEach(function(v) {
            var key2 = getMapKey(v);
            if (!optionsInfo[key2] && oldOptionsInfo[key2] !== void 0) {
              optionsInfo[key2] = oldOptionsInfo[key2];
            }
          });
        }
      }
      return optionsInfo;
    },
    getValueFromProps: function getValueFromProps(props2, useDefaultValue) {
      var value27 = [];
      if ("value" in props2 && !useDefaultValue) {
        value27 = toArray$5(props2.value);
      }
      if ("defaultValue" in props2 && useDefaultValue) {
        value27 = toArray$5(props2.defaultValue);
      }
      if (props2.labelInValue) {
        value27 = value27.map(function(v) {
          return v.key;
        });
      }
      return value27;
    },
    onInputChange: function onInputChange(e) {
      var _e$target = e.target, val = _e$target.value, composing = _e$target.composing;
      var _$data$_inputValue = this.$data._inputValue, _inputValue = _$data$_inputValue === void 0 ? "" : _$data$_inputValue;
      if (e.isComposing || composing || _inputValue === val) {
        this.setState({
          _mirrorInputValue: val
        });
        return;
      }
      var tokenSeparators = this.$props.tokenSeparators;
      if (isMultipleOrTags(this.$props) && tokenSeparators.length && includesSeparators(val, tokenSeparators)) {
        var nextValue = this.getValueByInput(val);
        if (nextValue !== void 0) {
          this.fireChange(nextValue);
        }
        this.setOpenState(false, { needFocus: true });
        this.setInputValue("", false);
        return;
      }
      this.setInputValue(val);
      this.setState({
        _open: true
      });
      if (isCombobox(this.$props)) {
        this.fireChange([val]);
      }
    },
    onDropdownVisibleChange: function onDropdownVisibleChange(open6) {
      if (open6 && !this._focused) {
        this.clearBlurTime();
        this.timeoutFocus();
        this._focused = true;
        this.updateFocusClassName();
      }
      this.setOpenState(open6);
    },
    onKeyDown: function onKeyDown5(event) {
      var open6 = this.$data._open;
      var disabled = this.$props.disabled;
      if (disabled) {
        return;
      }
      var keyCode = event.keyCode;
      if (open6 && !this.getInputDOMNode()) {
        this.onInputKeydown(event);
      } else if (keyCode === KeyCode$2.ENTER || keyCode === KeyCode$2.DOWN) {
        if (keyCode === KeyCode$2.ENTER && !isMultipleOrTags(this.$props)) {
          this.maybeFocus(true);
        } else if (!open6) {
          this.setOpenState(true);
        }
        event.preventDefault();
      } else if (keyCode === KeyCode$2.SPACE) {
        if (!open6) {
          this.setOpenState(true);
          event.preventDefault();
        }
      }
    },
    onInputKeydown: function onInputKeydown(event) {
      var _this5 = this;
      var _$props = this.$props, disabled = _$props.disabled, combobox = _$props.combobox, defaultActiveFirstOption = _$props.defaultActiveFirstOption;
      if (disabled) {
        return;
      }
      var state = this.$data;
      var isRealOpen = this.getRealOpenState(state);
      var keyCode = event.keyCode;
      if (isMultipleOrTags(this.$props) && !event.target.value && keyCode === KeyCode$2.BACKSPACE) {
        event.preventDefault();
        var value27 = state._value;
        if (value27.length) {
          this.removeSelected(value27[value27.length - 1]);
        }
        return;
      }
      if (keyCode === KeyCode$2.DOWN) {
        if (!state._open) {
          this.openIfHasChildren();
          event.preventDefault();
          event.stopPropagation();
          return;
        }
      } else if (keyCode === KeyCode$2.ENTER && state._open) {
        if (isRealOpen || !combobox) {
          event.preventDefault();
        }
        if (isRealOpen && combobox && defaultActiveFirstOption === false) {
          this.comboboxTimer = setTimeout(function() {
            _this5.setOpenState(false);
          });
        }
      } else if (keyCode === KeyCode$2.ESC) {
        if (state._open) {
          this.setOpenState(false);
          event.preventDefault();
          event.stopPropagation();
        }
        return;
      }
      if (isRealOpen && this.selectTriggerRef) {
        var menu = this.selectTriggerRef.getInnerMenu();
        if (menu && menu.onKeyDown(event, this.handleBackfill)) {
          event.preventDefault();
          event.stopPropagation();
        }
      }
    },
    onMenuSelect: function onMenuSelect(_ref) {
      var item = _ref.item;
      if (!item) {
        return;
      }
      var value27 = this.$data._value;
      var props2 = this.$props;
      var selectedValue6 = getValuePropValue(item);
      var lastValue = value27[value27.length - 1];
      var skipTrigger = false;
      if (isMultipleOrTags(props2)) {
        if (findIndexInValueBySingleValue(value27, selectedValue6) !== -1) {
          skipTrigger = true;
        } else {
          value27 = value27.concat([selectedValue6]);
        }
      } else {
        if (!isCombobox(props2) && lastValue !== void 0 && lastValue === selectedValue6 && selectedValue6 !== this.$data._backfillValue) {
          this.setOpenState(false, { needFocus: true, fireSearch: false });
          skipTrigger = true;
        } else {
          value27 = [selectedValue6];
          this.setOpenState(false, { needFocus: true, fireSearch: false });
        }
      }
      if (!skipTrigger) {
        this.fireChange(value27);
      }
      if (!skipTrigger) {
        this.fireSelect(selectedValue6);
        var inputValue = isCombobox(props2) ? getPropValue(item, props2.optionLabelProp) : "";
        if (props2.autoClearSearchValue) {
          this.setInputValue(inputValue, false);
        }
      }
    },
    onMenuDeselect: function onMenuDeselect(_ref2) {
      var item = _ref2.item, domEvent = _ref2.domEvent;
      if (domEvent.type === "keydown" && domEvent.keyCode === KeyCode$2.ENTER) {
        var menuItemDomNode = item.$el;
        if (!isHidden$2(menuItemDomNode)) {
          this.removeSelected(getValuePropValue(item));
        }
        return;
      }
      if (domEvent.type === "click") {
        this.removeSelected(getValuePropValue(item));
      }
      if (this.autoClearSearchValue) {
        this.setInputValue("");
      }
    },
    onArrowClick: function onArrowClick(e) {
      e.stopPropagation();
      e.preventDefault();
      this.clearBlurTime();
      if (!this.disabled) {
        this.setOpenState(!this.$data._open, { needFocus: !this.$data._open });
      }
    },
    onPlaceholderClick: function onPlaceholderClick() {
      if (this.getInputDOMNode() && this.getInputDOMNode()) {
        this.getInputDOMNode().focus();
      }
    },
    onPopupFocus: function onPopupFocus() {
      this.maybeFocus(true, true);
    },
    onClearSelection: function onClearSelection(event) {
      var props2 = this.$props;
      var state = this.$data;
      if (props2.disabled) {
        return;
      }
      var inputValue = state._inputValue, value27 = state._value;
      event.stopPropagation();
      if (inputValue || value27.length) {
        if (value27.length) {
          this.fireChange([]);
        }
        this.setOpenState(false, { needFocus: true });
        if (inputValue) {
          this.setInputValue("");
        }
      }
    },
    onChoiceAnimationLeave: function onChoiceAnimationLeave() {
      this.forcePopupAlign();
    },
    getOptionInfoBySingleValue: function getOptionInfoBySingleValue(value27, optionsInfo) {
      var h = this.$createElement;
      var info3 = void 0;
      optionsInfo = optionsInfo || this.$data._optionsInfo;
      if (optionsInfo[getMapKey(value27)]) {
        info3 = optionsInfo[getMapKey(value27)];
      }
      if (info3) {
        return info3;
      }
      var defaultLabel = value27;
      if (this.$props.labelInValue) {
        var valueLabel = getLabelFromPropsValue(this.$props.value, value27);
        var defaultValueLabel = getLabelFromPropsValue(this.$props.defaultValue, value27);
        if (valueLabel !== void 0) {
          defaultLabel = valueLabel;
        } else if (defaultValueLabel !== void 0) {
          defaultLabel = defaultValueLabel;
        }
      }
      var defaultInfo = {
        option: h(
          Option$3,
          {
            attrs: { value: value27 },
            key: value27
          },
          [value27]
        ),
        value: value27,
        label: defaultLabel
      };
      return defaultInfo;
    },
    getOptionBySingleValue: function getOptionBySingleValue(value27) {
      var _getOptionInfoBySingl = this.getOptionInfoBySingleValue(value27), option = _getOptionInfoBySingl.option;
      return option;
    },
    getOptionsBySingleValue: function getOptionsBySingleValue(values) {
      var _this6 = this;
      return values.map(function(value27) {
        return _this6.getOptionBySingleValue(value27);
      });
    },
    getValueByLabel: function getValueByLabel(label) {
      var _this7 = this;
      if (label === void 0) {
        return null;
      }
      var value27 = null;
      Object.keys(this.$data._optionsInfo).forEach(function(key2) {
        var info3 = _this7.$data._optionsInfo[key2];
        var disabled = info3.disabled;
        if (disabled) {
          return;
        }
        var oldLable = toArray$5(info3.label);
        if (oldLable && oldLable.join("") === label) {
          value27 = info3.value;
        }
      });
      return value27;
    },
    getVLBySingleValue: function getVLBySingleValue(value27) {
      if (this.$props.labelInValue) {
        return {
          key: value27,
          label: this.getLabelBySingleValue(value27)
        };
      }
      return value27;
    },
    getVLForOnChange: function getVLForOnChange(vlsS) {
      var _this8 = this;
      var vls = vlsS;
      if (vls !== void 0) {
        if (!this.labelInValue) {
          vls = vls.map(function(v) {
            return v;
          });
        } else {
          vls = vls.map(function(vl) {
            return {
              key: vl,
              label: _this8.getLabelBySingleValue(vl)
            };
          });
        }
        return isMultipleOrTags(this.$props) ? vls : vls[0];
      }
      return vls;
    },
    getLabelBySingleValue: function getLabelBySingleValue(value27, optionsInfo) {
      var _getOptionInfoBySingl2 = this.getOptionInfoBySingleValue(value27, optionsInfo), label = _getOptionInfoBySingl2.label;
      return label;
    },
    getDropdownContainer: function getDropdownContainer() {
      if (!this.dropdownContainer) {
        this.dropdownContainer = document.createElement("div");
        document.body.appendChild(this.dropdownContainer);
      }
      return this.dropdownContainer;
    },
    getPlaceholderElement: function getPlaceholderElement() {
      var h = this.$createElement;
      var props2 = this.$props, state = this.$data;
      var hidden = false;
      if (state._mirrorInputValue) {
        hidden = true;
      }
      var value27 = state._value;
      if (value27.length) {
        hidden = true;
      }
      if (!state._mirrorInputValue && isCombobox(props2) && value27.length === 1 && state._value && !state._value[0]) {
        hidden = false;
      }
      var placeholder = props2.placeholder;
      if (placeholder) {
        var p = {
          on: {
            mousedown: preventDefaultEvent,
            click: this.onPlaceholderClick
          },
          attrs: UNSELECTABLE_ATTRIBUTE$1,
          style: _default$6({
            display: hidden ? "none" : "block"
          }, UNSELECTABLE_STYLE$1),
          "class": props2.prefixCls + "-selection__placeholder"
        };
        return h(
          "div",
          p,
          [placeholder]
        );
      }
      return null;
    },
    inputClick: function inputClick(e) {
      if (this.$data._open) {
        this.clearBlurTime();
        e.stopPropagation();
      } else {
        this._focused = false;
      }
    },
    inputBlur: function inputBlur(e) {
      var _this9 = this;
      var target2 = e.relatedTarget || document.activeElement;
      if ((isIE || isEdge) && (e.relatedTarget === this.$refs.arrow || target2 && this.selectTriggerRef && this.selectTriggerRef.getInnerMenu() && this.selectTriggerRef.getInnerMenu().$el === target2 || contains(e.target, target2))) {
        e.target.focus();
        e.preventDefault();
        return;
      }
      this.clearBlurTime();
      if (this.disabled) {
        e.preventDefault();
        return;
      }
      this.blurTimer = setTimeout(function() {
        _this9._focused = false;
        _this9.updateFocusClassName();
        var props2 = _this9.$props;
        var value27 = _this9.$data._value;
        var inputValue = _this9.$data._inputValue;
        if (isSingleMode(props2) && props2.showSearch && inputValue && props2.defaultActiveFirstOption) {
          var options2 = _this9._options || [];
          if (options2.length) {
            var firstOption = findFirstMenuItem(options2);
            if (firstOption) {
              value27 = [getValuePropValue(firstOption)];
              _this9.fireChange(value27);
            }
          }
        } else if (isMultipleOrTags(props2) && inputValue) {
          if (_this9._mouseDown) {
            _this9.setInputValue("");
          } else {
            _this9.$data._inputValue = "";
            if (_this9.getInputDOMNode && _this9.getInputDOMNode()) {
              _this9.getInputDOMNode().value = "";
            }
          }
          var tmpValue = _this9.getValueByInput(inputValue);
          if (tmpValue !== void 0) {
            value27 = tmpValue;
            _this9.fireChange(value27);
          }
        }
        if (isMultipleOrTags(props2) && _this9._mouseDown) {
          _this9.maybeFocus(true, true);
          _this9._mouseDown = false;
          return;
        }
        _this9.setOpenState(false);
        _this9.$emit("blur", _this9.getVLForOnChange(value27));
      }, 200);
    },
    inputFocus: function inputFocus(e) {
      if (this.$props.disabled) {
        e.preventDefault();
        return;
      }
      this.clearBlurTime();
      var inputNode = this.getInputDOMNode();
      if (inputNode && e.target === this.rootRef) {
        return;
      }
      if (!isMultipleOrTagsOrCombobox(this.$props) && e.target === inputNode) {
        return;
      }
      if (this._focused) {
        return;
      }
      this._focused = true;
      this.updateFocusClassName();
      if (!isMultipleOrTags(this.$props) || !this._mouseDown) {
        this.timeoutFocus();
      }
    },
    _getInputElement: function _getInputElement() {
      var h = this.$createElement;
      var props2 = this.$props;
      var _$data = this.$data, inputValue = _$data._inputValue, _mirrorInputValue = _$data._mirrorInputValue;
      var attrs = getAttrs(this);
      var defaultInput = h("input", {
        attrs: { id: attrs.id, autoComplete: "off" }
      });
      var inputElement = props2.getInputElement ? props2.getInputElement() : defaultInput;
      var inputCls = classNames(getClass(inputElement), _default$8({}, props2.prefixCls + "-search__field", true));
      var inputEvents = getEvents(inputElement);
      inputElement.data = inputElement.data || {};
      return h(
        "div",
        {
          "class": props2.prefixCls + "-search__field__wrap",
          on: {
            "click": this.inputClick
          }
        },
        [cloneElement(inputElement, {
          props: {
            disabled: props2.disabled,
            value: inputValue
          },
          attrs: _default$6({}, inputElement.data.attrs || {}, {
            disabled: props2.disabled,
            value: inputValue
          }),
          domProps: {
            value: inputValue
          },
          "class": inputCls,
          directives: [{
            name: "ant-ref",
            value: this.saveInputRef
          }, {
            name: "ant-input"
          }],
          on: {
            input: this.onInputChange,
            keydown: chaining$1(this.onInputKeydown, inputEvents.keydown, getListeners(this).inputKeydown),
            focus: chaining$1(this.inputFocus, inputEvents.focus),
            blur: chaining$1(this.inputBlur, inputEvents.blur)
          }
        }), h(
          "span",
          _mergeJSXProps([{
            directives: [{
              name: "ant-ref",
              value: this.saveInputMirrorRef
            }]
          }, {
            "class": props2.prefixCls + "-search__field__mirror"
          }]),
          [_mirrorInputValue, "\xA0"]
        )]
      );
    },
    getInputDOMNode: function getInputDOMNode() {
      return this.topCtrlRef ? this.topCtrlRef.querySelector("input,textarea,div[contentEditable]") : this.inputRef;
    },
    getInputMirrorDOMNode: function getInputMirrorDOMNode() {
      return this.inputMirrorRef;
    },
    getPopupDOMNode: function getPopupDOMNode2() {
      if (this.selectTriggerRef) {
        return this.selectTriggerRef.getPopupDOMNode();
      }
    },
    getPopupMenuComponent: function getPopupMenuComponent() {
      if (this.selectTriggerRef) {
        return this.selectTriggerRef.getInnerMenu();
      }
    },
    setOpenState: function setOpenState(open6) {
      var _this10 = this;
      var config2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var props2 = this.$props, state = this.$data;
      var needFocus = config2.needFocus, fireSearch = config2.fireSearch;
      if (state._open === open6) {
        this.maybeFocus(open6, !!needFocus);
        return;
      }
      this.__emit("dropdownVisibleChange", open6);
      var nextState = {
        _open: open6,
        _backfillValue: ""
      };
      if (!open6 && isSingleMode(props2) && props2.showSearch) {
        this.setInputValue("", fireSearch);
      }
      if (!open6) {
        this.maybeFocus(open6, !!needFocus);
      }
      this.setState(nextState, function() {
        if (open6) {
          _this10.maybeFocus(open6, !!needFocus);
        }
      });
    },
    setInputValue: function setInputValue(inputValue) {
      var fireSearch = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      if (inputValue !== this.$data._inputValue) {
        this.setState({
          _inputValue: inputValue
        }, this.forcePopupAlign);
        if (fireSearch) {
          this.$emit("search", inputValue);
        }
      }
    },
    getValueByInput: function getValueByInput(str) {
      var _this11 = this;
      var _$props2 = this.$props, multiple = _$props2.multiple, tokenSeparators = _$props2.tokenSeparators;
      var nextValue = this.$data._value;
      var hasNewValue = false;
      splitBySeparators(str, tokenSeparators).forEach(function(label) {
        var selectedValue6 = [label];
        if (multiple) {
          var value27 = _this11.getValueByLabel(label);
          if (value27 && findIndexInValueBySingleValue(nextValue, value27) === -1) {
            nextValue = nextValue.concat(value27);
            hasNewValue = true;
            _this11.fireSelect(value27);
          }
        } else if (findIndexInValueBySingleValue(nextValue, label) === -1) {
          nextValue = nextValue.concat(selectedValue6);
          hasNewValue = true;
          _this11.fireSelect(label);
        }
      });
      return hasNewValue ? nextValue : void 0;
    },
    getRealOpenState: function getRealOpenState(state) {
      var _open2 = this.$props.open;
      if (typeof _open2 === "boolean") {
        return _open2;
      }
      var open6 = (state || this.$data)._open;
      var options2 = this._options || [];
      if (isMultipleOrTagsOrCombobox(this.$props) || !this.$props.showSearch) {
        if (open6 && !options2.length) {
          open6 = false;
        }
      }
      return open6;
    },
    focus: function focus() {
      if (isSingleMode(this.$props) && this.selectionRef) {
        this.selectionRef.focus();
      } else if (this.getInputDOMNode()) {
        this.getInputDOMNode().focus();
      }
    },
    blur: function blur() {
      if (isSingleMode(this.$props) && this.selectionRef) {
        this.selectionRef.blur();
      } else if (this.getInputDOMNode()) {
        this.getInputDOMNode().blur();
      }
    },
    markMouseDown: function markMouseDown() {
      this._mouseDown = true;
    },
    markMouseLeave: function markMouseLeave() {
      this._mouseDown = false;
    },
    handleBackfill: function handleBackfill(item) {
      if (!this.backfill || !(isSingleMode(this.$props) || isCombobox(this.$props))) {
        return;
      }
      var key2 = getValuePropValue(item);
      if (isCombobox(this.$props)) {
        this.setInputValue(key2, false);
      }
      this.setState({
        _value: [key2],
        _backfillValue: key2
      });
    },
    _filterOption: function _filterOption(input, child) {
      var defaultFilter = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultFilterFn;
      var _$data2 = this.$data, value27 = _$data2._value, backfillValue = _$data2._backfillValue;
      var lastValue = value27[value27.length - 1];
      if (!input || lastValue && lastValue === backfillValue) {
        return true;
      }
      var filterFn = this.$props.filterOption;
      if (hasProp(this, "filterOption")) {
        if (filterFn === true) {
          filterFn = defaultFilter.bind(this);
        }
      } else {
        filterFn = defaultFilter.bind(this);
      }
      if (!filterFn) {
        return true;
      } else if (typeof filterFn === "function") {
        return filterFn.call(this, input, child);
      } else if (getValueByProp(child, "disabled")) {
        return false;
      }
      return true;
    },
    timeoutFocus: function timeoutFocus() {
      var _this12 = this;
      if (this.focusTimer) {
        this.clearFocusTime();
      }
      this.focusTimer = window.setTimeout(function() {
        _this12.$emit("focus");
      }, 10);
    },
    clearFocusTime: function clearFocusTime() {
      if (this.focusTimer) {
        clearTimeout(this.focusTimer);
        this.focusTimer = null;
      }
    },
    clearBlurTime: function clearBlurTime() {
      if (this.blurTimer) {
        clearTimeout(this.blurTimer);
        this.blurTimer = null;
      }
    },
    clearComboboxTime: function clearComboboxTime() {
      if (this.comboboxTimer) {
        clearTimeout(this.comboboxTimer);
        this.comboboxTimer = null;
      }
    },
    updateFocusClassName: function updateFocusClassName() {
      var rootRef = this.rootRef, prefixCls2 = this.prefixCls;
      if (this._focused) {
        componentClasses(rootRef).add(prefixCls2 + "-focused");
      } else {
        componentClasses(rootRef).remove(prefixCls2 + "-focused");
      }
    },
    maybeFocus: function maybeFocus(open6, needFocus) {
      if (needFocus || open6) {
        var input = this.getInputDOMNode();
        var _document = document, activeElement = _document.activeElement;
        if (input && (open6 || isMultipleOrTagsOrCombobox(this.$props))) {
          if (activeElement !== input) {
            input.focus();
            this._focused = true;
          }
        } else if (activeElement !== this.selectionRef && this.selectionRef) {
          this.selectionRef.focus();
          this._focused = true;
        }
      }
    },
    removeSelected: function removeSelected(selectedKey, e) {
      var props2 = this.$props;
      if (props2.disabled || this.isChildDisabled(selectedKey)) {
        return;
      }
      if (e && e.stopPropagation) {
        e.stopPropagation();
      }
      var oldValue = this.$data._value;
      var value27 = oldValue.filter(function(singleValue) {
        return singleValue !== selectedKey;
      });
      var canMultiple = isMultipleOrTags(props2);
      if (canMultiple) {
        var event = selectedKey;
        if (props2.labelInValue) {
          event = {
            key: selectedKey,
            label: this.getLabelBySingleValue(selectedKey)
          };
        }
        this.$emit("deselect", event, this.getOptionBySingleValue(selectedKey));
      }
      this.fireChange(value27);
    },
    openIfHasChildren: function openIfHasChildren() {
      var $props = this.$props;
      if ($props.children && $props.children.length || isSingleMode($props)) {
        this.setOpenState(true);
      }
    },
    fireSelect: function fireSelect(value27) {
      this.$emit("select", this.getVLBySingleValue(value27), this.getOptionBySingleValue(value27));
    },
    fireChange: function fireChange(value27) {
      if (!hasProp(this, "value")) {
        this.setState({
          _value: value27
        }, this.forcePopupAlign);
      }
      var vls = this.getVLForOnChange(value27);
      var options2 = this.getOptionsBySingleValue(value27);
      this._valueOptions = options2;
      this.$emit("change", vls, isMultipleOrTags(this.$props) ? options2 : options2[0]);
    },
    isChildDisabled: function isChildDisabled(key2) {
      return (this.$props.children || []).some(function(child) {
        var childValue = getValuePropValue(child);
        return childValue === key2 && getValueByProp(child, "disabled");
      });
    },
    forcePopupAlign: function forcePopupAlign2() {
      if (!this.$data._open) {
        return;
      }
      if (this.selectTriggerRef && this.selectTriggerRef.triggerRef) {
        this.selectTriggerRef.triggerRef.forcePopupAlign();
      }
    },
    renderFilterOptions: function renderFilterOptions() {
      var h = this.$createElement;
      var inputValue = this.$data._inputValue;
      var _$props3 = this.$props, children = _$props3.children, tags = _$props3.tags, notFoundContent = _$props3.notFoundContent;
      var menuItems = [];
      var childrenKeys = [];
      var empty2 = false;
      var options2 = this.renderFilterOptionsFromChildren(children, childrenKeys, menuItems);
      if (tags) {
        var value27 = this.$data._value;
        value27 = value27.filter(function(singleValue) {
          return childrenKeys.indexOf(singleValue) === -1 && (!inputValue || String(singleValue).indexOf(String(inputValue)) > -1);
        });
        value27.sort(function(val1, val2) {
          return val1.length - val2.length;
        });
        value27.forEach(function(singleValue) {
          var key2 = singleValue;
          var attrs = _default$6({}, UNSELECTABLE_ATTRIBUTE$1, {
            role: "option"
          });
          var menuItem = h(
            MenuItem$1,
            _mergeJSXProps([{ style: UNSELECTABLE_STYLE$1 }, { attrs }, {
              attrs: { value: key2 },
              key: key2
            }]),
            [key2]
          );
          options2.push(menuItem);
          menuItems.push(menuItem);
        });
        if (inputValue && menuItems.every(function(option) {
          return getValuePropValue(option) !== inputValue;
        })) {
          var p = {
            attrs: UNSELECTABLE_ATTRIBUTE$1,
            key: inputValue,
            props: {
              value: inputValue,
              role: "option"
            },
            style: UNSELECTABLE_STYLE$1
          };
          options2.unshift(h(
            MenuItem$1,
            p,
            [inputValue]
          ));
        }
      }
      if (!options2.length && notFoundContent) {
        empty2 = true;
        var _p = {
          attrs: UNSELECTABLE_ATTRIBUTE$1,
          key: "NOT_FOUND",
          props: {
            value: "NOT_FOUND",
            disabled: true,
            role: "option"
          },
          style: UNSELECTABLE_STYLE$1
        };
        options2 = [h(
          MenuItem$1,
          _p,
          [notFoundContent]
        )];
      }
      return { empty: empty2, options: options2 };
    },
    renderFilterOptionsFromChildren: function renderFilterOptionsFromChildren() {
      var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var _this13 = this;
      var childrenKeys = arguments[1];
      var menuItems = arguments[2];
      var h = this.$createElement;
      var sel = [];
      var props2 = this.$props;
      var inputValue = this.$data._inputValue;
      var tags = props2.tags;
      children.forEach(function(child) {
        if (!child.data || child.data.slot !== void 0) {
          return;
        }
        if (getSlotOptions(child).isSelectOptGroup) {
          var label = getComponentFromProp(child, "label");
          var key2 = child.key;
          if (!key2 && typeof label === "string") {
            key2 = label;
          } else if (!label && key2) {
            label = key2;
          }
          var childChildren = getSlots(child)["default"];
          childChildren = typeof childChildren === "function" ? childChildren() : childChildren;
          if (inputValue && _this13._filterOption(inputValue, child)) {
            var innerItems = childChildren.map(function(subChild) {
              var childValueSub = getValuePropValue(subChild) || subChild.key;
              return h(
                MenuItem$1,
                _mergeJSXProps([{
                  key: childValueSub,
                  attrs: { value: childValueSub }
                }, subChild.data]),
                [subChild.componentOptions.children]
              );
            });
            sel.push(h(
              ItemGroup,
              {
                key: key2,
                attrs: { title: label },
                "class": getClass(child)
              },
              [innerItems]
            ));
          } else {
            var _innerItems = _this13.renderFilterOptionsFromChildren(childChildren, childrenKeys, menuItems);
            if (_innerItems.length) {
              sel.push(h(
                ItemGroup,
                _mergeJSXProps([{
                  key: key2,
                  attrs: { title: label }
                }, child.data]),
                [_innerItems]
              ));
            }
          }
          return;
        }
        warning$3(getSlotOptions(child).isSelectOption, "the children of `Select` should be `Select.Option` or `Select.OptGroup`, " + ("instead of `" + (getSlotOptions(child).name || getSlotOptions(child)) + "`."));
        var childValue = getValuePropValue(child);
        validateOptionValue(childValue, _this13.$props);
        if (_this13._filterOption(inputValue, child)) {
          var p = {
            attrs: _default$6({}, UNSELECTABLE_ATTRIBUTE$1, getAttrs(child)),
            key: childValue,
            props: _default$6({
              value: childValue
            }, getPropsData(child), {
              role: "option"
            }),
            style: UNSELECTABLE_STYLE$1,
            on: getEvents(child),
            "class": getClass(child)
          };
          var menuItem = h(
            MenuItem$1,
            p,
            [child.componentOptions.children]
          );
          sel.push(menuItem);
          menuItems.push(menuItem);
        }
        if (tags) {
          childrenKeys.push(childValue);
        }
      });
      return sel;
    },
    renderTopControlNode: function renderTopControlNode() {
      var _this14 = this;
      var h = this.$createElement;
      var props2 = this.$props;
      var _$data3 = this.$data, value27 = _$data3._value, inputValue = _$data3._inputValue, open6 = _$data3._open;
      var choiceTransitionName = props2.choiceTransitionName, prefixCls2 = props2.prefixCls, maxTagTextLength = props2.maxTagTextLength, maxTagCount = props2.maxTagCount, maxTagPlaceholder = props2.maxTagPlaceholder, showSearch = props2.showSearch;
      var removeIcon = getComponentFromProp(this, "removeIcon");
      var className = prefixCls2 + "-selection__rendered";
      var innerNode = null;
      if (isSingleMode(props2)) {
        var selectedValue6 = null;
        if (value27.length) {
          var showSelectedValue = false;
          var opacity = 1;
          if (!showSearch) {
            showSelectedValue = true;
          } else if (open6) {
            showSelectedValue = !inputValue;
            if (showSelectedValue) {
              opacity = 0.4;
            }
          } else {
            showSelectedValue = true;
          }
          var singleValue = value27[0];
          var _getOptionInfoBySingl3 = this.getOptionInfoBySingleValue(singleValue), label = _getOptionInfoBySingl3.label, title = _getOptionInfoBySingl3.title;
          selectedValue6 = h(
            "div",
            {
              key: "value",
              "class": prefixCls2 + "-selection-selected-value",
              attrs: {
                title: toTitle$1(title || label)
              },
              style: {
                display: showSelectedValue ? "block" : "none",
                opacity
              }
            },
            [label]
          );
        }
        if (!showSearch) {
          innerNode = [selectedValue6];
        } else {
          innerNode = [selectedValue6, h(
            "div",
            {
              "class": prefixCls2 + "-search " + prefixCls2 + "-search--inline",
              key: "input",
              style: {
                display: open6 ? "block" : "none"
              }
            },
            [this._getInputElement()]
          )];
        }
      } else {
        var selectedValueNodes = [];
        var limitedCountValue = value27;
        var maxTagPlaceholderEl = void 0;
        if (maxTagCount !== void 0 && value27.length > maxTagCount) {
          limitedCountValue = limitedCountValue.slice(0, maxTagCount);
          var omittedValues = this.getVLForOnChange(value27.slice(maxTagCount, value27.length));
          var content = "+ " + (value27.length - maxTagCount) + " ...";
          if (maxTagPlaceholder) {
            content = typeof maxTagPlaceholder === "function" ? maxTagPlaceholder(omittedValues) : maxTagPlaceholder;
          }
          var attrs = _default$6({}, UNSELECTABLE_ATTRIBUTE$1, {
            role: "presentation",
            title: toTitle$1(content)
          });
          maxTagPlaceholderEl = h(
            "li",
            _mergeJSXProps([{
              style: UNSELECTABLE_STYLE$1
            }, { attrs }, {
              on: {
                "mousedown": preventDefaultEvent
              },
              "class": prefixCls2 + "-selection__choice " + prefixCls2 + "-selection__choice__disabled",
              key: "maxTagPlaceholder"
            }]),
            [h(
              "div",
              { "class": prefixCls2 + "-selection__choice__content" },
              [content]
            )]
          );
        }
        if (isMultipleOrTags(props2)) {
          selectedValueNodes = limitedCountValue.map(function(singleValue2) {
            var info3 = _this14.getOptionInfoBySingleValue(singleValue2);
            var content2 = info3.label;
            var title2 = info3.title || content2;
            if (maxTagTextLength && typeof content2 === "string" && content2.length > maxTagTextLength) {
              content2 = content2.slice(0, maxTagTextLength) + "...";
            }
            var disabled = _this14.isChildDisabled(singleValue2);
            var choiceClassName = disabled ? prefixCls2 + "-selection__choice " + prefixCls2 + "-selection__choice__disabled" : prefixCls2 + "-selection__choice";
            var attrs2 = _default$6({}, UNSELECTABLE_ATTRIBUTE$1, {
              role: "presentation",
              title: toTitle$1(title2)
            });
            return h(
              "li",
              _mergeJSXProps([{
                style: UNSELECTABLE_STYLE$1
              }, { attrs: attrs2 }, {
                on: {
                  "mousedown": preventDefaultEvent
                },
                "class": choiceClassName,
                key: singleValue2 || SELECT_EMPTY_VALUE_KEY
              }]),
              [h(
                "div",
                { "class": prefixCls2 + "-selection__choice__content" },
                [content2]
              ), disabled ? null : h(
                "span",
                {
                  on: {
                    "click": function click(event) {
                      _this14.removeSelected(singleValue2, event);
                    }
                  },
                  "class": prefixCls2 + "-selection__choice__remove"
                },
                [removeIcon || h(
                  "i",
                  { "class": prefixCls2 + "-selection__choice__remove-icon" },
                  ["\xD7"]
                )]
              )]
            );
          });
        }
        if (maxTagPlaceholderEl) {
          selectedValueNodes.push(maxTagPlaceholderEl);
        }
        selectedValueNodes.push(h(
          "li",
          { "class": prefixCls2 + "-search " + prefixCls2 + "-search--inline", key: "__input" },
          [this._getInputElement()]
        ));
        if (isMultipleOrTags(props2) && choiceTransitionName) {
          var transitionProps = getTransitionProps$1(choiceTransitionName, {
            tag: "ul",
            afterLeave: this.onChoiceAnimationLeave
          });
          innerNode = h(
            "transition-group",
            transitionProps,
            [selectedValueNodes]
          );
        } else {
          innerNode = h("ul", [selectedValueNodes]);
        }
      }
      return h(
        "div",
        _mergeJSXProps([{
          "class": className
        }, {
          directives: [{
            name: "ant-ref",
            value: this.saveTopCtrlRef
          }]
        }, {
          on: {
            "click": this.topCtrlContainerClick
          }
        }]),
        [this.getPlaceholderElement(), innerNode]
      );
    },
    renderArrow: function renderArrow(multiple) {
      var h = this.$createElement;
      var _$props4 = this.$props, _$props4$showArrow = _$props4.showArrow, showArrow = _$props4$showArrow === void 0 ? !multiple : _$props4$showArrow, loading2 = _$props4.loading, prefixCls2 = _$props4.prefixCls;
      var inputIcon = getComponentFromProp(this, "inputIcon");
      if (!showArrow && !loading2) {
        return null;
      }
      var defaultIcon = loading2 ? h("i", { "class": prefixCls2 + "-arrow-loading" }) : h("i", { "class": prefixCls2 + "-arrow-icon" });
      return h(
        "span",
        _mergeJSXProps([{
          key: "arrow",
          "class": prefixCls2 + "-arrow",
          style: UNSELECTABLE_STYLE$1
        }, { attrs: UNSELECTABLE_ATTRIBUTE$1 }, {
          on: {
            "click": this.onArrowClick
          },
          ref: "arrow"
        }]),
        [inputIcon || defaultIcon]
      );
    },
    topCtrlContainerClick: function topCtrlContainerClick(e) {
      if (this.$data._open && !isSingleMode(this.$props)) {
        e.stopPropagation();
      }
    },
    renderClear: function renderClear() {
      var h = this.$createElement;
      var _$props5 = this.$props, prefixCls2 = _$props5.prefixCls, allowClear = _$props5.allowClear;
      var _$data4 = this.$data, value27 = _$data4._value, inputValue = _$data4._inputValue;
      var clearIcon = getComponentFromProp(this, "clearIcon");
      var clear3 = h(
        "span",
        _mergeJSXProps([{
          key: "clear",
          "class": prefixCls2 + "-selection__clear",
          on: {
            "mousedown": preventDefaultEvent
          },
          style: UNSELECTABLE_STYLE$1
        }, { attrs: UNSELECTABLE_ATTRIBUTE$1 }, {
          on: {
            "click": this.onClearSelection
          }
        }]),
        [clearIcon || h(
          "i",
          { "class": prefixCls2 + "-selection__clear-icon" },
          ["\xD7"]
        )]
      );
      if (!allowClear) {
        return null;
      }
      if (isCombobox(this.$props)) {
        if (inputValue) {
          return clear3;
        }
        return null;
      }
      if (inputValue || value27.length) {
        return clear3;
      }
      return null;
    },
    selectionRefClick: function selectionRefClick() {
      if (!this.disabled) {
        var input = this.getInputDOMNode();
        if (this._focused && this.$data._open) {
          this.setOpenState(false, false);
          input && input.blur();
        } else {
          this.clearBlurTime();
          this.setOpenState(true, true);
          input && input.focus();
        }
      }
    },
    selectionRefFocus: function selectionRefFocus(e) {
      if (this._focused || this.disabled || isMultipleOrTagsOrCombobox(this.$props)) {
        e.preventDefault();
        return;
      }
      this._focused = true;
      this.updateFocusClassName();
      this.$emit("focus");
    },
    selectionRefBlur: function selectionRefBlur(e) {
      if (isMultipleOrTagsOrCombobox(this.$props)) {
        e.preventDefault();
        return;
      }
      this.inputBlur(e);
    }
  },
  render: function render26() {
    var _rootCls;
    var h = arguments[0];
    var props2 = this.$props;
    var multiple = isMultipleOrTags(props2);
    var _props$showArrow = props2.showArrow, showArrow = _props$showArrow === void 0 ? true : _props$showArrow;
    var state = this.$data;
    var disabled = props2.disabled, prefixCls2 = props2.prefixCls, loading2 = props2.loading;
    var ctrlNode = this.renderTopControlNode();
    var _$data5 = this.$data, open6 = _$data5._open, inputValue = _$data5._inputValue, value27 = _$data5._value;
    if (open6) {
      var filterOptions = this.renderFilterOptions();
      this._empty = filterOptions.empty;
      this._options = filterOptions.options;
    }
    var realOpen = this.getRealOpenState();
    var empty2 = this._empty;
    var options2 = this._options || [];
    var _getListeners = getListeners(this), _getListeners$mouseen = _getListeners.mouseenter, mouseenter = _getListeners$mouseen === void 0 ? noop$U : _getListeners$mouseen, _getListeners$mousele = _getListeners.mouseleave, mouseleave = _getListeners$mousele === void 0 ? noop$U : _getListeners$mousele, _getListeners$popupSc = _getListeners.popupScroll, popupScroll = _getListeners$popupSc === void 0 ? noop$U : _getListeners$popupSc;
    var selectionProps = {
      props: {},
      attrs: {
        role: "combobox",
        "aria-autocomplete": "list",
        "aria-haspopup": "true",
        "aria-expanded": realOpen,
        "aria-controls": this.$data._ariaId
      },
      on: {},
      "class": prefixCls2 + "-selection " + prefixCls2 + "-selection--" + (multiple ? "multiple" : "single"),
      key: "selection"
    };
    var extraSelectionProps = { attrs: { tabIndex: -1 } };
    if (!isMultipleOrTagsOrCombobox(props2)) {
      extraSelectionProps.attrs.tabIndex = props2.disabled ? -1 : props2.tabIndex;
    }
    var rootCls = (_rootCls = {}, _default$8(_rootCls, prefixCls2, true), _default$8(_rootCls, prefixCls2 + "-open", open6), _default$8(_rootCls, prefixCls2 + "-focused", open6 || !!this._focused), _default$8(_rootCls, prefixCls2 + "-combobox", isCombobox(props2)), _default$8(_rootCls, prefixCls2 + "-disabled", disabled), _default$8(_rootCls, prefixCls2 + "-enabled", !disabled), _default$8(_rootCls, prefixCls2 + "-allow-clear", !!props2.allowClear), _default$8(_rootCls, prefixCls2 + "-no-arrow", !showArrow), _default$8(_rootCls, prefixCls2 + "-loading", !!loading2), _rootCls);
    return h(
      SelectTrigger$2,
      _mergeJSXProps([{
        attrs: {
          dropdownAlign: props2.dropdownAlign,
          dropdownClassName: props2.dropdownClassName,
          dropdownMatchSelectWidth: props2.dropdownMatchSelectWidth,
          defaultActiveFirstOption: props2.defaultActiveFirstOption,
          dropdownMenuStyle: props2.dropdownMenuStyle,
          transitionName: props2.transitionName,
          animation: props2.animation,
          prefixCls: props2.prefixCls,
          dropdownStyle: props2.dropdownStyle,
          combobox: props2.combobox,
          showSearch: props2.showSearch,
          options: options2,
          empty: empty2,
          multiple,
          disabled,
          visible: realOpen,
          inputValue,
          value: value27,
          backfillValue: state._backfillValue,
          firstActiveValue: props2.firstActiveValue,
          getPopupContainer: props2.getPopupContainer,
          showAction: props2.showAction,
          menuItemSelectedIcon: getComponentFromProp(this, "menuItemSelectedIcon")
        },
        on: {
          "dropdownVisibleChange": this.onDropdownVisibleChange,
          "menuSelect": this.onMenuSelect,
          "menuDeselect": this.onMenuDeselect,
          "popupScroll": popupScroll,
          "popupFocus": this.onPopupFocus,
          "mouseenter": mouseenter,
          "mouseleave": mouseleave
        }
      }, {
        directives: [{
          name: "ant-ref",
          value: this.saveSelectTriggerRef
        }]
      }, {
        attrs: {
          dropdownRender: props2.dropdownRender,
          ariaId: this.$data._ariaId
        }
      }]),
      [h(
        "div",
        _mergeJSXProps([{
          directives: [{
            name: "ant-ref",
            value: chaining$1(this.saveRootRef, this.saveSelectionRef)
          }]
        }, {
          style: getStyle$1(this),
          "class": classNames(rootCls),
          on: {
            "mousedown": this.markMouseDown,
            "mouseup": this.markMouseLeave,
            "mouseout": this.markMouseLeave
          }
        }, extraSelectionProps, {
          on: {
            "blur": this.selectionRefBlur,
            "focus": this.selectionRefFocus,
            "click": this.selectionRefClick,
            "keydown": isMultipleOrTagsOrCombobox(props2) ? noop$U : this.onKeyDown
          }
        }]),
        [h(
          "div",
          selectionProps,
          [ctrlNode, this.renderClear(), this.renderArrow(!!multiple)]
        )]
      )]
    );
  }
};
var ProxySelect = wrapWithConnect(Select$6);
Select$6.Option = Option$3;
Select$6.OptGroup = OptGroup;
ProxySelect.Option = Option$3;
ProxySelect.OptGroup = OptGroup;
var dist = {};
Object.defineProperty(dist, "__esModule", { value: true });
var normalViewBox = "0 0 1024 1024";
var newViewBox = "64 64 896 896";
var fill = "fill";
var outline = "outline";
var twotone = "twotone";
function getNode(viewBox) {
  var paths = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    paths[_i - 1] = arguments[_i];
  }
  return {
    tag: "svg",
    attrs: { viewBox, focusable: false },
    children: paths.map(function(path) {
      if (Array.isArray(path)) {
        return {
          tag: "path",
          attrs: {
            fill: path[0],
            d: path[1]
          }
        };
      }
      return {
        tag: "path",
        attrs: {
          d: path
        }
      };
    })
  };
}
function getIcon$1(name, theme, icon) {
  return {
    name,
    theme,
    icon
  };
}
var AccountBookFill = dist.AccountBookFill = getIcon$1("account-book", fill, getNode(newViewBox, "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zM648.3 426.8l-87.7 161.1h45.7c5.5 0 10 4.5 10 10v21.3c0 5.5-4.5 10-10 10h-63.4v29.7h63.4c5.5 0 10 4.5 10 10v21.3c0 5.5-4.5 10-10 10h-63.4V752c0 5.5-4.5 10-10 10h-41.3c-5.5 0-10-4.5-10-10v-51.8h-63.1c-5.5 0-10-4.5-10-10v-21.3c0-5.5 4.5-10 10-10h63.1v-29.7h-63.1c-5.5 0-10-4.5-10-10v-21.3c0-5.5 4.5-10 10-10h45.2l-88-161.1c-2.6-4.8-.9-10.9 4-13.6 1.5-.8 3.1-1.2 4.8-1.2h46c3.8 0 7.2 2.1 8.9 5.5l72.9 144.3 73.2-144.3a10 10 0 0 1 8.9-5.5h45c5.5 0 10 4.5 10 10 .1 1.7-.3 3.3-1.1 4.8z"));
var AlertFill = dist.AlertFill = getIcon$1("alert", fill, getNode(newViewBox, "M512 244c176.18 0 319 142.82 319 319v233a32 32 0 0 1-32 32H225a32 32 0 0 1-32-32V563c0-176.18 142.82-319 319-319zM484 68h56a8 8 0 0 1 8 8v96a8 8 0 0 1-8 8h-56a8 8 0 0 1-8-8V76a8 8 0 0 1 8-8zM177.25 191.66a8 8 0 0 1 11.32 0l67.88 67.88a8 8 0 0 1 0 11.31l-39.6 39.6a8 8 0 0 1-11.31 0l-67.88-67.88a8 8 0 0 1 0-11.31l39.6-39.6zm669.6 0l39.6 39.6a8 8 0 0 1 0 11.3l-67.88 67.9a8 8 0 0 1-11.32 0l-39.6-39.6a8 8 0 0 1 0-11.32l67.89-67.88a8 8 0 0 1 11.31 0zM192 892h640a32 32 0 0 1 32 32v24a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-24a32 32 0 0 1 32-32zm148-317v253h64V575h-64z"));
var AlipaySquareFill = dist.AlipaySquareFill = getIcon$1("alipay-square", fill, getNode(newViewBox, "M308.6 545.7c-19.8 2-57.1 10.7-77.4 28.6-61 53-24.5 150 99 150 71.8 0 143.5-45.7 199.8-119-80.2-38.9-148.1-66.8-221.4-59.6zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm29.4 663.2S703 689.4 598.7 639.5C528.8 725.2 438.6 777.3 345 777.3c-158.4 0-212.1-138.1-137.2-229 16.3-19.8 44.2-38.7 87.3-49.4 67.5-16.5 175 10.3 275.7 43.4 18.1-33.3 33.4-69.9 44.7-108.9H305.1V402h160v-56.2H271.3v-31.3h193.8v-80.1s0-13.5 13.7-13.5H557v93.6h191.7v31.3H557.1V402h156.4c-15 61.1-37.7 117.4-66.2 166.8 47.5 17.1 90.1 33.3 121.8 43.9 114.3 38.2 140.2 40.2 140.2 40.2v122.3z"));
var AliwangwangFill = dist.AliwangwangFill = getIcon$1("aliwangwang", fill, getNode(newViewBox, "M868.2 377.4c-18.9-45.1-46.3-85.6-81.2-120.6a377.26 377.26 0 0 0-120.5-81.2A375.65 375.65 0 0 0 519 145.8c-41.9 0-82.9 6.7-121.9 20C306 123.3 200.8 120 170.6 120c-2.2 0-7.4 0-9.4.2-11.9.4-22.8 6.5-29.2 16.4-6.5 9.9-7.7 22.4-3.4 33.5l64.3 161.6a378.59 378.59 0 0 0-52.8 193.2c0 51.4 10 101 29.8 147.6 18.9 45 46.2 85.6 81.2 120.5 34.7 34.8 75.4 62.1 120.5 81.2C418.3 894 467.9 904 519 904c51.3 0 100.9-10 147.7-29.8 44.9-18.9 85.5-46.3 120.4-81.2 34.7-34.8 62.1-75.4 81.2-120.6a376.5 376.5 0 0 0 29.8-147.6c-.2-51.2-10.1-100.8-29.9-147.4zm-325.2 79c0 20.4-16.6 37.1-37.1 37.1-20.4 0-37.1-16.7-37.1-37.1v-55.1c0-20.4 16.6-37.1 37.1-37.1 20.4 0 37.1 16.6 37.1 37.1v55.1zm175.2 0c0 20.4-16.6 37.1-37.1 37.1S644 476.8 644 456.4v-55.1c0-20.4 16.7-37.1 37.1-37.1 20.4 0 37.1 16.6 37.1 37.1v55.1z"));
var AlipayCircleFill = dist.AlipayCircleFill = getIcon$1("alipay-circle", fill, getNode(newViewBox, "M308.6 545.7c-19.8 2-57.1 10.7-77.4 28.6-61 53-24.5 150 99 150 71.8 0 143.5-45.7 199.8-119-80.2-38.9-148.1-66.8-221.4-59.6zm460.5 67c100.1 33.4 154.7 43 166.7 44.8A445.9 445.9 0 0 0 960 512c0-247.4-200.6-448-448-448S64 264.6 64 512s200.6 448 448 448c155.9 0 293.2-79.7 373.5-200.5-75.6-29.8-213.6-85-286.8-120.1-69.9 85.7-160.1 137.8-253.7 137.8-158.4 0-212.1-138.1-137.2-229 16.3-19.8 44.2-38.7 87.3-49.4 67.5-16.5 175 10.3 275.7 43.4 18.1-33.3 33.4-69.9 44.7-108.9H305.1V402h160v-56.2H271.3v-31.3h193.8v-80.1s0-13.5 13.7-13.5H557v93.6h191.7v31.3H557.1V402h156.4c-15 61.1-37.7 117.4-66.2 166.8 47.5 17.1 90.1 33.3 121.8 43.9z"));
var AmazonCircleFill = dist.AmazonCircleFill = getIcon$1("amazon-circle", fill, getNode(newViewBox, "M485 467.5c-11.6 4.9-20.9 12.2-27.8 22-6.9 9.8-10.4 21.6-10.4 35.5 0 17.8 7.5 31.5 22.4 41.2 14.1 9.1 28.9 11.4 44.4 6.8 17.9-5.2 30-17.9 36.4-38.1 3-9.3 4.5-19.7 4.5-31.3v-50.2c-12.6.4-24.4 1.6-35.5 3.7-11.1 2.1-22.4 5.6-34 10.4zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm35.8 262.7c-7.2-10.9-20.1-16.4-38.7-16.4-1.3 0-3 .1-5.3.3-2.2.2-6.6 1.5-12.9 3.7a79.4 79.4 0 0 0-17.9 9.1c-5.5 3.8-11.5 10-18 18.4-6.4 8.5-11.5 18.4-15.3 29.8l-94-8.4c0-12.4 2.4-24.7 7-36.9 4.7-12.2 11.8-23.9 21.4-35 9.6-11.2 21.1-21 34.5-29.4 13.4-8.5 29.6-15.2 48.4-20.3 18.9-5.1 39.1-7.6 60.9-7.6 21.3 0 40.6 2.6 57.8 7.7 17.2 5.2 31.1 11.5 41.4 19.1a117 117 0 0 1 25.9 25.7c6.9 9.6 11.7 18.5 14.4 26.7 2.7 8.2 4 15.7 4 22.8v182.5c0 6.4 1.4 13 4.3 19.8 2.9 6.8 6.3 12.8 10.2 18 3.9 5.2 7.9 9.9 12 14.3 4.1 4.3 7.6 7.7 10.6 9.9l4.1 3.4-72.5 69.4c-8.5-7.7-16.9-15.4-25.2-23.4-8.3-8-14.5-14-18.5-18.1l-6.1-6.2c-2.4-2.3-5-5.7-8-10.2-8.1 12.2-18.5 22.8-31.1 31.8-12.7 9-26.3 15.6-40.7 19.7-14.5 4.1-29.4 6.5-44.7 7.1-15.3.6-30-1.5-43.9-6.5-13.9-5-26.5-11.7-37.6-20.3-11.1-8.6-19.9-20.2-26.5-35-6.6-14.8-9.9-31.5-9.9-50.4 0-17.4 3-33.3 8.9-47.7 6-14.5 13.6-26.5 23-36.1 9.4-9.6 20.7-18.2 34-25.7s26.4-13.4 39.2-17.7c12.8-4.2 26.6-7.8 41.5-10.7 14.9-2.9 27.6-4.8 38.2-5.7 10.6-.9 21.2-1.6 31.8-2v-39.4c0-13.5-2.3-23.5-6.7-30.1zm180.5 379.6c-2.8 3.3-7.5 7.8-14.1 13.5s-16.8 12.7-30.5 21.1c-13.7 8.4-28.8 16-45 22.9-16.3 6.9-36.3 12.9-60.1 18-23.7 5.1-48.2 7.6-73.3 7.6-25.4 0-50.7-3.2-76.1-9.6-25.4-6.4-47.6-14.3-66.8-23.7-19.1-9.4-37.6-20.2-55.1-32.2-17.6-12.1-31.7-22.9-42.4-32.5-10.6-9.6-19.6-18.7-26.8-27.1-1.7-1.9-2.8-3.6-3.2-5.1-.4-1.5-.3-2.8.3-3.7.6-.9 1.5-1.6 2.6-2.2a7.42 7.42 0 0 1 7.4.8c40.9 24.2 72.9 41.3 95.9 51.4 82.9 36.4 168 45.7 255.3 27.9 40.5-8.3 82.1-22.2 124.9-41.8 3.2-1.2 6-1.5 8.3-.9 2.3.6 3.5 2.4 3.5 5.4 0 2.8-1.6 6.3-4.8 10.2zm59.9-29c-1.8 11.1-4.9 21.6-9.1 31.8-7.2 17.1-16.3 30-27.1 38.4-3.6 2.9-6.4 3.8-8.3 2.8-1.9-1-1.9-3.5 0-7.4 4.5-9.3 9.2-21.8 14.2-37.7 5-15.8 5.7-26 2.1-30.5-1.1-1.5-2.7-2.6-5-3.6-2.2-.9-5.1-1.5-8.6-1.9s-6.7-.6-9.4-.8c-2.8-.2-6.5-.2-11.2 0-4.7.2-8 .4-10.1.6a874.4 874.4 0 0 1-17.1 1.5c-1.3.2-2.7.4-4.1.5-1.5.1-2.7.2-3.5.3l-2.7.3c-1 .1-1.7.2-2.2.2h-3.2l-1-.2-.6-.5-.5-.9c-1.3-3.3 3.7-7.4 15-12.4s22.3-8.1 32.9-9.3c9.8-1.5 21.3-1.5 34.5-.3s21.3 3.7 24.3 7.4c2.3 3.5 2.5 10.7.7 21.7z"));
var AndroidFill = dist.AndroidFill = getIcon$1("android", fill, getNode(newViewBox, "M270.1 741.7c0 23.4 19.1 42.5 42.6 42.5h48.7v120.4c0 30.5 24.5 55.4 54.6 55.4 30.2 0 54.6-24.8 54.6-55.4V784.1h85v120.4c0 30.5 24.5 55.4 54.6 55.4 30.2 0 54.6-24.8 54.6-55.4V784.1h48.7c23.5 0 42.6-19.1 42.6-42.5V346.4h-486v395.3zm357.1-600.1l44.9-65c2.6-3.8 2-8.9-1.5-11.4-3.5-2.4-8.5-1.2-11.1 2.6l-46.6 67.6c-30.7-12.1-64.9-18.8-100.8-18.8-35.9 0-70.1 6.7-100.8 18.8l-46.6-67.5c-2.6-3.8-7.6-5.1-11.1-2.6-3.5 2.4-4.1 7.4-1.5 11.4l44.9 65c-71.4 33.2-121.4 96.1-127.8 169.6h486c-6.6-73.6-56.7-136.5-128-169.7zM409.5 244.1a26.9 26.9 0 1 1 26.9-26.9 26.97 26.97 0 0 1-26.9 26.9zm208.4 0a26.9 26.9 0 1 1 26.9-26.9 26.97 26.97 0 0 1-26.9 26.9zm223.4 100.7c-30.2 0-54.6 24.8-54.6 55.4v216.4c0 30.5 24.5 55.4 54.6 55.4 30.2 0 54.6-24.8 54.6-55.4V400.1c.1-30.6-24.3-55.3-54.6-55.3zm-658.6 0c-30.2 0-54.6 24.8-54.6 55.4v216.4c0 30.5 24.5 55.4 54.6 55.4 30.2 0 54.6-24.8 54.6-55.4V400.1c0-30.6-24.5-55.3-54.6-55.3z"));
var AmazonSquareFill = dist.AmazonSquareFill = getIcon$1("amazon-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM547.8 326.7c-7.2-10.9-20.1-16.4-38.7-16.4-1.3 0-3 .1-5.3.3-2.2.2-6.6 1.5-12.9 3.7a79.4 79.4 0 0 0-17.9 9.1c-5.5 3.8-11.5 10-18 18.4-6.4 8.5-11.5 18.4-15.3 29.8l-94-8.4c0-12.4 2.4-24.7 7-36.9s11.8-23.9 21.4-35c9.6-11.2 21.1-21 34.5-29.4 13.4-8.5 29.6-15.2 48.4-20.3 18.9-5.1 39.1-7.6 60.9-7.6 21.3 0 40.6 2.6 57.8 7.7 17.2 5.2 31.1 11.5 41.4 19.1a117 117 0 0 1 25.9 25.7c6.9 9.6 11.7 18.5 14.4 26.7 2.7 8.2 4 15.7 4 22.8v182.5c0 6.4 1.4 13 4.3 19.8 2.9 6.8 6.3 12.8 10.2 18 3.9 5.2 7.9 9.9 12 14.3 4.1 4.3 7.6 7.7 10.6 9.9l4.1 3.4-72.5 69.4c-8.5-7.7-16.9-15.4-25.2-23.4-8.3-8-14.5-14-18.5-18.1l-6.1-6.2c-2.4-2.3-5-5.7-8-10.2-8.1 12.2-18.5 22.8-31.1 31.8-12.7 9-26.3 15.6-40.7 19.7-14.5 4.1-29.4 6.5-44.7 7.1-15.3.6-30-1.5-43.9-6.5-13.9-5-26.5-11.7-37.6-20.3-11.1-8.6-19.9-20.2-26.5-35-6.6-14.8-9.9-31.5-9.9-50.4 0-17.4 3-33.3 8.9-47.7 6-14.5 13.6-26.5 23-36.1 9.4-9.6 20.7-18.2 34-25.7s26.4-13.4 39.2-17.7c12.8-4.2 26.6-7.8 41.5-10.7 14.9-2.9 27.6-4.8 38.2-5.7 10.6-.9 21.2-1.6 31.8-2v-39.4c0-13.5-2.3-23.5-6.7-30.1zm180.5 379.6c-2.8 3.3-7.5 7.8-14.1 13.5s-16.8 12.7-30.5 21.1c-13.7 8.4-28.8 16-45 22.9-16.3 6.9-36.3 12.9-60.1 18-23.7 5.1-48.2 7.6-73.3 7.6-25.4 0-50.7-3.2-76.1-9.6-25.4-6.4-47.6-14.3-66.8-23.7-19.1-9.4-37.6-20.2-55.1-32.2-17.6-12.1-31.7-22.9-42.4-32.5-10.6-9.6-19.6-18.7-26.8-27.1-1.7-1.9-2.8-3.6-3.2-5.1-.4-1.5-.3-2.8.3-3.7.6-.9 1.5-1.6 2.6-2.2a7.42 7.42 0 0 1 7.4.8c40.9 24.2 72.9 41.3 95.9 51.4 82.9 36.4 168 45.7 255.3 27.9 40.5-8.3 82.1-22.2 124.9-41.8 3.2-1.2 6-1.5 8.3-.9 2.3.6 3.5 2.4 3.5 5.4 0 2.8-1.6 6.3-4.8 10.2zm59.9-29c-1.8 11.1-4.9 21.6-9.1 31.8-7.2 17.1-16.3 30-27.1 38.4-3.6 2.9-6.4 3.8-8.3 2.8-1.9-1-1.9-3.5 0-7.4 4.5-9.3 9.2-21.8 14.2-37.7 5-15.8 5.7-26 2.1-30.5-1.1-1.5-2.7-2.6-5-3.6-2.2-.9-5.1-1.5-8.6-1.9s-6.7-.6-9.4-.8c-2.8-.2-6.5-.2-11.2 0-4.7.2-8 .4-10.1.6a874.4 874.4 0 0 1-17.1 1.5c-1.3.2-2.7.4-4.1.5-1.5.1-2.7.2-3.5.3l-2.7.3c-1 .1-1.7.2-2.2.2h-3.2l-1-.2-.6-.5-.5-.9c-1.3-3.3 3.7-7.4 15-12.4s22.3-8.1 32.9-9.3c9.8-1.5 21.3-1.5 34.5-.3s21.3 3.7 24.3 7.4c2.3 3.5 2.5 10.7.7 21.7zM485 467.5c-11.6 4.9-20.9 12.2-27.8 22-6.9 9.8-10.4 21.6-10.4 35.5 0 17.8 7.5 31.5 22.4 41.2 14.1 9.1 28.9 11.4 44.4 6.8 17.9-5.2 30-17.9 36.4-38.1 3-9.3 4.5-19.7 4.5-31.3v-50.2c-12.6.4-24.4 1.6-35.5 3.7-11.1 2.1-22.4 5.6-34 10.4z"));
var ApiFill = dist.ApiFill = getIcon$1("api", fill, getNode(newViewBox, "M917.7 148.8l-42.4-42.4c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-76.1 76.1a199.27 199.27 0 0 0-112.1-34.3c-51.2 0-102.4 19.5-141.5 58.6L432.3 308.7a8.03 8.03 0 0 0 0 11.3L704 591.7c1.6 1.6 3.6 2.3 5.7 2.3 2 0 4.1-.8 5.7-2.3l101.9-101.9c68.9-69 77-175.7 24.3-253.5l76.1-76.1c3.1-3.2 3.1-8.3 0-11.4zM578.9 546.7a8.03 8.03 0 0 0-11.3 0L501 613.3 410.7 523l66.7-66.7c3.1-3.1 3.1-8.2 0-11.3L441 408.6a8.03 8.03 0 0 0-11.3 0L363 475.3l-43-43a7.85 7.85 0 0 0-5.7-2.3c-2 0-4.1.8-5.7 2.3L206.8 534.2c-68.9 68.9-77 175.7-24.3 253.5l-76.1 76.1a8.03 8.03 0 0 0 0 11.3l42.4 42.4c1.6 1.6 3.6 2.3 5.7 2.3s4.1-.8 5.7-2.3l76.1-76.1c33.7 22.9 72.9 34.3 112.1 34.3 51.2 0 102.4-19.5 141.5-58.6l101.9-101.9c3.1-3.1 3.1-8.2 0-11.3l-43-43 66.7-66.7c3.1-3.1 3.1-8.2 0-11.3l-36.6-36.2z"));
var AppstoreFill = dist.AppstoreFill = getIcon$1("appstore", fill, getNode(newViewBox, "M864 144H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm0 400H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16zM464 144H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm0 400H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16z"));
var AudioFill = dist.AudioFill = getIcon$1("audio", fill, getNode(newViewBox, "M512 624c93.9 0 170-75.2 170-168V232c0-92.8-76.1-168-170-168s-170 75.2-170 168v224c0 92.8 76.1 168 170 168zm330-170c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 140.3-113.7 254-254 254S258 594.3 258 454c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 168.7 126.6 307.9 290 327.6V884H326.7c-13.7 0-24.7 14.3-24.7 32v36c0 4.4 2.8 8 6.2 8h407.6c3.4 0 6.2-3.6 6.2-8v-36c0-17.7-11-32-24.7-32H548V782.1c165.3-18 294-158 294-328.1z"));
var AppleFill = dist.AppleFill = getIcon$1("apple", fill, getNode(newViewBox, "M747.4 535.7c-.4-68.2 30.5-119.6 92.9-157.5-34.9-50-87.7-77.5-157.3-82.8-65.9-5.2-138 38.4-164.4 38.4-27.9 0-91.7-36.6-141.9-36.6C273.1 298.8 163 379.8 163 544.6c0 48.7 8.9 99 26.7 150.8 23.8 68.2 109.6 235.3 199.1 232.6 46.8-1.1 79.9-33.2 140.8-33.2 59.1 0 89.7 33.2 141.9 33.2 90.3-1.3 167.9-153.2 190.5-221.6-121.1-57.1-114.6-167.2-114.6-170.7zm-105.1-305c50.7-60.2 46.1-115 44.6-134.7-44.8 2.6-96.6 30.5-126.1 64.8-32.5 36.8-51.6 82.3-47.5 133.6 48.4 3.7 92.6-21.2 129-63.7z"));
var BackwardFill = dist.BackwardFill = getIcon$1("backward", fill, getNode(normalViewBox, "M485.6 249.9L198.2 498c-8.3 7.1-8.3 20.8 0 27.9l287.4 248.2c10.7 9.2 26.4.9 26.4-14V263.8c0-14.8-15.7-23.2-26.4-13.9zm320 0L518.2 498a18.6 18.6 0 0 0-6.2 14c0 5.2 2.1 10.4 6.2 14l287.4 248.2c10.7 9.2 26.4.9 26.4-14V263.8c0-14.8-15.7-23.2-26.4-13.9z"));
var BankFill = dist.BankFill = getIcon$1("bank", fill, getNode(newViewBox, "M894 462c30.9 0 43.8-39.7 18.7-58L530.8 126.2a31.81 31.81 0 0 0-37.6 0L111.3 404c-25.1 18.2-12.2 58 18.8 58H192v374h-72c-4.4 0-8 3.6-8 8v52c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-52c0-4.4-3.6-8-8-8h-72V462h62zM381 836H264V462h117v374zm189 0H453V462h117v374zm190 0H642V462h118v374z"));
var BehanceCircleFill = dist.BehanceCircleFill = getIcon$1("behance-circle", fill, getNode(newViewBox, "M420.3 470.3c8.7-6.3 12.9-16.7 12.9-31 .3-6.8-1.1-13.5-4.1-19.6-2.7-4.9-6.7-9-11.6-11.9a44.8 44.8 0 0 0-16.6-6c-6.4-1.2-12.9-1.8-19.3-1.7h-70.3v79.7h76.1c13.1.1 24.2-3.1 32.9-9.5zm11.8 72c-9.8-7.5-22.9-11.2-39.2-11.2h-81.8v94h80.2c7.5 0 14.4-.7 21.1-2.1a50.5 50.5 0 0 0 17.8-7.2c5.1-3.3 9.2-7.8 12.3-13.6 3-5.8 4.5-13.2 4.5-22.1 0-17.7-5-30.2-14.9-37.8zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm86.5 286.9h138.4v33.7H598.5v-33.7zM512 628.8a89.52 89.52 0 0 1-27 31c-11.8 8.2-24.9 14.2-38.8 17.7a167.4 167.4 0 0 1-44.6 5.7H236V342.1h161c16.3 0 31.1 1.5 44.6 4.3 13.4 2.8 24.8 7.6 34.4 14.1 9.5 6.5 17 15.2 22.3 26 5.2 10.7 7.9 24.1 7.9 40 0 17.2-3.9 31.4-11.7 42.9-7.9 11.5-19.3 20.8-34.8 28.1 21.1 6 36.6 16.7 46.8 31.7 10.4 15.2 15.5 33.4 15.5 54.8 0 17.4-3.3 32.3-10 44.8zM790.8 576H612.4c0 19.4 6.7 38 16.8 48 10.2 9.9 24.8 14.9 43.9 14.9 13.8 0 25.5-3.5 35.5-10.4 9.9-6.9 15.9-14.2 18.1-21.8h59.8c-9.6 29.7-24.2 50.9-44 63.7-19.6 12.8-43.6 19.2-71.5 19.2-19.5 0-37-3.2-52.7-9.3-15.1-5.9-28.7-14.9-39.9-26.5a121.2 121.2 0 0 1-25.1-41.2c-6.1-16.9-9.1-34.7-8.9-52.6 0-18.5 3.1-35.7 9.1-51.7 11.5-31.1 35.4-56 65.9-68.9 16.3-6.8 33.8-10.2 51.5-10 21 0 39.2 4 55 12.2a111.6 111.6 0 0 1 38.6 32.8c10.1 13.7 17.2 29.3 21.7 46.9 4.3 17.3 5.8 35.5 4.6 54.7zm-122-95.6c-10.8 0-19.9 1.9-26.9 5.6-7 3.7-12.8 8.3-17.2 13.6a48.4 48.4 0 0 0-9.1 17.4c-1.6 5.3-2.7 10.7-3.1 16.2H723c-1.6-17.3-7.6-30.1-15.6-39.1-8.4-8.9-21.9-13.7-38.6-13.7z"));
var BellFill = dist.BellFill = getIcon$1("bell", fill, getNode(newViewBox, "M816 768h-24V428c0-141.1-104.3-257.8-240-277.2V112c0-22.1-17.9-40-40-40s-40 17.9-40 40v38.8C336.3 170.2 232 286.9 232 428v340h-24c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h216c0 61.8 50.2 112 112 112s112-50.2 112-112h216c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM512 888c-26.5 0-48-21.5-48-48h96c0 26.5-21.5 48-48 48z"));
var BehanceSquareFill = dist.BehanceSquareFill = getIcon$1("behance-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM598.5 350.9h138.4v33.7H598.5v-33.7zM512 628.8a89.52 89.52 0 0 1-27 31c-11.8 8.2-24.9 14.2-38.8 17.7a167.4 167.4 0 0 1-44.6 5.7H236V342.1h161c16.3 0 31.1 1.5 44.6 4.3 13.4 2.8 24.8 7.6 34.4 14.1 9.5 6.5 17 15.2 22.3 26 5.2 10.7 7.9 24.1 7.9 40 0 17.2-3.9 31.4-11.7 42.9-7.9 11.5-19.3 20.8-34.8 28.1 21.1 6 36.6 16.7 46.8 31.7 10.4 15.2 15.5 33.4 15.5 54.8 0 17.4-3.3 32.3-10 44.8zM790.8 576H612.4c0 19.4 6.7 38 16.8 48 10.2 9.9 24.8 14.9 43.9 14.9 13.8 0 25.5-3.5 35.5-10.4 9.9-6.9 15.9-14.2 18.1-21.8h59.8c-9.6 29.7-24.2 50.9-44 63.7-19.6 12.8-43.6 19.2-71.5 19.2-19.5 0-37-3.2-52.7-9.3-15.1-5.9-28.7-14.9-39.9-26.5a121.2 121.2 0 0 1-25.1-41.2c-6.1-16.9-9.1-34.7-8.9-52.6 0-18.5 3.1-35.7 9.1-51.7 11.5-31.1 35.4-56 65.9-68.9 16.3-6.8 33.8-10.2 51.5-10 21 0 39.2 4 55 12.2a111.6 111.6 0 0 1 38.6 32.8c10.1 13.7 17.2 29.3 21.7 46.9 4.3 17.3 5.8 35.5 4.6 54.7zm-122-95.6c-10.8 0-19.9 1.9-26.9 5.6-7 3.7-12.8 8.3-17.2 13.6a48.4 48.4 0 0 0-9.1 17.4c-1.6 5.3-2.7 10.7-3.1 16.2H723c-1.6-17.3-7.6-30.1-15.6-39.1-8.4-8.9-21.9-13.7-38.6-13.7zm-248.5-10.1c8.7-6.3 12.9-16.7 12.9-31 .3-6.8-1.1-13.5-4.1-19.6-2.7-4.9-6.7-9-11.6-11.9a44.8 44.8 0 0 0-16.6-6c-6.4-1.2-12.9-1.8-19.3-1.7h-70.3v79.7h76.1c13.1.1 24.2-3.1 32.9-9.5zm11.8 72c-9.8-7.5-22.9-11.2-39.2-11.2h-81.8v94h80.2c7.5 0 14.4-.7 21.1-2.1s12.7-3.8 17.8-7.2c5.1-3.3 9.2-7.8 12.3-13.6 3-5.8 4.5-13.2 4.5-22.1 0-17.7-5-30.2-14.9-37.8z"));
var BookFill = dist.BookFill = getIcon$1("book", fill, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zM668 345.9L621.5 312 572 347.4V124h96v221.9z"));
var BoxPlotFill = dist.BoxPlotFill = getIcon$1("box-plot", fill, getNode(newViewBox, "M952 224h-52c-4.4 0-8 3.6-8 8v248h-92V304c0-4.4-3.6-8-8-8H448v432h344c4.4 0 8-3.6 8-8V548h92v244c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V232c0-4.4-3.6-8-8-8zm-728 80v176h-92V232c0-4.4-3.6-8-8-8H72c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V548h92v172c0 4.4 3.6 8 8 8h152V296H232c-4.4 0-8 3.6-8 8z"));
var BugFill = dist.BugFill = getIcon$1("bug", fill, getNode(newViewBox, "M304 280h416c4.4 0 8-3.6 8-8 0-40-8.8-76.7-25.9-108.1a184.31 184.31 0 0 0-74-74C596.7 72.8 560 64 520 64h-16c-40 0-76.7 8.8-108.1 25.9a184.31 184.31 0 0 0-74 74C304.8 195.3 296 232 296 272c0 4.4 3.6 8 8 8z", "M940 512H792V412c76.8 0 139-62.2 139-139 0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8a63 63 0 0 1-63 63H232a63 63 0 0 1-63-63c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 76.8 62.2 139 139 139v100H84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h148v96c0 6.5.2 13 .7 19.3C164.1 728.6 116 796.7 116 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-44.2 23.9-82.9 59.6-103.7a273 273 0 0 0 22.7 49c24.3 41.5 59 76.2 100.5 100.5 28.9 16.9 61 28.8 95.3 34.5 4.4 0 8-3.6 8-8V484c0-4.4 3.6-8 8-8h60c4.4 0 8 3.6 8 8v464.2c0 4.4 3.6 8 8 8 34.3-5.7 66.4-17.6 95.3-34.5a281.38 281.38 0 0 0 123.2-149.5A120.4 120.4 0 0 1 836 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-79.3-48.1-147.4-116.7-176.7.4-6.4.7-12.8.7-19.3v-96h148c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var CalculatorFill = dist.CalculatorFill = getIcon$1("calculator", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM440.2 765h-50.8c-2.2 0-4.5-1.1-5.9-2.9L348 718.6l-35.5 43.5a7.38 7.38 0 0 1-5.9 2.9h-50.8c-6.6 0-10.2-7.9-5.8-13.1l62.7-76.8-61.2-74.9c-4.3-5.2-.7-13.1 5.9-13.1h50.9c2.2 0 4.5 1.1 5.9 2.9l34 41.6 34-41.6c1.5-1.9 3.6-2.9 5.9-2.9h50.8c6.6 0 10.2 7.9 5.9 13.1L383.5 675l62.7 76.8c4.2 5.3.6 13.2-6 13.2zm7.8-382c0 2.2-1.4 4-3.2 4H376v68.7c0 1.9-1.8 3.3-4 3.3h-48c-2.2 0-4-1.4-4-3.2V387h-68.8c-1.8 0-3.2-1.8-3.2-4v-48c0-2.2 1.4-4 3.2-4H320v-68.8c0-1.8 1.8-3.2 4-3.2h48c2.2 0 4 1.4 4 3.2V331h68.7c1.9 0 3.3 1.8 3.3 4v48zm328 369c0 2.2-1.4 4-3.2 4H579.2c-1.8 0-3.2-1.8-3.2-4v-48c0-2.2 1.4-4 3.2-4h193.5c1.9 0 3.3 1.8 3.3 4v48zm0-104c0 2.2-1.4 4-3.2 4H579.2c-1.8 0-3.2-1.8-3.2-4v-48c0-2.2 1.4-4 3.2-4h193.5c1.9 0 3.3 1.8 3.3 4v48zm0-265c0 2.2-1.4 4-3.2 4H579.2c-1.8 0-3.2-1.8-3.2-4v-48c0-2.2 1.4-4 3.2-4h193.5c1.9 0 3.3 1.8 3.3 4v48z"));
var BulbFill = dist.BulbFill = getIcon$1("bulb", fill, getNode(newViewBox, "M348 676.1C250 619.4 184 513.4 184 392c0-181.1 146.9-328 328-328s328 146.9 328 328c0 121.4-66 227.4-164 284.1V792c0 17.7-14.3 32-32 32H380c-17.7 0-32-14.3-32-32V676.1zM392 888h240c4.4 0 8 3.6 8 8v32c0 17.7-14.3 32-32 32H416c-17.7 0-32-14.3-32-32v-32c0-4.4 3.6-8 8-8z"));
var BuildFill = dist.BuildFill = getIcon$1("build", fill, getNode(newViewBox, "M916 210H376c-17.7 0-32 14.3-32 32v236H108c-17.7 0-32 14.3-32 32v272c0 17.7 14.3 32 32 32h540c17.7 0 32-14.3 32-32V546h236c17.7 0 32-14.3 32-32V242c0-17.7-14.3-32-32-32zM612 746H412V546h200v200zm268-268H680V278h200v200z"));
var CalendarFill = dist.CalendarFill = getIcon$1("calendar", fill, getNode(newViewBox, "M112 880c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V460H112v420zm768-696H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v176h800V216c0-17.7-14.3-32-32-32z"));
var CameraFill = dist.CameraFill = getIcon$1("camera", fill, getNode(newViewBox, "M864 260H728l-32.4-90.8a32.07 32.07 0 0 0-30.2-21.2H358.6c-13.5 0-25.6 8.5-30.1 21.2L296 260H160c-44.2 0-80 35.8-80 80v456c0 44.2 35.8 80 80 80h704c44.2 0 80-35.8 80-80V340c0-44.2-35.8-80-80-80zM512 716c-88.4 0-160-71.6-160-160s71.6-160 160-160 160 71.6 160 160-71.6 160-160 160zm-96-160a96 96 0 1 0 192 0 96 96 0 1 0-192 0z"));
var CarFill = dist.CarFill = getIcon$1("car", fill, getNode(newViewBox, "M959 413.4L935.3 372a8 8 0 0 0-10.9-2.9l-50.7 29.6-78.3-216.2a63.9 63.9 0 0 0-60.9-44.4H301.2c-34.7 0-65.5 22.4-76.2 55.5l-74.6 205.2-50.8-29.6a8 8 0 0 0-10.9 2.9L65 413.4c-2.2 3.8-.9 8.6 2.9 10.8l60.4 35.2-14.5 40c-1.2 3.2-1.8 6.6-1.8 10v348.2c0 15.7 11.8 28.4 26.3 28.4h67.6c12.3 0 23-9.3 25.6-22.3l7.7-37.7h545.6l7.7 37.7c2.7 13 13.3 22.3 25.6 22.3h67.6c14.5 0 26.3-12.7 26.3-28.4V509.4c0-3.4-.6-6.8-1.8-10l-14.5-40 60.3-35.2a8 8 0 0 0 3-10.8zM264 621c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm388 75c0 4.4-3.6 8-8 8H380c-4.4 0-8-3.6-8-8v-84c0-4.4 3.6-8 8-8h40c4.4 0 8 3.6 8 8v36h168v-36c0-4.4 3.6-8 8-8h40c4.4 0 8 3.6 8 8v84zm108-75c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zM220 418l72.7-199.9.5-1.3.4-1.3c1.1-3.3 4.1-5.5 7.6-5.5h427.6l75.4 208H220z"));
var CaretDownFill = dist.CaretDownFill = getIcon$1("caret-down", fill, getNode(normalViewBox, "M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"));
var CaretLeftFill = dist.CaretLeftFill = getIcon$1("caret-left", fill, getNode(normalViewBox, "M689 165.1L308.2 493.5c-10.9 9.4-10.9 27.5 0 37L689 858.9c14.2 12.2 35 1.2 35-18.5V183.6c0-19.7-20.8-30.7-35-18.5z"));
var CaretRightFill = dist.CaretRightFill = getIcon$1("caret-right", fill, getNode(normalViewBox, "M715.8 493.5L335 165.1c-14.2-12.2-35-1.2-35 18.5v656.8c0 19.7 20.8 30.7 35 18.5l380.8-328.4c10.9-9.4 10.9-27.6 0-37z"));
var CarryOutFill = dist.CarryOutFill = getIcon$1("carry-out", fill, getNode(newViewBox, "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zM694.5 432.7L481.9 725.4a16.1 16.1 0 0 1-26 0l-126.4-174c-3.8-5.3 0-12.7 6.5-12.7h55.2c5.1 0 10 2.5 13 6.6l64.7 89 150.9-207.8c3-4.1 7.8-6.6 13-6.6H688c6.5.1 10.3 7.5 6.5 12.8z"));
var CaretUpFill = dist.CaretUpFill = getIcon$1("caret-up", fill, getNode(normalViewBox, "M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z"));
var CheckCircleFill = dist.CheckCircleFill = getIcon$1("check-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 0 1-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z"));
var CheckSquareFill = dist.CheckSquareFill = getIcon$1("check-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM695.5 365.7l-210.6 292a31.8 31.8 0 0 1-51.7 0L308.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H689c6.5 0 10.3 7.4 6.5 12.7z"));
var ChromeFill = dist.ChromeFill = getIcon$1("chrome", fill, getNode(newViewBox, "M371.8 512c0 77.5 62.7 140.2 140.2 140.2S652.2 589.5 652.2 512 589.5 371.8 512 371.8 371.8 434.4 371.8 512zM900 362.4l-234.3 12.1c63.6 74.3 64.6 181.5 11.1 263.7l-188 289.2c78 4.2 158.4-12.9 231.2-55.2 180-104 253-322.1 180-509.8zM320.3 591.9L163.8 284.1A415.35 415.35 0 0 0 96 512c0 208 152.3 380.3 351.4 410.8l106.9-209.4c-96.6 18.2-189.9-34.8-234-121.5zm218.5-285.5l344.4 18.1C848 254.7 792.6 194 719.8 151.7 653.9 113.6 581.5 95.5 510.5 96c-122.5.5-242.2 55.2-322.1 154.5l128.2 196.9c32-91.9 124.8-146.7 222.2-141z"));
var CiCircleFill = dist.CiCircleFill = getIcon$1("ci-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-63.6 656c-103 0-162.4-68.6-162.4-182.6v-49C286 373.5 345.4 304 448.3 304c88.3 0 152.3 56.9 152.3 138.1 0 2.4-2 4.4-4.4 4.4h-52.6c-4.2 0-7.6-3.2-8-7.4-4-46.1-37.6-77.6-87-77.6-61.1 0-95.6 45.4-95.6 126.9v49.3c0 80.3 34.5 125.1 95.6 125.1 49.3 0 82.8-29.5 87-72.4.4-4.1 3.8-7.3 8-7.3h52.7c2.4 0 4.4 2 4.4 4.4 0 77.4-64.3 132.5-152.3 132.5zM738 704.1c0 4.4-3.6 8-8 8h-50.4c-4.4 0-8-3.6-8-8V319.9c0-4.4 3.6-8 8-8H730c4.4 0 8 3.6 8 8v384.2z"));
var ClockCircleFill = dist.ClockCircleFill = getIcon$1("clock-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm176.5 585.7l-28.6 39a7.99 7.99 0 0 1-11.2 1.7L483.3 569.8a7.92 7.92 0 0 1-3.3-6.5V288c0-4.4 3.6-8 8-8h48.1c4.4 0 8 3.6 8 8v247.5l142.6 103.1c3.6 2.5 4.4 7.5 1.8 11.1z"));
var CloseCircleFill = dist.CloseCircleFill = getIcon$1("close-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 0 1-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"));
var CloudFill = dist.CloudFill = getIcon$1("cloud", fill, getNode(newViewBox, "M811.4 418.7C765.6 297.9 648.9 212 512.2 212S258.8 297.8 213 418.6C127.3 441.1 64 519.1 64 612c0 110.5 89.5 200 199.9 200h496.2C870.5 812 960 722.5 960 612c0-92.7-63.1-170.7-148.6-193.3z"));
var CloseSquareFill = dist.CloseSquareFill = getIcon$1("close-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM676.1 657.9c4.4 5.2.7 13.1-6.1 13.1h-58.9c-4.7 0-9.2-2.1-12.3-5.7L512 561.8l-86.8 103.5c-3 3.6-7.5 5.7-12.3 5.7H354c-6.8 0-10.5-7.9-6.1-13.1L470.2 512 347.9 366.1A7.95 7.95 0 0 1 354 353h58.9c4.7 0 9.2 2.1 12.3 5.7L512 462.2l86.8-103.5c3-3.6 7.5-5.7 12.3-5.7H670c6.8 0 10.5 7.9 6.1 13.1L553.8 512l122.3 145.9z"));
var CodeSandboxSquareFill = dist.CodeSandboxSquareFill = getIcon$1("code-sandbox-square", fill, getNode(newViewBox, "M307.9 536.7l87.6 49.9V681l96.7 55.9V524.8L307.9 418.4zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM755.7 653.2L512 794 268.3 653.2V371.8l110-63.6-.4-.2h.2L512 231l134 77h-.2l-.3.2 110.1 63.6v281.4zm-223.9 83.7l97.3-56.2v-94.1l87-49.5V418.5L531.8 525zm-20-352L418 331l-91.1 52.6 185.2 107 185.2-106.9-91.4-52.8z"));
var CodeSandboxCircleFill = dist.CodeSandboxCircleFill = getIcon$1("code-sandbox-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm243.7 589.2L512 794 268.3 653.2V371.8l110-63.6-.4-.2h.2L512 231l134 77h-.2l-.3.2 110.1 63.6v281.4zM307.9 536.7l87.6 49.9V681l96.7 55.9V524.8L307.9 418.4zm203.9-151.8L418 331l-91.1 52.6 185.2 107 185.2-106.9-91.4-52.8zm20 352l97.3-56.2v-94.1l87-49.5V418.5L531.8 525z"));
var CodeFill = dist.CodeFill = getIcon$1("code", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM513.1 518.1l-192 161c-5.2 4.4-13.1.7-13.1-6.1v-62.7c0-2.3 1.1-4.6 2.9-6.1L420.7 512l-109.8-92.2a7.63 7.63 0 0 1-2.9-6.1V351c0-6.8 7.9-10.5 13.1-6.1l192 160.9c3.9 3.2 3.9 9.1 0 12.3zM716 673c0 4.4-3.4 8-7.5 8h-185c-4.1 0-7.5-3.6-7.5-8v-48c0-4.4 3.4-8 7.5-8h185c4.1 0 7.5 3.6 7.5 8v48z"));
var CompassFill = dist.CompassFill = getIcon$1("compass", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zM327.3 702.4c-2 .9-4.4 0-5.3-2.1-.4-1-.4-2.2 0-3.2l98.7-225.5 132.1 132.1-225.5 98.7zm375.1-375.1l-98.7 225.5-132.1-132.1L697.1 322c2-.9 4.4 0 5.3 2.1.4 1 .4 2.1 0 3.2z"));
var CodepenCircleFill = dist.CodepenCircleFill = getIcon$1("codepen-circle", fill, getNode(newViewBox, "M488.1 414.7V303.4L300.9 428l83.6 55.8zm254.1 137.7v-79.8l-59.8 39.9zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm278 533c0 1.1-.1 2.1-.2 3.1 0 .4-.1.7-.2 1a14.16 14.16 0 0 1-.8 3.2c-.2.6-.4 1.2-.6 1.7-.2.4-.4.8-.5 1.2-.3.5-.5 1.1-.8 1.6-.2.4-.4.7-.7 1.1-.3.5-.7 1-1 1.5-.3.4-.5.7-.8 1-.4.4-.8.9-1.2 1.3-.3.3-.6.6-1 .9-.4.4-.9.8-1.4 1.1-.4.3-.7.6-1.1.8-.1.1-.3.2-.4.3L525.2 786c-4 2.7-8.6 4-13.2 4-4.7 0-9.3-1.4-13.3-4L244.6 616.9c-.1-.1-.3-.2-.4-.3l-1.1-.8c-.5-.4-.9-.7-1.3-1.1-.3-.3-.6-.6-1-.9-.4-.4-.8-.8-1.2-1.3a7 7 0 0 1-.8-1c-.4-.5-.7-1-1-1.5-.2-.4-.5-.7-.7-1.1-.3-.5-.6-1.1-.8-1.6-.2-.4-.4-.8-.5-1.2-.2-.6-.4-1.2-.6-1.7-.1-.4-.3-.8-.4-1.2-.2-.7-.3-1.3-.4-2-.1-.3-.1-.7-.2-1-.1-1-.2-2.1-.2-3.1V427.9c0-1 .1-2.1.2-3.1.1-.3.1-.7.2-1a14.16 14.16 0 0 1 .8-3.2c.2-.6.4-1.2.6-1.7.2-.4.4-.8.5-1.2.2-.5.5-1.1.8-1.6.2-.4.4-.7.7-1.1.6-.9 1.2-1.7 1.8-2.5.4-.4.8-.9 1.2-1.3.3-.3.6-.6 1-.9.4-.4.9-.8 1.3-1.1.4-.3.7-.6 1.1-.8.1-.1.3-.2.4-.3L498.7 239c8-5.3 18.5-5.3 26.5 0l254.1 169.1c.1.1.3.2.4.3l1.1.8 1.4 1.1c.3.3.6.6 1 .9.4.4.8.8 1.2 1.3.7.8 1.3 1.6 1.8 2.5.2.4.5.7.7 1.1.3.5.6 1 .8 1.6.2.4.4.8.5 1.2.2.6.4 1.2.6 1.7.1.4.3.8.4 1.2.2.7.3 1.3.4 2 .1.3.1.7.2 1 .1 1 .2 2.1.2 3.1V597zm-254.1 13.3v111.3L723.1 597l-83.6-55.8zM281.8 472.6v79.8l59.8-39.9zM512 456.1l-84.5 56.4 84.5 56.4 84.5-56.4zM723.1 428L535.9 303.4v111.3l103.6 69.1zM384.5 541.2L300.9 597l187.2 124.6V610.3l-103.6-69.1z"));
var CodepenSquareFill = dist.CodepenSquareFill = getIcon$1("codepen-square", fill, getNode(newViewBox, "M723.1 428L535.9 303.4v111.3l103.6 69.1zM512 456.1l-84.5 56.4 84.5 56.4 84.5-56.4zm23.9 154.2v111.3L723.1 597l-83.6-55.8zm-151.4-69.1L300.9 597l187.2 124.6V610.3l-103.6-69.1zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-90 485c0 1.1-.1 2.1-.2 3.1 0 .4-.1.7-.2 1a14.16 14.16 0 0 1-.8 3.2c-.2.6-.4 1.2-.6 1.7-.2.4-.4.8-.5 1.2-.3.5-.5 1.1-.8 1.6-.2.4-.4.7-.7 1.1-.3.5-.7 1-1 1.5-.3.4-.5.7-.8 1-.4.4-.8.9-1.2 1.3-.3.3-.6.6-1 .9-.4.4-.9.8-1.4 1.1-.4.3-.7.6-1.1.8-.1.1-.3.2-.4.3L525.2 786c-4 2.7-8.6 4-13.2 4-4.7 0-9.3-1.4-13.3-4L244.6 616.9c-.1-.1-.3-.2-.4-.3l-1.1-.8c-.5-.4-.9-.7-1.3-1.1-.3-.3-.6-.6-1-.9-.4-.4-.8-.8-1.2-1.3a7 7 0 0 1-.8-1c-.4-.5-.7-1-1-1.5-.2-.4-.5-.7-.7-1.1-.3-.5-.6-1.1-.8-1.6-.2-.4-.4-.8-.5-1.2-.2-.6-.4-1.2-.6-1.7-.1-.4-.3-.8-.4-1.2-.2-.7-.3-1.3-.4-2-.1-.3-.1-.7-.2-1-.1-1-.2-2.1-.2-3.1V427.9c0-1 .1-2.1.2-3.1.1-.3.1-.7.2-1a14.16 14.16 0 0 1 .8-3.2c.2-.6.4-1.2.6-1.7.2-.4.4-.8.5-1.2.2-.5.5-1.1.8-1.6.2-.4.4-.7.7-1.1.6-.9 1.2-1.7 1.8-2.5.4-.4.8-.9 1.2-1.3.3-.3.6-.6 1-.9.4-.4.9-.8 1.3-1.1.4-.3.7-.6 1.1-.8.1-.1.3-.2.4-.3L498.7 239c8-5.3 18.5-5.3 26.5 0l254.1 169.1c.1.1.3.2.4.3l1.1.8 1.4 1.1c.3.3.6.6 1 .9.4.4.8.8 1.2 1.3.7.8 1.3 1.6 1.8 2.5.2.4.5.7.7 1.1.3.5.6 1 .8 1.6.2.4.4.8.5 1.2.2.6.4 1.2.6 1.7.1.4.3.8.4 1.2.2.7.3 1.3.4 2 .1.3.1.7.2 1 .1 1 .2 2.1.2 3.1V597zm-47.8-44.6v-79.8l-59.8 39.9zm-460.4-79.8v79.8l59.8-39.9zm206.3-57.9V303.4L300.9 428l83.6 55.8z"));
var ContactsFill = dist.ContactsFill = getIcon$1("contacts", fill, getNode(newViewBox, "M928 224H768v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H548v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H328v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H96c-17.7 0-32 14.3-32 32v576c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32zM661 736h-43.9c-4.2 0-7.6-3.3-7.9-7.5-3.8-50.6-46-90.5-97.2-90.5s-93.4 40-97.2 90.5c-.3 4.2-3.7 7.5-7.9 7.5H363a8 8 0 0 1-8-8.4c2.8-53.3 32-99.7 74.6-126.1a111.8 111.8 0 0 1-29.1-75.5c0-61.9 49.9-112 111.4-112 61.5 0 111.4 50.1 111.4 112 0 29.1-11 55.5-29.1 75.5 42.7 26.5 71.8 72.8 74.6 126.1.4 4.6-3.2 8.4-7.8 8.4zM512 474c-28.5 0-51.7 23.3-51.7 52s23.2 52 51.7 52c28.5 0 51.7-23.3 51.7-52s-23.2-52-51.7-52z"));
var ControlFill = dist.ControlFill = getIcon$1("control", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM404 683v77c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-77c-41.7-13.6-72-52.8-72-99s30.3-85.5 72-99V264c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v221c41.7 13.6 72 52.8 72 99s-30.3 85.5-72 99zm279.6-143.9c.2 0 .3-.1.4-.1v221c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V539c.2 0 .3.1.4.1-42-13.4-72.4-52.7-72.4-99.1 0-46.4 30.4-85.7 72.4-99.1-.2 0-.3.1-.4.1v-77c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v77c-.2 0-.3-.1-.4-.1 42 13.4 72.4 52.7 72.4 99.1 0 46.4-30.4 85.7-72.4 99.1zM616 440a36 36 0 1 0 72 0 36 36 0 1 0-72 0zM403.4 566.5l-1.5-2.4c0-.1-.1-.1-.1-.2l-.9-1.2c-.1-.1-.2-.2-.2-.3-1-1.3-2-2.5-3.2-3.6l-.2-.2c-.4-.4-.8-.8-1.2-1.1-.8-.8-1.7-1.5-2.6-2.1h-.1l-1.2-.9c-.1-.1-.3-.2-.4-.3-1.2-.8-2.5-1.6-3.9-2.2-.2-.1-.5-.2-.7-.4-.4-.2-.7-.3-1.1-.5-.3-.1-.7-.3-1-.4-.5-.2-1-.4-1.5-.5-.4-.1-.9-.3-1.3-.4l-.9-.3-1.4-.3c-.2-.1-.5-.1-.7-.2-.7-.1-1.4-.3-2.1-.4-.2 0-.4 0-.6-.1-.6-.1-1.1-.1-1.7-.2-.2 0-.4 0-.7-.1-.8 0-1.5-.1-2.3-.1s-1.5 0-2.3.1c-.2 0-.4 0-.7.1-.6 0-1.2.1-1.7.2-.2 0-.4 0-.6.1-.7.1-1.4.2-2.1.4-.2.1-.5.1-.7.2l-1.4.3-.9.3c-.4.1-.9.3-1.3.4-.5.2-1 .4-1.5.5-.3.1-.7.3-1 .4-.4.2-.7.3-1.1.5-.2.1-.5.2-.7.4-1.3.7-2.6 1.4-3.9 2.2-.1.1-.3.2-.4.3l-1.2.9h-.1c-.9.7-1.8 1.4-2.6 2.1-.4.4-.8.7-1.2 1.1l-.2.2a54.8 54.8 0 0 0-3.2 3.6c-.1.1-.2.2-.2.3l-.9 1.2c0 .1-.1.1-.1.2l-1.5 2.4c-.1.2-.2.3-.3.5-2.7 5.1-4.3 10.9-4.3 17s1.6 12 4.3 17c.1.2.2.3.3.5l1.5 2.4c0 .1.1.1.1.2l.9 1.2c.1.1.2.2.2.3 1 1.3 2 2.5 3.2 3.6l.2.2c.4.4.8.8 1.2 1.1.8.8 1.7 1.5 2.6 2.1h.1l1.2.9c.1.1.3.2.4.3 1.2.8 2.5 1.6 3.9 2.2.2.1.5.2.7.4.4.2.7.3 1.1.5.3.1.7.3 1 .4.5.2 1 .4 1.5.5.4.1.9.3 1.3.4l.9.3 1.4.3c.2.1.5.1.7.2.7.1 1.4.3 2.1.4.2 0 .4 0 .6.1.6.1 1.1.1 1.7.2.2 0 .4 0 .7.1.8 0 1.5.1 2.3.1s1.5 0 2.3-.1c.2 0 .4 0 .7-.1.6 0 1.2-.1 1.7-.2.2 0 .4 0 .6-.1.7-.1 1.4-.2 2.1-.4.2-.1.5-.1.7-.2l1.4-.3.9-.3c.4-.1.9-.3 1.3-.4.5-.2 1-.4 1.5-.5.3-.1.7-.3 1-.4.4-.2.7-.3 1.1-.5.2-.1.5-.2.7-.4 1.3-.7 2.6-1.4 3.9-2.2.1-.1.3-.2.4-.3l1.2-.9h.1c.9-.7 1.8-1.4 2.6-2.1.4-.4.8-.7 1.2-1.1l.2-.2c1.1-1.1 2.2-2.4 3.2-3.6.1-.1.2-.2.2-.3l.9-1.2c0-.1.1-.1.1-.2l1.5-2.4c.1-.2.2-.3.3-.5 2.7-5.1 4.3-10.9 4.3-17s-1.6-12-4.3-17c-.1-.2-.2-.4-.3-.5z"));
var ContainerFill = dist.ContainerFill = getIcon$1("container", fill, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v529c0-.6.4-1 1-1h219.3l5.2 24.7C397.6 708.5 450.8 752 512 752s114.4-43.5 126.4-103.3l5.2-24.7H863c.6 0 1 .4 1 1V96c0-17.7-14.3-32-32-32zM712 493c0 4.4-3.6 8-8 8H320c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h384c4.4 0 8 3.6 8 8v48zm0-160c0 4.4-3.6 8-8 8H320c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h384c4.4 0 8 3.6 8 8v48zm151 354H694.1c-11.6 32.8-32 62.3-59.1 84.7-34.5 28.6-78.2 44.3-123 44.3s-88.5-15.8-123-44.3a194.02 194.02 0 0 1-59.1-84.7H161c-.6 0-1-.4-1-1v242c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V686c0 .6-.4 1-1 1z"));
var CopyFill = dist.CopyFill = getIcon$1("copy", fill, getNode(newViewBox, "M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM382 896h-.2L232 746.2v-.2h150v150z"));
var CopyrightCircleFill = dist.CopyrightCircleFill = getIcon$1("copyright-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm5.4 670c-110 0-173.4-73.2-173.4-194.9v-52.3C344 364.2 407.4 290 517.3 290c94.3 0 162.7 60.7 162.7 147.4 0 2.6-2.1 4.7-4.7 4.7h-56.7c-4.2 0-7.6-3.2-8-7.4-4-49.5-40-83.4-93-83.4-65.3 0-102.1 48.5-102.1 135.5v52.6c0 85.7 36.9 133.6 102.1 133.6 52.8 0 88.7-31.7 93-77.8.4-4.1 3.8-7.3 8-7.3h56.8c2.6 0 4.7 2.1 4.7 4.7 0 82.6-68.7 141.4-162.7 141.4z"));
var CreditCardFill = dist.CreditCardFill = getIcon$1("credit-card", fill, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v160h896V192c0-17.7-14.3-32-32-32zM64 832c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V440H64v392zm579-184c0-4.4 3.6-8 8-8h165c4.4 0 8 3.6 8 8v72c0 4.4-3.6 8-8 8H651c-4.4 0-8-3.6-8-8v-72z"));
var CrownFill = dist.CrownFill = getIcon$1("crown", fill, getNode(newViewBox, "M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 0 0-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z"));
var CustomerServiceFill = dist.CustomerServiceFill = getIcon$1("customer-service", fill, getNode(newViewBox, "M512 128c-212.1 0-384 171.9-384 384v360c0 13.3 10.7 24 24 24h184c35.3 0 64-28.7 64-64V624c0-35.3-28.7-64-64-64H200v-48c0-172.3 139.7-312 312-312s312 139.7 312 312v48H688c-35.3 0-64 28.7-64 64v208c0 35.3 28.7 64 64 64h184c13.3 0 24-10.7 24-24V512c0-212.1-171.9-384-384-384z"));
var DashboardFill = dist.DashboardFill = getIcon$1("dashboard", fill, getNode(newViewBox, "M924.8 385.6a446.7 446.7 0 0 0-96-142.4 446.7 446.7 0 0 0-142.4-96C631.1 123.8 572.5 112 512 112s-119.1 11.8-174.4 35.2a446.7 446.7 0 0 0-142.4 96 446.7 446.7 0 0 0-96 142.4C75.8 440.9 64 499.5 64 560c0 132.7 58.3 257.7 159.9 343.1l1.7 1.4c5.8 4.8 13.1 7.5 20.6 7.5h531.7c7.5 0 14.8-2.7 20.6-7.5l1.7-1.4C901.7 817.7 960 692.7 960 560c0-60.5-11.9-119.1-35.2-174.4zM482 232c0-4.4 3.6-8 8-8h44c4.4 0 8 3.6 8 8v80c0 4.4-3.6 8-8 8h-44c-4.4 0-8-3.6-8-8v-80zM270 582c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8v-44c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v44zm90.7-204.5l-31.1 31.1a8.03 8.03 0 0 1-11.3 0L261.7 352a8.03 8.03 0 0 1 0-11.3l31.1-31.1c3.1-3.1 8.2-3.1 11.3 0l56.6 56.6c3.1 3.1 3.1 8.2 0 11.3zm291.1 83.6l-84.5 84.5c5 18.7.2 39.4-14.5 54.1a55.95 55.95 0 0 1-79.2 0 55.95 55.95 0 0 1 0-79.2 55.87 55.87 0 0 1 54.1-14.5l84.5-84.5c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3c3.1 3.1 3.1 8.1 0 11.3zm43-52.4l-31.1-31.1a8.03 8.03 0 0 1 0-11.3l56.6-56.6c3.1-3.1 8.2-3.1 11.3 0l31.1 31.1c3.1 3.1 3.1 8.2 0 11.3l-56.6 56.6a8.03 8.03 0 0 1-11.3 0zM846 582c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8v-44c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v44z"));
var DeleteFill = dist.DeleteFill = getIcon$1("delete", fill, getNode(newViewBox, "M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z"));
var DiffFill = dist.DiffFill = getIcon$1("diff", fill, getNode(newViewBox, "M854.2 306.6L611.3 72.9c-6-5.7-13.9-8.9-22.2-8.9H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h277l219 210.6V824c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V329.6c0-8.7-3.5-17-9.8-23zM553.4 201.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v704c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32V397.3c0-8.5-3.4-16.6-9.4-22.6L553.4 201.4zM568 753c0 3.8-3.4 7-7.5 7h-225c-4.1 0-7.5-3.2-7.5-7v-42c0-3.8 3.4-7 7.5-7h225c4.1 0 7.5 3.2 7.5 7v42zm0-220c0 3.8-3.4 7-7.5 7H476v84.9c0 3.9-3.1 7.1-7 7.1h-42c-3.8 0-7-3.2-7-7.1V540h-84.5c-4.1 0-7.5-3.2-7.5-7v-42c0-3.9 3.4-7 7.5-7H420v-84.9c0-3.9 3.2-7.1 7-7.1h42c3.9 0 7 3.2 7 7.1V484h84.5c4.1 0 7.5 3.1 7.5 7v42z"));
var DingtalkCircleFill = dist.DingtalkCircleFill = getIcon$1("dingtalk-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm227 385.3c-1 4.2-3.5 10.4-7 17.8h.1l-.4.7c-20.3 43.1-73.1 127.7-73.1 127.7s-.1-.2-.3-.5l-15.5 26.8h74.5L575.1 810l32.3-128h-58.6l20.4-84.7c-16.5 3.9-35.9 9.4-59 16.8 0 0-31.2 18.2-89.9-35 0 0-39.6-34.7-16.6-43.4 9.8-3.7 47.4-8.4 77-12.3 40-5.4 64.6-8.2 64.6-8.2S422 517 392.7 512.5c-29.3-4.6-66.4-53.1-74.3-95.8 0 0-12.2-23.4 26.3-12.3 38.5 11.1 197.9 43.2 197.9 43.2s-207.4-63.3-221.2-78.7c-13.8-15.4-40.6-84.2-37.1-126.5 0 0 1.5-10.5 12.4-7.7 0 0 153.3 69.7 258.1 107.9 104.8 37.9 195.9 57.3 184.2 106.7z"));
var DatabaseFill = dist.DatabaseFill = getIcon$1("database", fill, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v224h704V96c0-17.7-14.3-32-32-32zM288 232c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zM160 928c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V704H160v224zm128-136c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zM160 640h704V384H160v256zm128-168c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40z"));
var DingtalkSquareFill = dist.DingtalkSquareFill = getIcon$1("dingtalk-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM739 449.3c-1 4.2-3.5 10.4-7 17.8h.1l-.4.7c-20.3 43.1-73.1 127.7-73.1 127.7s-.1-.2-.3-.5l-15.5 26.8h74.5L575.1 810l32.3-128h-58.6l20.4-84.7c-16.5 3.9-35.9 9.4-59 16.8 0 0-31.2 18.2-89.9-35 0 0-39.6-34.7-16.6-43.4 9.8-3.7 47.4-8.4 77-12.3 40-5.4 64.6-8.2 64.6-8.2S422 517 392.7 512.5c-29.3-4.6-66.4-53.1-74.3-95.8 0 0-12.2-23.4 26.3-12.3 38.5 11.1 197.9 43.2 197.9 43.2s-207.4-63.3-221.2-78.7c-13.8-15.4-40.6-84.2-37.1-126.5 0 0 1.5-10.5 12.4-7.7 0 0 153.3 69.7 258.1 107.9 104.8 37.9 195.9 57.3 184.2 106.7z"));
var DislikeFill = dist.DislikeFill = getIcon$1("dislike", fill, getNode(newViewBox, "M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4a66.1 66.1 0 0 0-26.5-5.4H273v428h.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM112 132v364c0 17.7 14.3 32 32 32h65V100h-65c-17.7 0-32 14.3-32 32z"));
var DollarCircleFill = dist.DollarCircleFill = getIcon$1("dollar-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm22.3 665.2l.2 31.7c0 4.4-3.6 8.1-8 8.1h-28.4c-4.4 0-8-3.6-8-8v-31.4C401.3 723 359.5 672.4 355 617.4c-.4-4.7 3.3-8.7 8-8.7h46.2c3.9 0 7.3 2.8 7.9 6.6 5.1 31.7 29.8 55.4 74.1 61.3V533.9l-24.7-6.3c-52.3-12.5-102.1-45.1-102.1-112.7 0-72.9 55.4-112.1 126.2-119v-33c0-4.4 3.6-8 8-8h28.1c4.4 0 8 3.6 8 8v32.7c68.5 6.9 119.9 46.9 125.9 109.2.5 4.7-3.2 8.8-8 8.8h-44.9c-4 0-7.4-3-7.9-6.9-4-29.2-27.4-53-65.5-58.2v134.3l25.4 5.9c64.8 16 108.9 47 108.9 116.4 0 75.3-56 117.3-134.3 124.1zM426.6 410.3c0 25.4 15.7 45.1 49.5 57.3 4.7 1.9 9.4 3.4 15 5v-124c-36.9 4.7-64.5 25.4-64.5 61.7zm116.5 135.2c-2.8-.6-5.6-1.3-8.8-2.2V677c42.6-3.8 72-27.2 72-66.4 0-30.7-15.9-50.7-63.2-65.1z"));
var DownCircleFill = dist.DownCircleFill = getIcon$1("down-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm184.5 353.7l-178 246a7.95 7.95 0 0 1-12.9 0l-178-246c-3.8-5.3 0-12.7 6.5-12.7H381c10.2 0 19.9 4.9 25.9 13.2L512 563.6l105.2-145.4c6-8.3 15.6-13.2 25.9-13.2H690c6.5 0 10.3 7.4 6.5 12.7z"));
var DownSquareFill = dist.DownSquareFill = getIcon$1("down-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM696.5 412.7l-178 246a7.95 7.95 0 0 1-12.9 0l-178-246c-3.8-5.3 0-12.7 6.5-12.7H381c10.2 0 19.9 4.9 25.9 13.2L512 558.6l105.2-145.4c6-8.3 15.6-13.2 25.9-13.2H690c6.5 0 10.3 7.4 6.5 12.7z"));
var DribbbleCircleFill = dist.DribbbleCircleFill = getIcon$1("dribbble-circle", fill, getNode(newViewBox, "M675.1 328.3a245.2 245.2 0 0 0-220.8-55.1c6.8 9.1 51.5 69.9 91.8 144 87.5-32.8 124.5-82.6 129-88.9zM554 552.8c-138.7 48.3-188.6 144.6-193 153.6 41.7 32.5 94.1 51.9 151 51.9 34.1 0 66.6-6.9 96.1-19.5-3.7-21.6-17.9-96.8-52.5-186.6l-1.6.6zm47.7-11.9c32.2 88.4 45.3 160.4 47.8 175.4 55.2-37.3 94.5-96.4 105.4-164.9-8.4-2.6-76.1-22.8-153.2-10.5zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 736c-158.8 0-288-129.2-288-288s129.2-288 288-288 288 129.2 288 288-129.2 288-288 288zm53.1-346.2c5.7 11.7 11.2 23.6 16.3 35.6 1.8 4.2 3.6 8.4 5.3 12.7 81.8-10.3 163.2 6.2 171.3 7.9-.5-58.1-21.3-111.4-55.5-153.3-5.3 7.1-46.5 60-137.4 97.1zM498.6 432c-40.8-72.5-84.7-133.4-91.2-142.3-68.8 32.5-120.3 95.9-136.2 172.2 11 .2 112.4.7 227.4-29.9zm30.6 82.5c3.2-1 6.4-2 9.7-2.9-6.2-14-12.9-28-19.9-41.7-122.8 36.8-242.1 35.2-252.8 35-.1 2.5-.1 5-.1 7.5 0 63.2 23.9 120.9 63.2 164.5 5.5-9.6 73-121.4 199.9-162.4z"));
var DribbbleSquareFill = dist.DribbbleSquareFill = getIcon$1("dribbble-square", fill, getNode(newViewBox, "M498.6 432c-40.8-72.5-84.7-133.4-91.2-142.3-68.8 32.5-120.3 95.9-136.2 172.2 11 .2 112.4.7 227.4-29.9zm66.5 21.8c5.7 11.7 11.2 23.6 16.3 35.6 1.8 4.2 3.6 8.4 5.3 12.7 81.8-10.3 163.2 6.2 171.3 7.9-.5-58.1-21.3-111.4-55.5-153.3-5.3 7.1-46.5 60-137.4 97.1zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM512 800c-158.8 0-288-129.2-288-288s129.2-288 288-288 288 129.2 288 288-129.2 288-288 288zm89.7-259.1c32.2 88.4 45.3 160.4 47.8 175.4 55.2-37.3 94.5-96.4 105.4-164.9-8.4-2.6-76.1-22.8-153.2-10.5zm-72.5-26.4c3.2-1 6.4-2 9.7-2.9-6.2-14-12.9-28-19.9-41.7-122.8 36.8-242.1 35.2-252.8 35-.1 2.5-.1 5-.1 7.5 0 63.2 23.9 120.9 63.2 164.5 5.5-9.6 73-121.4 199.9-162.4zm145.9-186.2a245.2 245.2 0 0 0-220.8-55.1c6.8 9.1 51.5 69.9 91.8 144 87.5-32.8 124.5-82.6 129-88.9zM554 552.8c-138.7 48.3-188.6 144.6-193 153.6 41.7 32.5 94.1 51.9 151 51.9 34.1 0 66.6-6.9 96.1-19.5-3.7-21.6-17.9-96.8-52.5-186.6l-1.6.6z"));
var DropboxCircleFill = dist.DropboxCircleFill = getIcon$1("dropbox-circle", fill, getNode(newViewBox, "M663.8 455.5zm-151.5-93.8l-151.8 93.8 151.8 93.9 151.5-93.9zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm151.2 595.5L512.6 750l-151-90.5v-33.1l45.4 29.4 105.6-87.7 105.6 87.7 45.1-29.4v33.1zm-45.6-22.4l-105.3-87.7L407 637.1l-151-99.2 104.5-82.4L256 371.2 407 274l105.3 87.7L617.6 274 768 372.1l-104.2 83.5L768 539l-150.4 98.1z"));
var DropboxSquareFill = dist.DropboxSquareFill = getIcon$1("dropbox-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM663.2 659.5L512.6 750l-151-90.5v-33.1l45.4 29.4 105.6-87.7 105.6 87.7 45.1-29.4v33.1zm-45.6-22.4l-105.3-87.7L407 637.1l-151-99.2 104.5-82.4L256 371.2 407 274l105.3 87.7L617.6 274 768 372.1l-104.2 83.5L768 539l-150.4 98.1zM512.3 361.7l-151.8 93.8 151.8 93.9 151.5-93.9zm151.5 93.8z"));
var EnvironmentFill = dist.EnvironmentFill = getIcon$1("environment", fill, getNode(newViewBox, "M512 327c-29.9 0-58 11.6-79.2 32.8A111.6 111.6 0 0 0 400 439c0 29.9 11.7 58 32.8 79.2A111.6 111.6 0 0 0 512 551c29.9 0 58-11.7 79.2-32.8C612.4 497 624 468.9 624 439c0-29.9-11.6-58-32.8-79.2S541.9 327 512 327zm342.6-37.9a362.49 362.49 0 0 0-79.9-115.7 370.83 370.83 0 0 0-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 0 0 169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0 0 22.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 615c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z"));
var EditFill = dist.EditFill = getIcon$1("edit", fill, getNode(newViewBox, "M880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32zm-622.3-84c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 0 0 0-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 0 0 9.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9z"));
var ExclamationCircleFill = dist.ExclamationCircleFill = getIcon$1("exclamation-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var EuroCircleFill = dist.EuroCircleFill = getIcon$1("euro-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm63.5 375.8c4.4 0 8 3.6 8 8V475c0 4.4-3.6 8-8 8h-136c-.3 4.4-.3 9.1-.3 13.8v36h136.2c4.4 0 8 3.6 8 8V568c0 4.4-3.6 8-8 8H444.9c15.3 62 61.3 98.6 129.8 98.6 19.9 0 37.1-1.2 51.8-4.1 4.9-1 9.5 2.8 9.5 7.8v42.8c0 3.8-2.7 7-6.4 7.8-15.9 3.4-34.3 5.1-55.3 5.1-109.8 0-183-58.8-200.2-158H344c-4.4 0-8-3.6-8-8v-27.2c0-4.4 3.6-8 8-8h26.1v-36.9c0-4.4 0-8.8.3-12.8H344c-4.4 0-8-3.6-8-8v-27.2c0-4.4 3.6-8 8-8h31.7c19.7-94.2 92-149.9 198.6-149.9 20.9 0 39.4 1.9 55.3 5.4 3.7.8 6.3 4 6.3 7.8V346h.1c0 5.1-4.6 8.8-9.6 7.8-14.7-2.9-31.8-4.4-51.7-4.4-65.4 0-110.4 33.5-127.6 90.4h128.4z"));
var ExperimentFill = dist.ExperimentFill = getIcon$1("experiment", fill, getNode(newViewBox, "M218.9 636.3l42.6 26.6c.1.1.3.2.4.3l12.7 8 .3.3a186.9 186.9 0 0 0 94.1 25.1c44.9 0 87.2-15.7 121-43.8a256.27 256.27 0 0 1 164.9-59.9c52.3 0 102.2 15.7 144.6 44.5l7.9 5-111.6-289V179.8h63.5c4.4 0 8-3.6 8-8V120c0-4.4-3.6-8-8-8H264.7c-4.4 0-8 3.6-8 8v51.9c0 4.4 3.6 8 8 8h63.5v173.6L218.9 636.3zm333-203.1c22 0 39.9 17.9 39.9 39.9S573.9 513 551.9 513 512 495.1 512 473.1s17.9-39.9 39.9-39.9zM878 825.1l-29.9-77.4-85.7-53.5-.1.1c-.7-.5-1.5-1-2.2-1.5l-8.1-5-.3-.3c-29-17.5-62.3-26.8-97-26.8-44.9 0-87.2 15.7-121 43.8a256.27 256.27 0 0 1-164.9 59.9c-53 0-103.5-16.1-146.2-45.6l-28.9-18.1L146 825.1c-2.8 7.4-4.3 15.2-4.3 23 0 35.2 28.6 63.8 63.8 63.8h612.9c7.9 0 15.7-1.5 23-4.3a63.6 63.6 0 0 0 36.6-82.5z"));
var EyeInvisibleFill = dist.EyeInvisibleFill = getIcon$1("eye-invisible", fill, getNode(newViewBox, "M508 624a112 112 0 0 0 112-112c0-3.28-.15-6.53-.43-9.74L498.26 623.57c3.21.28 6.45.43 9.74.43zm370.72-458.44L836 122.88a8 8 0 0 0-11.31 0L715.37 232.23Q624.91 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 0 0 0 51.5q56.7 119.43 136.55 191.45L112.56 835a8 8 0 0 0 0 11.31L155.25 889a8 8 0 0 0 11.31 0l712.16-712.12a8 8 0 0 0 0-11.32zM332 512a176 176 0 0 1 258.88-155.28l-48.62 48.62a112.08 112.08 0 0 0-140.92 140.92l-48.62 48.62A175.09 175.09 0 0 1 332 512z", "M942.2 486.2Q889.4 375 816.51 304.85L672.37 449A176.08 176.08 0 0 1 445 676.37L322.74 798.63Q407.82 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 0 0 0-51.5z"));
var EyeFill = dist.EyeFill = getIcon$1("eye", fill, getNode(newViewBox, "M396 512a112 112 0 1 0 224 0 112 112 0 1 0-224 0zm546.2-25.8C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 0 0 0 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM508 688c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z"));
var FacebookFill = dist.FacebookFill = getIcon$1("facebook", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-92.4 233.5h-63.9c-50.1 0-59.8 23.8-59.8 58.8v77.1h119.6l-15.6 120.7h-104V912H539.2V602.2H434.9V481.4h104.3v-89c0-103.3 63.1-159.6 155.3-159.6 44.2 0 82.1 3.3 93.2 4.8v107.9z"));
var FastBackwardFill = dist.FastBackwardFill = getIcon$1("fast-backward", fill, getNode(normalViewBox, "M517.6 273.5L230.2 499.3a16.14 16.14 0 0 0 0 25.4l287.4 225.8c10.7 8.4 26.4.8 26.4-12.7V286.2c0-13.5-15.7-21.1-26.4-12.7zm320 0L550.2 499.3a16.14 16.14 0 0 0 0 25.4l287.4 225.8c10.7 8.4 26.4.8 26.4-12.7V286.2c0-13.5-15.7-21.1-26.4-12.7zm-620-25.5h-51.2c-3.5 0-6.4 2.7-6.4 6v516c0 3.3 2.9 6 6.4 6h51.2c3.5 0 6.4-2.7 6.4-6V254c0-3.3-2.9-6-6.4-6z"));
var FastForwardFill = dist.FastForwardFill = getIcon$1("fast-forward", fill, getNode(normalViewBox, "M793.8 499.3L506.4 273.5c-10.7-8.4-26.4-.8-26.4 12.7v451.6c0 13.5 15.7 21.1 26.4 12.7l287.4-225.8a16.14 16.14 0 0 0 0-25.4zm-320 0L186.4 273.5c-10.7-8.4-26.4-.8-26.4 12.7v451.5c0 13.5 15.7 21.1 26.4 12.7l287.4-225.8c4.1-3.2 6.2-8 6.2-12.7 0-4.6-2.1-9.4-6.2-12.6zM857.6 248h-51.2c-3.5 0-6.4 2.7-6.4 6v516c0 3.3 2.9 6 6.4 6h51.2c3.5 0 6.4-2.7 6.4-6V254c0-3.3-2.9-6-6.4-6z"));
var FileAddFill = dist.FileAddFill = getIcon$1("file-add", fill, getNode(newViewBox, "M480 580H372a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h108v108a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V644h108a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8H544V472a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v108zm374.6-291.3c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2z"));
var FileExcelFill = dist.FileExcelFill = getIcon$1("file-excel", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM575.34 477.84l-61.22 102.3L452.3 477.8a12 12 0 0 0-10.27-5.79h-38.44a12 12 0 0 0-6.4 1.85 12 12 0 0 0-3.75 16.56l82.34 130.42-83.45 132.78a12 12 0 0 0-1.84 6.39 12 12 0 0 0 12 12h34.46a12 12 0 0 0 10.21-5.7l62.7-101.47 62.3 101.45a12 12 0 0 0 10.23 5.72h37.48a12 12 0 0 0 6.48-1.9 12 12 0 0 0 3.62-16.58l-83.83-130.55 85.3-132.47a12 12 0 0 0 1.9-6.5 12 12 0 0 0-12-12h-35.7a12 12 0 0 0-10.29 5.84z"));
var FileExclamationFill = dist.FileExclamationFill = getIcon$1("file-exclamation", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM512 784a40 40 0 1 0 0-80 40 40 0 0 0 0 80zm32-152V448a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v184a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8z"));
var FileImageFill = dist.FileImageFill = getIcon$1("file-image", fill, getNode(newViewBox, "M854.6 288.7L639.4 73.4c-6-6-14.2-9.4-22.7-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.6-9.4-22.6zM400 402c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zm296 294H328c-6.7 0-10.4-7.7-6.3-12.9l99.8-127.2a8 8 0 0 1 12.6 0l41.1 52.4 77.8-99.2a8 8 0 0 1 12.6 0l136.5 174c4.3 5.2.5 12.9-6.1 12.9zm-94-370V137.8L790.2 326H602z"));
var FileMarkdownFill = dist.FileMarkdownFill = getIcon$1("file-markdown", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM426.13 600.93l59.11 132.97a16 16 0 0 0 14.62 9.5h24.06a16 16 0 0 0 14.63-9.51l59.1-133.35V758a16 16 0 0 0 16.01 16H641a16 16 0 0 0 16-16V486a16 16 0 0 0-16-16h-34.75a16 16 0 0 0-14.67 9.62L512.1 662.2l-79.48-182.59a16 16 0 0 0-14.67-9.61H383a16 16 0 0 0-16 16v272a16 16 0 0 0 16 16h27.13a16 16 0 0 0 16-16V600.93z"));
var FilePdfFill = dist.FilePdfFill = getIcon$1("file-pdf", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM633.22 637.26c-15.18-.5-31.32.67-49.65 2.96-24.3-14.99-40.66-35.58-52.28-65.83l1.07-4.38 1.24-5.18c4.3-18.13 6.61-31.36 7.3-44.7.52-10.07-.04-19.36-1.83-27.97-3.3-18.59-16.45-29.46-33.02-30.13-15.45-.63-29.65 8-33.28 21.37-5.91 21.62-2.45 50.07 10.08 98.59-15.96 38.05-37.05 82.66-51.2 107.54-18.89 9.74-33.6 18.6-45.96 28.42-16.3 12.97-26.48 26.3-29.28 40.3-1.36 6.49.69 14.97 5.36 21.92 5.3 7.88 13.28 13 22.85 13.74 24.15 1.87 53.83-23.03 86.6-79.26 3.29-1.1 6.77-2.26 11.02-3.7l11.9-4.02c7.53-2.54 12.99-4.36 18.39-6.11 23.4-7.62 41.1-12.43 57.2-15.17 27.98 14.98 60.32 24.8 82.1 24.8 17.98 0 30.13-9.32 34.52-23.99 3.85-12.88.8-27.82-7.48-36.08-8.56-8.41-24.3-12.43-45.65-13.12zM385.23 765.68v-.36l.13-.34a54.86 54.86 0 0 1 5.6-10.76c4.28-6.58 10.17-13.5 17.47-20.87 3.92-3.95 8-7.8 12.79-12.12 1.07-.96 7.91-7.05 9.19-8.25l11.17-10.4-8.12 12.93c-12.32 19.64-23.46 33.78-33 43-3.51 3.4-6.6 5.9-9.1 7.51a16.43 16.43 0 0 1-2.61 1.42c-.41.17-.77.27-1.13.3a2.2 2.2 0 0 1-1.12-.15 2.07 2.07 0 0 1-1.27-1.91zM511.17 547.4l-2.26 4-1.4-4.38c-3.1-9.83-5.38-24.64-6.01-38-.72-15.2.49-24.32 5.29-24.32 6.74 0 9.83 10.8 10.07 27.05.22 14.28-2.03 29.14-5.7 35.65zm-5.81 58.46l1.53-4.05 2.09 3.8c11.69 21.24 26.86 38.96 43.54 51.31l3.6 2.66-4.39.9c-16.33 3.38-31.54 8.46-52.34 16.85 2.17-.88-21.62 8.86-27.64 11.17l-5.25 2.01 2.8-4.88c12.35-21.5 23.76-47.32 36.05-79.77zm157.62 76.26c-7.86 3.1-24.78.33-54.57-12.39l-7.56-3.22 8.2-.6c23.3-1.73 39.8-.45 49.42 3.07 4.1 1.5 6.83 3.39 8.04 5.55a4.64 4.64 0 0 1-1.36 6.31 6.7 6.7 0 0 1-2.17 1.28z"));
var FilePptFill = dist.FilePptFill = getIcon$1("file-ppt", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM468.53 760v-91.54h59.27c60.57 0 100.2-39.65 100.2-98.12 0-58.22-39.58-98.34-99.98-98.34H424a12 12 0 0 0-12 12v276a12 12 0 0 0 12 12h32.53a12 12 0 0 0 12-12zm0-139.33h34.9c47.82 0 67.19-12.93 67.19-50.33 0-32.05-18.12-50.12-49.87-50.12h-52.22v100.45z"));
var FileTextFill = dist.FileTextFill = getIcon$1("file-text", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM320 482a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h384a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8H320zm0 136a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h184a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8H320z"));
var FileWordFill = dist.FileWordFill = getIcon$1("file-word", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM512 566.1l52.81 197a12 12 0 0 0 11.6 8.9h31.77a12 12 0 0 0 11.6-8.88l74.37-276a12 12 0 0 0 .4-3.12 12 12 0 0 0-12-12h-35.57a12 12 0 0 0-11.7 9.31l-45.78 199.1-49.76-199.32A12 12 0 0 0 528.1 472h-32.2a12 12 0 0 0-11.64 9.1L434.6 680.01 388.5 481.3a12 12 0 0 0-11.68-9.29h-35.39a12 12 0 0 0-3.11.41 12 12 0 0 0-8.47 14.7l74.17 276A12 12 0 0 0 415.6 772h31.99a12 12 0 0 0 11.59-8.9l52.81-197z"));
var FileUnknownFill = dist.FileUnknownFill = getIcon$1("file-unknown", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM402 549c0 5.4 4.4 9.5 9.8 9.5h32.4c5.4 0 9.8-4.2 9.8-9.4 0-28.2 25.8-51.6 58-51.6s58 23.4 58 51.5c0 25.3-21 47.2-49.3 50.9-19.3 2.8-34.5 20.3-34.7 40.1v32c0 5.5 4.5 10 10 10h32c5.5 0 10-4.5 10-10v-12.2c0-6 4-11.5 9.7-13.3 44.6-14.4 75-54 74.3-98.9-.8-55.5-49.2-100.8-108.5-101.6-61.4-.7-111.5 45.6-111.5 103zm110 227a32 32 0 1 0 0-64 32 32 0 0 0 0 64z"));
var FileZipFill = dist.FileZipFill = getIcon$1("file-zip", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2zM296 136v64h64v-64h-64zm64 64v64h64v-64h-64zm-64 64v64h64v-64h-64zm64 64v64h64v-64h-64zm-64 64v64h64v-64h-64zm64 64v64h64v-64h-64zm-64 64v64h64v-64h-64zm0 64v160h128V584H296zm48 48h32v64h-32v-64z"));
var FileFill = dist.FileFill = getIcon$1("file", fill, getNode(newViewBox, "M854.6 288.7c6 6 9.4 14.1 9.4 22.6V928c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h424.7c8.5 0 16.7 3.4 22.7 9.4l215.2 215.3zM790.2 326L602 137.8V326h188.2z"));
var FilterFill = dist.FilterFill = getIcon$1("filter", fill, getNode(newViewBox, "M349 838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V642H349v196zm531.1-684H143.9c-24.5 0-39.8 26.7-27.5 48l221.3 376h348.8l221.3-376c12.1-21.3-3.2-48-27.7-48z"));
var FireFill = dist.FireFill = getIcon$1("fire", fill, getNode(newViewBox, "M834.1 469.2A347.49 347.49 0 0 0 751.2 354l-29.1-26.7a8.09 8.09 0 0 0-13 3.3l-13 37.3c-8.1 23.4-23 47.3-44.1 70.8-1.4 1.5-3 1.9-4.1 2-1.1.1-2.8-.1-4.3-1.5-1.4-1.2-2.1-3-2-4.8 3.7-60.2-14.3-128.1-53.7-202C555.3 171 510 123.1 453.4 89.7l-41.3-24.3c-5.4-3.2-12.3 1-12 7.3l2.2 48c1.5 32.8-2.3 61.8-11.3 85.9-11 29.5-26.8 56.9-47 81.5a295.64 295.64 0 0 1-47.5 46.1 352.6 352.6 0 0 0-100.3 121.5A347.75 347.75 0 0 0 160 610c0 47.2 9.3 92.9 27.7 136a349.4 349.4 0 0 0 75.5 110.9c32.4 32 70 57.2 111.9 74.7C418.5 949.8 464.5 959 512 959s93.5-9.2 136.9-27.3A348.6 348.6 0 0 0 760.8 857c32.4-32 57.8-69.4 75.5-110.9a344.2 344.2 0 0 0 27.7-136c0-48.8-10-96.2-29.9-140.9z"));
var FlagFill = dist.FlagFill = getIcon$1("flag", fill, getNode(newViewBox, "M880 305H624V192c0-17.7-14.3-32-32-32H184v-40c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v784c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V640h248v113c0 17.7 14.3 32 32 32h416c17.7 0 32-14.3 32-32V337c0-17.7-14.3-32-32-32z"));
var FolderAddFill = dist.FolderAddFill = getIcon$1("folder-add", fill, getNode(newViewBox, "M880 298.4H521L403.7 186.2a8.15 8.15 0 0 0-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM632 577c0 3.8-3.4 7-7.5 7H540v84.9c0 3.9-3.2 7.1-7 7.1h-42c-3.8 0-7-3.2-7-7.1V584h-84.5c-4.1 0-7.5-3.2-7.5-7v-42c0-3.8 3.4-7 7.5-7H484v-84.9c0-3.9 3.2-7.1 7-7.1h42c3.8 0 7 3.2 7 7.1V528h84.5c4.1 0 7.5 3.2 7.5 7v42z"));
var FolderFill = dist.FolderFill = getIcon$1("folder", fill, getNode(newViewBox, "M880 298.4H521L403.7 186.2a8.15 8.15 0 0 0-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32z"));
var FolderOpenFill = dist.FolderOpenFill = getIcon$1("folder-open", fill, getNode(newViewBox, "M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zm-180 0H238c-13 0-24.8 7.9-29.7 20L136 643.2V256h188.5l119.6 114.4H748V444z"));
var ForwardFill = dist.ForwardFill = getIcon$1("forward", fill, getNode(normalViewBox, "M825.8 498L538.4 249.9c-10.7-9.2-26.4-.9-26.4 14v496.3c0 14.9 15.7 23.2 26.4 14L825.8 526c8.3-7.2 8.3-20.8 0-28zm-320 0L218.4 249.9c-10.7-9.2-26.4-.9-26.4 14v496.3c0 14.9 15.7 23.2 26.4 14L505.8 526c4.1-3.6 6.2-8.8 6.2-14 0-5.2-2.1-10.4-6.2-14z"));
var FrownFill = dist.FrownFill = getIcon$1("frown", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zM288 421a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm376 272h-48.1c-4.2 0-7.8-3.2-8.1-7.4C604 636.1 562.5 597 512 597s-92.1 39.1-95.8 88.6c-.3 4.2-3.9 7.4-8.1 7.4H360a8 8 0 0 1-8-8.4c4.4-84.3 74.5-151.6 160-151.6s155.6 67.3 160 151.6a8 8 0 0 1-8 8.4zm24-224a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var FundFill = dist.FundFill = getIcon$1("fund", fill, getNode(newViewBox, "M926 164H94c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V196c0-17.7-14.3-32-32-32zm-92.3 194.4l-297 297.2a8.03 8.03 0 0 1-11.3 0L410.9 541.1 238.4 713.7a8.03 8.03 0 0 1-11.3 0l-36.8-36.8a8.03 8.03 0 0 1 0-11.3l214.9-215c3.1-3.1 8.2-3.1 11.3 0L531 565l254.5-254.6c3.1-3.1 8.2-3.1 11.3 0l36.8 36.8c3.2 3 3.2 8.1.1 11.2z"));
var FunnelPlotFill = dist.FunnelPlotFill = getIcon$1("funnel-plot", fill, getNode(newViewBox, "M336.7 586h350.6l84.9-148H251.8zm543.4-432H143.9c-24.5 0-39.8 26.7-27.5 48L215 374h594l98.7-172c12.2-21.3-3.1-48-27.6-48zM349 838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V650H349v188z"));
var GiftFill = dist.GiftFill = getIcon$1("gift", fill, getNode(newViewBox, "M160 894c0 17.7 14.3 32 32 32h286V550H160v344zm386 32h286c17.7 0 32-14.3 32-32V550H546v376zm334-616H732.4c13.6-21.4 21.6-46.8 21.6-74 0-76.1-61.9-138-138-138-41.4 0-78.7 18.4-104 47.4-25.3-29-62.6-47.4-104-47.4-76.1 0-138 61.9-138 138 0 27.2 7.9 52.6 21.6 74H144c-17.7 0-32 14.3-32 32v140h366V310h68v172h366V342c0-17.7-14.3-32-32-32zm-402-4h-70c-38.6 0-70-31.4-70-70s31.4-70 70-70 70 31.4 70 70v70zm138 0h-70v-70c0-38.6 31.4-70 70-70s70 31.4 70 70-31.4 70-70 70z"));
var GithubFill = dist.GithubFill = getIcon$1("github", fill, getNode(newViewBox, "M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"));
var GitlabFill = dist.GitlabFill = getIcon$1("gitlab", fill, getNode(newViewBox, "M910.5 553.2l-109-370.8c-6.8-20.4-23.1-34.1-44.9-34.1s-39.5 12.3-46.3 32.7l-72.2 215.4H386.2L314 181.1c-6.8-20.4-24.5-32.7-46.3-32.7s-39.5 13.6-44.9 34.1L113.9 553.2c-4.1 13.6 1.4 28.6 12.3 36.8l385.4 289 386.7-289c10.8-8.1 16.3-23.1 12.2-36.8z"));
var GoldenFill = dist.GoldenFill = getIcon$1("golden", fill, getNode(newViewBox, "M905.9 806.7l-40.2-248c-.6-3.9-4-6.7-7.9-6.7H596.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8h342c.4 0 .9 0 1.3-.1 4.3-.7 7.3-4.8 6.6-9.2zm-470.2-248c-.6-3.9-4-6.7-7.9-6.7H166.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8h342c.4 0 .9 0 1.3-.1 4.4-.7 7.3-4.8 6.6-9.2l-40.2-248zM342 472h342c.4 0 .9 0 1.3-.1 4.4-.7 7.3-4.8 6.6-9.2l-40.2-248c-.6-3.9-4-6.7-7.9-6.7H382.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8z"));
var GoogleCircleFill = dist.GoogleCircleFill = getIcon$1("google-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm167 633.6C638.4 735 583 757 516.9 757c-95.7 0-178.5-54.9-218.8-134.9C281.5 589 272 551.6 272 512s9.5-77 26.1-110.1c40.3-80.1 123.1-135 218.8-135 66 0 121.4 24.3 163.9 63.8L610.6 401c-25.4-24.3-57.7-36.6-93.6-36.6-63.8 0-117.8 43.1-137.1 101-4.9 14.7-7.7 30.4-7.7 46.6s2.8 31.9 7.7 46.6c19.3 57.9 73.3 101 137 101 33 0 61-8.7 82.9-23.4 26-17.4 43.2-43.3 48.9-74H516.9v-94.8h230.7c2.9 16.1 4.4 32.8 4.4 50.1 0 74.7-26.7 137.4-73 180.1z"));
var GooglePlusCircleFill = dist.GooglePlusCircleFill = getIcon$1("google-plus-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm36.5 558.8c-43.9 61.8-132.1 79.8-200.9 53.3-69-26.3-118-99.2-112.1-173.5 1.5-90.9 85.2-170.6 176.1-167.5 43.6-2 84.6 16.9 118 43.6-14.3 16.2-29 31.8-44.8 46.3-40.1-27.7-97.2-35.6-137.3-3.6-57.4 39.7-60 133.4-4.8 176.1 53.7 48.7 155.2 24.5 170.1-50.1-33.6-.5-67.4 0-101-1.1-.1-20.1-.2-40.1-.1-60.2 56.2-.2 112.5-.3 168.8.2 3.3 47.3-3 97.5-32 136.5zM791 536.5c-16.8.2-33.6.3-50.4.4-.2 16.8-.3 33.6-.3 50.4H690c-.2-16.8-.2-33.5-.3-50.3-16.8-.2-33.6-.3-50.4-.5v-50.1c16.8-.2 33.6-.3 50.4-.3.1-16.8.3-33.6.4-50.4h50.2l.3 50.4c16.8.2 33.6.2 50.4.3v50.1z"));
var GooglePlusSquareFill = dist.GooglePlusSquareFill = getIcon$1("google-plus-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM548.5 622.8c-43.9 61.8-132.1 79.8-200.9 53.3-69-26.3-118-99.2-112.1-173.5 1.5-90.9 85.2-170.6 176.1-167.5 43.6-2 84.6 16.9 118 43.6-14.3 16.2-29 31.8-44.8 46.3-40.1-27.7-97.2-35.6-137.3-3.6-57.4 39.7-60 133.4-4.8 176.1 53.7 48.7 155.2 24.5 170.1-50.1-33.6-.5-67.4 0-101-1.1-.1-20.1-.2-40.1-.1-60.2 56.2-.2 112.5-.3 168.8.2 3.3 47.3-3 97.5-32 136.5zM791 536.5c-16.8.2-33.6.3-50.4.4-.2 16.8-.3 33.6-.3 50.4H690c-.2-16.8-.2-33.5-.3-50.3-16.8-.2-33.6-.3-50.4-.5v-50.1c16.8-.2 33.6-.3 50.4-.3.1-16.8.3-33.6.4-50.4h50.2l.3 50.4c16.8.2 33.6.2 50.4.3v50.1z"));
var GoogleSquareFill = dist.GoogleSquareFill = getIcon$1("google-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM679 697.6C638.4 735 583 757 516.9 757c-95.7 0-178.5-54.9-218.8-134.9A245.02 245.02 0 0 1 272 512c0-39.6 9.5-77 26.1-110.1 40.3-80.1 123.1-135 218.8-135 66 0 121.4 24.3 163.9 63.8L610.6 401c-25.4-24.3-57.7-36.6-93.6-36.6-63.8 0-117.8 43.1-137.1 101-4.9 14.7-7.7 30.4-7.7 46.6s2.8 31.9 7.7 46.6c19.3 57.9 73.3 101 137 101 33 0 61-8.7 82.9-23.4 26-17.4 43.2-43.3 48.9-74H516.9v-94.8h230.7c2.9 16.1 4.4 32.8 4.4 50.1 0 74.7-26.7 137.4-73 180.1z"));
var HddFill = dist.HddFill = getIcon$1("hdd", fill, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v224h704V96c0-17.7-14.3-32-32-32zM456 216c0 4.4-3.6 8-8 8H264c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zM160 928c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V704H160v224zm576-136c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zM160 640h704V384H160v256zm96-152c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H264c-4.4 0-8-3.6-8-8v-48z"));
var HeartFill = dist.HeartFill = getIcon$1("heart", fill, getNode(newViewBox, "M923 283.6a260.04 260.04 0 0 0-56.9-82.8 264.4 264.4 0 0 0-84-55.5A265.34 265.34 0 0 0 679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 0 0-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9z"));
var HighlightFill = dist.HighlightFill = getIcon$1("highlight", fill, getNode(newViewBox, "M957.6 507.4L603.2 158.2a7.9 7.9 0 0 0-11.2 0L353.3 393.4a8.03 8.03 0 0 0-.1 11.3l.1.1 40 39.4-117.2 115.3a8.03 8.03 0 0 0-.1 11.3l.1.1 39.5 38.9-189.1 187H72.1c-4.4 0-8.1 3.6-8.1 8V860c0 4.4 3.6 8 8 8h344.9c2.1 0 4.1-.8 5.6-2.3l76.1-75.6 40.4 39.8a7.9 7.9 0 0 0 11.2 0l117.1-115.6 40.1 39.5a7.9 7.9 0 0 0 11.2 0l238.7-235.2c3.4-3 3.4-8 .3-11.2z"));
var HomeFill = dist.HomeFill = getIcon$1("home", fill, getNode(newViewBox, "M946.5 505L534.6 93.4a31.93 31.93 0 0 0-45.2 0L77.5 505c-12 12-18.8 28.3-18.8 45.3 0 35.3 28.7 64 64 64h43.4V908c0 17.7 14.3 32 32 32H448V716h112v224h265.9c17.7 0 32-14.3 32-32V614.3h43.4c17 0 33.3-6.7 45.3-18.8 24.9-25 24.9-65.5-.1-90.5z"));
var HourglassFill = dist.HourglassFill = getIcon$1("hourglass", fill, getNode(newViewBox, "M742 318V184h86c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H196c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h86v134c0 81.5 42.4 153.2 106.4 194-64 40.8-106.4 112.5-106.4 194v134h-86c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h632c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-86V706c0-81.5-42.4-153.2-106.4-194 64-40.8 106.4-112.5 106.4-194z"));
var Html5Fill = dist.Html5Fill = getIcon$1("html5", fill, getNode(newViewBox, "M145.2 96l66 746.6L512 928l299.6-85.4L878.9 96H145.2zm595 177.1l-4.8 47.2-1.7 19.5H382.3l8.2 94.2h335.1l-3.3 24.3-21.2 242.2-1.7 16.2-187 51.6v.3h-1.2l-.3.1v-.1h-.1l-188.6-52L310.8 572h91.1l6.5 73.2 102.4 27.7h.4l102-27.6 11.4-118.6H510.9v-.1H306l-22.8-253.5-1.7-24.3h460.3l-1.6 24.3z"));
var IdcardFill = dist.IdcardFill = getIcon$1("idcard", fill, getNode(newViewBox, "M373 411c-28.5 0-51.7 23.3-51.7 52s23.2 52 51.7 52 51.7-23.3 51.7-52-23.2-52-51.7-52zm555-251H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zM608 420c0-4.4 1-8 2.3-8h123.4c1.3 0 2.3 3.6 2.3 8v48c0 4.4-1 8-2.3 8H610.3c-1.3 0-2.3-3.6-2.3-8v-48zm-86 253h-43.9c-4.2 0-7.6-3.3-7.9-7.5-3.8-50.5-46-90.5-97.2-90.5s-93.4 40-97.2 90.5c-.3 4.2-3.7 7.5-7.9 7.5H224a8 8 0 0 1-8-8.4c2.8-53.3 32-99.7 74.6-126.1a111.8 111.8 0 0 1-29.1-75.5c0-61.9 49.9-112 111.4-112s111.4 50.1 111.4 112c0 29.1-11 55.5-29.1 75.5 42.7 26.5 71.8 72.8 74.6 126.1.4 4.6-3.2 8.4-7.8 8.4zm278.9-53H615.1c-3.9 0-7.1-3.6-7.1-8v-48c0-4.4 3.2-8 7.1-8h185.7c3.9 0 7.1 3.6 7.1 8v48h.1c0 4.4-3.2 8-7.1 8z"));
var IeCircleFill = dist.IeCircleFill = getIcon$1("ie-circle", fill, getNode(newViewBox, "M693.6 284.4c-24 0-51.1 11.7-72.6 22 46.3 18 86 57.3 112.3 99.6 7.1-18.9 14.6-47.9 14.6-67.9 0-32-22.8-53.7-54.3-53.7zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm253.9 492.9H437.1c0 100.4 144.3 136 196.8 47.4h120.8c-32.6 91.7-119.7 146-216.8 146-35.1 0-70.3-.1-101.7-15.6-87.4 44.5-180.3 56.6-180.3-42 0-45.8 23.2-107.1 44-145C335 484 381.3 422.8 435.6 374.5c-43.7 18.9-91.1 66.3-122 101.2 25.9-112.8 129.5-193.6 237.1-186.5 130-59.8 209.7-34.1 209.7 38.6 0 27.4-10.6 63.3-21.4 87.9 25.2 45.5 33.3 97.6 26.9 141.2zM540.5 399.1c-53.7 0-102 39.7-104 94.9h208c-2-55.1-50.6-94.9-104-94.9zM320.6 602.9c-73 152.4 11.5 172.2 100.3 123.3-46.6-27.5-82.6-72.2-100.3-123.3z"));
var IeSquareFill = dist.IeSquareFill = getIcon$1("ie-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM765.9 556.9H437.1c0 100.4 144.3 136 196.8 47.4h120.8c-32.6 91.7-119.7 146-216.8 146-35.1 0-70.3-.1-101.7-15.6-87.4 44.5-180.3 56.6-180.3-42 0-45.8 23.2-107.1 44-145C335 484 381.3 422.8 435.6 374.5c-43.7 18.9-91.1 66.3-122 101.2 25.9-112.8 129.5-193.6 237.1-186.5 130-59.8 209.7-34.1 209.7 38.6 0 27.4-10.6 63.3-21.4 87.9 25.2 45.5 33.3 97.6 26.9 141.2zm-72.3-272.5c-24 0-51.1 11.7-72.6 22 46.3 18 86 57.3 112.3 99.6 7.1-18.9 14.6-47.9 14.6-67.9 0-32-22.8-53.7-54.3-53.7zM540.5 399.1c-53.7 0-102 39.7-104 94.9h208c-2-55.1-50.6-94.9-104-94.9zM320.6 602.9c-73 152.4 11.5 172.2 100.3 123.3-46.6-27.5-82.6-72.2-100.3-123.3z"));
var InfoCircleFill = dist.InfoCircleFill = getIcon$1("info-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var InstagramFill = dist.InstagramFill = getIcon$1("instagram", fill, getNode(newViewBox, "M512 378.7c-73.4 0-133.3 59.9-133.3 133.3S438.6 645.3 512 645.3 645.3 585.4 645.3 512 585.4 378.7 512 378.7zM911.8 512c0-55.2.5-109.9-2.6-165-3.1-64-17.7-120.8-64.5-167.6-46.9-46.9-103.6-61.4-167.6-64.5-55.2-3.1-109.9-2.6-165-2.6-55.2 0-109.9-.5-165 2.6-64 3.1-120.8 17.7-167.6 64.5C132.6 226.3 118.1 283 115 347c-3.1 55.2-2.6 109.9-2.6 165s-.5 109.9 2.6 165c3.1 64 17.7 120.8 64.5 167.6 46.9 46.9 103.6 61.4 167.6 64.5 55.2 3.1 109.9 2.6 165 2.6 55.2 0 109.9.5 165-2.6 64-3.1 120.8-17.7 167.6-64.5 46.9-46.9 61.4-103.6 64.5-167.6 3.2-55.1 2.6-109.8 2.6-165zM512 717.1c-113.5 0-205.1-91.6-205.1-205.1S398.5 306.9 512 306.9 717.1 398.5 717.1 512 625.5 717.1 512 717.1zm213.5-370.7c-26.5 0-47.9-21.4-47.9-47.9s21.4-47.9 47.9-47.9 47.9 21.4 47.9 47.9a47.84 47.84 0 0 1-47.9 47.9z"));
var InsuranceFill = dist.InsuranceFill = getIcon$1("insurance", fill, getNode(newViewBox, "M519.9 358.8h97.9v41.6h-97.9zm347-188.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM411.3 656h-.2c0 4.4-3.6 8-8 8h-37.3c-4.4 0-8-3.6-8-8V471.4c-7.7 9.2-15.4 17.9-23.1 26a6.04 6.04 0 0 1-10.2-2.4l-13.2-43.5c-.6-2-.2-4.1 1.2-5.6 37-43.4 64.7-95.1 82.2-153.6 1.1-3.5 5-5.3 8.4-3.7l38.6 18.3c2.7 1.3 4.1 4.4 3.2 7.2a429.2 429.2 0 0 1-33.6 79V656zm296.5-49.2l-26.3 35.3a5.92 5.92 0 0 1-8.9.7c-30.6-29.3-56.8-65.2-78.1-106.9V656c0 4.4-3.6 8-8 8h-36.2c-4.4 0-8-3.6-8-8V536c-22 44.7-49 80.8-80.6 107.6a5.9 5.9 0 0 1-8.9-1.4L430 605.7a6 6 0 0 1 1.6-8.1c28.6-20.3 51.9-45.2 71-76h-55.1c-4.4 0-8-3.6-8-8V478c0-4.4 3.6-8 8-8h94.9v-18.6h-65.9c-4.4 0-8-3.6-8-8V316c0-4.4 3.6-8 8-8h184.7c4.4 0 8 3.6 8 8v127.2c0 4.4-3.6 8-8 8h-66.7v18.6h98.8c4.4 0 8 3.6 8 8v35.6c0 4.4-3.6 8-8 8h-59c18.1 29.1 41.8 54.3 72.3 76.9 2.6 2.1 3.2 5.9 1.2 8.5z"));
var InteractionFill = dist.InteractionFill = getIcon$1("interaction", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM726 585.7c0 55.3-44.7 100.1-99.7 100.1H420.6v53.4c0 5.7-6.5 8.8-10.9 5.3l-109.1-85.7c-3.5-2.7-3.5-8 0-10.7l109.1-85.7c4.4-3.5 10.9-.3 10.9 5.3v53.4h205.7c19.6 0 35.5-16 35.5-35.6v-78.9c0-3.7 3-6.8 6.8-6.8h50.7c3.7 0 6.8 3 6.8 6.8v79.1zm-2.6-209.9l-109.1 85.7c-4.4 3.5-10.9.3-10.9-5.3v-53.4H397.7c-19.6 0-35.5 16-35.5 35.6v78.9c0 3.7-3 6.8-6.8 6.8h-50.7c-3.7 0-6.8-3-6.8-6.8v-78.9c0-55.3 44.7-100.1 99.7-100.1h205.7v-53.4c0-5.7 6.5-8.8 10.9-5.3l109.1 85.7c3.6 2.5 3.6 7.8.1 10.5z"));
var InterationFill = dist.InterationFill = getIcon$1("interation", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM726 585.7c0 55.3-44.7 100.1-99.7 100.1H420.6v53.4c0 5.7-6.5 8.8-10.9 5.3l-109.1-85.7c-3.5-2.7-3.5-8 0-10.7l109.1-85.7c4.4-3.5 10.9-.3 10.9 5.3v53.4h205.7c19.6 0 35.5-16 35.5-35.6v-78.9c0-3.7 3-6.8 6.8-6.8h50.7c3.7 0 6.8 3 6.8 6.8v79.1zm-2.6-209.9l-109.1 85.7c-4.4 3.5-10.9.3-10.9-5.3v-53.4H397.7c-19.6 0-35.5 16-35.5 35.6v78.9c0 3.7-3 6.8-6.8 6.8h-50.7c-3.7 0-6.8-3-6.8-6.8v-78.9c0-55.3 44.7-100.1 99.7-100.1h205.7v-53.4c0-5.7 6.5-8.8 10.9-5.3l109.1 85.7c3.6 2.5 3.6 7.8.1 10.5z"));
var LayoutFill = dist.LayoutFill = getIcon$1("layout", fill, getNode(newViewBox, "M384 912h496c17.7 0 32-14.3 32-32V340H384v572zm496-800H384v164h528V144c0-17.7-14.3-32-32-32zm-768 32v736c0 17.7 14.3 32 32 32h176V112H144c-17.7 0-32 14.3-32 32z"));
var LeftCircleFill = dist.LeftCircleFill = getIcon$1("left-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm104 316.9c0 10.2-4.9 19.9-13.2 25.9L457.4 512l145.4 105.2c8.3 6 13.2 15.6 13.2 25.9V690c0 6.5-7.4 10.3-12.7 6.5l-246-178a7.95 7.95 0 0 1 0-12.9l246-178a8 8 0 0 1 12.7 6.5v46.8z"));
var LeftSquareFill = dist.LeftSquareFill = getIcon$1("left-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM624 380.9c0 10.2-4.9 19.9-13.2 25.9L465.4 512l145.4 105.2c8.3 6 13.2 15.6 13.2 25.9V690c0 6.5-7.4 10.3-12.7 6.5l-246-178a7.95 7.95 0 0 1 0-12.9l246-178c5.3-3.8 12.7 0 12.7 6.5v46.8z"));
var LikeFill = dist.LikeFill = getIcon$1("like", fill, getNode(newViewBox, "M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4A106.62 106.62 0 0 0 471 99.9c-52 0-98 35-111.8 85.1l-85.9 311h-.3v428h472.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-.2-12.6-2-25.1-5.6-37.1zM112 528v364c0 17.7 14.3 32 32 32h65V496h-65c-17.7 0-32 14.3-32 32z"));
var LockFill = dist.LockFill = getIcon$1("lock", fill, getNode(newViewBox, "M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1 1 56 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z"));
var LinkedinFill = dist.LinkedinFill = getIcon$1("linkedin", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM349.3 793.7H230.6V411.9h118.7v381.8zm-59.3-434a68.8 68.8 0 1 1 68.8-68.8c-.1 38-30.9 68.8-68.8 68.8zm503.7 434H675.1V608c0-44.3-.8-101.2-61.7-101.2-61.7 0-71.2 48.2-71.2 98v188.9H423.7V411.9h113.8v52.2h1.6c15.8-30 54.5-61.7 112.3-61.7 120.2 0 142.3 79.1 142.3 181.9v209.4z"));
var MailFill = dist.MailFill = getIcon$1("mail", fill, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-80.8 108.9L531.7 514.4c-7.8 6.1-18.7 6.1-26.5 0L189.6 268.9A7.2 7.2 0 0 1 194 256h648.8a7.2 7.2 0 0 1 4.4 12.9z"));
var MedicineBoxFill = dist.MedicineBoxFill = getIcon$1("medicine-box", fill, getNode(newViewBox, "M839.2 278.1a32 32 0 0 0-30.4-22.1H736V144c0-17.7-14.3-32-32-32H320c-17.7 0-32 14.3-32 32v112h-72.8a31.9 31.9 0 0 0-30.4 22.1L112 502v378c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V502l-72.8-223.9zM660 628c0 4.4-3.6 8-8 8H544v108c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V636H372c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h108V464c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v108h108c4.4 0 8 3.6 8 8v48zm4-372H360v-72h304v72z"));
var MediumCircleFill = dist.MediumCircleFill = getIcon$1("medium-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm256 253.7l-40.8 39.1c-3.6 2.7-5.3 7.1-4.6 11.4v287.7c-.7 4.4 1 8.8 4.6 11.4l40 39.1v8.7H566.4v-8.3l41.3-40.1c4.1-4.1 4.1-5.3 4.1-11.4V422.5l-115 291.6h-15.5L347.5 422.5V618c-1.2 8.2 1.7 16.5 7.5 22.4l53.8 65.1v8.7H256v-8.7l53.8-65.1a26.1 26.1 0 0 0 7-22.4V392c.7-6.3-1.7-12.4-6.5-16.7l-47.8-57.6V309H411l114.6 251.5 100.9-251.3H768v8.5z"));
var MediumSquareFill = dist.MediumSquareFill = getIcon$1("medium-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM768 317.7l-40.8 39.1c-3.6 2.7-5.3 7.1-4.6 11.4v287.7c-.7 4.4 1 8.8 4.6 11.4l40 39.1v8.7H566.4v-8.3l41.3-40.1c4.1-4.1 4.1-5.3 4.1-11.4V422.5l-115 291.6h-15.5L347.5 422.5V618c-1.2 8.2 1.7 16.5 7.5 22.4l53.8 65.1v8.7H256v-8.7l53.8-65.1a26.1 26.1 0 0 0 7-22.4V392c.7-6.3-1.7-12.4-6.5-16.7l-47.8-57.6V309H411l114.6 251.5 100.9-251.3H768v8.5z"));
var MehFill = dist.MehFill = getIcon$1("meh", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zM288 421a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm384 200c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h304c4.4 0 8 3.6 8 8v48zm16-152a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var MessageFill = dist.MessageFill = getIcon$1("message", fill, getNode(newViewBox, "M924.3 338.4a447.57 447.57 0 0 0-96.1-143.3 443.09 443.09 0 0 0-143-96.3A443.91 443.91 0 0 0 512 64h-2c-60.5.3-119 12.3-174.1 35.9a444.08 444.08 0 0 0-141.7 96.5 445 445 0 0 0-95 142.8A449.89 449.89 0 0 0 65 514.1c.3 69.4 16.9 138.3 47.9 199.9v152c0 25.4 20.6 46 45.9 46h151.8a447.72 447.72 0 0 0 199.5 48h2.1c59.8 0 117.7-11.6 172.3-34.3A443.2 443.2 0 0 0 827 830.5c41.2-40.9 73.6-88.7 96.3-142 23.5-55.2 35.5-113.9 35.8-174.5.2-60.9-11.6-120-34.8-175.6zM312.4 560c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.4 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48z"));
var MinusCircleFill = dist.MinusCircleFill = getIcon$1("minus-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h368c4.4 0 8 3.6 8 8v48z"));
var MinusSquareFill = dist.MinusSquareFill = getIcon$1("minus-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM704 536c0 4.4-3.6 8-8 8H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h368c4.4 0 8 3.6 8 8v48z"));
var MobileFill = dist.MobileFill = getIcon$1("mobile", fill, getNode(newViewBox, "M744 62H280c-35.3 0-64 28.7-64 64v768c0 35.3 28.7 64 64 64h464c35.3 0 64-28.7 64-64V126c0-35.3-28.7-64-64-64zM512 824c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z"));
var MoneyCollectFill = dist.MoneyCollectFill = getIcon$1("money-collect", fill, getNode(newViewBox, "M911.5 699.7a8 8 0 0 0-10.3-4.8L840 717.2V179c0-37.6-30.4-68-68-68H252c-37.6 0-68 30.4-68 68v538.2l-61.3-22.3c-.9-.3-1.8-.5-2.7-.5-4.4 0-8 3.6-8 8V762c0 3.3 2.1 6.3 5.3 7.5L501 909.1c7.1 2.6 14.8 2.6 21.9 0l383.8-139.5c3.2-1.2 5.3-4.2 5.3-7.5v-59.6c0-1-.2-1.9-.5-2.8zm-243.8-377L564 514.3h57.6c4.4 0 8 3.6 8 8v27.1c0 4.4-3.6 8-8 8h-76.3v39h76.3c4.4 0 8 3.6 8 8v27.1c0 4.4-3.6 8-8 8h-76.3V703c0 4.4-3.6 8-8 8h-49.9c-4.4 0-8-3.6-8-8v-63.4h-76c-4.4 0-8-3.6-8-8v-27.1c0-4.4 3.6-8 8-8h76v-39h-76c-4.4 0-8-3.6-8-8v-27.1c0-4.4 3.6-8 8-8h57L356.5 322.8c-2.1-3.8-.7-8.7 3.2-10.8 1.2-.7 2.5-1 3.8-1h55.7a8 8 0 0 1 7.1 4.4L511 484.2h3.3L599 315.4c1.3-2.7 4.1-4.4 7.1-4.4h54.5c4.4 0 8 3.6 8.1 7.9 0 1.3-.4 2.6-1 3.8z"));
var PauseCircleFill = dist.PauseCircleFill = getIcon$1("pause-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-80 600c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V360c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v304zm224 0c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V360c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v304z"));
var PayCircleFill = dist.PayCircleFill = getIcon$1("pay-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm166.6 246.8L567.5 515.6h62c4.4 0 8 3.6 8 8v29.9c0 4.4-3.6 8-8 8h-82V603h82c4.4 0 8 3.6 8 8v29.9c0 4.4-3.6 8-8 8h-82V717c0 4.4-3.6 8-8 8h-54.3c-4.4 0-8-3.6-8-8v-68.1h-81.7c-4.4 0-8-3.6-8-8V611c0-4.4 3.6-8 8-8h81.7v-41.5h-81.7c-4.4 0-8-3.6-8-8v-29.9c0-4.4 3.6-8 8-8h61.4L345.4 310.8a8.07 8.07 0 0 1 7-11.9h60.7c3 0 5.8 1.7 7.1 4.4l90.6 180h3.4l90.6-180a8 8 0 0 1 7.1-4.4h59.5c4.4 0 8 3.6 8 8 .2 1.4-.2 2.7-.8 3.9z"));
var NotificationFill = dist.NotificationFill = getIcon$1("notification", fill, getNode(newViewBox, "M880 112c-3.8 0-7.7.7-11.6 2.3L292 345.9H128c-8.8 0-16 7.4-16 16.6v299c0 9.2 7.2 16.6 16 16.6h101.6c-3.7 11.6-5.6 23.9-5.6 36.4 0 65.9 53.8 119.5 120 119.5 55.4 0 102.1-37.6 115.9-88.4l408.6 164.2c3.9 1.5 7.8 2.3 11.6 2.3 16.9 0 32-14.2 32-33.2V145.2C912 126.2 897 112 880 112zM344 762.3c-26.5 0-48-21.4-48-47.8 0-11.2 3.9-21.9 11-30.4l84.9 34.1c-2 24.6-22.7 44.1-47.9 44.1z"));
var PhoneFill = dist.PhoneFill = getIcon$1("phone", fill, getNode(newViewBox, "M885.6 230.2L779.1 123.8a80.83 80.83 0 0 0-57.3-23.8c-21.7 0-42.1 8.5-57.4 23.8L549.8 238.4a80.83 80.83 0 0 0-23.8 57.3c0 21.7 8.5 42.1 23.8 57.4l83.8 83.8A393.82 393.82 0 0 1 553.1 553 395.34 395.34 0 0 1 437 633.8L353.2 550a80.83 80.83 0 0 0-57.3-23.8c-21.7 0-42.1 8.5-57.4 23.8L123.8 664.5a80.89 80.89 0 0 0-23.8 57.4c0 21.7 8.5 42.1 23.8 57.4l106.3 106.3c24.4 24.5 58.1 38.4 92.7 38.4 7.3 0 14.3-.6 21.2-1.8 134.8-22.2 268.5-93.9 376.4-201.7C828.2 612.8 899.8 479.2 922.3 344c6.8-41.3-6.9-83.8-36.7-113.8z"));
var PictureFill = dist.PictureFill = getIcon$1("picture", fill, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zM338 304c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm513.9 437.1a8.11 8.11 0 0 1-5.2 1.9H177.2c-4.4 0-8-3.6-8-8 0-1.9.7-3.7 1.9-5.2l170.3-202c2.8-3.4 7.9-3.8 11.3-1 .3.3.7.6 1 1l99.4 118 158.1-187.5c2.8-3.4 7.9-3.8 11.3-1 .3.3.7.6 1 1l229.6 271.6c2.6 3.3 2.2 8.4-1.2 11.2z"));
var PieChartFill = dist.PieChartFill = getIcon$1("pie-chart", fill, getNode(newViewBox, "M863.1 518.5H505.5V160.9c0-4.4-3.6-8-8-8h-26a398.57 398.57 0 0 0-282.5 117 397.47 397.47 0 0 0-85.6 127C82.6 446.2 72 498.5 72 552.5S82.6 658.7 103.4 708c20.1 47.5 48.9 90.3 85.6 127 36.7 36.7 79.4 65.5 127 85.6a396.64 396.64 0 0 0 155.6 31.5 398.57 398.57 0 0 0 282.5-117c36.7-36.7 65.5-79.4 85.6-127a396.64 396.64 0 0 0 31.5-155.6v-26c-.1-4.4-3.7-8-8.1-8zM951 463l-2.6-28.2c-8.5-92-49.3-178.8-115.1-244.3A398.5 398.5 0 0 0 588.4 75.6L560.1 73c-4.7-.4-8.7 3.2-8.7 7.9v383.7c0 4.4 3.6 8 8 8l383.6-1c4.7-.1 8.4-4 8-8.6z"));
var PlayCircleFill = dist.PlayCircleFill = getIcon$1("play-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm144.1 454.9L437.7 677.8a8.02 8.02 0 0 1-12.7-6.5V353.7a8 8 0 0 1 12.7-6.5L656.1 506a7.9 7.9 0 0 1 0 12.9z"));
var PlaySquareFill = dist.PlaySquareFill = getIcon$1("play-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM641.7 520.8L442.3 677.6c-7.4 5.8-18.3.6-18.3-8.8V355.3c0-9.4 10.9-14.7 18.3-8.8l199.4 156.7a11.2 11.2 0 0 1 0 17.6z"));
var PlusCircleFill = dist.PlusCircleFill = getIcon$1("plus-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z"));
var PlusSquareFill = dist.PlusSquareFill = getIcon$1("plus-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM704 536c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z"));
var PoundCircleFill = dist.PoundCircleFill = getIcon$1("pound-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm146 658c0 4.4-3.6 8-8 8H376.2c-4.4 0-8-3.6-8-8v-38.5c0-3.7 2.5-6.9 6.1-7.8 44-10.9 72.8-49 72.8-94.2 0-14.7-2.5-29.4-5.9-44.2H374c-4.4 0-8-3.6-8-8v-30c0-4.4 3.6-8 8-8h53.7c-7.8-25.1-14.6-50.7-14.6-77.1 0-75.8 58.6-120.3 151.5-120.3 26.5 0 51.4 5.5 70.3 12.7 3.1 1.2 5.2 4.2 5.2 7.5v39.5a8 8 0 0 1-10.6 7.6c-17.9-6.4-39-10.5-60.4-10.5-53.3 0-87.3 26.6-87.3 70.2 0 24.7 6.2 47.9 13.4 70.5h112c4.4 0 8 3.6 8 8v30c0 4.4-3.6 8-8 8h-98.6c3.1 13.2 5.3 26.9 5.3 41 0 40.7-16.5 73.9-43.9 91.1v4.7h180c4.4 0 8 3.6 8 8V722z"));
var PrinterFill = dist.PrinterFill = getIcon$1("printer", fill, getNode(newViewBox, "M732 120c0-4.4-3.6-8-8-8H300c-4.4 0-8 3.6-8 8v148h440V120zm120 212H172c-44.2 0-80 35.8-80 80v328c0 17.7 14.3 32 32 32h168v132c0 4.4 3.6 8 8 8h424c4.4 0 8-3.6 8-8V772h168c17.7 0 32-14.3 32-32V412c0-44.2-35.8-80-80-80zM664 844H360V568h304v276zm164-360c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-40c0-4.4 3.6-8 8-8h40c4.4 0 8 3.6 8 8v40z"));
var ProfileFill = dist.ProfileFill = getIcon$1("profile", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM380 696c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm0-144c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm0-144c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm304 272c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zm0-144c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zm0-144c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48z"));
var ProjectFill = dist.ProjectFill = getIcon$1("project", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM368 744c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8V280c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v464zm192-280c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8V280c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v184zm192 72c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8V280c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v256z"));
var PushpinFill = dist.PushpinFill = getIcon$1("pushpin", fill, getNode(newViewBox, "M878.3 392.1L631.9 145.7c-6.5-6.5-15-9.7-23.5-9.7s-17 3.2-23.5 9.7L423.8 306.9c-12.2-1.4-24.5-2-36.8-2-73.2 0-146.4 24.1-206.5 72.3-15.4 12.3-16.6 35.4-2.7 49.4l181.7 181.7-215.4 215.2a15.8 15.8 0 0 0-4.6 9.8l-3.4 37.2c-.9 9.4 6.6 17.4 15.9 17.4.5 0 1 0 1.5-.1l37.2-3.4c3.7-.3 7.2-2 9.8-4.6l215.4-215.4 181.7 181.7c6.5 6.5 15 9.7 23.5 9.7 9.7 0 19.3-4.2 25.9-12.4 56.3-70.3 79.7-158.3 70.2-243.4l161.1-161.1c12.9-12.8 12.9-33.8 0-46.8z"));
var PropertySafetyFill = dist.PropertySafetyFill = getIcon$1("property-safety", fill, getNode(newViewBox, "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM648.3 332.8l-87.7 161.1h45.7c5.5 0 10 4.5 10 10v21.3c0 5.5-4.5 10-10 10h-63.4v29.7h63.4c5.5 0 10 4.5 10 10v21.3c0 5.5-4.5 10-10 10h-63.4V658c0 5.5-4.5 10-10 10h-41.3c-5.5 0-10-4.5-10-10v-51.8h-63.1c-5.5 0-10-4.5-10-10v-21.3c0-5.5 4.5-10 10-10h63.1v-29.7h-63.1c-5.5 0-10-4.5-10-10v-21.3c0-5.5 4.5-10 10-10h45.2l-88-161.1c-2.6-4.8-.9-10.9 4-13.6 1.5-.8 3.1-1.2 4.8-1.2h46c3.8 0 7.2 2.1 8.9 5.5l72.9 144.3 73.2-144.3a10 10 0 0 1 8.9-5.5h45c5.5 0 10 4.5 10 10 .1 1.7-.3 3.3-1.1 4.8z"));
var QqCircleFill = dist.QqCircleFill = getIcon$1("qq-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm210.5 612.4c-11.5 1.4-44.9-52.7-44.9-52.7 0 31.3-16.2 72.2-51.1 101.8 16.9 5.2 54.9 19.2 45.9 34.4-7.3 12.3-125.6 7.9-159.8 4-34.2 3.8-152.5 8.3-159.8-4-9.1-15.2 28.9-29.2 45.8-34.4-35-29.5-51.1-70.4-51.1-101.8 0 0-33.4 54.1-44.9 52.7-5.4-.7-12.4-29.6 9.4-99.7 10.3-33 22-60.5 40.2-105.8-3.1-116.9 45.3-215 160.4-215 113.9 0 163.3 96.1 160.4 215 18.1 45.2 29.9 72.8 40.2 105.8 21.7 70.1 14.6 99.1 9.3 99.7z"));
var QqSquareFill = dist.QqSquareFill = getIcon$1("qq-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM722.5 676.4c-11.5 1.4-44.9-52.7-44.9-52.7 0 31.3-16.2 72.2-51.1 101.8 16.9 5.2 54.9 19.2 45.9 34.4-7.3 12.3-125.6 7.9-159.8 4-34.2 3.8-152.5 8.3-159.8-4-9.1-15.2 28.9-29.2 45.8-34.4-35-29.5-51.1-70.4-51.1-101.8 0 0-33.4 54.1-44.9 52.7-5.4-.7-12.4-29.6 9.4-99.7 10.3-33 22-60.5 40.2-105.8-3.1-116.9 45.3-215 160.4-215 113.9 0 163.3 96.1 160.4 215 18.1 45.2 29.9 72.8 40.2 105.8 21.7 70.1 14.6 99.1 9.3 99.7z"));
var QuestionCircleFill = dist.QuestionCircleFill = getIcon$1("question-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 0 0-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z"));
var ReadFill = dist.ReadFill = getIcon$1("read", fill, getNode(newViewBox, "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 0 0 324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM404 553.5c0 4.1-3.2 7.5-7.1 7.5H211.1c-3.9 0-7.1-3.4-7.1-7.5v-45c0-4.1 3.2-7.5 7.1-7.5h185.7c3.9 0 7.1 3.4 7.1 7.5v45zm0-140c0 4.1-3.2 7.5-7.1 7.5H211.1c-3.9 0-7.1-3.4-7.1-7.5v-45c0-4.1 3.2-7.5 7.1-7.5h185.7c3.9 0 7.1 3.4 7.1 7.5v45zm416 140c0 4.1-3.2 7.5-7.1 7.5H627.1c-3.9 0-7.1-3.4-7.1-7.5v-45c0-4.1 3.2-7.5 7.1-7.5h185.7c3.9 0 7.1 3.4 7.1 7.5v45zm0-140c0 4.1-3.2 7.5-7.1 7.5H627.1c-3.9 0-7.1-3.4-7.1-7.5v-45c0-4.1 3.2-7.5 7.1-7.5h185.7c3.9 0 7.1 3.4 7.1 7.5v45z"));
var ReconciliationFill = dist.ReconciliationFill = getIcon$1("reconciliation", fill, getNode(newViewBox, "M676 623c-18.8 0-34 15.2-34 34s15.2 34 34 34 34-15.2 34-34-15.2-34-34-34zm204-455H668c0-30.9-25.1-56-56-56h-80c-30.9 0-56 25.1-56 56H264c-17.7 0-32 14.3-32 32v200h-88c-17.7 0-32 14.3-32 32v448c0 17.7 14.3 32 32 32h336c17.7 0 32-14.3 32-32v-16h368c17.7 0 32-14.3 32-32V200c0-17.7-14.3-32-32-32zM448 848H176V616h272v232zm0-296H176v-88h272v88zm20-272v-48h72v-56h64v56h72v48H468zm180 168v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8zm28 301c-50.8 0-92-41.2-92-92s41.2-92 92-92 92 41.2 92 92-41.2 92-92 92zm92-245c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-96c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v96zm-92 61c-50.8 0-92 41.2-92 92s41.2 92 92 92 92-41.2 92-92-41.2-92-92-92zm0 126c-18.8 0-34-15.2-34-34s15.2-34 34-34 34 15.2 34 34-15.2 34-34 34z"));
var RedEnvelopeFill = dist.RedEnvelopeFill = getIcon$1("red-envelope", fill, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zM647 470.4l-87.2 161h45.9c4.6 0 8.4 3.8 8.4 8.4v25.1c0 4.6-3.8 8.4-8.4 8.4h-63.3v28.6h63.3c4.6 0 8.4 3.8 8.4 8.4v25c.2 4.6-3.6 8.5-8.2 8.5h-63.3v49.9c0 4.6-3.8 8.4-8.4 8.4h-43.7c-4.6 0-8.4-3.8-8.4-8.4v-49.9h-63c-4.6 0-8.4-3.8-8.4-8.4v-25.1c0-4.6 3.8-8.4 8.4-8.4h63v-28.6h-63c-4.6 0-8.4-3.8-8.4-8.4v-25.1c0-4.6 3.8-8.4 8.4-8.4h45.4l-87.5-161c-2.2-4.1-.7-9.1 3.4-11.4 1.3-.6 2.6-1 3.9-1h48.8c3.2 0 6.1 1.8 7.5 4.6l71.9 141.8 71.9-141.9a8.5 8.5 0 0 1 7.5-4.6h47.8c4.6 0 8.4 3.8 8.4 8.4-.1 1.5-.5 2.9-1.1 4.1zM512.6 323L289 148h446L512.6 323z"));
var RedditCircleFill = dist.RedditCircleFill = getIcon$1("reddit-circle", fill, getNode(newViewBox, "M584 548a36 36 0 1 0 72 0 36 36 0 1 0-72 0zm144-108a35.9 35.9 0 0 0-32.5 20.6c18.8 14.3 34.4 30.7 45.9 48.8A35.98 35.98 0 0 0 728 440zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm245 477.9c4.6 13.5 7 27.6 7 42.1 0 99.4-112.8 180-252 180s-252-80.6-252-180c0-14.5 2.4-28.6 7-42.1A72.01 72.01 0 0 1 296 404c27.1 0 50.6 14.9 62.9 37 36.2-19.8 80.2-32.8 128.1-36.1l58.4-131.1c4.3-9.8 15.2-14.8 25.5-11.8l91.6 26.5a54.03 54.03 0 0 1 101.6 25.6c0 29.8-24.2 54-54 54-23.5 0-43.5-15.1-50.9-36.1L577 308.3l-43 96.5c49.1 3 94.2 16.1 131.2 36.3 12.3-22.1 35.8-37 62.9-37 39.8 0 72 32.2 72 72-.1 29.3-17.8 54.6-43.1 65.8zm-171.3 83c-14.9 11.7-44.3 24.3-73.7 24.3s-58.9-12.6-73.7-24.3c-9.3-7.3-22.7-5.7-30 3.6-7.3 9.3-5.7 22.7 3.6 30 25.7 20.4 65 33.5 100.1 33.5 35.1 0 74.4-13.1 100.2-33.5 9.3-7.3 10.9-20.8 3.6-30a21.46 21.46 0 0 0-30.1-3.6zM296 440a35.98 35.98 0 0 0-13.4 69.4c11.5-18.1 27.1-34.5 45.9-48.8A35.9 35.9 0 0 0 296 440zm72 108a36 36 0 1 0 72 0 36 36 0 1 0-72 0z"));
var RedditSquareFill = dist.RedditSquareFill = getIcon$1("reddit-square", fill, getNode(newViewBox, "M296 440a35.98 35.98 0 0 0-13.4 69.4c11.5-18.1 27.1-34.5 45.9-48.8A35.9 35.9 0 0 0 296 440zm289.7 184.9c-14.9 11.7-44.3 24.3-73.7 24.3s-58.9-12.6-73.7-24.3c-9.3-7.3-22.7-5.7-30 3.6-7.3 9.3-5.7 22.7 3.6 30 25.7 20.4 65 33.5 100.1 33.5 35.1 0 74.4-13.1 100.2-33.5 9.3-7.3 10.9-20.8 3.6-30a21.46 21.46 0 0 0-30.1-3.6zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM757 541.9c4.6 13.5 7 27.6 7 42.1 0 99.4-112.8 180-252 180s-252-80.6-252-180c0-14.5 2.4-28.6 7-42.1A72.01 72.01 0 0 1 296 404c27.1 0 50.6 14.9 62.9 37 36.2-19.8 80.2-32.8 128.1-36.1l58.4-131.1c4.3-9.8 15.2-14.8 25.5-11.8l91.6 26.5a54.03 54.03 0 0 1 101.6 25.6c0 29.8-24.2 54-54 54-23.5 0-43.5-15.1-50.9-36.1L577 308.3l-43 96.5c49.1 3 94.2 16.1 131.2 36.3 12.3-22.1 35.8-37 62.9-37 39.8 0 72 32.2 72 72-.1 29.3-17.8 54.6-43.1 65.8zM584 548a36 36 0 1 0 72 0 36 36 0 1 0-72 0zm144-108a35.9 35.9 0 0 0-32.5 20.6c18.8 14.3 34.4 30.7 45.9 48.8A35.98 35.98 0 0 0 728 440zM368 548a36 36 0 1 0 72 0 36 36 0 1 0-72 0z"));
var RestFill = dist.RestFill = getIcon$1("rest", fill, getNode(newViewBox, "M832 256h-28.1l-35.7-120.9c-4-13.7-16.5-23.1-30.7-23.1h-451c-14.3 0-26.8 9.4-30.7 23.1L220.1 256H192c-17.7 0-32 14.3-32 32v28c0 4.4 3.6 8 8 8h45.8l47.7 558.7a32 32 0 0 0 31.9 29.3h429.2a32 32 0 0 0 31.9-29.3L802.2 324H856c4.4 0 8-3.6 8-8v-28c0-17.7-14.3-32-32-32zM508 704c-79.5 0-144-64.5-144-144s64.5-144 144-144 144 64.5 144 144-64.5 144-144 144zM291 256l22.4-76h397.2l22.4 76H291zm137 304a80 80 0 1 0 160 0 80 80 0 1 0-160 0z"));
var RightCircleFill = dist.RightCircleFill = getIcon$1("right-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm154.7 454.5l-246 178c-5.3 3.8-12.7 0-12.7-6.5v-46.9c0-10.2 4.9-19.9 13.2-25.9L566.6 512 421.2 406.8c-8.3-6-13.2-15.6-13.2-25.9V334c0-6.5 7.4-10.3 12.7-6.5l246 178c4.4 3.2 4.4 9.8 0 13z"));
var RocketFill = dist.RocketFill = getIcon$1("rocket", fill, getNode(newViewBox, "M864 736c0-111.6-65.4-208-160-252.9V317.3c0-15.1-5.3-29.7-15.1-41.2L536.5 95.4C530.1 87.8 521 84 512 84s-18.1 3.8-24.5 11.4L335.1 276.1a63.97 63.97 0 0 0-15.1 41.2v165.8C225.4 528 160 624.4 160 736h156.5c-2.3 7.2-3.5 15-3.5 23.8 0 22.1 7.6 43.7 21.4 60.8a97.2 97.2 0 0 0 43.1 30.6c23.1 54 75.6 88.8 134.5 88.8 29.1 0 57.3-8.6 81.4-24.8 23.6-15.8 41.9-37.9 53-64a97 97 0 0 0 43.1-30.5 97.52 97.52 0 0 0 21.4-60.8c0-8.4-1.1-16.4-3.1-23.8L864 736zM512 352a48.01 48.01 0 0 1 0 96 48.01 48.01 0 0 1 0-96zm116.1 432.2c-5.2 3-11.2 4.2-17.1 3.4l-19.5-2.4-2.8 19.4c-5.4 37.9-38.4 66.5-76.7 66.5s-71.3-28.6-76.7-66.5l-2.8-19.5-19.5 2.5a27.7 27.7 0 0 1-17.1-3.5c-8.7-5-14.1-14.3-14.1-24.4 0-10.6 5.9-19.4 14.6-23.8h231.3c8.8 4.5 14.6 13.3 14.6 23.8-.1 10.2-5.5 19.6-14.2 24.5z"));
var RightSquareFill = dist.RightSquareFill = getIcon$1("right-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM658.7 518.5l-246 178c-5.3 3.8-12.7 0-12.7-6.5v-46.9c0-10.2 4.9-19.9 13.2-25.9L558.6 512 413.2 406.8c-8.3-6-13.2-15.6-13.2-25.9V334c0-6.5 7.4-10.3 12.7-6.5l246 178c4.4 3.2 4.4 9.8 0 13z"));
var SafetyCertificateFill = dist.SafetyCertificateFill = getIcon$1("safety-certificate", fill, getNode(newViewBox, "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM694.5 340.7L481.9 633.4a16.1 16.1 0 0 1-26 0l-126.4-174c-3.8-5.3 0-12.7 6.5-12.7h55.2c5.1 0 10 2.5 13 6.6l64.7 89 150.9-207.8c3-4.1 7.8-6.6 13-6.6H688c6.5.1 10.3 7.5 6.5 12.8z"));
var SaveFill = dist.SaveFill = getIcon$1("save", fill, getNode(newViewBox, "M893.3 293.3L730.7 130.7c-12-12-28.3-18.7-45.3-18.7H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 176h256v112H384V176zm128 554c-79.5 0-144-64.5-144-144s64.5-144 144-144 144 64.5 144 144-64.5 144-144 144zm0-224c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80z"));
var ScheduleFill = dist.ScheduleFill = getIcon$1("schedule", fill, getNode(newViewBox, "M928 224H768v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H548v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H328v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H96c-17.7 0-32 14.3-32 32v576c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32zM424 688c0 4.4-3.6 8-8 8H232c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zm0-136c0 4.4-3.6 8-8 8H232c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zm374.5-91.3l-165 228.7a15.9 15.9 0 0 1-25.8 0L493.5 531.2c-3.8-5.3 0-12.7 6.5-12.7h54.9c5.1 0 9.9 2.5 12.9 6.6l52.8 73.1 103.7-143.7c3-4.2 7.8-6.6 12.9-6.6H792c6.5.1 10.3 7.5 6.5 12.8z"));
var SecurityScanFill = dist.SecurityScanFill = getIcon$1("security-scan", fill, getNode(newViewBox, "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM626.8 554c-48.5 48.5-123 55.2-178.6 20.1l-77.5 77.5a8.03 8.03 0 0 1-11.3 0l-34-34a8.03 8.03 0 0 1 0-11.3l77.5-77.5c-35.1-55.7-28.4-130.1 20.1-178.6 56.3-56.3 147.5-56.3 203.8 0 56.3 56.3 56.3 147.5 0 203.8zm-158.54-45.27a80.1 80.1 0 1 0 113.27-113.28 80.1 80.1 0 1 0-113.27 113.28z"));
var SettingFill = dist.SettingFill = getIcon$1("setting", fill, getNode(newViewBox, "M512.5 390.6c-29.9 0-57.9 11.6-79.1 32.8-21.1 21.2-32.8 49.2-32.8 79.1 0 29.9 11.7 57.9 32.8 79.1 21.2 21.1 49.2 32.8 79.1 32.8 29.9 0 57.9-11.7 79.1-32.8 21.1-21.2 32.8-49.2 32.8-79.1 0-29.9-11.7-57.9-32.8-79.1a110.96 110.96 0 0 0-79.1-32.8zm412.3 235.5l-65.4-55.9c3.1-19 4.7-38.4 4.7-57.7s-1.6-38.8-4.7-57.7l65.4-55.9a32.03 32.03 0 0 0 9.3-35.2l-.9-2.6a442.5 442.5 0 0 0-79.6-137.7l-1.8-2.1a32.12 32.12 0 0 0-35.1-9.5l-81.2 28.9c-30-24.6-63.4-44-99.6-57.5l-15.7-84.9a32.05 32.05 0 0 0-25.8-25.7l-2.7-.5c-52-9.4-106.8-9.4-158.8 0l-2.7.5a32.05 32.05 0 0 0-25.8 25.7l-15.8 85.3a353.44 353.44 0 0 0-98.9 57.3l-81.8-29.1a32 32 0 0 0-35.1 9.5l-1.8 2.1a445.93 445.93 0 0 0-79.6 137.7l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.2 56.5c-3.1 18.8-4.6 38-4.6 57 0 19.2 1.5 38.4 4.6 57l-66 56.5a32.03 32.03 0 0 0-9.3 35.2l.9 2.6c18.1 50.3 44.8 96.8 79.6 137.7l1.8 2.1a32.12 32.12 0 0 0 35.1 9.5l81.8-29.1c29.8 24.5 63 43.9 98.9 57.3l15.8 85.3a32.05 32.05 0 0 0 25.8 25.7l2.7.5a448.27 448.27 0 0 0 158.8 0l2.7-.5a32.05 32.05 0 0 0 25.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0 0 35.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c4.3-12.4.6-26.3-9.5-35zm-412.3 52.2c-97.1 0-175.8-78.7-175.8-175.8s78.7-175.8 175.8-175.8 175.8 78.7 175.8 175.8-78.7 175.8-175.8 175.8z"));
var ShopFill = dist.ShopFill = getIcon$1("shop", fill, getNode(newViewBox, "M882 272.1V144c0-17.7-14.3-32-32-32H174c-17.7 0-32 14.3-32 32v128.1c-16.7 1-30 14.9-30 31.9v131.7a177 177 0 0 0 14.4 70.4c4.3 10.2 9.6 19.8 15.6 28.9v345c0 17.6 14.3 32 32 32h274V736h128v176h274c17.7 0 32-14.3 32-32V535a175 175 0 0 0 15.6-28.9c9.5-22.3 14.4-46 14.4-70.4V304c0-17-13.3-30.9-30-31.9zm-72 568H640V704c0-17.7-14.3-32-32-32H416c-17.7 0-32 14.3-32 32v136.1H214V597.9c2.9 1.4 5.9 2.8 9 4 22.3 9.4 46 14.1 70.4 14.1s48-4.7 70.4-14.1c13.8-5.8 26.8-13.2 38.7-22.1.2-.1.4-.1.6 0a180.4 180.4 0 0 0 38.7 22.1c22.3 9.4 46 14.1 70.4 14.1 24.4 0 48-4.7 70.4-14.1 13.8-5.8 26.8-13.2 38.7-22.1.2-.1.4-.1.6 0a180.4 180.4 0 0 0 38.7 22.1c22.3 9.4 46 14.1 70.4 14.1 24.4 0 48-4.7 70.4-14.1 3-1.3 6-2.6 9-4v242.2zm0-568.1H214v-88h596v88z"));
var ShoppingFill = dist.ShoppingFill = getIcon$1("shopping", fill, getNode(newViewBox, "M832 312H696v-16c0-101.6-82.4-184-184-184s-184 82.4-184 184v16H192c-17.7 0-32 14.3-32 32v536c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V344c0-17.7-14.3-32-32-32zm-208 0H400v-16c0-61.9 50.1-112 112-112s112 50.1 112 112v16z"));
var SketchCircleFill = dist.SketchCircleFill = getIcon$1("sketch-circle", fill, getNode(newViewBox, "M582.3 625.6l147.9-166.3h-63.4zm90-202.3h62.5l-92.1-115.1zm-274.7 36L512 684.5l114.4-225.2zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm286.7 380.2L515.8 762.3c-1 1.1-2.4 1.7-3.8 1.7s-2.8-.6-3.8-1.7L225.3 444.2a5.14 5.14 0 0 1-.2-6.6L365.6 262c1-1.2 2.4-1.9 4-1.9h284.6c1.6 0 3 .7 4 1.9l140.5 175.6a4.9 4.9 0 0 1 0 6.6zm-190.5-20.9L512 326.1l-96.2 97.2zM420.3 301.1l-23.1 89.8 88.8-89.8zm183.4 0H538l88.8 89.8zm-222.4 7.1l-92.1 115.1h62.5zm-87.5 151.1l147.9 166.3-84.5-166.3z"));
var SketchSquareFill = dist.SketchSquareFill = getIcon$1("sketch-square", fill, getNode(newViewBox, "M608.2 423.3L512 326.1l-96.2 97.2zm-25.9 202.3l147.9-166.3h-63.4zm90-202.3h62.5l-92.1-115.1zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-81.3 332.2L515.8 762.3c-1 1.1-2.4 1.7-3.8 1.7s-2.8-.6-3.8-1.7L225.3 444.2a5.14 5.14 0 0 1-.2-6.6L365.6 262c1-1.2 2.4-1.9 4-1.9h284.6c1.6 0 3 .7 4 1.9l140.5 175.6a4.9 4.9 0 0 1 0 6.6zm-401.1 15.1L512 684.5l114.4-225.2zm-16.3-151.1l-92.1 115.1h62.5zm-87.5 151.1l147.9 166.3-84.5-166.3zm126.5-158.2l-23.1 89.8 88.8-89.8zm183.4 0H538l88.8 89.8z"));
var SkinFill = dist.SkinFill = getIcon$1("skin", fill, getNode(newViewBox, "M870 126H663.8c-17.4 0-32.9 11.9-37 29.3C614.3 208.1 567 246 512 246s-102.3-37.9-114.8-90.7a37.93 37.93 0 0 0-37-29.3H154a44 44 0 0 0-44 44v252a44 44 0 0 0 44 44h75v388a44 44 0 0 0 44 44h478a44 44 0 0 0 44-44V466h75a44 44 0 0 0 44-44V170a44 44 0 0 0-44-44z"));
var SlackCircleFill = dist.SlackCircleFill = getIcon$1("slack-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zM361.5 580.2c0 27.8-22.5 50.4-50.3 50.4a50.35 50.35 0 0 1-50.3-50.4c0-27.8 22.5-50.4 50.3-50.4h50.3v50.4zm134 134.4c0 27.8-22.5 50.4-50.3 50.4-27.8 0-50.3-22.6-50.3-50.4V580.2c0-27.8 22.5-50.4 50.3-50.4a50.35 50.35 0 0 1 50.3 50.4v134.4zm-50.2-218.4h-134c-27.8 0-50.3-22.6-50.3-50.4 0-27.8 22.5-50.4 50.3-50.4h134c27.8 0 50.3 22.6 50.3 50.4-.1 27.9-22.6 50.4-50.3 50.4zm0-134.4c-13.3 0-26.1-5.3-35.6-14.8S395 324.8 395 311.4c0-27.8 22.5-50.4 50.3-50.4 27.8 0 50.3 22.6 50.3 50.4v50.4h-50.3zm83.7-50.4c0-27.8 22.5-50.4 50.3-50.4 27.8 0 50.3 22.6 50.3 50.4v134.4c0 27.8-22.5 50.4-50.3 50.4-27.8 0-50.3-22.6-50.3-50.4V311.4zM579.3 765c-27.8 0-50.3-22.6-50.3-50.4v-50.4h50.3c27.8 0 50.3 22.6 50.3 50.4 0 27.8-22.5 50.4-50.3 50.4zm134-134.4h-134c-13.3 0-26.1-5.3-35.6-14.8S529 593.6 529 580.2c0-27.8 22.5-50.4 50.3-50.4h134c27.8 0 50.3 22.6 50.3 50.4 0 27.8-22.5 50.4-50.3 50.4zm0-134.4H663v-50.4c0-27.8 22.5-50.4 50.3-50.4s50.3 22.6 50.3 50.4c0 27.8-22.5 50.4-50.3 50.4z"));
var SlackSquareFill = dist.SlackSquareFill = getIcon$1("slack-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM529 311.4c0-27.8 22.5-50.4 50.3-50.4 27.8 0 50.3 22.6 50.3 50.4v134.4c0 27.8-22.5 50.4-50.3 50.4-27.8 0-50.3-22.6-50.3-50.4V311.4zM361.5 580.2c0 27.8-22.5 50.4-50.3 50.4a50.35 50.35 0 0 1-50.3-50.4c0-27.8 22.5-50.4 50.3-50.4h50.3v50.4zm134 134.4c0 27.8-22.5 50.4-50.3 50.4-27.8 0-50.3-22.6-50.3-50.4V580.2c0-27.8 22.5-50.4 50.3-50.4a50.35 50.35 0 0 1 50.3 50.4v134.4zm-50.2-218.4h-134c-27.8 0-50.3-22.6-50.3-50.4 0-27.8 22.5-50.4 50.3-50.4h134c27.8 0 50.3 22.6 50.3 50.4-.1 27.9-22.6 50.4-50.3 50.4zm0-134.4c-13.3 0-26.1-5.3-35.6-14.8S395 324.8 395 311.4c0-27.8 22.5-50.4 50.3-50.4 27.8 0 50.3 22.6 50.3 50.4v50.4h-50.3zm134 403.2c-27.8 0-50.3-22.6-50.3-50.4v-50.4h50.3c27.8 0 50.3 22.6 50.3 50.4 0 27.8-22.5 50.4-50.3 50.4zm134-134.4h-134a50.35 50.35 0 0 1-50.3-50.4c0-27.8 22.5-50.4 50.3-50.4h134c27.8 0 50.3 22.6 50.3 50.4 0 27.8-22.5 50.4-50.3 50.4zm0-134.4H663v-50.4c0-27.8 22.5-50.4 50.3-50.4s50.3 22.6 50.3 50.4c0 27.8-22.5 50.4-50.3 50.4z"));
var SkypeFill = dist.SkypeFill = getIcon$1("skype", fill, getNode(newViewBox, "M883.7 578.6c4.1-22.5 6.3-45.5 6.3-68.5 0-51-10-100.5-29.7-147-19-45-46.3-85.4-81-120.1a375.79 375.79 0 0 0-120.1-80.9c-46.6-19.7-96-29.7-147-29.7-24 0-48.1 2.3-71.5 6.8A225.1 225.1 0 0 0 335.6 113c-59.7 0-115.9 23.3-158.1 65.5A222.25 222.25 0 0 0 112 336.6c0 38 9.8 75.4 28.1 108.4-3.7 21.4-5.7 43.3-5.7 65.1 0 51 10 100.5 29.7 147 19 45 46.2 85.4 80.9 120.1 34.7 34.7 75.1 61.9 120.1 80.9 46.6 19.7 96 29.7 147 29.7 22.2 0 44.4-2 66.2-5.9 33.5 18.9 71.3 29 110 29 59.7 0 115.9-23.2 158.1-65.5 42.3-42.2 65.5-98.4 65.5-158.1.1-38-9.7-75.5-28.2-108.7zm-370 162.9c-134.2 0-194.2-66-194.2-115.4 0-25.4 18.7-43.1 44.5-43.1 57.4 0 42.6 82.5 149.7 82.5 54.9 0 85.2-29.8 85.2-60.3 0-18.3-9-38.7-45.2-47.6l-119.4-29.8c-96.1-24.1-113.6-76.1-113.6-124.9 0-101.4 95.5-139.5 185.2-139.5 82.6 0 180 45.7 180 106.5 0 26.1-22.6 41.2-48.4 41.2-49 0-40-67.8-138.7-67.8-49 0-76.1 22.2-76.1 53.9s38.7 41.8 72.3 49.5l88.4 19.6c96.8 21.6 121.3 78.1 121.3 131.3 0 82.3-63.3 143.9-191 143.9z"));
var SlidersFill = dist.SlidersFill = getIcon$1("sliders", fill, getNode(newViewBox, "M904 296h-66v-96c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v96h-66c-4.4 0-8 3.6-8 8v416c0 4.4 3.6 8 8 8h66v96c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8v-96h66c4.4 0 8-3.6 8-8V304c0-4.4-3.6-8-8-8zm-584-72h-66v-56c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v56h-66c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8h66v56c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8v-56h66c4.4 0 8-3.6 8-8V232c0-4.4-3.6-8-8-8zm292 180h-66V232c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v172h-66c-4.4 0-8 3.6-8 8v200c0 4.4 3.6 8 8 8h66v172c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V620h66c4.4 0 8-3.6 8-8V412c0-4.4-3.6-8-8-8z"));
var SmileFill = dist.SmileFill = getIcon$1("smile", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zM288 421a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm224 272c-85.5 0-155.6-67.3-160-151.6a8 8 0 0 1 8-8.4h48.1c4.2 0 7.8 3.2 8.1 7.4C420 589.9 461.5 629 512 629s92.1-39.1 95.8-88.6c.3-4.2 3.9-7.4 8.1-7.4H664a8 8 0 0 1 8 8.4C667.6 625.7 597.5 693 512 693zm176-224a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var SnippetsFill = dist.SnippetsFill = getIcon$1("snippets", fill, getNode(newViewBox, "M832 112H724V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H500V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H320c-17.7 0-32 14.3-32 32v120h-96c-17.7 0-32 14.3-32 32v632c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32v-96h96c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM664 486H514V336h.2L664 485.8v.2zm128 274h-56V456L544 264H360v-80h68v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h152v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h68v576z"));
var SoundFill = dist.SoundFill = getIcon$1("sound", fill, getNode(newViewBox, "M892.1 737.8l-110.3-63.7a15.9 15.9 0 0 0-21.7 5.9l-19.9 34.5c-4.4 7.6-1.8 17.4 5.8 21.8L856.3 800a15.9 15.9 0 0 0 21.7-5.9l19.9-34.5c4.4-7.6 1.7-17.4-5.8-21.8zM760 344a15.9 15.9 0 0 0 21.7 5.9L892 286.2c7.6-4.4 10.2-14.2 5.8-21.8L878 230a15.9 15.9 0 0 0-21.7-5.9L746 287.8a15.99 15.99 0 0 0-5.8 21.8L760 344zm174 132H806c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16h128c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16zM625.9 115c-5.9 0-11.9 1.6-17.4 5.3L254 352H90c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h164l354.5 231.7c5.5 3.6 11.6 5.3 17.4 5.3 16.7 0 32.1-13.3 32.1-32.1V147.1c0-18.8-15.4-32.1-32.1-32.1z"));
var StarFill = dist.StarFill = getIcon$1("star", fill, getNode(newViewBox, "M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 0 0 .6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0 0 46.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z"));
var StepBackwardFill = dist.StepBackwardFill = getIcon$1("step-backward", fill, getNode(normalViewBox, "M347.6 528.95l383.2 301.02c14.25 11.2 35.2 1.1 35.2-16.95V210.97c0-18.05-20.95-28.14-35.2-16.94L347.6 495.05a21.53 21.53 0 0 0 0 33.9M330 864h-64a8 8 0 0 1-8-8V168a8 8 0 0 1 8-8h64a8 8 0 0 1 8 8v688a8 8 0 0 1-8 8"));
var StepForwardFill = dist.StepForwardFill = getIcon$1("step-forward", fill, getNode(normalViewBox, "M676.4 528.95L293.2 829.97c-14.25 11.2-35.2 1.1-35.2-16.95V210.97c0-18.05 20.95-28.14 35.2-16.94l383.2 301.02a21.53 21.53 0 0 1 0 33.9M694 864h64a8 8 0 0 0 8-8V168a8 8 0 0 0-8-8h-64a8 8 0 0 0-8 8v688a8 8 0 0 0 8 8"));
var StopFill = dist.StopFill = getIcon$1("stop", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm234.8 736.5L223.5 277.2c16-19.7 34-37.7 53.7-53.7l523.3 523.3c-16 19.6-34 37.7-53.7 53.7z"));
var SwitcherFill = dist.SwitcherFill = getIcon$1("switcher", fill, getNode(newViewBox, "M752 240H144c-17.7 0-32 14.3-32 32v608c0 17.7 14.3 32 32 32h608c17.7 0 32-14.3 32-32V272c0-17.7-14.3-32-32-32zM596 606c0 4.4-3.6 8-8 8H308c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h280c4.4 0 8 3.6 8 8v48zm284-494H264c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h576v576c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V144c0-17.7-14.3-32-32-32z"));
var TabletFill = dist.TabletFill = getIcon$1("tablet", fill, getNode(newViewBox, "M800 64H224c-35.3 0-64 28.7-64 64v768c0 35.3 28.7 64 64 64h576c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zM512 824c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z"));
var TagFill = dist.TagFill = getIcon$1("tag", fill, getNode(newViewBox, "M938 458.8l-29.6-312.6c-1.5-16.2-14.4-29-30.6-30.6L565.2 86h-.4c-3.2 0-5.7 1-7.6 2.9L88.9 557.2a9.96 9.96 0 0 0 0 14.1l363.8 363.8c1.9 1.9 4.4 2.9 7.1 2.9s5.2-1 7.1-2.9l468.3-468.3c2-2.1 3-5 2.8-8zM699 387c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64z"));
var TagsFill = dist.TagsFill = getIcon$1("tags", fill, getNode(newViewBox, "M483.2 790.3L861.4 412c1.7-1.7 2.5-4 2.3-6.3l-25.5-301.4c-.7-7.8-6.8-13.9-14.6-14.6L522.2 64.3c-2.3-.2-4.7.6-6.3 2.3L137.7 444.8a8.03 8.03 0 0 0 0 11.3l334.2 334.2c3.1 3.2 8.2 3.2 11.3 0zm122.7-533.4c18.7-18.7 49.1-18.7 67.9 0 18.7 18.7 18.7 49.1 0 67.9-18.7 18.7-49.1 18.7-67.9 0-18.7-18.7-18.7-49.1 0-67.9zm283.8 282.9l-39.6-39.5a8.03 8.03 0 0 0-11.3 0l-362 361.3-237.6-237a8.03 8.03 0 0 0-11.3 0l-39.6 39.5a8.03 8.03 0 0 0 0 11.3l243.2 242.8 39.6 39.5c3.1 3.1 8.2 3.1 11.3 0l407.3-406.6c3.1-3.1 3.1-8.2 0-11.3z"));
var TaobaoCircleFill = dist.TaobaoCircleFill = getIcon$1("taobao-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zM315.7 291.5c27.3 0 49.5 22.1 49.5 49.4s-22.1 49.4-49.5 49.4a49.4 49.4 0 1 1 0-98.8zM366.9 578c-13.6 42.3-10.2 26.7-64.4 144.5l-78.5-49s87.7-79.8 105.6-116.2c19.2-38.4-21.1-58.9-21.1-58.9l-60.2-37.5 32.7-50.2c45.4 33.7 48.7 36.6 79.2 67.2 23.8 23.9 20.7 56.8 6.7 100.1zm427.2 55c-15.3 143.8-202.4 90.3-202.4 90.3l10.2-41.1 43.3 9.3c80 5 72.3-64.9 72.3-64.9V423c.6-77.3-72.6-85.4-204.2-38.3l30.6 8.3c-2.5 9-12.5 23.2-25.2 38.6h176v35.6h-99.1v44.5h98.7v35.7h-98.7V622c14.9-4.8 28.6-11.5 40.5-20.5l-8.7-32.5 46.5-14.4 38.8 94.9-57.3 23.9-10.2-37.8c-25.6 19.5-78.8 48-171.8 45.4-99.2 2.6-73.7-112-73.7-112l2.5-1.3H472c-.5 14.7-6.6 38.7 1.7 51.8 6.8 10.8 24.2 12.6 35.3 13.1 1.3.1 2.6.1 3.9.1v-85.3h-101v-35.7h101v-44.5H487c-22.7 24.1-43.5 44.1-43.5 44.1l-30.6-26.7c21.7-22.9 43.3-59.1 56.8-83.2-10.9 4.4-22 9.2-33.6 14.2-11.2 14.3-24.2 29-38.7 43.5.5.8-50-28.4-50-28.4 52.2-44.4 81.4-139.9 81.4-139.9l72.5 20.4s-5.9 14-18.4 35.6c290.3-82.3 307.4 50.5 307.4 50.5s19.1 91.8 3.8 235.7z"));
var TaobaoSquareFill = dist.TaobaoSquareFill = getIcon$1("taobao-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM315.7 291.5c27.3 0 49.5 22.1 49.5 49.4s-22.1 49.4-49.5 49.4a49.4 49.4 0 1 1 0-98.8zM366.9 578c-13.6 42.3-10.2 26.7-64.4 144.5l-78.5-49s87.7-79.8 105.6-116.2c19.2-38.4-21.1-58.9-21.1-58.9l-60.2-37.5 32.7-50.2c45.4 33.7 48.7 36.6 79.2 67.2 23.8 23.9 20.7 56.8 6.7 100.1zm427.2 55c-15.3 143.8-202.4 90.3-202.4 90.3l10.2-41.1 43.3 9.3c80 5 72.3-64.9 72.3-64.9V423c.6-77.3-72.6-85.4-204.2-38.3l30.6 8.3c-2.5 9-12.5 23.2-25.2 38.6h176v35.6h-99.1v44.5h98.7v35.7h-98.7V622c14.9-4.8 28.6-11.5 40.5-20.5l-8.7-32.5 46.5-14.4 38.8 94.9-57.3 23.9-10.2-37.8c-25.6 19.5-78.8 48-171.8 45.4-99.2 2.6-73.7-112-73.7-112l2.5-1.3H472c-.5 14.7-6.6 38.7 1.7 51.8 6.8 10.8 24.2 12.6 35.3 13.1 1.3.1 2.6.1 3.9.1v-85.3h-101v-35.7h101v-44.5H487c-22.7 24.1-43.5 44.1-43.5 44.1l-30.6-26.7c21.7-22.9 43.3-59.1 56.8-83.2-10.9 4.4-22 9.2-33.6 14.2-11.2 14.3-24.2 29-38.7 43.5.5.8-50-28.4-50-28.4 52.2-44.4 81.4-139.9 81.4-139.9l72.5 20.4s-5.9 14-18.4 35.6c290.3-82.3 307.4 50.5 307.4 50.5s19.1 91.8 3.8 235.7z"));
var ToolFill = dist.ToolFill = getIcon$1("tool", fill, getNode(newViewBox, "M865.3 244.7c-.3-.3-61.1 59.8-182.1 180.6l-84.9-84.9 180.9-180.9c-95.2-57.3-217.5-42.6-296.8 36.7A244.42 244.42 0 0 0 419 432l1.8 6.7-283.5 283.4c-6.2 6.2-6.2 16.4 0 22.6l141.4 141.4c6.2 6.2 16.4 6.2 22.6 0l283.3-283.3 6.7 1.8c83.7 22.3 173.6-.9 236-63.3 79.4-79.3 94.1-201.6 38-296.6z"));
var ThunderboltFill = dist.ThunderboltFill = getIcon$1("thunderbolt", fill, getNode(newViewBox, "M848 359.3H627.7L825.8 109c4.1-5.3.4-13-6.3-13H436c-2.8 0-5.5 1.5-6.9 4L170 547.5c-3.1 5.3.7 12 6.9 12h174.4l-89.4 357.6c-1.9 7.8 7.5 13.3 13.3 7.7L853.5 373c5.2-4.9 1.7-13.7-5.5-13.7z"));
var TrademarkCircleFill = dist.TrademarkCircleFill = getIcon$1("trademark-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm164.7 660.2c-1.1.5-2.3.8-3.5.8h-62c-3.1 0-5.9-1.8-7.2-4.6l-74.6-159.2h-88.7V717c0 4.4-3.6 8-8 8H378c-4.4 0-8-3.6-8-8V307c0-4.4 3.6-8 8-8h155.6c98.8 0 144.2 59.9 144.2 131.1 0 70.2-43.6 106.4-78.4 119.2l80.8 164.2c2.1 3.9.4 8.7-3.5 10.7zM523.9 357h-83.4v148H522c53 0 82.8-25.6 82.8-72.4 0-50.3-32.9-75.6-80.9-75.6z"));
var TwitterCircleFill = dist.TwitterCircleFill = getIcon$1("twitter-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm215.3 337.7c.3 4.7.3 9.6.3 14.4 0 146.8-111.8 315.9-316.1 315.9-63 0-121.4-18.3-170.6-49.8 9 1 17.6 1.4 26.8 1.4 52 0 99.8-17.6 137.9-47.4-48.8-1-89.8-33-103.8-77 17.1 2.5 32.5 2.5 50.1-2a111 111 0 0 1-88.9-109v-1.4c14.7 8.3 32 13.4 50.1 14.1a111.13 111.13 0 0 1-49.5-92.4c0-20.7 5.4-39.6 15.1-56a315.28 315.28 0 0 0 229 116.1C492 353.1 548.4 292 616.2 292c32 0 60.8 13.4 81.1 35 25.1-4.7 49.1-14.1 70.5-26.7-8.3 25.7-25.7 47.4-48.8 61.1 22.4-2.4 44-8.6 64-17.3-15.1 22.2-34 41.9-55.7 57.6z"));
var TrophyFill = dist.TrophyFill = getIcon$1("trophy", fill, getNode(newViewBox, "M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 0 0-44 44v148c0 81.7 60 149.6 138.2 162C265.6 630.2 359 721.8 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.8 758.4 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 0 0-44-44zM248 439.6c-37.1-11.9-64-46.7-64-87.6V232h64v207.6zM840 352c0 41-26.9 75.8-64 87.6V232h64v120z"));
var TwitterSquareFill = dist.TwitterSquareFill = getIcon$1("twitter-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM727.3 401.7c.3 4.7.3 9.6.3 14.4 0 146.8-111.8 315.9-316.1 315.9-63 0-121.4-18.3-170.6-49.8 9 1 17.6 1.4 26.8 1.4 52 0 99.8-17.6 137.9-47.4-48.8-1-89.8-33-103.8-77 17.1 2.5 32.5 2.5 50.1-2a111 111 0 0 1-88.9-109v-1.4c14.7 8.3 32 13.4 50.1 14.1a111.13 111.13 0 0 1-49.5-92.4c0-20.7 5.4-39.6 15.1-56a315.28 315.28 0 0 0 229 116.1C492 353.1 548.4 292 616.2 292c32 0 60.8 13.4 81.1 35 25.1-4.7 49.1-14.1 70.5-26.7-8.3 25.7-25.7 47.4-48.8 61.1 22.4-2.4 44-8.6 64-17.3-15.1 22.2-34 41.9-55.7 57.6z"));
var UnlockFill = dist.UnlockFill = getIcon$1("unlock", fill, getNode(newViewBox, "M832 464H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v68c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-68c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1 1 56 0z"));
var UpCircleFill = dist.UpCircleFill = getIcon$1("up-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm178 555h-46.9c-10.2 0-19.9-4.9-25.9-13.2L512 460.4 406.8 605.8c-6 8.3-15.6 13.2-25.9 13.2H334c-6.5 0-10.3-7.4-6.5-12.7l178-246c3.2-4.4 9.7-4.4 12.9 0l178 246c3.9 5.3.1 12.7-6.4 12.7z"));
var UpSquareFill = dist.UpSquareFill = getIcon$1("up-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM690 624h-46.9c-10.2 0-19.9-4.9-25.9-13.2L512 465.4 406.8 610.8c-6 8.3-15.6 13.2-25.9 13.2H334c-6.5 0-10.3-7.4-6.5-12.7l178-246c3.2-4.4 9.7-4.4 12.9 0l178 246c3.9 5.3.1 12.7-6.4 12.7z"));
var UsbFill = dist.UsbFill = getIcon$1("usb", fill, getNode(newViewBox, "M408 312h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm352 120V144c0-17.7-14.3-32-32-32H296c-17.7 0-32 14.3-32 32v288c-66.2 0-120 52.1-120 116v356c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8V548c0-63.9-53.8-116-120-116zm-72 0H336V184h352v248zM568 312h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"));
var WalletFill = dist.WalletFill = getIcon$1("wallet", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-32 464H528V448h320v128zm-268-64a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var VideoCameraFill = dist.VideoCameraFill = getIcon$1("video-camera", fill, getNode(newViewBox, "M912 302.3L784 376V224c0-35.3-28.7-64-64-64H128c-35.3 0-64 28.7-64 64v576c0 35.3 28.7 64 64 64h592c35.3 0 64-28.7 64-64V648l128 73.7c21.3 12.3 48-3.1 48-27.6V330c0-24.6-26.7-40-48-27.7zM328 352c0 4.4-3.6 8-8 8H208c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h112c4.4 0 8 3.6 8 8v48zm560 273l-104-59.8V458.9L888 399v226z"));
var WarningFill = dist.WarningFill = getIcon$1("warning", fill, getNode(newViewBox, "M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zM480 416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416zm32 352a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var WeiboCircleFill = dist.WeiboCircleFill = getIcon$1("weibo-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-44.4 672C353.1 736 236 680.4 236 588.9c0-47.8 30.2-103.1 82.3-155.3 69.5-69.6 150.6-101.4 181.1-70.8 13.5 13.5 14.8 36.8 6.1 64.6-4.5 14 13.1 6.3 13.1 6.3 56.2-23.6 105.2-25 123.1.7 9.6 13.7 8.6 32.8-.2 55.1-4.1 10.2 1.3 11.8 9 14.1 31.7 9.8 66.9 33.6 66.9 75.5.2 69.5-99.7 156.9-249.8 156.9zm207.3-290.8a34.9 34.9 0 0 0-7.2-34.1 34.68 34.68 0 0 0-33.1-10.7 18.24 18.24 0 0 1-7.6-35.7c24.1-5.1 50.1 2.3 67.7 21.9 17.7 19.6 22.4 46.3 14.9 69.8a18.13 18.13 0 0 1-22.9 11.7 18.18 18.18 0 0 1-11.8-22.9zm106 34.3s0 .1 0 0a21.1 21.1 0 0 1-26.6 13.7 21.19 21.19 0 0 1-13.6-26.7c11-34.2 4-73.2-21.7-101.8a104.04 104.04 0 0 0-98.9-32.1 21.14 21.14 0 0 1-25.1-16.3 21.07 21.07 0 0 1 16.2-25.1c49.4-10.5 102.8 4.8 139.1 45.1 36.3 40.2 46.1 95.1 30.6 143.2zm-334.5 6.1c-91.4 9-160.7 65.1-154.7 125.2 5.9 60.1 84.8 101.5 176.2 92.5 91.4-9.1 160.7-65.1 154.7-125.3-5.9-60.1-84.8-101.5-176.2-92.4zm80.2 141.7c-18.7 42.3-72.3 64.8-117.8 50.1-43.9-14.2-62.5-57.7-43.3-96.8 18.9-38.4 68-60.1 111.5-48.8 45 11.7 68 54.2 49.6 95.5zm-93-32.2c-14.2-5.9-32.4.2-41.2 13.9-8.8 13.8-4.7 30.2 9.3 36.6 14.3 6.5 33.2.3 42-13.8 8.8-14.3 4.2-30.6-10.1-36.7zm34.9-14.5c-5.4-2.2-12.2.5-15.4 5.8-3.1 5.4-1.4 11.5 4.1 13.8 5.5 2.3 12.6-.3 15.8-5.8 3-5.6 1-11.8-4.5-13.8z"));
var WechatFill = dist.WechatFill = getIcon$1("wechat", fill, getNode(newViewBox, "M690.1 377.4c5.9 0 11.8.2 17.6.5-24.4-128.7-158.3-227.1-319.9-227.1C209 150.8 64 271.4 64 420.2c0 81.1 43.6 154.2 111.9 203.6a21.5 21.5 0 0 1 9.1 17.6c0 2.4-.5 4.6-1.1 6.9-5.5 20.3-14.2 52.8-14.6 54.3-.7 2.6-1.7 5.2-1.7 7.9 0 5.9 4.8 10.8 10.8 10.8 2.3 0 4.2-.9 6.2-2l70.9-40.9c5.3-3.1 11-5 17.2-5 3.2 0 6.4.5 9.5 1.4 33.1 9.5 68.8 14.8 105.7 14.8 6 0 11.9-.1 17.8-.4-7.1-21-10.9-43.1-10.9-66 0-135.8 132.2-245.8 295.3-245.8zm-194.3-86.5c23.8 0 43.2 19.3 43.2 43.1s-19.3 43.1-43.2 43.1c-23.8 0-43.2-19.3-43.2-43.1s19.4-43.1 43.2-43.1zm-215.9 86.2c-23.8 0-43.2-19.3-43.2-43.1s19.3-43.1 43.2-43.1 43.2 19.3 43.2 43.1-19.4 43.1-43.2 43.1zm586.8 415.6c56.9-41.2 93.2-102 93.2-169.7 0-124-120.8-224.5-269.9-224.5-149 0-269.9 100.5-269.9 224.5S540.9 847.5 690 847.5c30.8 0 60.6-4.4 88.1-12.3 2.6-.8 5.2-1.2 7.9-1.2 5.2 0 9.9 1.6 14.3 4.1l59.1 34c1.7 1 3.3 1.7 5.2 1.7a9 9 0 0 0 6.4-2.6 9 9 0 0 0 2.6-6.4c0-2.2-.9-4.4-1.4-6.6-.3-1.2-7.6-28.3-12.2-45.3-.5-1.9-.9-3.8-.9-5.7.1-5.9 3.1-11.2 7.6-14.5zM600.2 587.2c-19.9 0-36-16.1-36-35.9 0-19.8 16.1-35.9 36-35.9s36 16.1 36 35.9c0 19.8-16.2 35.9-36 35.9zm179.9 0c-19.9 0-36-16.1-36-35.9 0-19.8 16.1-35.9 36-35.9s36 16.1 36 35.9a36.08 36.08 0 0 1-36 35.9z"));
var WindowsFill = dist.WindowsFill = getIcon$1("windows", fill, getNode(newViewBox, "M523.8 191.4v288.9h382V128.1zm0 642.2l382 62.2v-352h-382zM120.1 480.2H443V201.9l-322.9 53.5zm0 290.4L443 823.2V543.8H120.1z"));
var YahooFill = dist.YahooFill = getIcon$1("yahoo", fill, getNode(newViewBox, "M937.3 231H824.7c-15.5 0-27.7 12.6-27.1 28.1l13.1 366h84.4l65.4-366.4c2.7-15.2-7.8-27.7-23.2-27.7zm-77.4 450.4h-14.1c-27.1 0-49.2 22.2-49.2 49.3v14.1c0 27.1 22.2 49.3 49.2 49.3h14.1c27.1 0 49.2-22.2 49.2-49.3v-14.1c0-27.1-22.2-49.3-49.2-49.3zM402.6 231C216.2 231 65 357 65 512.5S216.2 794 402.6 794s337.6-126 337.6-281.5S589.1 231 402.6 231zm225.2 225.2h-65.3L458.9 559.8v65.3h84.4v56.3H318.2v-56.3h84.4v-65.3L242.9 399.9h-37v-56.3h168.5v56.3h-37l93.4 93.5 28.1-28.1V400h168.8v56.2z"));
var WeiboSquareFill = dist.WeiboSquareFill = getIcon$1("weibo-square", fill, getNode(newViewBox, "M433.6 595.1c-14.2-5.9-32.4.2-41.2 13.9-8.8 13.8-4.7 30.2 9.3 36.6 14.3 6.5 33.2.3 42-13.8 8.8-14.3 4.2-30.6-10.1-36.7zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM467.6 736C353.1 736 236 680.4 236 588.9c0-47.8 30.2-103.1 82.3-155.3 69.5-69.6 150.6-101.4 181.1-70.8 13.5 13.5 14.8 36.8 6.1 64.6-4.5 14 13.1 6.3 13.1 6.3 56.2-23.6 105.2-25 123.1.7 9.6 13.7 8.6 32.8-.2 55.1-4.1 10.2 1.3 11.8 9 14.1 31.7 9.8 66.9 33.6 66.9 75.5.2 69.5-99.7 156.9-249.8 156.9zm207.3-290.8a34.9 34.9 0 0 0-7.2-34.1 34.68 34.68 0 0 0-33.1-10.7 18.24 18.24 0 0 1-7.6-35.7c24.1-5.1 50.1 2.3 67.7 21.9 17.7 19.6 22.4 46.3 14.9 69.8a18.13 18.13 0 0 1-22.9 11.7 18.18 18.18 0 0 1-11.8-22.9zm106 34.3s0 .1 0 0a21.1 21.1 0 0 1-26.6 13.7 21.19 21.19 0 0 1-13.6-26.7c11-34.2 4-73.2-21.7-101.8a104.04 104.04 0 0 0-98.9-32.1 21.14 21.14 0 0 1-25.1-16.3 21.07 21.07 0 0 1 16.2-25.1c49.4-10.5 102.8 4.8 139.1 45.1 36.3 40.2 46.1 95.1 30.6 143.2zm-334.5 6.1c-91.4 9-160.7 65.1-154.7 125.2 5.9 60.1 84.8 101.5 176.2 92.5 91.4-9.1 160.7-65.1 154.7-125.3-5.9-60.1-84.8-101.5-176.2-92.4zm80.2 141.7c-18.7 42.3-72.3 64.8-117.8 50.1-43.9-14.2-62.5-57.7-43.3-96.8 18.9-38.4 68-60.1 111.5-48.8 45 11.7 68 54.2 49.6 95.5zm-58.1-46.7c-5.4-2.2-12.2.5-15.4 5.8-3.1 5.4-1.4 11.5 4.1 13.8 5.5 2.3 12.6-.3 15.8-5.8 3-5.6 1-11.8-4.5-13.8z"));
var YuqueFill = dist.YuqueFill = getIcon$1("yuque", fill, getNode(newViewBox, "M854.6 370.6c-9.9-39.4 9.9-102.2 73.4-124.4l-67.9-3.6s-25.7-90-143.6-98c-117.9-8.1-195-3-195-3s87.4 55.6 52.4 154.7c-25.6 52.5-65.8 95.6-108.8 144.7-1.3 1.3-2.5 2.6-3.5 3.7C319.4 605 96 860 96 860c245.9 64.4 410.7-6.3 508.2-91.1 20.5-.2 35.9-.3 46.3-.3 135.8 0 250.6-117.6 245.9-248.4-3.2-89.9-31.9-110.2-41.8-149.6z"));
var YoutubeFill = dist.YoutubeFill = getIcon$1("youtube", fill, getNode(newViewBox, "M941.3 296.1a112.3 112.3 0 0 0-79.2-79.3C792.2 198 512 198 512 198s-280.2 0-350.1 18.7A112.12 112.12 0 0 0 82.7 296C64 366 64 512 64 512s0 146 18.7 215.9c10.3 38.6 40.7 69 79.2 79.3C231.8 826 512 826 512 826s280.2 0 350.1-18.8c38.6-10.3 68.9-40.7 79.2-79.3C960 658 960 512 960 512s0-146-18.7-215.9zM423 646V378l232 133-232 135z"));
var ZhihuSquareFill = dist.ZhihuSquareFill = getIcon$1("zhihu-square", fill, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM432.3 592.8l71 80.7c9.2 33-3.3 63.1-3.3 63.1l-95.7-111.9v-.1c-8.9 29-20.1 57.3-33.3 84.7-22.6 45.7-55.2 54.7-89.5 57.7-34.4 3-23.3-5.3-23.3-5.3 68-55.5 78-87.8 96.8-123.1 11.9-22.3 20.4-64.3 25.3-96.8H264.1s4.8-31.2 19.2-41.7h101.6c.6-15.3-1.3-102.8-2-131.4h-49.4c-9.2 45-41 56.7-48.1 60.1-7 3.4-23.6 7.1-21.1 0 2.6-7.1 27-46.2 43.2-110.7 16.3-64.6 63.9-62 63.9-62-12.8 22.5-22.4 73.6-22.4 73.6h159.7c10.1 0 10.6 39 10.6 39h-90.8c-.7 22.7-2.8 83.8-5 131.4H519s12.2 15.4 12.2 41.7h-110l-.1 1.5c-1.5 20.4-6.3 43.9-12.9 67.6l24.1-18.1zm335.5 116h-87.6l-69.5 46.6-16.4-46.6h-40.1V321.5h213.6v387.3zM408.2 611s0-.1 0 0zm216 94.3l56.8-38.1h45.6-.1V364.7H596.7v302.5h14.1z"));
var ZhihuCircleFill = dist.ZhihuCircleFill = getIcon$1("zhihu-circle", fill, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-90.7 477.8l-.1 1.5c-1.5 20.4-6.3 43.9-12.9 67.6l24-18.1 71 80.7c9.2 33-3.3 63.1-3.3 63.1l-95.7-111.9v-.1c-8.9 29-20.1 57.3-33.3 84.7-22.6 45.7-55.2 54.7-89.5 57.7-34.4 3-23.3-5.3-23.3-5.3 68-55.5 78-87.8 96.8-123.1 11.9-22.3 20.4-64.3 25.3-96.8H264.1s4.8-31.2 19.2-41.7h101.6c.6-15.3-1.3-102.8-2-131.4h-49.4c-9.2 45-41 56.7-48.1 60.1-7 3.4-23.6 7.1-21.1 0 2.6-7.1 27-46.2 43.2-110.7 16.3-64.6 63.9-62 63.9-62-12.8 22.5-22.4 73.6-22.4 73.6h159.7c10.1 0 10.6 39 10.6 39h-90.8c-.7 22.7-2.8 83.8-5 131.4H519s12.2 15.4 12.2 41.7H421.3zm346.5 167h-87.6l-69.5 46.6-16.4-46.6h-40.1V321.5h213.6v387.3zM408.2 611s0-.1 0 0zm216 94.3l56.8-38.1h45.6-.1V364.7H596.7v302.5h14.1z"));
var AccountBookOutline = dist.AccountBookOutline = getIcon$1("account-book", outline, getNode(newViewBox, "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v584zM639.5 414h-45c-3 0-5.8 1.7-7.1 4.4L514 563.8h-2.8l-73.4-145.4a8 8 0 0 0-7.1-4.4h-46c-1.3 0-2.7.3-3.8 1-3.9 2.1-5.3 7-3.2 10.9l89.3 164h-48.6c-4.4 0-8 3.6-8 8v21.3c0 4.4 3.6 8 8 8h65.1v33.7h-65.1c-4.4 0-8 3.6-8 8v21.3c0 4.4 3.6 8 8 8h65.1V752c0 4.4 3.6 8 8 8h41.3c4.4 0 8-3.6 8-8v-53.8h65.4c4.4 0 8-3.6 8-8v-21.3c0-4.4-3.6-8-8-8h-65.4v-33.7h65.4c4.4 0 8-3.6 8-8v-21.3c0-4.4-3.6-8-8-8h-49.1l89.3-164.1c.6-1.2 1-2.5 1-3.8.1-4.4-3.4-8-7.9-8z"));
var AlertOutline = dist.AlertOutline = getIcon$1("alert", outline, getNode(newViewBox, "M193 796c0 17.7 14.3 32 32 32h574c17.7 0 32-14.3 32-32V563c0-176.2-142.8-319-319-319S193 386.8 193 563v233zm72-233c0-136.4 110.6-247 247-247s247 110.6 247 247v193H404V585c0-5.5-4.5-10-10-10h-44c-5.5 0-10 4.5-10 10v171h-75V563zm-48.1-252.5l39.6-39.6c3.1-3.1 3.1-8.2 0-11.3l-67.9-67.9a8.03 8.03 0 0 0-11.3 0l-39.6 39.6a8.03 8.03 0 0 0 0 11.3l67.9 67.9c3.1 3.1 8.1 3.1 11.3 0zm669.6-79.2l-39.6-39.6a8.03 8.03 0 0 0-11.3 0l-67.9 67.9a8.03 8.03 0 0 0 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l67.9-67.9c3.1-3.2 3.1-8.2 0-11.3zM832 892H192c-17.7 0-32 14.3-32 32v24c0 4.4 3.6 8 8 8h688c4.4 0 8-3.6 8-8v-24c0-17.7-14.3-32-32-32zM484 180h56c4.4 0 8-3.6 8-8V76c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v96c0 4.4 3.6 8 8 8z"));
var AlipayCircleOutline = dist.AlipayCircleOutline = getIcon$1("alipay-circle", outline, getNode(newViewBox, "M308.6 545.7c-19.8 2-57.1 10.7-77.4 28.6-61 53-24.5 150 99 150 71.8 0 143.5-45.7 199.8-119-80.2-38.9-148.1-66.8-221.4-59.6zm460.5 67c100.1 33.4 154.7 43 166.7 44.8A445.9 445.9 0 0 0 960 512c0-247.4-200.6-448-448-448S64 264.6 64 512s200.6 448 448 448c155.9 0 293.2-79.7 373.5-200.5-75.6-29.8-213.6-85-286.8-120.1-69.9 85.7-160.1 137.8-253.7 137.8-158.4 0-212.1-138.1-137.2-229 16.3-19.8 44.2-38.7 87.3-49.4 67.5-16.5 175 10.3 275.7 43.4 18.1-33.3 33.4-69.9 44.7-108.9H305.1V402h160v-56.2H271.3v-31.3h193.8v-80.1s0-13.5 13.7-13.5H557v93.6h191.7v31.3H557.1V402h156.4c-15 61.1-37.7 117.4-66.2 166.8 47.5 17.1 90.1 33.3 121.8 43.9z"));
var AliwangwangOutline = dist.AliwangwangOutline = getIcon$1("aliwangwang", outline, getNode(newViewBox, "M868.2 377.4c-18.9-45.1-46.3-85.6-81.2-120.6a377.26 377.26 0 0 0-120.5-81.2A375.65 375.65 0 0 0 519 145.8c-41.9 0-82.9 6.7-121.9 20C306 123.3 200.8 120 170.6 120c-2.2 0-7.4 0-9.4.2-11.9.4-22.8 6.5-29.2 16.4-6.5 9.9-7.7 22.4-3.4 33.5l64.3 161.6a378.59 378.59 0 0 0-52.8 193.2c0 51.4 10 101 29.8 147.6 18.9 45 46.2 85.6 81.2 120.5 34.7 34.8 75.4 62.1 120.5 81.2C418.3 894 467.9 904 519 904c51.3 0 100.9-10.1 147.7-29.8 44.9-18.9 85.5-46.3 120.4-81.2 34.7-34.8 62.1-75.4 81.2-120.6a376.5 376.5 0 0 0 29.8-147.6c-.2-51.2-10.1-100.8-29.9-147.4zm-66.4 266.5a307.08 307.08 0 0 1-65.9 98c-28.4 28.5-61.3 50.7-97.7 65.9h-.1c-38 16-78.3 24.2-119.9 24.2a306.51 306.51 0 0 1-217.5-90.2c-28.4-28.5-50.6-61.4-65.8-97.8v-.1c-16-37.8-24.1-78.2-24.1-119.9 0-55.4 14.8-109.7 42.8-157l13.2-22.1-9.5-23.9L206 192c14.9.6 35.9 2.1 59.7 5.6 43.8 6.5 82.5 17.5 114.9 32.6l19 8.9 19.9-6.8c31.5-10.8 64.8-16.2 98.9-16.2a306.51 306.51 0 0 1 217.5 90.2c28.4 28.5 50.6 61.4 65.8 97.8l.1.1.1.1c16 37.6 24.1 78 24.2 119.8-.1 41.7-8.3 82-24.3 119.8zM681.1 364.2c-20.4 0-37.1 16.7-37.1 37.1v55.1c0 20.4 16.6 37.1 37.1 37.1s37.1-16.7 37.1-37.1v-55.1c0-20.5-16.7-37.1-37.1-37.1zm-175.2 0c-20.5 0-37.1 16.7-37.1 37.1v55.1c0 20.4 16.7 37.1 37.1 37.1 20.5 0 37.1-16.7 37.1-37.1v-55.1c0-20.5-16.7-37.1-37.1-37.1z"));
var AndroidOutline = dist.AndroidOutline = getIcon$1("android", outline, getNode(newViewBox, "M448.3 225.2c-18.6 0-32 13.4-32 31.9s13.5 31.9 32 31.9c18.6 0 32-13.4 32-31.9.1-18.4-13.4-31.9-32-31.9zm393.9 96.4c-13.8-13.8-32.7-21.5-53.2-21.5-3.9 0-7.4.4-10.7 1v-1h-3.6c-5.5-30.6-18.6-60.5-38.1-87.4-18.7-25.7-43-47.9-70.8-64.9l25.1-35.8v-3.3c0-.8.4-2.3.7-3.8.6-2.4 1.4-5.5 1.4-8.9 0-18.5-13.5-31.9-32-31.9-9.8 0-19.5 5.7-25.9 15.4l-29.3 42.1c-30-9.8-62.4-15-93.8-15-31.3 0-63.7 5.2-93.8 15L389 79.4c-6.6-9.6-16.1-15.4-26-15.4-18.6 0-32 13.4-32 31.9 0 6.2 2.5 12.8 6.7 17.4l22.6 32.3c-28.7 17-53.5 39.4-72.2 65.1-19.4 26.9-32 56.8-36.7 87.4h-5.5v1c-3.2-.6-6.7-1-10.7-1-20.3 0-39.2 7.5-53.1 21.3-13.8 13.8-21.5 32.6-21.5 53v235c0 20.3 7.5 39.1 21.4 52.9 13.8 13.8 32.8 21.5 53.2 21.5 3.9 0 7.4-.4 10.7-1v93.5c0 29.2 23.9 53.1 53.2 53.1H331v58.3c0 20.3 7.5 39.1 21.4 52.9 13.8 13.8 32.8 21.5 53.2 21.5 20.3 0 39.2-7.5 53.1-21.3 13.8-13.8 21.5-32.6 21.5-53v-58.2H544v58.1c0 20.3 7.5 39.1 21.4 52.9 13.8 13.8 32.8 21.5 53.2 21.5 20.4 0 39.2-7.5 53.1-21.6 13.8-13.8 21.5-32.6 21.5-53v-58.2h31.9c29.3 0 53.2-23.8 53.2-53.1v-91.4c3.2.6 6.7 1 10.7 1 20.3 0 39.2-7.5 53.1-21.3 13.8-13.8 21.5-32.6 21.5-53v-235c-.1-20.3-7.6-39-21.4-52.9zM246 609.6c0 6.8-3.9 10.6-10.7 10.6-6.8 0-10.7-3.8-10.7-10.6V374.5c0-6.8 3.9-10.6 10.7-10.6 6.8 0 10.7 3.8 10.7 10.6v235.1zm131.1-396.8c37.5-27.3 85.3-42.3 135-42.3s97.5 15.1 135 42.5c32.4 23.7 54.2 54.2 62.7 87.5H314.4c8.5-33.4 30.5-64 62.7-87.7zm39.3 674.7c-.6 5.6-4.4 8.7-10.5 8.7-6.8 0-10.7-3.8-10.7-10.6v-58.2h21.2v60.1zm202.3 8.7c-6.8 0-10.7-3.8-10.7-10.6v-58.2h21.2v60.1c-.6 5.6-4.3 8.7-10.5 8.7zm95.8-132.6H309.9V364h404.6v399.6zm85.2-154c0 6.8-3.9 10.6-10.7 10.6-6.8 0-10.7-3.8-10.7-10.6V374.5c0-6.8 3.9-10.6 10.7-10.6 6.8 0 10.7 3.8 10.7 10.6v235.1zM576.1 225.2c-18.6 0-32 13.4-32 31.9s13.5 31.9 32 31.9c18.6 0 32.1-13.4 32.1-32-.1-18.6-13.4-31.8-32.1-31.8z"));
var ApiOutline = dist.ApiOutline = getIcon$1("api", outline, getNode(newViewBox, "M917.7 148.8l-42.4-42.4c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-76.1 76.1a199.27 199.27 0 0 0-112.1-34.3c-51.2 0-102.4 19.5-141.5 58.6L432.3 308.7a8.03 8.03 0 0 0 0 11.3L704 591.7c1.6 1.6 3.6 2.3 5.7 2.3 2 0 4.1-.8 5.7-2.3l101.9-101.9c68.9-69 77-175.7 24.3-253.5l76.1-76.1c3.1-3.2 3.1-8.3 0-11.4zM769.1 441.7l-59.4 59.4-186.8-186.8 59.4-59.4c24.9-24.9 58.1-38.7 93.4-38.7 35.3 0 68.4 13.7 93.4 38.7 24.9 24.9 38.7 58.1 38.7 93.4 0 35.3-13.8 68.4-38.7 93.4zm-190.2 105a8.03 8.03 0 0 0-11.3 0L501 613.3 410.7 523l66.7-66.7c3.1-3.1 3.1-8.2 0-11.3L441 408.6a8.03 8.03 0 0 0-11.3 0L363 475.3l-43-43a7.85 7.85 0 0 0-5.7-2.3c-2 0-4.1.8-5.7 2.3L206.8 534.2c-68.9 69-77 175.7-24.3 253.5l-76.1 76.1a8.03 8.03 0 0 0 0 11.3l42.4 42.4c1.6 1.6 3.6 2.3 5.7 2.3s4.1-.8 5.7-2.3l76.1-76.1c33.7 22.9 72.9 34.3 112.1 34.3 51.2 0 102.4-19.5 141.5-58.6l101.9-101.9c3.1-3.1 3.1-8.2 0-11.3l-43-43 66.7-66.7c3.1-3.1 3.1-8.2 0-11.3l-36.6-36.2zM441.7 769.1a131.32 131.32 0 0 1-93.4 38.7c-35.3 0-68.4-13.7-93.4-38.7a131.32 131.32 0 0 1-38.7-93.4c0-35.3 13.7-68.4 38.7-93.4l59.4-59.4 186.8 186.8-59.4 59.4z"));
var AppstoreOutline = dist.AppstoreOutline = getIcon$1("appstore", outline, getNode(newViewBox, "M464 144H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm-52 268H212V212h200v200zm452-268H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm-52 268H612V212h200v200zM464 544H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16zm-52 268H212V612h200v200zm452-268H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16zm-52 268H612V612h200v200z"));
var AudioOutline = dist.AudioOutline = getIcon$1("audio", outline, getNode(newViewBox, "M842 454c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 140.3-113.7 254-254 254S258 594.3 258 454c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 168.7 126.6 307.9 290 327.6V884H326.7c-13.7 0-24.7 14.3-24.7 32v36c0 4.4 2.8 8 6.2 8h407.6c3.4 0 6.2-3.6 6.2-8v-36c0-17.7-11-32-24.7-32H548V782.1c165.3-18 294-158 294-328.1zM512 624c93.9 0 170-75.2 170-168V232c0-92.8-76.1-168-170-168s-170 75.2-170 168v224c0 92.8 76.1 168 170 168zm-94-392c0-50.6 41.9-92 94-92s94 41.4 94 92v224c0 50.6-41.9 92-94 92s-94-41.4-94-92V232z"));
var AppleOutline = dist.AppleOutline = getIcon$1("apple", outline, getNode(newViewBox, "M747.4 535.7c-.4-68.2 30.5-119.6 92.9-157.5-34.9-50-87.7-77.5-157.3-82.8-65.9-5.2-138 38.4-164.4 38.4-27.9 0-91.7-36.6-141.9-36.6C273.1 298.8 163 379.8 163 544.6c0 48.7 8.9 99 26.7 150.8 23.8 68.2 109.6 235.3 199.1 232.6 46.8-1.1 79.9-33.2 140.8-33.2 59.1 0 89.7 33.2 141.9 33.2 90.3-1.3 167.9-153.2 190.5-221.6-121.1-57.1-114.6-167.2-114.6-170.7zm-10.6 267c-14.3 19.9-28.7 35.6-41.9 45.7-10.5 8-18.6 11.4-24 11.6-9-.1-17.7-2.3-34.7-8.8-1.2-.5-2.5-1-4.2-1.6l-4.4-1.7c-17.4-6.7-27.8-10.3-41.1-13.8-18.6-4.8-37.1-7.4-56.9-7.4-20.2 0-39.2 2.5-58.1 7.2-13.9 3.5-25.6 7.4-42.7 13.8-.7.3-8.1 3.1-10.2 3.9-3.5 1.3-6.2 2.3-8.7 3.2-10.4 3.6-17 5.1-22.9 5.2-.7 0-1.3-.1-1.8-.2-1.1-.2-2.5-.6-4.1-1.3-4.5-1.8-9.9-5.1-16-9.8-14-10.9-29.4-28-45.1-49.9-27.5-38.6-53.5-89.8-66-125.7-15.4-44.8-23-87.7-23-128.6 0-60.2 17.8-106 48.4-137.1 26.3-26.6 61.7-41.5 97.8-42.3 5.9.1 14.5 1.5 25.4 4.5 8.6 2.3 18 5.4 30.7 9.9 3.8 1.4 16.9 6.1 18.5 6.7 7.7 2.8 13.5 4.8 19.2 6.6 18.2 5.8 32.3 9 47.6 9 15.5 0 28.8-3.3 47.7-9.8 7.1-2.4 32.9-12 37.5-13.6 25.6-9.1 44.5-14 60.8-15.2 4.8-.4 9.1-.4 13.2-.1 22.7 1.8 42.1 6.3 58.6 13.8-37.6 43.4-57 96.5-56.9 158.4-.3 14.7.9 31.7 5.1 51.8 6.4 30.5 18.6 60.7 37.9 89 14.7 21.5 32.9 40.9 54.7 57.8-11.5 23.7-25.6 48.2-40.4 68.8zm-94.5-572c50.7-60.2 46.1-115 44.6-134.7-44.8 2.6-96.6 30.5-126.1 64.8-32.5 36.8-51.6 82.3-47.5 133.6 48.4 3.7 92.6-21.2 129-63.7z"));
var BackwardOutline = dist.BackwardOutline = getIcon$1("backward", outline, getNode(normalViewBox, "M485.6 249.9L198.2 498c-8.3 7.1-8.3 20.8 0 27.9l287.4 248.2c10.7 9.2 26.4.9 26.4-14V263.8c0-14.8-15.7-23.2-26.4-13.9zm320 0L518.2 498a18.6 18.6 0 0 0-6.2 14c0 5.2 2.1 10.4 6.2 14l287.4 248.2c10.7 9.2 26.4.9 26.4-14V263.8c0-14.8-15.7-23.2-26.4-13.9z"));
var BankOutline = dist.BankOutline = getIcon$1("bank", outline, getNode(newViewBox, "M894 462c30.9 0 43.8-39.7 18.7-58L530.8 126.2a31.81 31.81 0 0 0-37.6 0L111.3 404c-25.1 18.2-12.2 58 18.8 58H192v374h-72c-4.4 0-8 3.6-8 8v52c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-52c0-4.4-3.6-8-8-8h-72V462h62zM512 196.7l271.1 197.2H240.9L512 196.7zM264 462h117v374H264V462zm189 0h117v374H453V462zm307 374H642V462h118v374z"));
var BellOutline = dist.BellOutline = getIcon$1("bell", outline, getNode(newViewBox, "M816 768h-24V428c0-141.1-104.3-257.7-240-277.1V112c0-22.1-17.9-40-40-40s-40 17.9-40 40v38.9c-135.7 19.4-240 136-240 277.1v340h-24c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h216c0 61.8 50.2 112 112 112s112-50.2 112-112h216c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM512 888c-26.5 0-48-21.5-48-48h96c0 26.5-21.5 48-48 48zM304 768V428c0-55.6 21.6-107.8 60.9-147.1S456.4 220 512 220c55.6 0 107.8 21.6 147.1 60.9S720 372.4 720 428v340H304z"));
var BehanceSquareOutline = dist.BehanceSquareOutline = getIcon$1("behance-square", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM598.5 350.9h138.4v33.7H598.5v-33.7zM512 628.8a89.52 89.52 0 0 1-27 31c-11.8 8.2-24.9 14.2-38.8 17.7a167.4 167.4 0 0 1-44.6 5.7H236V342.1h161c16.3 0 31.1 1.5 44.6 4.3 13.4 2.8 24.8 7.6 34.4 14.1 9.5 6.5 17 15.2 22.3 26 5.2 10.7 7.9 24.1 7.9 40 0 17.2-3.9 31.4-11.7 42.9-7.9 11.5-19.3 20.8-34.8 28.1 21.1 6 36.6 16.7 46.8 31.7 10.4 15.2 15.5 33.4 15.5 54.8 0 17.4-3.3 32.3-10 44.8zM790.8 576H612.4c0 19.4 6.7 38 16.8 48 10.2 9.9 24.8 14.9 43.9 14.9 13.8 0 25.5-3.5 35.5-10.4 9.9-6.9 15.9-14.2 18.1-21.8h59.8c-9.6 29.7-24.2 50.9-44 63.7-19.6 12.8-43.6 19.2-71.5 19.2-19.5 0-37-3.2-52.7-9.3-15.1-5.9-28.7-14.9-39.9-26.5a121.2 121.2 0 0 1-25.1-41.2c-6.1-16.9-9.1-34.7-8.9-52.6 0-18.5 3.1-35.7 9.1-51.7 11.5-31.1 35.4-56 65.9-68.9 16.3-6.8 33.8-10.2 51.5-10 21 0 39.2 4 55 12.2a111.6 111.6 0 0 1 38.6 32.8c10.1 13.7 17.2 29.3 21.7 46.9 4.3 17.3 5.8 35.5 4.6 54.7zm-122-95.6c-10.8 0-19.9 1.9-26.9 5.6-7 3.7-12.8 8.3-17.2 13.6a48.4 48.4 0 0 0-9.1 17.4c-1.6 5.3-2.7 10.7-3.1 16.2H723c-1.6-17.3-7.6-30.1-15.6-39.1-8.4-8.9-21.9-13.7-38.6-13.7zm-248.5-10.1c8.7-6.3 12.9-16.7 12.9-31 .3-6.8-1.1-13.5-4.1-19.6-2.7-4.9-6.7-9-11.6-11.9a44.8 44.8 0 0 0-16.6-6c-6.4-1.2-12.9-1.8-19.3-1.7h-70.3v79.7h76.1c13.1.1 24.2-3.1 32.9-9.5zm11.8 72c-9.8-7.5-22.9-11.2-39.2-11.2h-81.8v94h80.2c7.5 0 14.4-.7 21.1-2.1s12.7-3.8 17.8-7.2c5.1-3.3 9.2-7.8 12.3-13.6 3-5.8 4.5-13.2 4.5-22.1 0-17.7-5-30.2-14.9-37.8z"));
var BookOutline = dist.BookOutline = getIcon$1("book", outline, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-260 72h96v209.9L621.5 312 572 347.4V136zm220 752H232V136h280v296.9c0 3.3 1 6.6 3 9.3a15.9 15.9 0 0 0 22.3 3.7l83.8-59.9 81.4 59.4c2.7 2 6 3.1 9.4 3.1 8.8 0 16-7.2 16-16V136h64v752z"));
var BoxPlotOutline = dist.BoxPlotOutline = getIcon$1("box-plot", outline, getNode(newViewBox, "M952 224h-52c-4.4 0-8 3.6-8 8v248h-92V304c0-4.4-3.6-8-8-8H232c-4.4 0-8 3.6-8 8v176h-92V232c0-4.4-3.6-8-8-8H72c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V548h92v172c0 4.4 3.6 8 8 8h560c4.4 0 8-3.6 8-8V548h92v244c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V232c0-4.4-3.6-8-8-8zM296 368h88v288h-88V368zm432 288H448V368h280v288z"));
var BulbOutline = dist.BulbOutline = getIcon$1("bulb", outline, getNode(newViewBox, "M632 888H392c-4.4 0-8 3.6-8 8v32c0 17.7 14.3 32 32 32h192c17.7 0 32-14.3 32-32v-32c0-4.4-3.6-8-8-8zM512 64c-181.1 0-328 146.9-328 328 0 121.4 66 227.4 164 284.1V792c0 17.7 14.3 32 32 32h264c17.7 0 32-14.3 32-32V676.1c98-56.7 164-162.7 164-284.1 0-181.1-146.9-328-328-328zm127.9 549.8L604 634.6V752H420V634.6l-35.9-20.8C305.4 568.3 256 484.5 256 392c0-141.4 114.6-256 256-256s256 114.6 256 256c0 92.5-49.4 176.3-128.1 221.8z"));
var BugOutline = dist.BugOutline = getIcon$1("bug", outline, getNode(newViewBox, "M304 280h56c4.4 0 8-3.6 8-8 0-28.3 5.9-53.2 17.1-73.5 10.6-19.4 26-34.8 45.4-45.4C450.9 142 475.7 136 504 136h16c28.3 0 53.2 5.9 73.5 17.1 19.4 10.6 34.8 26 45.4 45.4C650 218.9 656 243.7 656 272c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-40-8.8-76.7-25.9-108.1a184.31 184.31 0 0 0-74-74C596.7 72.8 560 64 520 64h-16c-40 0-76.7 8.8-108.1 25.9a184.31 184.31 0 0 0-74 74C304.8 195.3 296 232 296 272c0 4.4 3.6 8 8 8z", "M940 512H792V412c76.8 0 139-62.2 139-139 0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8a63 63 0 0 1-63 63H232a63 63 0 0 1-63-63c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 76.8 62.2 139 139 139v100H84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h148v96c0 6.5.2 13 .7 19.3C164.1 728.6 116 796.7 116 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-44.2 23.9-82.9 59.6-103.7a273 273 0 0 0 22.7 49c24.3 41.5 59 76.2 100.5 100.5S460.5 960 512 960s99.8-13.9 141.3-38.2a281.38 281.38 0 0 0 123.2-149.5A120 120 0 0 1 836 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-79.3-48.1-147.4-116.7-176.7.4-6.4.7-12.8.7-19.3v-96h148c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM716 680c0 36.8-9.7 72-27.8 102.9-17.7 30.3-43 55.6-73.3 73.3C584 874.3 548.8 884 512 884s-72-9.7-102.9-27.8c-30.3-17.7-55.6-43-73.3-73.3A202.75 202.75 0 0 1 308 680V412h408v268z"));
var CalculatorOutline = dist.CalculatorOutline = getIcon$1("calculator", outline, getNode(newViewBox, "M251.2 387H320v68.8c0 1.8 1.8 3.2 4 3.2h48c2.2 0 4-1.4 4-3.3V387h68.8c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H376v-68.8c0-1.8-1.8-3.2-4-3.2h-48c-2.2 0-4 1.4-4 3.2V331h-68.8c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4zm328 0h193.6c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H579.2c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4zm0 265h193.6c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H579.2c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4zm0 104h193.6c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H579.2c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4zm-195.7-81l61.2-74.9c4.3-5.2.7-13.1-5.9-13.1H388c-2.3 0-4.5 1-5.9 2.9l-34 41.6-34-41.6a7.85 7.85 0 0 0-5.9-2.9h-50.9c-6.6 0-10.2 7.9-5.9 13.1l61.2 74.9-62.7 76.8c-4.4 5.2-.8 13.1 5.8 13.1h50.8c2.3 0 4.5-1 5.9-2.9l35.5-43.5 35.5 43.5c1.5 1.8 3.7 2.9 5.9 2.9h50.8c6.6 0 10.2-7.9 5.9-13.1L383.5 675zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-36 732H180V180h664v664z"));
var BuildOutline = dist.BuildOutline = getIcon$1("build", outline, getNode(newViewBox, "M916 210H376c-17.7 0-32 14.3-32 32v236H108c-17.7 0-32 14.3-32 32v272c0 17.7 14.3 32 32 32h540c17.7 0 32-14.3 32-32V546h236c17.7 0 32-14.3 32-32V242c0-17.7-14.3-32-32-32zm-504 68h200v200H412V278zm-68 468H144V546h200v200zm268 0H412V546h200v200zm268-268H680V278h200v200z"));
var CalendarOutline = dist.CalendarOutline = getIcon$1("calendar", outline, getNode(newViewBox, "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"));
var CameraOutline = dist.CameraOutline = getIcon$1("camera", outline, getNode(newViewBox, "M864 248H728l-32.4-90.8a32.07 32.07 0 0 0-30.2-21.2H358.6c-13.5 0-25.6 8.5-30.1 21.2L296 248H160c-44.2 0-80 35.8-80 80v456c0 44.2 35.8 80 80 80h704c44.2 0 80-35.8 80-80V328c0-44.2-35.8-80-80-80zm8 536c0 4.4-3.6 8-8 8H160c-4.4 0-8-3.6-8-8V328c0-4.4 3.6-8 8-8h186.7l17.1-47.8 22.9-64.2h250.5l22.9 64.2 17.1 47.8H864c4.4 0 8 3.6 8 8v456zM512 384c-88.4 0-160 71.6-160 160s71.6 160 160 160 160-71.6 160-160-71.6-160-160-160zm0 256c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z"));
var CarOutline = dist.CarOutline = getIcon$1("car", outline, getNode(newViewBox, "M380 704h264c4.4 0 8-3.6 8-8v-84c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v36H428v-36c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v84c0 4.4 3.6 8 8 8zm340-123a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm239-167.6L935.3 372a8 8 0 0 0-10.9-2.9l-50.7 29.6-78.3-216.2a63.9 63.9 0 0 0-60.9-44.4H301.2c-34.7 0-65.5 22.4-76.2 55.5l-74.6 205.2-50.8-29.6a8 8 0 0 0-10.9 2.9L65 413.4c-2.2 3.8-.9 8.6 2.9 10.8l60.4 35.2-14.5 40c-1.2 3.2-1.8 6.6-1.8 10v348.2c0 15.7 11.8 28.4 26.3 28.4h67.6c12.3 0 23-9.3 25.6-22.3l7.7-37.7h545.6l7.7 37.7c2.7 13 13.3 22.3 25.6 22.3h67.6c14.5 0 26.3-12.7 26.3-28.4V509.4c0-3.4-.6-6.8-1.8-10l-14.5-40 60.3-35.2a8 8 0 0 0 3-10.8zM840 517v237H184V517l15.6-43h624.8l15.6 43zM292.7 218.1l.5-1.3.4-1.3c1.1-3.3 4.1-5.5 7.6-5.5h427.6l75.4 208H220l72.7-199.9zM224 581a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var CaretDownOutline = dist.CaretDownOutline = getIcon$1("caret-down", outline, getNode(normalViewBox, "M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"));
var CaretLeftOutline = dist.CaretLeftOutline = getIcon$1("caret-left", outline, getNode(normalViewBox, "M689 165.1L308.2 493.5c-10.9 9.4-10.9 27.5 0 37L689 858.9c14.2 12.2 35 1.2 35-18.5V183.6c0-19.7-20.8-30.7-35-18.5z"));
var CaretRightOutline = dist.CaretRightOutline = getIcon$1("caret-right", outline, getNode(normalViewBox, "M715.8 493.5L335 165.1c-14.2-12.2-35-1.2-35 18.5v656.8c0 19.7 20.8 30.7 35 18.5l380.8-328.4c10.9-9.4 10.9-27.6 0-37z"));
var CarryOutOutline = dist.CarryOutOutline = getIcon$1("carry-out", outline, getNode(newViewBox, "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v584zM688 420h-55.2c-5.1 0-10 2.5-13 6.6L468.9 634.4l-64.7-89c-3-4.1-7.8-6.6-13-6.6H336c-6.5 0-10.3 7.4-6.5 12.7l126.4 174a16.1 16.1 0 0 0 26 0l212.6-292.7c3.8-5.4 0-12.8-6.5-12.8z"));
var CheckCircleOutline = dist.CheckCircleOutline = getIcon$1("check-circle", outline, getNode(newViewBox, "M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0 0 51.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z", "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var CaretUpOutline = dist.CaretUpOutline = getIcon$1("caret-up", outline, getNode(normalViewBox, "M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z"));
var CheckSquareOutline = dist.CheckSquareOutline = getIcon$1("check-square", outline, getNode(newViewBox, "M433.1 657.7a31.8 31.8 0 0 0 51.7 0l210.6-292c3.8-5.3 0-12.7-6.5-12.7H642c-10.2 0-19.9 4.9-25.9 13.3L459 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H315c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var ChromeOutline = dist.ChromeOutline = getIcon$1("chrome", outline, getNode(newViewBox, "M928 512.3v-.3c0-229.8-186.2-416-416-416S96 282.2 96 512v.4c0 229.8 186.2 416 416 416s416-186.2 416-416v-.3.2zm-6.7-74.6l.6 3.3-.6-3.3zM676.7 638.2c53.5-82.2 52.5-189.4-11.1-263.7l162.4-8.4c20.5 44.4 32 93.8 32 145.9 0 185.2-144.6 336.6-327.1 347.4l143.8-221.2zM512 652.3c-77.5 0-140.2-62.7-140.2-140.2 0-77.7 62.7-140.2 140.2-140.2S652.2 434.5 652.2 512 589.5 652.3 512 652.3zm369.2-331.7l-3-5.7 3 5.7zM512 164c121.3 0 228.2 62.1 290.4 156.2l-263.6-13.9c-97.5-5.7-190.2 49.2-222.3 141.1L227.8 311c63.1-88.9 166.9-147 284.2-147zM102.5 585.8c26 145 127.1 264 261.6 315.1C229.6 850 128.5 731 102.5 585.8zM164 512c0-55.9 13.2-108.7 36.6-155.5l119.7 235.4c44.1 86.7 137.4 139.7 234 121.6l-74 145.1C302.9 842.5 164 693.5 164 512zm324.7 415.4c4 .2 8 .4 12 .5-4-.2-8-.3-12-.5z"));
var ClockCircleOutline = dist.ClockCircleOutline = getIcon$1("clock-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z", "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z"));
var CloseCircleOutline = dist.CloseCircleOutline = getIcon$1("close-circle", outline, getNode(newViewBox, "M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 0 0-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z", "M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var CloudOutline = dist.CloudOutline = getIcon$1("cloud", outline, getNode(newViewBox, "M811.4 418.7C765.6 297.9 648.9 212 512.2 212S258.8 297.8 213 418.6C127.3 441.1 64 519.1 64 612c0 110.5 89.5 200 199.9 200h496.2C870.5 812 960 722.5 960 612c0-92.7-63.1-170.7-148.6-193.3zm36.3 281a123.07 123.07 0 0 1-87.6 36.3H263.9c-33.1 0-64.2-12.9-87.6-36.3A123.3 123.3 0 0 1 140 612c0-28 9.1-54.3 26.2-76.3a125.7 125.7 0 0 1 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0 1 52.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10c54.3 14.5 92.1 63.8 92.1 120 0 33.1-12.9 64.3-36.3 87.7z"));
var CloseSquareOutline = dist.CloseSquareOutline = getIcon$1("close-square", outline, getNode(newViewBox, "M354 671h58.9c4.7 0 9.2-2.1 12.3-5.7L512 561.8l86.8 103.5c3 3.6 7.5 5.7 12.3 5.7H670c6.8 0 10.5-7.9 6.1-13.1L553.8 512l122.4-145.9c4.4-5.2.7-13.1-6.1-13.1h-58.9c-4.7 0-9.2 2.1-12.3 5.7L512 462.2l-86.8-103.5c-3-3.6-7.5-5.7-12.3-5.7H354c-6.8 0-10.5 7.9-6.1 13.1L470.2 512 347.9 657.9A7.95 7.95 0 0 0 354 671z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var CodeOutline = dist.CodeOutline = getIcon$1("code", outline, getNode(newViewBox, "M516 673c0 4.4 3.4 8 7.5 8h185c4.1 0 7.5-3.6 7.5-8v-48c0-4.4-3.4-8-7.5-8h-185c-4.1 0-7.5 3.6-7.5 8v48zm-194.9 6.1l192-161c3.8-3.2 3.8-9.1 0-12.3l-192-160.9A7.95 7.95 0 0 0 308 351v62.7c0 2.4 1 4.6 2.9 6.1L420.7 512l-109.8 92.2a8.1 8.1 0 0 0-2.9 6.1V673c0 6.8 7.9 10.5 13.1 6.1zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var CodepenCircleOutline = dist.CodepenCircleOutline = getIcon$1("codepen-circle", outline, getNode(newViewBox, "M488.1 414.7V303.4L300.9 428l83.6 55.8zm254.1 137.7v-79.8l-59.8 39.9zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm278 533c0 1.1-.1 2.1-.2 3.1 0 .4-.1.7-.2 1a14.16 14.16 0 0 1-.8 3.2c-.2.6-.4 1.2-.6 1.7-.2.4-.4.8-.5 1.2-.3.5-.5 1.1-.8 1.6-.2.4-.4.7-.7 1.1-.3.5-.7 1-1 1.5-.3.4-.5.7-.8 1-.4.4-.8.9-1.2 1.3-.3.3-.6.6-1 .9-.4.4-.9.8-1.4 1.1-.4.3-.7.6-1.1.8-.1.1-.3.2-.4.3L525.2 786c-4 2.7-8.6 4-13.2 4-4.7 0-9.3-1.4-13.3-4L244.6 616.9c-.1-.1-.3-.2-.4-.3l-1.1-.8c-.5-.4-.9-.7-1.3-1.1-.3-.3-.6-.6-1-.9-.4-.4-.8-.8-1.2-1.3a7 7 0 0 1-.8-1c-.4-.5-.7-1-1-1.5-.2-.4-.5-.7-.7-1.1-.3-.5-.6-1.1-.8-1.6-.2-.4-.4-.8-.5-1.2-.2-.6-.4-1.2-.6-1.7-.1-.4-.3-.8-.4-1.2-.2-.7-.3-1.3-.4-2-.1-.3-.1-.7-.2-1-.1-1-.2-2.1-.2-3.1V427.9c0-1 .1-2.1.2-3.1.1-.3.1-.7.2-1a14.16 14.16 0 0 1 .8-3.2c.2-.6.4-1.2.6-1.7.2-.4.4-.8.5-1.2.2-.5.5-1.1.8-1.6.2-.4.4-.7.7-1.1.6-.9 1.2-1.7 1.8-2.5.4-.4.8-.9 1.2-1.3.3-.3.6-.6 1-.9.4-.4.9-.8 1.3-1.1.4-.3.7-.6 1.1-.8.1-.1.3-.2.4-.3L498.7 239c8-5.3 18.5-5.3 26.5 0l254.1 169.1c.1.1.3.2.4.3l1.1.8 1.4 1.1c.3.3.6.6 1 .9.4.4.8.8 1.2 1.3.7.8 1.3 1.6 1.8 2.5.2.4.5.7.7 1.1.3.5.6 1 .8 1.6.2.4.4.8.5 1.2.2.6.4 1.2.6 1.7.1.4.3.8.4 1.2.2.7.3 1.3.4 2 .1.3.1.7.2 1 .1 1 .2 2.1.2 3.1V597zm-254.1 13.3v111.3L723.1 597l-83.6-55.8zM281.8 472.6v79.8l59.8-39.9zM512 456.1l-84.5 56.4 84.5 56.4 84.5-56.4zM723.1 428L535.9 303.4v111.3l103.6 69.1zM384.5 541.2L300.9 597l187.2 124.6V610.3l-103.6-69.1z"));
var CompassOutline = dist.CompassOutline = getIcon$1("compass", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm198.4-588.1a32 32 0 0 0-24.5.5L414.9 415 296.4 686c-3.6 8.2-3.6 17.5 0 25.7 3.4 7.8 9.7 13.9 17.7 17 3.8 1.5 7.7 2.2 11.7 2.2 4.4 0 8.7-.9 12.8-2.7l271-118.6 118.5-271a32.06 32.06 0 0 0-17.7-42.7zM576.8 534.4l26.2 26.2-42.4 42.4-26.2-26.2L380 644.4 447.5 490 422 464.4l42.4-42.4 25.5 25.5L644.4 380l-67.6 154.4zM464.4 422L422 464.4l25.5 25.6 86.9 86.8 26.2 26.2 42.4-42.4-26.2-26.2-86.8-86.9z"));
var ContactsOutline = dist.ContactsOutline = getIcon$1("contacts", outline, getNode(newViewBox, "M594.3 601.5a111.8 111.8 0 0 0 29.1-75.5c0-61.9-49.9-112-111.4-112s-111.4 50.1-111.4 112c0 29.1 11 55.5 29.1 75.5a158.09 158.09 0 0 0-74.6 126.1 8 8 0 0 0 8 8.4H407c4.2 0 7.6-3.3 7.9-7.5 3.8-50.6 46-90.5 97.2-90.5s93.4 40 97.2 90.5c.3 4.2 3.7 7.5 7.9 7.5H661a8 8 0 0 0 8-8.4c-2.8-53.3-32-99.7-74.7-126.1zM512 578c-28.5 0-51.7-23.3-51.7-52s23.2-52 51.7-52 51.7 23.3 51.7 52-23.2 52-51.7 52zm416-354H768v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H548v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H328v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H96c-17.7 0-32 14.3-32 32v576c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32zm-40 568H136V296h120v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h120v496z"));
var ContainerOutline = dist.ContainerOutline = getIcon$1("container", outline, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-40 824H232V687h97.9c11.6 32.8 32 62.3 59.1 84.7 34.5 28.5 78.2 44.3 123 44.3s88.5-15.7 123-44.3c27.1-22.4 47.5-51.9 59.1-84.7H792v-63H643.6l-5.2 24.7C626.4 708.5 573.2 752 512 752s-114.4-43.5-126.5-103.3l-5.2-24.7H232V136h560v752zM320 341h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm0 160h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"));
var ControlOutline = dist.ControlOutline = getIcon$1("control", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656zM340 683v77c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-77c-10.1 3.3-20.8 5-32 5s-21.9-1.8-32-5zm64-198V264c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v221c10.1-3.3 20.8-5 32-5s21.9 1.8 32 5zm-64 198c10.1 3.3 20.8 5 32 5s21.9-1.8 32-5c41.8-13.5 72-52.7 72-99s-30.2-85.5-72-99c-10.1-3.3-20.8-5-32-5s-21.9 1.8-32 5c-41.8 13.5-72 52.7-72 99s30.2 85.5 72 99zm.1-115.7c.3-.6.7-1.2 1-1.8v-.1l1.2-1.8c.1-.2.2-.3.3-.5.3-.5.7-.9 1-1.4.1-.1.2-.3.3-.4.5-.6.9-1.1 1.4-1.6l.3-.3 1.2-1.2.4-.4c.5-.5 1-.9 1.6-1.4.6-.5 1.1-.9 1.7-1.3.2-.1.3-.2.5-.3.5-.3.9-.7 1.4-1 .1-.1.3-.2.4-.3.6-.4 1.2-.7 1.9-1.1.1-.1.3-.1.4-.2.5-.3 1-.5 1.6-.8l.6-.3c.7-.3 1.3-.6 2-.8.7-.3 1.4-.5 2.1-.7.2-.1.4-.1.6-.2.6-.2 1.1-.3 1.7-.4.2 0 .3-.1.5-.1.7-.2 1.5-.3 2.2-.4.2 0 .3 0 .5-.1.6-.1 1.2-.1 1.8-.2h.6c.8 0 1.5-.1 2.3-.1s1.5 0 2.3.1h.6c.6 0 1.2.1 1.8.2.2 0 .3 0 .5.1.7.1 1.5.2 2.2.4.2 0 .3.1.5.1.6.1 1.2.3 1.7.4.2.1.4.1.6.2.7.2 1.4.4 2.1.7.7.2 1.3.5 2 .8l.6.3c.5.2 1.1.5 1.6.8.1.1.3.1.4.2.6.3 1.3.7 1.9 1.1.1.1.3.2.4.3.5.3 1 .6 1.4 1 .2.1.3.2.5.3.6.4 1.2.9 1.7 1.3s1.1.9 1.6 1.4l.4.4 1.2 1.2.3.3c.5.5 1 1.1 1.4 1.6.1.1.2.3.3.4.4.4.7.9 1 1.4.1.2.2.3.3.5l1.2 1.8s0 .1.1.1a36.18 36.18 0 0 1 5.1 18.5c0 6-1.5 11.7-4.1 16.7-.3.6-.7 1.2-1 1.8 0 0 0 .1-.1.1l-1.2 1.8c-.1.2-.2.3-.3.5-.3.5-.7.9-1 1.4-.1.1-.2.3-.3.4-.5.6-.9 1.1-1.4 1.6l-.3.3-1.2 1.2-.4.4c-.5.5-1 .9-1.6 1.4-.6.5-1.1.9-1.7 1.3-.2.1-.3.2-.5.3-.5.3-.9.7-1.4 1-.1.1-.3.2-.4.3-.6.4-1.2.7-1.9 1.1-.1.1-.3.1-.4.2-.5.3-1 .5-1.6.8l-.6.3c-.7.3-1.3.6-2 .8-.7.3-1.4.5-2.1.7-.2.1-.4.1-.6.2-.6.2-1.1.3-1.7.4-.2 0-.3.1-.5.1-.7.2-1.5.3-2.2.4-.2 0-.3 0-.5.1-.6.1-1.2.1-1.8.2h-.6c-.8 0-1.5.1-2.3.1s-1.5 0-2.3-.1h-.6c-.6 0-1.2-.1-1.8-.2-.2 0-.3 0-.5-.1-.7-.1-1.5-.2-2.2-.4-.2 0-.3-.1-.5-.1-.6-.1-1.2-.3-1.7-.4-.2-.1-.4-.1-.6-.2-.7-.2-1.4-.4-2.1-.7-.7-.2-1.3-.5-2-.8l-.6-.3c-.5-.2-1.1-.5-1.6-.8-.1-.1-.3-.1-.4-.2-.6-.3-1.3-.7-1.9-1.1-.1-.1-.3-.2-.4-.3-.5-.3-1-.6-1.4-1-.2-.1-.3-.2-.5-.3-.6-.4-1.2-.9-1.7-1.3s-1.1-.9-1.6-1.4l-.4-.4-1.2-1.2-.3-.3c-.5-.5-1-1.1-1.4-1.6-.1-.1-.2-.3-.3-.4-.4-.4-.7-.9-1-1.4-.1-.2-.2-.3-.3-.5l-1.2-1.8v-.1c-.4-.6-.7-1.2-1-1.8-2.6-5-4.1-10.7-4.1-16.7s1.5-11.7 4.1-16.7zM620 539v221c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V539c-10.1 3.3-20.8 5-32 5s-21.9-1.8-32-5zm64-198v-77c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v77c10.1-3.3 20.8-5 32-5s21.9 1.8 32 5zm-64 198c10.1 3.3 20.8 5 32 5s21.9-1.8 32-5c41.8-13.5 72-52.7 72-99s-30.2-85.5-72-99c-10.1-3.3-20.8-5-32-5s-21.9 1.8-32 5c-41.8 13.5-72 52.7-72 99s30.2 85.5 72 99zm.1-115.7c.3-.6.7-1.2 1-1.8v-.1l1.2-1.8c.1-.2.2-.3.3-.5.3-.5.7-.9 1-1.4.1-.1.2-.3.3-.4.5-.6.9-1.1 1.4-1.6l.3-.3 1.2-1.2.4-.4c.5-.5 1-.9 1.6-1.4.6-.5 1.1-.9 1.7-1.3.2-.1.3-.2.5-.3.5-.3.9-.7 1.4-1 .1-.1.3-.2.4-.3.6-.4 1.2-.7 1.9-1.1.1-.1.3-.1.4-.2.5-.3 1-.5 1.6-.8l.6-.3c.7-.3 1.3-.6 2-.8.7-.3 1.4-.5 2.1-.7.2-.1.4-.1.6-.2.6-.2 1.1-.3 1.7-.4.2 0 .3-.1.5-.1.7-.2 1.5-.3 2.2-.4.2 0 .3 0 .5-.1.6-.1 1.2-.1 1.8-.2h.6c.8 0 1.5-.1 2.3-.1s1.5 0 2.3.1h.6c.6 0 1.2.1 1.8.2.2 0 .3 0 .5.1.7.1 1.5.2 2.2.4.2 0 .3.1.5.1.6.1 1.2.3 1.7.4.2.1.4.1.6.2.7.2 1.4.4 2.1.7.7.2 1.3.5 2 .8l.6.3c.5.2 1.1.5 1.6.8.1.1.3.1.4.2.6.3 1.3.7 1.9 1.1.1.1.3.2.4.3.5.3 1 .6 1.4 1 .2.1.3.2.5.3.6.4 1.2.9 1.7 1.3s1.1.9 1.6 1.4l.4.4 1.2 1.2.3.3c.5.5 1 1.1 1.4 1.6.1.1.2.3.3.4.4.4.7.9 1 1.4.1.2.2.3.3.5l1.2 1.8v.1a36.18 36.18 0 0 1 5.1 18.5c0 6-1.5 11.7-4.1 16.7-.3.6-.7 1.2-1 1.8v.1l-1.2 1.8c-.1.2-.2.3-.3.5-.3.5-.7.9-1 1.4-.1.1-.2.3-.3.4-.5.6-.9 1.1-1.4 1.6l-.3.3-1.2 1.2-.4.4c-.5.5-1 .9-1.6 1.4-.6.5-1.1.9-1.7 1.3-.2.1-.3.2-.5.3-.5.3-.9.7-1.4 1-.1.1-.3.2-.4.3-.6.4-1.2.7-1.9 1.1-.1.1-.3.1-.4.2-.5.3-1 .5-1.6.8l-.6.3c-.7.3-1.3.6-2 .8-.7.3-1.4.5-2.1.7-.2.1-.4.1-.6.2-.6.2-1.1.3-1.7.4-.2 0-.3.1-.5.1-.7.2-1.5.3-2.2.4-.2 0-.3 0-.5.1-.6.1-1.2.1-1.8.2h-.6c-.8 0-1.5.1-2.3.1s-1.5 0-2.3-.1h-.6c-.6 0-1.2-.1-1.8-.2-.2 0-.3 0-.5-.1-.7-.1-1.5-.2-2.2-.4-.2 0-.3-.1-.5-.1-.6-.1-1.2-.3-1.7-.4-.2-.1-.4-.1-.6-.2-.7-.2-1.4-.4-2.1-.7-.7-.2-1.3-.5-2-.8l-.6-.3c-.5-.2-1.1-.5-1.6-.8-.1-.1-.3-.1-.4-.2-.6-.3-1.3-.7-1.9-1.1-.1-.1-.3-.2-.4-.3-.5-.3-1-.6-1.4-1-.2-.1-.3-.2-.5-.3-.6-.4-1.2-.9-1.7-1.3s-1.1-.9-1.6-1.4l-.4-.4-1.2-1.2-.3-.3c-.5-.5-1-1.1-1.4-1.6-.1-.1-.2-.3-.3-.4-.4-.4-.7-.9-1-1.4-.1-.2-.2-.3-.3-.5l-1.2-1.8v-.1c-.4-.6-.7-1.2-1-1.8-2.6-5-4.1-10.7-4.1-16.7s1.5-11.7 4.1-16.7z"));
var CopyOutline = dist.CopyOutline = getIcon$1("copy", outline, getNode(newViewBox, "M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"));
var CreditCardOutline = dist.CreditCardOutline = getIcon$1("credit-card", outline, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-792 72h752v120H136V232zm752 560H136V440h752v352zm-237-64h165c4.4 0 8-3.6 8-8v-72c0-4.4-3.6-8-8-8H651c-4.4 0-8 3.6-8 8v72c0 4.4 3.6 8 8 8z"));
var CrownOutline = dist.CrownOutline = getIcon$1("crown", outline, getNode(newViewBox, "M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 0 0-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zm-126 534.1H250.3l-53.8-409.4 139.8 86.1L512 252.9l175.7 234.4 139.8-86.1-53.9 409.4zM512 509c-62.1 0-112.6 50.5-112.6 112.6S449.9 734.2 512 734.2s112.6-50.5 112.6-112.6S574.1 509 512 509zm0 160.9c-26.6 0-48.2-21.6-48.2-48.3 0-26.6 21.6-48.3 48.2-48.3s48.2 21.6 48.2 48.3c0 26.6-21.6 48.3-48.2 48.3z"));
var CustomerServiceOutline = dist.CustomerServiceOutline = getIcon$1("customer-service", outline, getNode(newViewBox, "M512 128c-212.1 0-384 171.9-384 384v360c0 13.3 10.7 24 24 24h184c35.3 0 64-28.7 64-64V624c0-35.3-28.7-64-64-64H200v-48c0-172.3 139.7-312 312-312s312 139.7 312 312v48H688c-35.3 0-64 28.7-64 64v208c0 35.3 28.7 64 64 64h184c13.3 0 24-10.7 24-24V512c0-212.1-171.9-384-384-384zM328 632v192H200V632h128zm496 192H696V632h128v192z"));
var DashboardOutline = dist.DashboardOutline = getIcon$1("dashboard", outline, getNode(newViewBox, "M924.8 385.6a446.7 446.7 0 0 0-96-142.4 446.7 446.7 0 0 0-142.4-96C631.1 123.8 572.5 112 512 112s-119.1 11.8-174.4 35.2a446.7 446.7 0 0 0-142.4 96 446.7 446.7 0 0 0-96 142.4C75.8 440.9 64 499.5 64 560c0 132.7 58.3 257.7 159.9 343.1l1.7 1.4c5.8 4.8 13.1 7.5 20.6 7.5h531.7c7.5 0 14.8-2.7 20.6-7.5l1.7-1.4C901.7 817.7 960 692.7 960 560c0-60.5-11.9-119.1-35.2-174.4zM761.4 836H262.6A371.12 371.12 0 0 1 140 560c0-99.4 38.7-192.8 109-263 70.3-70.3 163.7-109 263-109 99.4 0 192.8 38.7 263 109 70.3 70.3 109 163.7 109 263 0 105.6-44.5 205.5-122.6 276zM623.5 421.5a8.03 8.03 0 0 0-11.3 0L527.7 506c-18.7-5-39.4-.2-54.1 14.5a55.95 55.95 0 0 0 0 79.2 55.95 55.95 0 0 0 79.2 0 55.87 55.87 0 0 0 14.5-54.1l84.5-84.5c3.1-3.1 3.1-8.2 0-11.3l-28.3-28.3zM490 320h44c4.4 0 8-3.6 8-8v-80c0-4.4-3.6-8-8-8h-44c-4.4 0-8 3.6-8 8v80c0 4.4 3.6 8 8 8zm260 218v44c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8v-44c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8zm12.7-197.2l-31.1-31.1a8.03 8.03 0 0 0-11.3 0l-56.6 56.6a8.03 8.03 0 0 0 0 11.3l31.1 31.1c3.1 3.1 8.2 3.1 11.3 0l56.6-56.6c3.1-3.1 3.1-8.2 0-11.3zm-458.6-31.1a8.03 8.03 0 0 0-11.3 0l-31.1 31.1a8.03 8.03 0 0 0 0 11.3l56.6 56.6c3.1 3.1 8.2 3.1 11.3 0l31.1-31.1c3.1-3.1 3.1-8.2 0-11.3l-56.6-56.6zM262 530h-80c-4.4 0-8 3.6-8 8v44c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8v-44c0-4.4-3.6-8-8-8z"));
var DeleteOutline = dist.DeleteOutline = getIcon$1("delete", outline, getNode(newViewBox, "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"));
var DiffOutline = dist.DiffOutline = getIcon$1("diff", outline, getNode(newViewBox, "M476 399.1c0-3.9-3.1-7.1-7-7.1h-42c-3.8 0-7 3.2-7 7.1V484h-84.5c-4.1 0-7.5 3.1-7.5 7v42c0 3.8 3.4 7 7.5 7H420v84.9c0 3.9 3.2 7.1 7 7.1h42c3.9 0 7-3.2 7-7.1V540h84.5c4.1 0 7.5-3.2 7.5-7v-42c0-3.9-3.4-7-7.5-7H476v-84.9zM560.5 704h-225c-4.1 0-7.5 3.2-7.5 7v42c0 3.8 3.4 7 7.5 7h225c4.1 0 7.5-3.2 7.5-7v-42c0-3.8-3.4-7-7.5-7zm-7.1-502.6c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v704c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32V397.3c0-8.5-3.4-16.6-9.4-22.6L553.4 201.4zM664 888H232V264h282.2L664 413.8V888zm190.2-581.4L611.3 72.9c-6-5.7-13.9-8.9-22.2-8.9H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h277l219 210.6V824c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V329.6c0-8.7-3.5-17-9.8-23z"));
var DatabaseOutline = dist.DatabaseOutline = getIcon$1("database", outline, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-600 72h560v208H232V136zm560 480H232V408h560v208zm0 272H232V680h560v208zM304 240a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0 272a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0 272a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var DislikeOutline = dist.DislikeOutline = getIcon$1("dislike", outline, getNode(newViewBox, "M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4a66.1 66.1 0 0 0-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81zm627.2 160.4H496.8l9.6 198.4c.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7a44.28 44.28 0 0 1-42.2-32.3L329 459.2V172h415.4a56.85 56.85 0 0 1 33.6 51.8c0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19a56.76 56.76 0 0 1 19.6 43c0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19a56.76 56.76 0 0 1 19.6 43c0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19a56.76 56.76 0 0 1 19.6 43c0 19.1-11 37.5-28.8 48.4z"));
var DownCircleOutline = dist.DownCircleOutline = getIcon$1("down-circle", outline, getNode(newViewBox, "M690 405h-46.9c-10.2 0-19.9 4.9-25.9 13.2L512 563.6 406.8 418.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246c3.2 4.4 9.7 4.4 12.9 0l178-246c3.9-5.3.1-12.7-6.4-12.7z", "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var DownSquareOutline = dist.DownSquareOutline = getIcon$1("down-square", outline, getNode(newViewBox, "M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var DribbbleSquareOutline = dist.DribbbleSquareOutline = getIcon$1("dribbble-square", outline, getNode(newViewBox, "M498.6 432c-40.8-72.5-84.7-133.4-91.2-142.3-68.8 32.5-120.3 95.9-136.2 172.2 11 .2 112.4.7 227.4-29.9zm66.5 21.8c5.7 11.7 11.2 23.6 16.3 35.6 1.8 4.2 3.6 8.4 5.3 12.7 81.8-10.3 163.2 6.2 171.3 7.9-.5-58.1-21.3-111.4-55.5-153.3-5.3 7.1-46.5 60-137.4 97.1zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM512 800c-158.8 0-288-129.2-288-288s129.2-288 288-288 288 129.2 288 288-129.2 288-288 288zm89.7-259.1c32.2 88.4 45.3 160.4 47.8 175.4 55.2-37.3 94.5-96.4 105.4-164.9-8.4-2.6-76.1-22.8-153.2-10.5zm-72.5-26.4c3.2-1 6.4-2 9.7-2.9-6.2-14-12.9-28-19.9-41.7-122.8 36.8-242.1 35.2-252.8 35-.1 2.5-.1 5-.1 7.5 0 63.2 23.9 120.9 63.2 164.5 5.5-9.6 73-121.4 199.9-162.4zm145.9-186.2a245.2 245.2 0 0 0-220.8-55.1c6.8 9.1 51.5 69.9 91.8 144 87.5-32.8 124.5-82.6 129-88.9zM554 552.8c-138.7 48.3-188.6 144.6-193 153.6 41.7 32.5 94.1 51.9 151 51.9 34.1 0 66.6-6.9 96.1-19.5-3.7-21.6-17.9-96.8-52.5-186.6l-1.6.6z"));
var EnvironmentOutline = dist.EnvironmentOutline = getIcon$1("environment", outline, getNode(newViewBox, "M854.6 289.1a362.49 362.49 0 0 0-79.9-115.7 370.83 370.83 0 0 0-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 0 0 169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0 0 22.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 880.2c-65.9-41.9-300-207.8-300-449.1 0-77.9 31.1-151.1 87.6-206.3C356.3 169.5 431.7 139 512 139s155.7 30.5 212.4 85.9C780.9 280 812 353.2 812 431.1c0 241.3-234.1 407.2-300 449.1zm0-617.2c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 0 1 512 551c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 0 1 400 439c0-29.9 11.7-58 32.8-79.2C454 338.6 482.1 327 512 327c29.9 0 58 11.6 79.2 32.8C612.4 381 624 409.1 624 439c0 29.9-11.6 58-32.8 79.2z"));
var EditOutline = dist.EditOutline = getIcon$1("edit", outline, getNode(newViewBox, "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 0 0 0-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 0 0 9.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"));
var ExclamationCircleOutline = dist.ExclamationCircleOutline = getIcon$1("exclamation-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z", "M464 688a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z"));
var ExperimentOutline = dist.ExperimentOutline = getIcon$1("experiment", outline, getNode(newViewBox, "M512 472a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm367 352.9L696.3 352V178H768v-68H256v68h71.7v174L145 824.9c-2.8 7.4-4.3 15.2-4.3 23.1 0 35.3 28.7 64 64 64h614.6c7.9 0 15.7-1.5 23.1-4.3 33-12.7 49.4-49.8 36.6-82.8zM395.7 364.7V180h232.6v184.7L719.2 600c-20.7-5.3-42.1-8-63.9-8-61.2 0-119.2 21.5-165.3 60a188.78 188.78 0 0 1-121.3 43.9c-32.7 0-64.1-8.3-91.8-23.7l118.8-307.5zM210.5 844l41.7-107.8c35.7 18.1 75.4 27.8 116.6 27.8 61.2 0 119.2-21.5 165.3-60 33.9-28.2 76.3-43.9 121.3-43.9 35 0 68.4 9.5 97.6 27.1L813.5 844h-603z"));
var EyeInvisibleOutline = dist.EyeInvisibleOutline = getIcon$1("eye-invisible", outline, getNode(newViewBox, "M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 0 0 0-51.5zm-63.57-320.64L836 122.88a8 8 0 0 0-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 0 0 0 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 0 0 0 11.31L155.17 889a8 8 0 0 0 11.31 0l712.15-712.12a8 8 0 0 0 0-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 0 0-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 0 1 146.2-106.69L401.31 546.2A112 112 0 0 1 396 512z", "M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 0 0 227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 0 1-112 112z"));
var EyeOutline = dist.EyeOutline = getIcon$1("eye", outline, getNode(newViewBox, "M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 0 0 0 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"));
var FacebookOutline = dist.FacebookOutline = getIcon$1("facebook", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-32 736H663.9V602.2h104l15.6-120.7H663.9v-77.1c0-35 9.7-58.8 59.8-58.8h63.9v-108c-11.1-1.5-49-4.8-93.2-4.8-92.2 0-155.3 56.3-155.3 159.6v89H434.9v120.7h104.3V848H176V176h672v672z"));
var FastBackwardOutline = dist.FastBackwardOutline = getIcon$1("fast-backward", outline, getNode(normalViewBox, "M517.6 273.5L230.2 499.3a16.14 16.14 0 0 0 0 25.4l287.4 225.8c10.7 8.4 26.4.8 26.4-12.7V286.2c0-13.5-15.7-21.1-26.4-12.7zm320 0L550.2 499.3a16.14 16.14 0 0 0 0 25.4l287.4 225.8c10.7 8.4 26.4.8 26.4-12.7V286.2c0-13.5-15.7-21.1-26.4-12.7zm-620-25.5h-51.2c-3.5 0-6.4 2.7-6.4 6v516c0 3.3 2.9 6 6.4 6h51.2c3.5 0 6.4-2.7 6.4-6V254c0-3.3-2.9-6-6.4-6z"));
var FastForwardOutline = dist.FastForwardOutline = getIcon$1("fast-forward", outline, getNode(normalViewBox, "M793.8 499.3L506.4 273.5c-10.7-8.4-26.4-.8-26.4 12.7v451.6c0 13.5 15.7 21.1 26.4 12.7l287.4-225.8a16.14 16.14 0 0 0 0-25.4zm-320 0L186.4 273.5c-10.7-8.4-26.4-.8-26.4 12.7v451.5c0 13.5 15.7 21.1 26.4 12.7l287.4-225.8c4.1-3.2 6.2-8 6.2-12.7 0-4.6-2.1-9.4-6.2-12.6zM857.6 248h-51.2c-3.5 0-6.4 2.7-6.4 6v516c0 3.3 2.9 6 6.4 6h51.2c3.5 0 6.4-2.7 6.4-6V254c0-3.3-2.9-6-6.4-6z"));
var FileAddOutline = dist.FileAddOutline = getIcon$1("file-add", outline, getNode(newViewBox, "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z"));
var FileExcelOutline = dist.FileExcelOutline = getIcon$1("file-excel", outline, getNode(newViewBox, "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494zM514.1 580.1l-61.8-102.4c-2.2-3.6-6.1-5.8-10.3-5.8h-38.4c-2.3 0-4.5.6-6.4 1.9-5.6 3.5-7.3 10.9-3.7 16.6l82.3 130.4-83.4 132.8a12.04 12.04 0 0 0 10.2 18.4h34.5c4.2 0 8-2.2 10.2-5.7L510 664.8l62.3 101.4c2.2 3.6 6.1 5.7 10.2 5.7H620c2.3 0 4.5-.7 6.5-1.9 5.6-3.6 7.2-11 3.6-16.6l-84-130.4 85.3-132.5a12.04 12.04 0 0 0-10.1-18.5h-35.7c-4.2 0-8.1 2.2-10.3 5.8l-61.2 102.3z"));
var FileExclamationOutline = dist.FileExclamationOutline = getIcon$1("file-exclamation", outline, getNode(newViewBox, "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494zM472 744a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm16-104h48c4.4 0 8-3.6 8-8V448c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v184c0 4.4 3.6 8 8 8z"));
var FileImageOutline = dist.FileImageOutline = getIcon$1("file-image", outline, getNode(newViewBox, "M553.1 509.1l-77.8 99.2-41.1-52.4a8 8 0 0 0-12.6 0l-99.8 127.2a7.98 7.98 0 0 0 6.3 12.9H696c6.7 0 10.4-7.7 6.3-12.9l-136.5-174a8.1 8.1 0 0 0-12.7 0zM360 442a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm494.6-153.4L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494z"));
var FileMarkdownOutline = dist.FileMarkdownOutline = getIcon$1("file-markdown", outline, getNode(newViewBox, "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494zM429 481.2c-1.9-4.4-6.2-7.2-11-7.2h-35c-6.6 0-12 5.4-12 12v272c0 6.6 5.4 12 12 12h27.1c6.6 0 12-5.4 12-12V582.1l66.8 150.2a12 12 0 0 0 11 7.1H524c4.7 0 9-2.8 11-7.1l66.8-150.6V758c0 6.6 5.4 12 12 12H641c6.6 0 12-5.4 12-12V486c0-6.6-5.4-12-12-12h-34.7c-4.8 0-9.1 2.8-11 7.2l-83.1 191-83.2-191z"));
var FilePptOutline = dist.FilePptOutline = getIcon$1("file-ppt", outline, getNode(newViewBox, "M424 476c-4.4 0-8 3.6-8 8v276c0 4.4 3.6 8 8 8h32.5c4.4 0 8-3.6 8-8v-95.5h63.3c59.4 0 96.2-38.9 96.2-94.1 0-54.5-36.3-94.3-96-94.3H424zm150.6 94.3c0 43.4-26.5 54.3-71.2 54.3h-38.9V516.2h56.2c33.8 0 53.9 19.7 53.9 54.1zm280-281.7L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494z"));
var FileTextOutline = dist.FileTextOutline = getIcon$1("file-text", outline, getNode(newViewBox, "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494zM504 618H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 490v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8z"));
var FilePdfOutline = dist.FilePdfOutline = getIcon$1("file-pdf", outline, getNode(newViewBox, "M531.3 574.4l.3-1.4c5.8-23.9 13.1-53.7 7.4-80.7-3.8-21.3-19.5-29.6-32.9-30.2-15.8-.7-29.9 8.3-33.4 21.4-6.6 24-.7 56.8 10.1 98.6-13.6 32.4-35.3 79.5-51.2 107.5-29.6 15.3-69.3 38.9-75.2 68.7-1.2 5.5.2 12.5 3.5 18.8 3.7 7 9.6 12.4 16.5 15 3 1.1 6.6 2 10.8 2 17.6 0 46.1-14.2 84.1-79.4 5.8-1.9 11.8-3.9 17.6-5.9 27.2-9.2 55.4-18.8 80.9-23.1 28.2 15.1 60.3 24.8 82.1 24.8 21.6 0 30.1-12.8 33.3-20.5 5.6-13.5 2.9-30.5-6.2-39.6-13.2-13-45.3-16.4-95.3-10.2-24.6-15-40.7-35.4-52.4-65.8zM421.6 726.3c-13.9 20.2-24.4 30.3-30.1 34.7 6.7-12.3 19.8-25.3 30.1-34.7zm87.6-235.5c5.2 8.9 4.5 35.8.5 49.4-4.9-19.9-5.6-48.1-2.7-51.4.8.1 1.5.7 2.2 2zm-1.6 120.5c10.7 18.5 24.2 34.4 39.1 46.2-21.6 4.9-41.3 13-58.9 20.2-4.2 1.7-8.3 3.4-12.3 5 13.3-24.1 24.4-51.4 32.1-71.4zm155.6 65.5c.1.2.2.5-.4.9h-.2l-.2.3c-.8.5-9 5.3-44.3-8.6 40.6-1.9 45 7.3 45.1 7.4zm191.4-388.2L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494z"));
var FileZipOutline = dist.FileZipOutline = getIcon$1("file-zip", outline, getNode(newViewBox, "M296 392h64v64h-64zm0 190v160h128V582h-64v-62h-64v62zm80 48v64h-32v-64h32zm-16-302h64v64h-64zm-64-64h64v64h-64zm64 192h64v64h-64zm0-256h64v64h-64zm494.6 88.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h64v64h64v-64h174v216a42 42 0 0 0 42 42h216v494z"));
var FileOutline = dist.FileOutline = getIcon$1("file", outline, getNode(newViewBox, "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494z"));
var FilterOutline = dist.FilterOutline = getIcon$1("filter", outline, getNode(newViewBox, "M880.1 154H143.9c-24.5 0-39.8 26.7-27.5 48L349 597.4V838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V597.4L907.7 202c12.2-21.3-3.1-48-27.6-48zM603.4 798H420.6V642h182.9v156zm9.6-236.6l-9.5 16.6h-183l-9.5-16.6L212.7 226h598.6L613 561.4z"));
var FileWordOutline = dist.FileWordOutline = getIcon$1("file-word", outline, getNode(newViewBox, "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494zM528.1 472h-32.2c-5.5 0-10.3 3.7-11.6 9.1L434.6 680l-46.1-198.7c-1.3-5.4-6.1-9.3-11.7-9.3h-35.4a12.02 12.02 0 0 0-11.6 15.1l74.2 276c1.4 5.2 6.2 8.9 11.6 8.9h32c5.4 0 10.2-3.6 11.6-8.9l52.8-197 52.8 197c1.4 5.2 6.2 8.9 11.6 8.9h31.8c5.4 0 10.2-3.6 11.6-8.9l74.4-276a12.04 12.04 0 0 0-11.6-15.1H647c-5.6 0-10.4 3.9-11.7 9.3l-45.8 199.1-49.8-199.3c-1.3-5.4-6.1-9.1-11.6-9.1z"));
var FireOutline = dist.FireOutline = getIcon$1("fire", outline, getNode(newViewBox, "M834.1 469.2A347.49 347.49 0 0 0 751.2 354l-29.1-26.7a8.09 8.09 0 0 0-13 3.3l-13 37.3c-8.1 23.4-23 47.3-44.1 70.8-1.4 1.5-3 1.9-4.1 2-1.1.1-2.8-.1-4.3-1.5-1.4-1.2-2.1-3-2-4.8 3.7-60.2-14.3-128.1-53.7-202C555.3 171 510 123.1 453.4 89.7l-41.3-24.3c-5.4-3.2-12.3 1-12 7.3l2.2 48c1.5 32.8-2.3 61.8-11.3 85.9-11 29.5-26.8 56.9-47 81.5a295.64 295.64 0 0 1-47.5 46.1 352.6 352.6 0 0 0-100.3 121.5A347.75 347.75 0 0 0 160 610c0 47.2 9.3 92.9 27.7 136a349.4 349.4 0 0 0 75.5 110.9c32.4 32 70 57.2 111.9 74.7C418.5 949.8 464.5 959 512 959s93.5-9.2 136.9-27.3A348.6 348.6 0 0 0 760.8 857c32.4-32 57.8-69.4 75.5-110.9a344.2 344.2 0 0 0 27.7-136c0-48.8-10-96.2-29.9-140.9zM713 808.5c-53.7 53.2-125 82.4-201 82.4s-147.3-29.2-201-82.4c-53.5-53.1-83-123.5-83-198.4 0-43.5 9.8-85.2 29.1-124 18.8-37.9 46.8-71.8 80.8-97.9a349.6 349.6 0 0 0 58.6-56.8c25-30.5 44.6-64.5 58.2-101a240 240 0 0 0 12.1-46.5c24.1 22.2 44.3 49 61.2 80.4 33.4 62.6 48.8 118.3 45.8 165.7a74.01 74.01 0 0 0 24.4 59.8 73.36 73.36 0 0 0 53.4 18.8c19.7-1 37.8-9.7 51-24.4 13.3-14.9 24.8-30.1 34.4-45.6 14 17.9 25.7 37.4 35 58.4 15.9 35.8 24 73.9 24 113.1 0 74.9-29.5 145.4-83 198.4z"));
var FileUnknownOutline = dist.FileUnknownOutline = getIcon$1("file-unknown", outline, getNode(newViewBox, "M854.6 288.7L639.4 73.4c-6-6-14.2-9.4-22.7-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.6-9.4-22.6zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494zM402 549c0 5.4 4.4 9.5 9.8 9.5h32.4c5.4 0 9.8-4.2 9.8-9.4 0-28.2 25.8-51.6 58-51.6s58 23.4 58 51.5c0 25.3-21 47.2-49.3 50.9-19.3 2.8-34.5 20.3-34.7 40.1v32c0 5.5 4.5 10 10 10h32c5.5 0 10-4.5 10-10v-12.2c0-6 4-11.5 9.7-13.3 44.6-14.4 75-54 74.3-98.9-.8-55.5-49.2-100.8-108.5-101.6-61.4-.7-111.5 45.6-111.5 103zm78 195a32 32 0 1 0 64 0 32 32 0 1 0-64 0z"));
var FlagOutline = dist.FlagOutline = getIcon$1("flag", outline, getNode(newViewBox, "M880 305H624V192c0-17.7-14.3-32-32-32H184v-40c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v784c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V640h248v113c0 17.7 14.3 32 32 32h416c17.7 0 32-14.3 32-32V337c0-17.7-14.3-32-32-32zM184 568V232h368v336H184zm656 145H504v-73h112c4.4 0 8-3.6 8-8V377h216v336z"));
var FolderAddOutline = dist.FolderAddOutline = getIcon$1("folder-add", outline, getNode(newViewBox, "M484 443.1V528h-84.5c-4.1 0-7.5 3.1-7.5 7v42c0 3.8 3.4 7 7.5 7H484v84.9c0 3.9 3.2 7.1 7 7.1h42c3.9 0 7-3.2 7-7.1V584h84.5c4.1 0 7.5-3.2 7.5-7v-42c0-3.9-3.4-7-7.5-7H540v-84.9c0-3.9-3.1-7.1-7-7.1h-42c-3.8 0-7 3.2-7 7.1zm396-144.7H521L403.7 186.2a8.15 8.15 0 0 0-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM840 768H184V256h188.5l119.6 114.4H840V768z"));
var FolderOutline = dist.FolderOutline = getIcon$1("folder", outline, getNode(newViewBox, "M880 298.4H521L403.7 186.2a8.15 8.15 0 0 0-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM840 768H184V256h188.5l119.6 114.4H840V768z"));
var FolderOpenOutline = dist.FolderOpenOutline = getIcon$1("folder-open", outline, getNode(newViewBox, "M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"));
var ForwardOutline = dist.ForwardOutline = getIcon$1("forward", outline, getNode(normalViewBox, "M825.8 498L538.4 249.9c-10.7-9.2-26.4-.9-26.4 14v496.3c0 14.9 15.7 23.2 26.4 14L825.8 526c8.3-7.2 8.3-20.8 0-28zm-320 0L218.4 249.9c-10.7-9.2-26.4-.9-26.4 14v496.3c0 14.9 15.7 23.2 26.4 14L505.8 526c4.1-3.6 6.2-8.8 6.2-14 0-5.2-2.1-10.4-6.2-14z"));
var FrownOutline = dist.FrownOutline = getIcon$1("frown", outline, getNode(newViewBox, "M288 421a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm352 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 0 1 248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 0 1 249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 0 1 775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 0 1 775 775zM512 533c-85.5 0-155.6 67.3-160 151.6a8 8 0 0 0 8 8.4h48.1c4.2 0 7.8-3.2 8.1-7.4C420 636.1 461.5 597 512 597s92.1 39.1 95.8 88.6c.3 4.2 3.9 7.4 8.1 7.4H664a8 8 0 0 0 8-8.4C667.6 600.3 597.5 533 512 533z"));
var FundOutline = dist.FundOutline = getIcon$1("fund", outline, getNode(newViewBox, "M926 164H94c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V196c0-17.7-14.3-32-32-32zm-40 632H134V236h752v560zm-658.9-82.3c3.1 3.1 8.2 3.1 11.3 0l172.5-172.5 114.4 114.5c3.1 3.1 8.2 3.1 11.3 0l297-297.2c3.1-3.1 3.1-8.2 0-11.3l-36.8-36.8a8.03 8.03 0 0 0-11.3 0L531 565 416.6 450.5a8.03 8.03 0 0 0-11.3 0l-214.9 215a8.03 8.03 0 0 0 0 11.3l36.7 36.9z"));
var FunnelPlotOutline = dist.FunnelPlotOutline = getIcon$1("funnel-plot", outline, getNode(newViewBox, "M880.1 154H143.9c-24.5 0-39.8 26.7-27.5 48L349 607.4V838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V607.4L907.7 202c12.2-21.3-3.1-48-27.6-48zM603.4 798H420.6V650h182.9v148zm9.6-226.6l-8.4 14.6H419.3l-8.4-14.6L334.4 438h355.2L613 571.4zM726.3 374H297.7l-85-148h598.6l-85 148z"));
var GiftOutline = dist.GiftOutline = getIcon$1("gift", outline, getNode(newViewBox, "M880 310H732.4c13.6-21.4 21.6-46.8 21.6-74 0-76.1-61.9-138-138-138-41.4 0-78.7 18.4-104 47.4-25.3-29-62.6-47.4-104-47.4-76.1 0-138 61.9-138 138 0 27.2 7.9 52.6 21.6 74H144c-17.7 0-32 14.3-32 32v200c0 4.4 3.6 8 8 8h40v344c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V550h40c4.4 0 8-3.6 8-8V342c0-17.7-14.3-32-32-32zm-334-74c0-38.6 31.4-70 70-70s70 31.4 70 70-31.4 70-70 70h-70v-70zm-138-70c38.6 0 70 31.4 70 70v70h-70c-38.6 0-70-31.4-70-70s31.4-70 70-70zM180 482V378h298v104H180zm48 68h250v308H228V550zm568 308H546V550h250v308zm48-376H546V378h298v104z"));
var GithubOutline = dist.GithubOutline = getIcon$1("github", outline, getNode(newViewBox, "M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"));
var GitlabOutline = dist.GitlabOutline = getIcon$1("gitlab", outline, getNode(newViewBox, "M913.9 552.2L805 181.4v-.1c-7.6-22.9-25.7-36.5-48.3-36.5-23.4 0-42.5 13.5-49.7 35.2l-71.4 213H388.8l-71.4-213c-7.2-21.7-26.3-35.2-49.7-35.2-23.1 0-42.5 14.8-48.4 36.6L110.5 552.2c-4.4 14.7 1.2 31.4 13.5 40.7l368.5 276.4c2.6 3.6 6.2 6.3 10.4 7.8l8.6 6.4 8.5-6.4c4.9-1.7 9-4.7 11.9-8.9l368.4-275.4c12.4-9.2 18-25.9 13.6-40.6zM751.7 193.4c1-1.8 2.9-1.9 3.5-1.9 1.1 0 2.5.3 3.4 3L818 394.3H684.5l67.2-200.9zm-487.4 1c.9-2.6 2.3-2.9 3.4-2.9 2.7 0 2.9.1 3.4 1.7l67.3 201.2H206.5l57.8-200zM158.8 558.7l28.2-97.3 202.4 270.2-230.6-172.9zm73.9-116.4h122.1l90.8 284.3-212.9-284.3zM512.9 776L405.7 442.3H620L512.9 776zm157.9-333.7h119.5L580 723.1l90.8-280.8zm-40.7 293.9l207.3-276.7 29.5 99.2-236.8 177.5z"));
var HeartOutline = dist.HeartOutline = getIcon$1("heart", outline, getNode(newViewBox, "M923 283.6a260.04 260.04 0 0 0-56.9-82.8 264.4 264.4 0 0 0-84-55.5A265.34 265.34 0 0 0 679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 0 0-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"));
var HddOutline = dist.HddOutline = getIcon$1("hdd", outline, getNode(newViewBox, "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-600 72h560v208H232V136zm560 480H232V408h560v208zm0 272H232V680h560v208zM496 208H312c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 544h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H312c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm328 244a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var HighlightOutline = dist.HighlightOutline = getIcon$1("highlight", outline, getNode(newViewBox, "M957.6 507.4L603.2 158.2a7.9 7.9 0 0 0-11.2 0L353.3 393.4a8.03 8.03 0 0 0-.1 11.3l.1.1 40 39.4-117.2 115.3a8.03 8.03 0 0 0-.1 11.3l.1.1 39.5 38.9-189.1 187H72.1c-4.4 0-8.1 3.6-8.1 8V860c0 4.4 3.6 8 8 8h344.9c2.1 0 4.1-.8 5.6-2.3l76.1-75.6 40.4 39.8a7.9 7.9 0 0 0 11.2 0l117.1-115.6 40.1 39.5a7.9 7.9 0 0 0 11.2 0l238.7-235.2c3.4-3 3.4-8 .3-11.2zM389.8 796.2H229.6l134.4-133 80.1 78.9-54.3 54.1zm154.8-62.1L373.2 565.2l68.6-67.6 171.4 168.9-68.6 67.6zM713.1 658L450.3 399.1 597.6 254l262.8 259-147.3 145z"));
var HomeOutline = dist.HomeOutline = getIcon$1("home", outline, getNode(newViewBox, "M946.5 505L560.1 118.8l-25.9-25.9a31.5 31.5 0 0 0-44.4 0L77.5 505a63.9 63.9 0 0 0-18.8 46c.4 35.2 29.7 63.3 64.9 63.3h42.5V940h691.8V614.3h43.4c17.1 0 33.2-6.7 45.3-18.8a63.6 63.6 0 0 0 18.7-45.3c0-17-6.7-33.1-18.8-45.2zM568 868H456V664h112v204zm217.9-325.7V868H632V640c0-22.1-17.9-40-40-40H432c-22.1 0-40 17.9-40 40v228H238.1V542.3h-96l370-369.7 23.1 23.1L882 542.3h-96.1z"));
var HourglassOutline = dist.HourglassOutline = getIcon$1("hourglass", outline, getNode(newViewBox, "M742 318V184h86c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H196c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h86v134c0 81.5 42.4 153.2 106.4 194-64 40.8-106.4 112.5-106.4 194v134h-86c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h632c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-86V706c0-81.5-42.4-153.2-106.4-194 64-40.8 106.4-112.5 106.4-194zm-72 388v134H354V706c0-42.2 16.4-81.9 46.3-111.7C430.1 564.4 469.8 548 512 548s81.9 16.4 111.7 46.3C653.6 624.1 670 663.8 670 706zm0-388c0 42.2-16.4 81.9-46.3 111.7C593.9 459.6 554.2 476 512 476s-81.9-16.4-111.7-46.3A156.63 156.63 0 0 1 354 318V184h316v134z"));
var Html5Outline = dist.Html5Outline = getIcon$1("html5", outline, getNode(newViewBox, "M145 96l66 746.6L511.8 928l299.6-85.4L878.7 96H145zm610.9 700.6l-244.1 69.6-245.2-69.6-56.7-641.2h603.8l-57.8 641.2zM281 249l1.7 24.3 22.7 253.5h206.5v-.1h112.9l-11.4 118.5L511 672.9v.2h-.8l-102.4-27.7-6.5-73.2h-91l11.3 144.7 188.6 52h1.7v-.4l187.7-51.7 1.7-16.3 21.2-242.2 3.2-24.3H511v.2H389.9l-8.2-94.2h352.1l1.7-19.5 4.8-47.2L742 249H511z"));
var IdcardOutline = dist.IdcardOutline = getIcon$1("idcard", outline, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136V232h752v560zM610.3 476h123.4c1.3 0 2.3-3.6 2.3-8v-48c0-4.4-1-8-2.3-8H610.3c-1.3 0-2.3 3.6-2.3 8v48c0 4.4 1 8 2.3 8zm4.8 144h185.7c3.9 0 7.1-3.6 7.1-8v-48c0-4.4-3.2-8-7.1-8H615.1c-3.9 0-7.1 3.6-7.1 8v48c0 4.4 3.2 8 7.1 8zM224 673h43.9c4.2 0 7.6-3.3 7.9-7.5 3.8-50.5 46-90.5 97.2-90.5s93.4 40 97.2 90.5c.3 4.2 3.7 7.5 7.9 7.5H522a8 8 0 0 0 8-8.4c-2.8-53.3-32-99.7-74.6-126.1a111.8 111.8 0 0 0 29.1-75.5c0-61.9-49.9-112-111.4-112s-111.4 50.1-111.4 112c0 29.1 11 55.5 29.1 75.5a158.09 158.09 0 0 0-74.6 126.1c-.4 4.6 3.2 8.4 7.8 8.4zm149-262c28.5 0 51.7 23.3 51.7 52s-23.2 52-51.7 52-51.7-23.3-51.7-52 23.2-52 51.7-52z"));
var InfoCircleOutline = dist.InfoCircleOutline = getIcon$1("info-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z", "M464 336a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z"));
var InstagramOutline = dist.InstagramOutline = getIcon$1("instagram", outline, getNode(newViewBox, "M512 306.9c-113.5 0-205.1 91.6-205.1 205.1S398.5 717.1 512 717.1 717.1 625.5 717.1 512 625.5 306.9 512 306.9zm0 338.4c-73.4 0-133.3-59.9-133.3-133.3S438.6 378.7 512 378.7 645.3 438.6 645.3 512 585.4 645.3 512 645.3zm213.5-394.6c-26.5 0-47.9 21.4-47.9 47.9s21.4 47.9 47.9 47.9 47.9-21.3 47.9-47.9a47.84 47.84 0 0 0-47.9-47.9zM911.8 512c0-55.2.5-109.9-2.6-165-3.1-64-17.7-120.8-64.5-167.6-46.9-46.9-103.6-61.4-167.6-64.5-55.2-3.1-109.9-2.6-165-2.6-55.2 0-109.9-.5-165 2.6-64 3.1-120.8 17.7-167.6 64.5C132.6 226.3 118.1 283 115 347c-3.1 55.2-2.6 109.9-2.6 165s-.5 109.9 2.6 165c3.1 64 17.7 120.8 64.5 167.6 46.9 46.9 103.6 61.4 167.6 64.5 55.2 3.1 109.9 2.6 165 2.6 55.2 0 109.9.5 165-2.6 64-3.1 120.8-17.7 167.6-64.5 46.9-46.9 61.4-103.6 64.5-167.6 3.2-55.1 2.6-109.8 2.6-165zm-88 235.8c-7.3 18.2-16.1 31.8-30.2 45.8-14.1 14.1-27.6 22.9-45.8 30.2C695.2 844.7 570.3 840 512 840c-58.3 0-183.3 4.7-235.9-16.1-18.2-7.3-31.8-16.1-45.8-30.2-14.1-14.1-22.9-27.6-30.2-45.8C179.3 695.2 184 570.3 184 512c0-58.3-4.7-183.3 16.1-235.9 7.3-18.2 16.1-31.8 30.2-45.8s27.6-22.9 45.8-30.2C328.7 179.3 453.7 184 512 184s183.3-4.7 235.9 16.1c18.2 7.3 31.8 16.1 45.8 30.2 14.1 14.1 22.9 27.6 30.2 45.8C844.7 328.7 840 453.7 840 512c0 58.3 4.7 183.2-16.2 235.8z"));
var InsuranceOutline = dist.InsuranceOutline = getIcon$1("insurance", outline, getNode(newViewBox, "M441.6 306.8L403 288.6a6.1 6.1 0 0 0-8.4 3.7c-17.5 58.5-45.2 110.1-82.2 153.6a6.05 6.05 0 0 0-1.2 5.6l13.2 43.5c1.3 4.4 7 5.7 10.2 2.4 7.7-8.1 15.4-16.9 23.1-26V656c0 4.4 3.6 8 8 8H403c4.4 0 8-3.6 8-8V393.1a429.2 429.2 0 0 0 33.6-79c1-2.9-.3-6-3-7.3zm26.8 9.2v127.2c0 4.4 3.6 8 8 8h65.9v18.6h-94.9c-4.4 0-8 3.6-8 8v35.6c0 4.4 3.6 8 8 8h55.1c-19.1 30.8-42.4 55.7-71 76a6 6 0 0 0-1.6 8.1l22.8 36.5c1.9 3.1 6.2 3.8 8.9 1.4 31.6-26.8 58.7-62.9 80.6-107.6v120c0 4.4 3.6 8 8 8h36.2c4.4 0 8-3.6 8-8V536c21.3 41.7 47.5 77.5 78.1 106.9 2.6 2.5 6.8 2.1 8.9-.7l26.3-35.3c2-2.7 1.4-6.5-1.2-8.4-30.5-22.6-54.2-47.8-72.3-76.9h59c4.4 0 8-3.6 8-8V478c0-4.4-3.6-8-8-8h-98.8v-18.6h66.7c4.4 0 8-3.6 8-8V316c0-4.4-3.6-8-8-8H476.4c-4.4 0-8 3.6-8 8zm51.5 42.8h97.9v41.6h-97.9v-41.6zm347-188.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6z"));
var InteractionOutline = dist.InteractionOutline = getIcon$1("interaction", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656zM304.8 524h50.7c3.7 0 6.8-3 6.8-6.8v-78.9c0-19.7 15.9-35.6 35.5-35.6h205.7v53.4c0 5.7 6.5 8.8 10.9 5.3l109.1-85.7c3.5-2.7 3.5-8 0-10.7l-109.1-85.7c-4.4-3.5-10.9-.3-10.9 5.3V338H397.7c-55.1 0-99.7 44.8-99.7 100.1V517c0 4 3 7 6.8 7zm-4.2 134.9l109.1 85.7c4.4 3.5 10.9.3 10.9-5.3v-53.4h205.7c55.1 0 99.7-44.8 99.7-100.1v-78.9c0-3.7-3-6.8-6.8-6.8h-50.7c-3.7 0-6.8 3-6.8 6.8v78.9c0 19.7-15.9 35.6-35.5 35.6H420.6V568c0-5.7-6.5-8.8-10.9-5.3l-109.1 85.7c-3.5 2.5-3.5 7.8 0 10.5z"));
var InterationOutline = dist.InterationOutline = getIcon$1("interation", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656zM304.8 524h50.7c3.7 0 6.8-3 6.8-6.8v-78.9c0-19.7 15.9-35.6 35.5-35.6h205.7v53.4c0 5.7 6.5 8.8 10.9 5.3l109.1-85.7c3.5-2.7 3.5-8 0-10.7l-109.1-85.7c-4.4-3.5-10.9-.3-10.9 5.3V338H397.7c-55.1 0-99.7 44.8-99.7 100.1V517c0 4 3 7 6.8 7zm-4.2 134.9l109.1 85.7c4.4 3.5 10.9.3 10.9-5.3v-53.4h205.7c55.1 0 99.7-44.8 99.7-100.1v-78.9c0-3.7-3-6.8-6.8-6.8h-50.7c-3.7 0-6.8 3-6.8 6.8v78.9c0 19.7-15.9 35.6-35.5 35.6H420.6V568c0-5.7-6.5-8.8-10.9-5.3l-109.1 85.7c-3.5 2.5-3.5 7.8 0 10.5z"));
var LayoutOutline = dist.LayoutOutline = getIcon$1("layout", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-696 72h136v656H184V184zm656 656H384V384h456v456zM384 320V184h456v136H384z"));
var LeftCircleOutline = dist.LeftCircleOutline = getIcon$1("left-circle", outline, getNode(newViewBox, "M603.3 327.5l-246 178a7.95 7.95 0 0 0 0 12.9l246 178c5.3 3.8 12.7 0 12.7-6.5V643c0-10.2-4.9-19.9-13.2-25.9L457.4 512l145.4-105.2c8.3-6 13.2-15.6 13.2-25.9V334c0-6.5-7.4-10.3-12.7-6.5z", "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var LeftSquareOutline = dist.LeftSquareOutline = getIcon$1("left-square", outline, getNode(newViewBox, "M365.3 518.5l246 178c5.3 3.8 12.7 0 12.7-6.5v-46.9c0-10.2-4.9-19.9-13.2-25.9L465.4 512l145.4-105.2c8.3-6 13.2-15.6 13.2-25.9V334c0-6.5-7.4-10.3-12.7-6.5l-246 178a8.05 8.05 0 0 0 0 13z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var LikeOutline = dist.LikeOutline = getIcon$1("like", outline, getNode(newViewBox, "M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4A106.62 106.62 0 0 0 471 99.9c-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81zm636.4-353l-21.9 19 13.9 25.4a56.2 56.2 0 0 1 6.9 27.3c0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 0 1 6.9 27.3c0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 0 1 6.9 27.3c0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5a44.1 44.1 0 0 1 42.2-32.3c7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"));
var LinkedinOutline = dist.LinkedinOutline = getIcon$1("linkedin", outline, getNode(newViewBox, "M847.7 112H176.3c-35.5 0-64.3 28.8-64.3 64.3v671.4c0 35.5 28.8 64.3 64.3 64.3h671.4c35.5 0 64.3-28.8 64.3-64.3V176.3c0-35.5-28.8-64.3-64.3-64.3zm0 736c-447.8-.1-671.7-.2-671.7-.3.1-447.8.2-671.7.3-671.7 447.8.1 671.7.2 671.7.3-.1 447.8-.2 671.7-.3 671.7zM230.6 411.9h118.7v381.8H230.6zm59.4-52.2c37.9 0 68.8-30.8 68.8-68.8a68.8 68.8 0 1 0-137.6 0c-.1 38 30.7 68.8 68.8 68.8zm252.3 245.1c0-49.8 9.5-98 71.2-98 60.8 0 61.7 56.9 61.7 101.2v185.7h118.6V584.3c0-102.8-22.2-181.9-142.3-181.9-57.7 0-96.4 31.7-112.3 61.7h-1.6v-52.2H423.7v381.8h118.6V604.8z"));
var LockOutline = dist.LockOutline = getIcon$1("lock", outline, getNode(newViewBox, "M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 1 0-56 0z"));
var MedicineBoxOutline = dist.MedicineBoxOutline = getIcon$1("medicine-box", outline, getNode(newViewBox, "M839.2 278.1a32 32 0 0 0-30.4-22.1H736V144c0-17.7-14.3-32-32-32H320c-17.7 0-32 14.3-32 32v112h-72.8a31.9 31.9 0 0 0-30.4 22.1L112 502v378c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V502l-72.8-223.9zM360 184h304v72H360v-72zm480 656H184V513.4L244.3 328h535.4L840 513.4V840zM652 572H544V464c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V636h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"));
var MehOutline = dist.MehOutline = getIcon$1("meh", outline, getNode(newViewBox, "M288 421a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm352 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 0 1 248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 0 1 249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 0 1 775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 0 1 775 775zM664 565H360c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"));
var MailOutline = dist.MailOutline = getIcon$1("mail", outline, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 110.8V792H136V270.8l-27.6-21.5 39.3-50.5 42.8 33.3h643.1l42.8-33.3 39.3 50.5-27.7 21.5zM833.6 232L512 482 190.4 232l-42.8-33.3-39.3 50.5 27.6 21.5 341.6 265.6a55.99 55.99 0 0 0 68.7 0L888 270.8l27.6-21.5-39.3-50.5-42.7 33.2z"));
var MessageOutline = dist.MessageOutline = getIcon$1("message", outline, getNode(newViewBox, "M464 512a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm200 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm-400 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 0 0-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 0 0-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 0 0 112 714v152a46 46 0 0 0 46 46h152.1A449.4 449.4 0 0 0 510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 0 0 142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z"));
var MinusCircleOutline = dist.MinusCircleOutline = getIcon$1("minus-circle", outline, getNode(newViewBox, "M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z", "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var MinusSquareOutline = dist.MinusSquareOutline = getIcon$1("minus-square", outline, getNode(newViewBox, "M328 544h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var MobileOutline = dist.MobileOutline = getIcon$1("mobile", outline, getNode(newViewBox, "M744 62H280c-35.3 0-64 28.7-64 64v768c0 35.3 28.7 64 64 64h464c35.3 0 64-28.7 64-64V126c0-35.3-28.7-64-64-64zm-8 824H288V134h448v752zM472 784a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var MoneyCollectOutline = dist.MoneyCollectOutline = getIcon$1("money-collect", outline, getNode(newViewBox, "M911.5 700.7a8 8 0 0 0-10.3-4.8L840 718.2V180c0-37.6-30.4-68-68-68H252c-37.6 0-68 30.4-68 68v538.2l-61.3-22.3c-.9-.3-1.8-.5-2.7-.5-4.4 0-8 3.6-8 8V763c0 3.3 2.1 6.3 5.3 7.5L501 910.1c7.1 2.6 14.8 2.6 21.9 0l383.8-139.5c3.2-1.2 5.3-4.2 5.3-7.5v-59.6c0-1-.2-1.9-.5-2.8zM512 837.5l-256-93.1V184h512v560.4l-256 93.1zM660.6 312h-54.5c-3 0-5.8 1.7-7.1 4.4l-84.7 168.8H511l-84.7-168.8a8 8 0 0 0-7.1-4.4h-55.7c-1.3 0-2.6.3-3.8 1-3.9 2.1-5.3 7-3.2 10.8l103.9 191.6h-57c-4.4 0-8 3.6-8 8v27.1c0 4.4 3.6 8 8 8h76v39h-76c-4.4 0-8 3.6-8 8v27.1c0 4.4 3.6 8 8 8h76V704c0 4.4 3.6 8 8 8h49.9c4.4 0 8-3.6 8-8v-63.5h76.3c4.4 0 8-3.6 8-8v-27.1c0-4.4-3.6-8-8-8h-76.3v-39h76.3c4.4 0 8-3.6 8-8v-27.1c0-4.4-3.6-8-8-8H564l103.7-191.6c.6-1.2 1-2.5 1-3.8-.1-4.3-3.7-7.9-8.1-7.9z"));
var PauseCircleOutline = dist.PauseCircleOutline = getIcon$1("pause-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm-88-532h-48c-4.4 0-8 3.6-8 8v304c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8zm224 0h-48c-4.4 0-8 3.6-8 8v304c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8z"));
var PayCircleOutline = dist.PayCircleOutline = getIcon$1("pay-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm159.6-585h-59.5c-3 0-5.8 1.7-7.1 4.4l-90.6 180H511l-90.6-180a8 8 0 0 0-7.1-4.4h-60.7c-1.3 0-2.6.3-3.8 1-3.9 2.1-5.3 7-3.2 10.9L457 515.7h-61.4c-4.4 0-8 3.6-8 8v29.9c0 4.4 3.6 8 8 8h81.7V603h-81.7c-4.4 0-8 3.6-8 8v29.9c0 4.4 3.6 8 8 8h81.7V717c0 4.4 3.6 8 8 8h54.3c4.4 0 8-3.6 8-8v-68.1h82c4.4 0 8-3.6 8-8V611c0-4.4-3.6-8-8-8h-82v-41.5h82c4.4 0 8-3.6 8-8v-29.9c0-4.4-3.6-8-8-8h-62l111.1-204.8c.6-1.2 1-2.5 1-3.8-.1-4.4-3.7-8-8.1-8z"));
var NotificationOutline = dist.NotificationOutline = getIcon$1("notification", outline, getNode(newViewBox, "M880 112c-3.8 0-7.7.7-11.6 2.3L292 345.9H128c-8.8 0-16 7.4-16 16.6v299c0 9.2 7.2 16.6 16 16.6h101.7c-3.7 11.6-5.7 23.9-5.7 36.4 0 65.9 53.8 119.5 120 119.5 55.4 0 102.1-37.6 115.9-88.4l408.6 164.2c3.9 1.5 7.8 2.3 11.6 2.3 16.9 0 32-14.2 32-33.2V145.2C912 126.2 897 112 880 112zM344 762.3c-26.5 0-48-21.4-48-47.8 0-11.2 3.9-21.9 11-30.4l84.9 34.1c-2 24.6-22.7 44.1-47.9 44.1zm496 58.4L318.8 611.3l-12.9-5.2H184V417.9h121.9l12.9-5.2L840 203.3v617.4z"));
var PhoneOutline = dist.PhoneOutline = getIcon$1("phone", outline, getNode(newViewBox, "M877.1 238.7L770.6 132.3c-13-13-30.4-20.3-48.8-20.3s-35.8 7.2-48.8 20.3L558.3 246.8c-13 13-20.3 30.5-20.3 48.9 0 18.5 7.2 35.8 20.3 48.9l89.6 89.7a405.46 405.46 0 0 1-86.4 127.3c-36.7 36.9-79.6 66-127.2 86.6l-89.6-89.7c-13-13-30.4-20.3-48.8-20.3a68.2 68.2 0 0 0-48.8 20.3L132.3 673c-13 13-20.3 30.5-20.3 48.9 0 18.5 7.2 35.8 20.3 48.9l106.4 106.4c22.2 22.2 52.8 34.9 84.2 34.9 6.5 0 12.8-.5 19.2-1.6 132.4-21.8 263.8-92.3 369.9-198.3C818 606 888.4 474.6 910.4 342.1c6.3-37.6-6.3-76.3-33.3-103.4zm-37.6 91.5c-19.5 117.9-82.9 235.5-178.4 331s-213 158.9-330.9 178.4c-14.8 2.5-30-2.5-40.8-13.2L184.9 721.9 295.7 611l119.8 120 .9.9 21.6-8a481.29 481.29 0 0 0 285.7-285.8l8-21.6-120.8-120.7 110.8-110.9 104.5 104.5c10.8 10.8 15.8 26 13.3 40.8z"));
var PictureOutline = dist.PictureOutline = getIcon$1("picture", outline, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2zM304 456a88 88 0 1 0 0-176 88 88 0 0 0 0 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z"));
var PieChartOutline = dist.PieChartOutline = getIcon$1("pie-chart", outline, getNode(newViewBox, "M864 518H506V160c0-4.4-3.6-8-8-8h-26a398.46 398.46 0 0 0-282.8 117.1 398.19 398.19 0 0 0-85.7 127.1A397.61 397.61 0 0 0 72 552a398.46 398.46 0 0 0 117.1 282.8c36.7 36.7 79.5 65.6 127.1 85.7A397.61 397.61 0 0 0 472 952a398.46 398.46 0 0 0 282.8-117.1c36.7-36.7 65.6-79.5 85.7-127.1A397.61 397.61 0 0 0 872 552v-26c0-4.4-3.6-8-8-8zM705.7 787.8A331.59 331.59 0 0 1 470.4 884c-88.1-.4-170.9-34.9-233.2-97.2C174.5 724.1 140 640.7 140 552c0-88.7 34.5-172.1 97.2-234.8 54.6-54.6 124.9-87.9 200.8-95.5V586h364.3c-7.7 76.3-41.3 147-96.6 201.8zM952 462.4l-2.6-28.2c-8.5-92.1-49.4-179-115.2-244.6A399.4 399.4 0 0 0 589 74.6L560.7 72c-4.7-.4-8.7 3.2-8.7 7.9V464c0 4.4 3.6 8 8 8l384-1c4.7 0 8.4-4 8-8.6zm-332.2-58.2V147.6a332.24 332.24 0 0 1 166.4 89.8c45.7 45.6 77 103.6 90 166.1l-256.4.7z"));
var PlaySquareOutline = dist.PlaySquareOutline = getIcon$1("play-square", outline, getNode(newViewBox, "M442.3 677.6l199.4-156.7a11.3 11.3 0 0 0 0-17.7L442.3 346.4c-7.4-5.8-18.3-.6-18.3 8.8v313.5c0 9.4 10.9 14.7 18.3 8.9z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var PlayCircleOutline = dist.PlayCircleOutline = getIcon$1("play-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z", "M719.4 499.1l-296.1-215A15.9 15.9 0 0 0 398 297v430c0 13.1 14.8 20.5 25.3 12.9l296.1-215a15.9 15.9 0 0 0 0-25.8zm-257.6 134V390.9L628.5 512 461.8 633.1z"));
var PlusCircleOutline = dist.PlusCircleOutline = getIcon$1("plus-circle", outline, getNode(newViewBox, "M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z", "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var PrinterOutline = dist.PrinterOutline = getIcon$1("printer", outline, getNode(newViewBox, "M820 436h-40c-4.4 0-8 3.6-8 8v40c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-40c0-4.4-3.6-8-8-8zm32-104H732V120c0-4.4-3.6-8-8-8H300c-4.4 0-8 3.6-8 8v212H172c-44.2 0-80 35.8-80 80v328c0 17.7 14.3 32 32 32h168v132c0 4.4 3.6 8 8 8h424c4.4 0 8-3.6 8-8V772h168c17.7 0 32-14.3 32-32V412c0-44.2-35.8-80-80-80zM360 180h304v152H360V180zm304 664H360V568h304v276zm200-140H732V500H292v204H160V412c0-6.6 5.4-12 12-12h680c6.6 0 12 5.4 12 12v292z"));
var PlusSquareOutline = dist.PlusSquareOutline = getIcon$1("plus-square", outline, getNode(newViewBox, "M328 544h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var ProfileOutline = dist.ProfileOutline = getIcon$1("profile", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656zM492 400h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H492c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm0 144h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H492c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm0 144h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H492c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zM340 368a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0 144a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0 144a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var ProjectOutline = dist.ProjectOutline = getIcon$1("project", outline, getNode(newViewBox, "M280 752h80c4.4 0 8-3.6 8-8V280c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8zm192-280h80c4.4 0 8-3.6 8-8V280c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8v184c0 4.4 3.6 8 8 8zm192 72h80c4.4 0 8-3.6 8-8V280c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8v256c0 4.4 3.6 8 8 8zm216-432H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var PushpinOutline = dist.PushpinOutline = getIcon$1("pushpin", outline, getNode(newViewBox, "M878.3 392.1L631.9 145.7c-6.5-6.5-15-9.7-23.5-9.7s-17 3.2-23.5 9.7L423.8 306.9c-12.2-1.4-24.5-2-36.8-2-73.2 0-146.4 24.1-206.5 72.3a33.23 33.23 0 0 0-2.7 49.4l181.7 181.7-215.4 215.2a15.8 15.8 0 0 0-4.6 9.8l-3.4 37.2c-.9 9.4 6.6 17.4 15.9 17.4.5 0 1 0 1.5-.1l37.2-3.4c3.7-.3 7.2-2 9.8-4.6l215.4-215.4 181.7 181.7c6.5 6.5 15 9.7 23.5 9.7 9.7 0 19.3-4.2 25.9-12.4 56.3-70.3 79.7-158.3 70.2-243.4l161.1-161.1c12.9-12.8 12.9-33.8 0-46.8zM666.2 549.3l-24.5 24.5 3.8 34.4a259.92 259.92 0 0 1-30.4 153.9L262 408.8c12.9-7.1 26.3-13.1 40.3-17.9 27.2-9.4 55.7-14.1 84.7-14.1 9.6 0 19.3.5 28.9 1.6l34.4 3.8 24.5-24.5L608.5 224 800 415.5 666.2 549.3z"));
var PropertySafetyOutline = dist.PropertySafetyOutline = getIcon$1("property-safety", outline, getNode(newViewBox, "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6zM430.5 318h-46c-1.7 0-3.3.4-4.8 1.2a10.1 10.1 0 0 0-4 13.6l88 161.1h-45.2c-5.5 0-10 4.5-10 10v21.3c0 5.5 4.5 10 10 10h63.1v29.7h-63.1c-5.5 0-10 4.5-10 10v21.3c0 5.5 4.5 10 10 10h63.1V658c0 5.5 4.5 10 10 10h41.3c5.5 0 10-4.5 10-10v-51.8h63.4c5.5 0 10-4.5 10-10v-21.3c0-5.5-4.5-10-10-10h-63.4v-29.7h63.4c5.5 0 10-4.5 10-10v-21.3c0-5.5-4.5-10-10-10h-45.7l87.7-161.1a10.05 10.05 0 0 0-8.8-14.8h-45c-3.8 0-7.2 2.1-8.9 5.5l-73.2 144.3-72.9-144.3c-1.7-3.4-5.2-5.5-9-5.5z"));
var QuestionCircleOutline = dist.QuestionCircleOutline = getIcon$1("question-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z", "M623.6 316.7C593.6 290.4 554 276 512 276s-81.6 14.5-111.6 40.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56.1 72.7-21.2 8.1-39.2 22.3-52.1 40.9-13.1 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-22.7a48.3 48.3 0 0 1 30.9-44.8c59-22.7 97.1-74.7 97.1-132.5.1-39.3-17.1-76-48.3-103.3zM472 732a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var ReadOutline = dist.ReadOutline = getIcon$1("read", outline, getNode(newViewBox, "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 0 0 324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z"));
var ReconciliationOutline = dist.ReconciliationOutline = getIcon$1("reconciliation", outline, getNode(newViewBox, "M676 565c-50.8 0-92 41.2-92 92s41.2 92 92 92 92-41.2 92-92-41.2-92-92-92zm0 126c-18.8 0-34-15.2-34-34s15.2-34 34-34 34 15.2 34 34-15.2 34-34 34zm204-523H668c0-30.9-25.1-56-56-56h-80c-30.9 0-56 25.1-56 56H264c-17.7 0-32 14.3-32 32v200h-88c-17.7 0-32 14.3-32 32v448c0 17.7 14.3 32 32 32h336c17.7 0 32-14.3 32-32v-16h368c17.7 0 32-14.3 32-32V200c0-17.7-14.3-32-32-32zm-412 64h72v-56h64v56h72v48H468v-48zm-20 616H176V616h272v232zm0-296H176v-88h272v88zm392 240H512V432c0-17.7-14.3-32-32-32H304V240h100v104h336V240h100v552zM704 408v96c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-96c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zM592 512h48c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8z"));
var RedEnvelopeOutline = dist.RedEnvelopeOutline = getIcon$1("red-envelope", outline, getNode(newViewBox, "M440.6 462.6a8.38 8.38 0 0 0-7.5-4.6h-48.8c-1.3 0-2.6.4-3.9 1a8.4 8.4 0 0 0-3.4 11.4l87.4 161.1H419c-4.6 0-8.4 3.8-8.4 8.4V665c0 4.6 3.8 8.4 8.4 8.4h63V702h-63c-4.6 0-8.4 3.8-8.4 8.4v25.1c0 4.6 3.8 8.4 8.4 8.4h63v49.9c0 4.6 3.8 8.4 8.4 8.4h43.7c4.6 0 8.4-3.8 8.4-8.4v-49.9h63.3c4.7 0 8.4-3.8 8.2-8.5v-25c0-4.6-3.8-8.4-8.4-8.4h-63.3v-28.6h63.3c4.6 0 8.4-3.8 8.4-8.4v-25.1c0-4.6-3.8-8.4-8.4-8.4h-45.9l87.2-161a8.45 8.45 0 0 0-7.4-12.4h-47.8c-3.1 0-6 1.8-7.5 4.6l-71.9 141.9-71.7-142zM832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-40 824H232V193.1l260.3 204.1c11.6 9.1 27.9 9.1 39.5 0L792 193.1V888zm0-751.3h-31.7L512 331.3 263.7 136.7H232v-.7h560v.7z"));
var RestOutline = dist.RestOutline = getIcon$1("rest", outline, getNode(newViewBox, "M508 704c79.5 0 144-64.5 144-144s-64.5-144-144-144-144 64.5-144 144 64.5 144 144 144zm0-224c44.2 0 80 35.8 80 80s-35.8 80-80 80-80-35.8-80-80 35.8-80 80-80z", "M832 256h-28.1l-35.7-120.9c-4-13.7-16.5-23.1-30.7-23.1h-451c-14.3 0-26.8 9.4-30.7 23.1L220.1 256H192c-17.7 0-32 14.3-32 32v28c0 4.4 3.6 8 8 8h45.8l47.7 558.7a32 32 0 0 0 31.9 29.3h429.2a32 32 0 0 0 31.9-29.3L802.2 324H856c4.4 0 8-3.6 8-8v-28c0-17.7-14.3-32-32-32zm-518.6-76h397.2l22.4 76H291l22.4-76zm376.2 664H326.4L282 324h451.9l-44.3 520z"));
var RightCircleOutline = dist.RightCircleOutline = getIcon$1("right-circle", outline, getNode(newViewBox, "M666.7 505.5l-246-178A8 8 0 0 0 408 334v46.9c0 10.2 4.9 19.9 13.2 25.9L566.6 512 421.2 617.2c-8.3 6-13.2 15.6-13.2 25.9V690c0 6.5 7.4 10.3 12.7 6.5l246-178c4.4-3.2 4.4-9.8 0-13z", "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var RocketOutline = dist.RocketOutline = getIcon$1("rocket", outline, getNode(newViewBox, "M864 736c0-111.6-65.4-208-160-252.9V317.3c0-15.1-5.3-29.7-15.1-41.2L536.5 95.4C530.1 87.8 521 84 512 84s-18.1 3.8-24.5 11.4L335.1 276.1a63.97 63.97 0 0 0-15.1 41.2v165.8C225.4 528 160 624.4 160 736h156.5c-2.3 7.2-3.5 15-3.5 23.8 0 22.1 7.6 43.7 21.4 60.8a97.2 97.2 0 0 0 43.1 30.6c23.1 54 75.6 88.8 134.5 88.8 29.1 0 57.3-8.6 81.4-24.8 23.6-15.8 41.9-37.9 53-64a97 97 0 0 0 43.1-30.5 97.52 97.52 0 0 0 21.4-60.8c0-8.4-1.1-16.4-3.1-23.8H864zM762.3 621.4c9.4 14.6 17 30.3 22.5 46.6H700V558.7a211.6 211.6 0 0 1 62.3 62.7zM388 483.1V318.8l124-147 124 147V668H388V483.1zM239.2 668c5.5-16.3 13.1-32 22.5-46.6 16.3-25.2 37.5-46.5 62.3-62.7V668h-84.8zm388.9 116.2c-5.2 3-11.2 4.2-17.1 3.4l-19.5-2.4-2.8 19.4c-5.4 37.9-38.4 66.5-76.7 66.5-38.3 0-71.3-28.6-76.7-66.5l-2.8-19.5-19.5 2.5a27.7 27.7 0 0 1-17.1-3.5c-8.7-5-14.1-14.3-14.1-24.4 0-10.6 5.9-19.4 14.6-23.8h231.3c8.8 4.5 14.6 13.3 14.6 23.8-.1 10.2-5.5 19.6-14.2 24.5zM464 400a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"));
var RightSquareOutline = dist.RightSquareOutline = getIcon$1("right-square", outline, getNode(newViewBox, "M412.7 696.5l246-178c4.4-3.2 4.4-9.7 0-12.9l-246-178c-5.3-3.8-12.7 0-12.7 6.5V381c0 10.2 4.9 19.9 13.2 25.9L558.6 512 413.2 617.2c-8.3 6-13.2 15.6-13.2 25.9V690c0 6.5 7.4 10.3 12.7 6.5z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var SafetyCertificateOutline = dist.SafetyCertificateOutline = getIcon$1("safety-certificate", outline, getNode(newViewBox, "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6zm-405.8-201c-3-4.1-7.8-6.6-13-6.6H336c-6.5 0-10.3 7.4-6.5 12.7l126.4 174a16.1 16.1 0 0 0 26 0l212.6-292.7c3.8-5.3 0-12.7-6.5-12.7h-55.2c-5.1 0-10 2.5-13 6.6L468.9 542.4l-64.7-89.1z"));
var ScheduleOutline = dist.ScheduleOutline = getIcon$1("schedule", outline, getNode(newViewBox, "M928 224H768v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H548v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H328v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H96c-17.7 0-32 14.3-32 32v576c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32zm-40 568H136V296h120v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h120v496zM416 496H232c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0 136H232c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm308.2-177.4L620.6 598.3l-52.8-73.1c-3-4.2-7.8-6.6-12.9-6.6H500c-6.5 0-10.3 7.4-6.5 12.7l114.1 158.2a15.9 15.9 0 0 0 25.8 0l165-228.7c3.8-5.3 0-12.7-6.5-12.7H737c-5-.1-9.8 2.4-12.8 6.5z"));
var SaveOutline = dist.SaveOutline = getIcon$1("save", outline, getNode(newViewBox, "M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z"));
var SecurityScanOutline = dist.SecurityScanOutline = getIcon$1("security-scan", outline, getNode(newViewBox, "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6zM402.9 528.8l-77.5 77.5a8.03 8.03 0 0 0 0 11.3l34 34c3.1 3.1 8.2 3.1 11.3 0l77.5-77.5c55.7 35.1 130.1 28.4 178.6-20.1 56.3-56.3 56.3-147.5 0-203.8-56.3-56.3-147.5-56.3-203.8 0-48.5 48.5-55.2 123-20.1 178.6zm65.4-133.3c31.3-31.3 82-31.3 113.2 0 31.3 31.3 31.3 82 0 113.2-31.3 31.3-82 31.3-113.2 0s-31.3-81.9 0-113.2z"));
var SettingOutline = dist.SettingOutline = getIcon$1("setting", outline, getNode(newViewBox, "M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 0 0 9.3-35.2l-.9-2.6a443.74 443.74 0 0 0-79.7-137.9l-1.8-2.1a32.12 32.12 0 0 0-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 0 0-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 0 0-25.8 25.7l-15.8 85.4a351.86 351.86 0 0 0-99 57.4l-81.9-29.1a32 32 0 0 0-35.1 9.5l-1.8 2.1a446.02 446.02 0 0 0-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 0 0-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0 0 35.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0 0 25.8 25.7l2.7.5a449.4 449.4 0 0 0 159 0l2.7-.5a32.05 32.05 0 0 0 25.8-25.7l15.7-85a350 350 0 0 0 99.7-57.6l81.3 28.9a32 32 0 0 0 35.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 0 1-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 0 1-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 0 1 512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 0 1 400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 0 1 624 502c0 29.9-11.7 58-32.8 79.2z"));
var ShoppingOutline = dist.ShoppingOutline = getIcon$1("shopping", outline, getNode(newViewBox, "M832 312H696v-16c0-101.6-82.4-184-184-184s-184 82.4-184 184v16H192c-17.7 0-32 14.3-32 32v536c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V344c0-17.7-14.3-32-32-32zm-432-16c0-61.9 50.1-112 112-112s112 50.1 112 112v16H400v-16zm392 544H232V384h96v88c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-88h224v88c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-88h96v456z"));
var SkinOutline = dist.SkinOutline = getIcon$1("skin", outline, getNode(newViewBox, "M870 126H663.8c-17.4 0-32.9 11.9-37 29.3C614.3 208.1 567 246 512 246s-102.3-37.9-114.8-90.7a37.93 37.93 0 0 0-37-29.3H154a44 44 0 0 0-44 44v252a44 44 0 0 0 44 44h75v388a44 44 0 0 0 44 44h478a44 44 0 0 0 44-44V466h75a44 44 0 0 0 44-44V170a44 44 0 0 0-44-44zm-28 268H723v432H301V394H182V198h153.3c28.2 71.2 97.5 120 176.7 120s148.5-48.8 176.7-120H842v196z"));
var SkypeOutline = dist.SkypeOutline = getIcon$1("skype", outline, getNode(newViewBox, "M883.7 578.6c4.1-22.5 6.3-45.5 6.3-68.5 0-51-10-100.5-29.7-147-19-45-46.3-85.4-81-120.1a375.79 375.79 0 0 0-120.1-80.9c-46.6-19.7-96-29.7-147-29.7-24 0-48.1 2.3-71.5 6.8A225.1 225.1 0 0 0 335.6 113c-59.7 0-115.9 23.3-158.1 65.5A222.25 222.25 0 0 0 112 336.6c0 38 9.8 75.4 28.1 108.4-3.7 21.4-5.7 43.3-5.7 65.1 0 51 10 100.5 29.7 147 19 45 46.2 85.4 80.9 120.1 34.7 34.7 75.1 61.9 120.1 80.9 46.6 19.7 96 29.7 147 29.7 22.2 0 44.4-2 66.2-5.9 33.5 18.9 71.3 29 110 29 59.7 0 115.9-23.2 158.1-65.5 42.3-42.2 65.5-98.4 65.5-158.1.1-38-9.7-75.5-28.2-108.7zm-88.1 216C766.9 823.4 729 839 688.4 839c-26.1 0-51.8-6.8-74.6-19.7l-22.5-12.7-25.5 4.5c-17.8 3.2-35.8 4.8-53.6 4.8-41.4 0-81.3-8.1-119.1-24.1-36.3-15.3-69-37.3-97.2-65.5a304.29 304.29 0 0 1-65.5-97.1c-16-37.7-24-77.6-24-119 0-17.4 1.6-35.2 4.6-52.8l4.4-25.1L203 410a151.02 151.02 0 0 1-19.1-73.4c0-40.6 15.7-78.5 44.4-107.2C257.1 200.7 295 185 335.6 185a153 153 0 0 1 71.4 17.9l22.4 11.8 24.8-4.8c18.9-3.6 38.4-5.5 58-5.5 41.4 0 81.3 8.1 119 24 36.5 15.4 69.1 37.4 97.2 65.5 28.2 28.1 50.2 60.8 65.6 97.2 16 37.7 24 77.6 24 119 0 18.4-1.7 37-5.1 55.5l-4.7 25.5 12.6 22.6c12.6 22.5 19.2 48 19.2 73.7 0 40.7-15.7 78.5-44.4 107.2zM583.4 466.2L495 446.6c-33.6-7.7-72.3-17.8-72.3-49.5s27.1-53.9 76.1-53.9c98.7 0 89.7 67.8 138.7 67.8 25.8 0 48.4-15.2 48.4-41.2 0-60.8-97.4-106.5-180-106.5-89.7 0-185.2 38.1-185.2 139.5 0 48.8 17.4 100.8 113.6 124.9l119.4 29.8c36.1 8.9 45.2 29.2 45.2 47.6 0 30.5-30.3 60.3-85.2 60.3-107.2 0-92.3-82.5-149.7-82.5-25.8 0-44.5 17.8-44.5 43.1 0 49.4 60 115.4 194.2 115.4 127.7 0 191-61.5 191-144 0-53.1-24.5-109.6-121.3-131.2z"));
var SlackSquareOutline = dist.SlackSquareOutline = getIcon$1("slack-square", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM529 311.4c0-27.8 22.5-50.4 50.3-50.4 27.8 0 50.3 22.6 50.3 50.4v134.4c0 27.8-22.5 50.4-50.3 50.4-27.8 0-50.3-22.6-50.3-50.4V311.4zM361.5 580.2c0 27.8-22.5 50.4-50.3 50.4a50.35 50.35 0 0 1-50.3-50.4c0-27.8 22.5-50.4 50.3-50.4h50.3v50.4zm134 134.4c0 27.8-22.5 50.4-50.3 50.4-27.8 0-50.3-22.6-50.3-50.4V580.2c0-27.8 22.5-50.4 50.3-50.4a50.35 50.35 0 0 1 50.3 50.4v134.4zm-50.2-218.4h-134c-27.8 0-50.3-22.6-50.3-50.4 0-27.8 22.5-50.4 50.3-50.4h134c27.8 0 50.3 22.6 50.3 50.4-.1 27.9-22.6 50.4-50.3 50.4zm0-134.4c-13.3 0-26.1-5.3-35.6-14.8S395 324.8 395 311.4c0-27.8 22.5-50.4 50.3-50.4 27.8 0 50.3 22.6 50.3 50.4v50.4h-50.3zm134 403.2c-27.8 0-50.3-22.6-50.3-50.4v-50.4h50.3c27.8 0 50.3 22.6 50.3 50.4 0 27.8-22.5 50.4-50.3 50.4zm134-134.4h-134a50.35 50.35 0 0 1-50.3-50.4c0-27.8 22.5-50.4 50.3-50.4h134c27.8 0 50.3 22.6 50.3 50.4 0 27.8-22.5 50.4-50.3 50.4zm0-134.4H663v-50.4c0-27.8 22.5-50.4 50.3-50.4s50.3 22.6 50.3 50.4c0 27.8-22.5 50.4-50.3 50.4z"));
var SlidersOutline = dist.SlidersOutline = getIcon$1("sliders", outline, getNode(newViewBox, "M320 224h-66v-56c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v56h-66c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8h66v56c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8v-56h66c4.4 0 8-3.6 8-8V232c0-4.4-3.6-8-8-8zm-60 508h-80V292h80v440zm644-436h-66v-96c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v96h-66c-4.4 0-8 3.6-8 8v416c0 4.4 3.6 8 8 8h66v96c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8v-96h66c4.4 0 8-3.6 8-8V304c0-4.4-3.6-8-8-8zm-60 364h-80V364h80v296zM612 404h-66V232c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v172h-66c-4.4 0-8 3.6-8 8v200c0 4.4 3.6 8 8 8h66v172c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V620h66c4.4 0 8-3.6 8-8V412c0-4.4-3.6-8-8-8zm-60 145a3 3 0 0 1-3 3h-74a3 3 0 0 1-3-3v-74a3 3 0 0 1 3-3h74a3 3 0 0 1 3 3v74z"));
var SmileOutline = dist.SmileOutline = getIcon$1("smile", outline, getNode(newViewBox, "M288 421a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm352 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 0 1 248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 0 1 249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 0 1 775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 0 1 775 775zM664 533h-48.1c-4.2 0-7.8 3.2-8.1 7.4C604 589.9 562.5 629 512 629s-92.1-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 0 0-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 0 0-8-8.4z"));
var SnippetsOutline = dist.SnippetsOutline = getIcon$1("snippets", outline, getNode(newViewBox, "M832 112H724V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H500V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H320c-17.7 0-32 14.3-32 32v120h-96c-17.7 0-32 14.3-32 32v632c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32v-96h96c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM664 888H232V336h218v174c0 22.1 17.9 40 40 40h174v338zm0-402H514V336h.2L664 485.8v.2zm128 274h-56V456L544 264H360v-80h68v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h152v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h68v576z"));
var SoundOutline = dist.SoundOutline = getIcon$1("sound", outline, getNode(newViewBox, "M625.9 115c-5.9 0-11.9 1.6-17.4 5.3L254 352H90c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h164l354.5 231.7c5.5 3.6 11.6 5.3 17.4 5.3 16.7 0 32.1-13.3 32.1-32.1V147.1c0-18.8-15.4-32.1-32.1-32.1zM586 803L293.4 611.7l-18-11.7H146V424h129.4l17.9-11.7L586 221v582zm348-327H806c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16h128c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16zm-41.9 261.8l-110.3-63.7a15.9 15.9 0 0 0-21.7 5.9l-19.9 34.5c-4.4 7.6-1.8 17.4 5.8 21.8L856.3 800a15.9 15.9 0 0 0 21.7-5.9l19.9-34.5c4.4-7.6 1.7-17.4-5.8-21.8zM760 344a15.9 15.9 0 0 0 21.7 5.9L892 286.2c7.6-4.4 10.2-14.2 5.8-21.8L878 230a15.9 15.9 0 0 0-21.7-5.9L746 287.8a15.99 15.99 0 0 0-5.8 21.8L760 344z"));
var StarOutline = dist.StarOutline = getIcon$1("star", outline, getNode(newViewBox, "M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 0 0 .6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0 0 46.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3zM664.8 561.6l36.1 210.3L512 672.7 323.1 772l36.1-210.3-152.8-149L417.6 382 512 190.7 606.4 382l211.2 30.7-152.8 148.9z"));
var StepBackwardOutline = dist.StepBackwardOutline = getIcon$1("step-backward", outline, getNode(normalViewBox, "M347.6 528.95l383.2 301.02c14.25 11.2 35.2 1.1 35.2-16.95V210.97c0-18.05-20.95-28.14-35.2-16.94L347.6 495.05a21.53 21.53 0 0 0 0 33.9M330 864h-64a8 8 0 0 1-8-8V168a8 8 0 0 1 8-8h64a8 8 0 0 1 8 8v688a8 8 0 0 1-8 8"));
var StepForwardOutline = dist.StepForwardOutline = getIcon$1("step-forward", outline, getNode(normalViewBox, "M676.4 528.95L293.2 829.97c-14.25 11.2-35.2 1.1-35.2-16.95V210.97c0-18.05 20.95-28.14 35.2-16.94l383.2 301.02a21.53 21.53 0 0 1 0 33.9M694 864h64a8 8 0 0 0 8-8V168a8 8 0 0 0-8-8h-64a8 8 0 0 0-8 8v688a8 8 0 0 0 8 8"));
var StopOutline = dist.StopOutline = getIcon$1("stop", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372 0-89 31.3-170.8 83.5-234.8l523.3 523.3C682.8 852.7 601 884 512 884zm288.5-137.2L277.2 223.5C341.2 171.3 423 140 512 140c205.4 0 372 166.6 372 372 0 89-31.3 170.8-83.5 234.8z"));
var SwitcherOutline = dist.SwitcherOutline = getIcon$1("switcher", outline, getNode(newViewBox, "M752 240H144c-17.7 0-32 14.3-32 32v608c0 17.7 14.3 32 32 32h608c17.7 0 32-14.3 32-32V272c0-17.7-14.3-32-32-32zm-40 600H184V312h528v528zm168-728H264c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h576v576c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V144c0-17.7-14.3-32-32-32zM300 550h296v64H300z"));
var TagOutline = dist.TagOutline = getIcon$1("tag", outline, getNode(newViewBox, "M938 458.8l-29.6-312.6c-1.5-16.2-14.4-29-30.6-30.6L565.2 86h-.4c-3.2 0-5.7 1-7.6 2.9L88.9 557.2a9.96 9.96 0 0 0 0 14.1l363.8 363.8c1.9 1.9 4.4 2.9 7.1 2.9s5.2-1 7.1-2.9l468.3-468.3c2-2.1 3-5 2.8-8zM459.7 834.7L189.3 564.3 589 164.6 836 188l23.4 247-399.7 399.7zM680 256c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88zm0 120c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"));
var TabletOutline = dist.TabletOutline = getIcon$1("tablet", outline, getNode(newViewBox, "M800 64H224c-35.3 0-64 28.7-64 64v768c0 35.3 28.7 64 64 64h576c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zm-8 824H232V136h560v752zM472 784a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var ShopOutline = dist.ShopOutline = getIcon$1("shop", outline, getNode(newViewBox, "M882 272.1V144c0-17.7-14.3-32-32-32H174c-17.7 0-32 14.3-32 32v128.1c-16.7 1-30 14.9-30 31.9v131.7a177 177 0 0 0 14.4 70.4c4.3 10.2 9.6 19.8 15.6 28.9v345c0 17.6 14.3 32 32 32h676c17.7 0 32-14.3 32-32V535a175 175 0 0 0 15.6-28.9c9.5-22.3 14.4-46 14.4-70.4V304c0-17-13.3-30.9-30-31.9zM214 184h596v88H214v-88zm362 656.1H448V736h128v104.1zm234 0H640V704c0-17.7-14.3-32-32-32H416c-17.7 0-32 14.3-32 32v136.1H214V597.9c2.9 1.4 5.9 2.8 9 4 22.3 9.4 46 14.1 70.4 14.1s48-4.7 70.4-14.1c13.8-5.8 26.8-13.2 38.7-22.1.2-.1.4-.1.6 0a180.4 180.4 0 0 0 38.7 22.1c22.3 9.4 46 14.1 70.4 14.1 24.4 0 48-4.7 70.4-14.1 13.8-5.8 26.8-13.2 38.7-22.1.2-.1.4-.1.6 0a180.4 180.4 0 0 0 38.7 22.1c22.3 9.4 46 14.1 70.4 14.1 24.4 0 48-4.7 70.4-14.1 3-1.3 6-2.6 9-4v242.2zm30-404.4c0 59.8-49 108.3-109.3 108.3-40.8 0-76.4-22.1-95.2-54.9-2.9-5-8.1-8.1-13.9-8.1h-.6c-5.7 0-11 3.1-13.9 8.1A109.24 109.24 0 0 1 512 544c-40.7 0-76.2-22-95-54.7-3-5.1-8.4-8.3-14.3-8.3s-11.4 3.2-14.3 8.3a109.63 109.63 0 0 1-95.1 54.7C233 544 184 495.5 184 435.7v-91.2c0-.3.2-.5.5-.5h655c.3 0 .5.2.5.5v91.2z"));
var TagsOutline = dist.TagsOutline = getIcon$1("tags", outline, getNode(newViewBox, "M483.2 790.3L861.4 412c1.7-1.7 2.5-4 2.3-6.3l-25.5-301.4c-.7-7.8-6.8-13.9-14.6-14.6L522.2 64.3c-2.3-.2-4.7.6-6.3 2.3L137.7 444.8a8.03 8.03 0 0 0 0 11.3l334.2 334.2c3.1 3.2 8.2 3.2 11.3 0zm62.6-651.7l224.6 19 19 224.6L477.5 694 233.9 450.5l311.9-311.9zm60.16 186.23a48 48 0 1 0 67.88-67.89 48 48 0 1 0-67.88 67.89zM889.7 539.8l-39.6-39.5a8.03 8.03 0 0 0-11.3 0l-362 361.3-237.6-237a8.03 8.03 0 0 0-11.3 0l-39.6 39.5a8.03 8.03 0 0 0 0 11.3l243.2 242.8 39.6 39.5c3.1 3.1 8.2 3.1 11.3 0l407.3-406.6c3.1-3.1 3.1-8.2 0-11.3z"));
var TaobaoCircleOutline = dist.TaobaoCircleOutline = getIcon$1("taobao-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zM315.7 291.5c27.3 0 49.5 22.1 49.5 49.4s-22.1 49.4-49.5 49.4a49.4 49.4 0 1 1 0-98.8zM366.9 578c-13.6 42.3-10.2 26.7-64.4 144.5l-78.5-49s87.7-79.8 105.6-116.2c19.2-38.4-21.1-58.9-21.1-58.9l-60.2-37.5 32.7-50.2c45.4 33.7 48.7 36.6 79.2 67.2 23.8 23.9 20.7 56.8 6.7 100.1zm427.2 55c-15.3 143.8-202.4 90.3-202.4 90.3l10.2-41.1 43.3 9.3c80 5 72.3-64.9 72.3-64.9V423c.6-77.3-72.6-85.4-204.2-38.3l30.6 8.3c-2.5 9-12.5 23.2-25.2 38.6h176v35.6h-99.1v44.5h98.7v35.7h-98.7V622c14.9-4.8 28.6-11.5 40.5-20.5l-8.7-32.5 46.5-14.4 38.8 94.9-57.3 23.9-10.2-37.8c-25.6 19.5-78.8 48-171.8 45.4-99.2 2.6-73.7-112-73.7-112l2.5-1.3H472c-.5 14.7-6.6 38.7 1.7 51.8 6.8 10.8 24.2 12.6 35.3 13.1 1.3.1 2.6.1 3.9.1v-85.3h-101v-35.7h101v-44.5H487c-22.7 24.1-43.5 44.1-43.5 44.1l-30.6-26.7c21.7-22.9 43.3-59.1 56.8-83.2-10.9 4.4-22 9.2-33.6 14.2-11.2 14.3-24.2 29-38.7 43.5.5.8-50-28.4-50-28.4 52.2-44.4 81.4-139.9 81.4-139.9l72.5 20.4s-5.9 14-18.4 35.6c290.3-82.3 307.4 50.5 307.4 50.5s19.1 91.8 3.8 235.7z"));
var ToolOutline = dist.ToolOutline = getIcon$1("tool", outline, getNode(newViewBox, "M876.6 239.5c-.5-.9-1.2-1.8-2-2.5-5-5-13.1-5-18.1 0L684.2 409.3l-67.9-67.9L788.7 169c.8-.8 1.4-1.6 2-2.5 3.6-6.1 1.6-13.9-4.5-17.5-98.2-58-226.8-44.7-311.3 39.7-67 67-89.2 162-66.5 247.4l-293 293c-3 3-2.8 7.9.3 11l169.7 169.7c3.1 3.1 8.1 3.3 11 .3l292.9-292.9c85.5 22.8 180.5.7 247.6-66.4 84.4-84.5 97.7-213.1 39.7-311.3zM786 499.8c-58.1 58.1-145.3 69.3-214.6 33.6l-8.8 8.8-.1-.1-274 274.1-79.2-79.2 230.1-230.1s0 .1.1.1l52.8-52.8c-35.7-69.3-24.5-156.5 33.6-214.6a184.2 184.2 0 0 1 144-53.5L537 318.9a32.05 32.05 0 0 0 0 45.3l124.5 124.5a32.05 32.05 0 0 0 45.3 0l132.8-132.8c3.7 51.8-14.4 104.8-53.6 143.9z"));
var ThunderboltOutline = dist.ThunderboltOutline = getIcon$1("thunderbolt", outline, getNode(newViewBox, "M848 359.3H627.7L825.8 109c4.1-5.3.4-13-6.3-13H436c-2.8 0-5.5 1.5-6.9 4L170 547.5c-3.1 5.3.7 12 6.9 12h174.4l-89.4 357.6c-1.9 7.8 7.5 13.3 13.3 7.7L853.5 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.2 732.5l60.3-241H281.1l189.6-327.4h224.6L487 427.4h211L378.2 732.5z"));
var TrophyOutline = dist.TrophyOutline = getIcon$1("trophy", outline, getNode(newViewBox, "M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 0 0-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 0 0-44-44zM184 352V232h64v207.6a91.99 91.99 0 0 1-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z"));
var UnlockOutline = dist.UnlockOutline = getIcon$1("unlock", outline, getNode(newViewBox, "M832 464H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v68c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-68c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zm-40 376H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 1 0-56 0z"));
var UpCircleOutline = dist.UpCircleOutline = getIcon$1("up-circle", outline, getNode(newViewBox, "M518.5 360.3a7.95 7.95 0 0 0-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z", "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"));
var UpSquareOutline = dist.UpSquareOutline = getIcon$1("up-square", outline, getNode(newViewBox, "M334 624h46.9c10.2 0 19.9-4.9 25.9-13.2L512 465.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246a7.95 7.95 0 0 0-12.9 0l-178 246A7.96 7.96 0 0 0 334 624z", "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var UsbOutline = dist.UsbOutline = getIcon$1("usb", outline, getNode(newViewBox, "M760 432V144c0-17.7-14.3-32-32-32H296c-17.7 0-32 14.3-32 32v288c-66.2 0-120 52.1-120 116v356c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V548c0-24.3 21.6-44 48.1-44h495.8c26.5 0 48.1 19.7 48.1 44v356c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V548c0-63.9-53.8-116-120-116zm-424 0V184h352v248H336zm120-184h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm160 0h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"));
var VideoCameraOutline = dist.VideoCameraOutline = getIcon$1("video-camera", outline, getNode(newViewBox, "M912 302.3L784 376V224c0-35.3-28.7-64-64-64H128c-35.3 0-64 28.7-64 64v576c0 35.3 28.7 64 64 64h592c35.3 0 64-28.7 64-64V648l128 73.7c21.3 12.3 48-3.1 48-27.6V330c0-24.6-26.7-40-48-27.7zM712 792H136V232h576v560zm176-167l-104-59.8V458.9L888 399v226zM208 360h112c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H208c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"));
var WalletOutline = dist.WalletOutline = getIcon$1("wallet", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 464H528V448h312v128zm0 264H184V184h656v200H496c-17.7 0-32 14.3-32 32v192c0 17.7 14.3 32 32 32h344v200zM580 512a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var WarningOutline = dist.WarningOutline = getIcon$1("warning", outline, getNode(newViewBox, "M464 720a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z"));
var WechatOutline = dist.WechatOutline = getIcon$1("wechat", outline, getNode(newViewBox, "M690.1 377.4c5.9 0 11.8.2 17.6.5-24.4-128.7-158.3-227.1-319.9-227.1C209 150.8 64 271.4 64 420.2c0 81.1 43.6 154.2 111.9 203.6a21.5 21.5 0 0 1 9.1 17.6c0 2.4-.5 4.6-1.1 6.9-5.5 20.3-14.2 52.8-14.6 54.3-.7 2.6-1.7 5.2-1.7 7.9 0 5.9 4.8 10.8 10.8 10.8 2.3 0 4.2-.9 6.2-2l70.9-40.9c5.3-3.1 11-5 17.2-5 3.2 0 6.4.5 9.5 1.4 33.1 9.5 68.8 14.8 105.7 14.8 6 0 11.9-.1 17.8-.4-7.1-21-10.9-43.1-10.9-66 0-135.8 132.2-245.8 295.3-245.8zm-194.3-86.5c23.8 0 43.2 19.3 43.2 43.1s-19.3 43.1-43.2 43.1c-23.8 0-43.2-19.3-43.2-43.1s19.4-43.1 43.2-43.1zm-215.9 86.2c-23.8 0-43.2-19.3-43.2-43.1s19.3-43.1 43.2-43.1 43.2 19.3 43.2 43.1-19.4 43.1-43.2 43.1zm586.8 415.6c56.9-41.2 93.2-102 93.2-169.7 0-124-120.8-224.5-269.9-224.5-149 0-269.9 100.5-269.9 224.5S540.9 847.5 690 847.5c30.8 0 60.6-4.4 88.1-12.3 2.6-.8 5.2-1.2 7.9-1.2 5.2 0 9.9 1.6 14.3 4.1l59.1 34c1.7 1 3.3 1.7 5.2 1.7a9 9 0 0 0 6.4-2.6 9 9 0 0 0 2.6-6.4c0-2.2-.9-4.4-1.4-6.6-.3-1.2-7.6-28.3-12.2-45.3-.5-1.9-.9-3.8-.9-5.7.1-5.9 3.1-11.2 7.6-14.5zM600.2 587.2c-19.9 0-36-16.1-36-35.9 0-19.8 16.1-35.9 36-35.9s36 16.1 36 35.9c0 19.8-16.2 35.9-36 35.9zm179.9 0c-19.9 0-36-16.1-36-35.9 0-19.8 16.1-35.9 36-35.9s36 16.1 36 35.9a36.08 36.08 0 0 1-36 35.9z"));
var WeiboCircleOutline = dist.WeiboCircleOutline = getIcon$1("weibo-circle", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-44.4 672C353.1 736 236 680.4 236 588.9c0-47.8 30.2-103.1 82.3-155.3 69.5-69.6 150.6-101.4 181.1-70.8 13.5 13.5 14.8 36.8 6.1 64.6-4.5 14 13.1 6.3 13.1 6.3 56.2-23.6 105.2-25 123.1.7 9.6 13.7 8.6 32.8-.2 55.1-4.1 10.2 1.3 11.8 9 14.1 31.7 9.8 66.9 33.6 66.9 75.5.2 69.5-99.7 156.9-249.8 156.9zm207.3-290.8a34.9 34.9 0 0 0-7.2-34.1 34.68 34.68 0 0 0-33.1-10.7 18.24 18.24 0 0 1-7.6-35.7c24.1-5.1 50.1 2.3 67.7 21.9 17.7 19.6 22.4 46.3 14.9 69.8a18.13 18.13 0 0 1-22.9 11.7 18.18 18.18 0 0 1-11.8-22.9zm106 34.3s0 .1 0 0a21.1 21.1 0 0 1-26.6 13.7 21.19 21.19 0 0 1-13.6-26.7c11-34.2 4-73.2-21.7-101.8a104.04 104.04 0 0 0-98.9-32.1 21.14 21.14 0 0 1-25.1-16.3 21.07 21.07 0 0 1 16.2-25.1c49.4-10.5 102.8 4.8 139.1 45.1 36.3 40.2 46.1 95.1 30.6 143.2zm-334.5 6.1c-91.4 9-160.7 65.1-154.7 125.2 5.9 60.1 84.8 101.5 176.2 92.5 91.4-9.1 160.7-65.1 154.7-125.3-5.9-60.1-84.8-101.5-176.2-92.4zm80.2 141.7c-18.7 42.3-72.3 64.8-117.8 50.1-43.9-14.2-62.5-57.7-43.3-96.8 18.9-38.4 68-60.1 111.5-48.8 45 11.7 68 54.2 49.6 95.5zm-93-32.2c-14.2-5.9-32.4.2-41.2 13.9-8.8 13.8-4.7 30.2 9.3 36.6 14.3 6.5 33.2.3 42-13.8 8.8-14.3 4.2-30.6-10.1-36.7zm34.9-14.5c-5.4-2.2-12.2.5-15.4 5.8-3.1 5.4-1.4 11.5 4.1 13.8 5.5 2.3 12.6-.3 15.8-5.8 3-5.6 1-11.8-4.5-13.8z"));
var WindowsOutline = dist.WindowsOutline = getIcon$1("windows", outline, getNode(newViewBox, "M120.1 770.6L443 823.2V543.8H120.1v226.8zm63.4-163.5h196.2v141.6l-196.2-31.9V607.1zm340.3 226.5l382 62.2v-352h-382v289.8zm63.4-226.5h255.3v214.4l-255.3-41.6V607.1zm-63.4-415.7v288.8h382V128.1l-382 63.3zm318.7 225.5H587.3V245l255.3-42.3v214.2zm-722.4 63.3H443V201.9l-322.9 53.5v224.8zM183.5 309l196.2-32.5v140.4H183.5V309z"));
var YahooOutline = dist.YahooOutline = getIcon$1("yahoo", outline, getNode(newViewBox, "M859.9 681.4h-14.1c-27.1 0-49.2 22.2-49.2 49.3v14.1c0 27.1 22.2 49.3 49.2 49.3h14.1c27.1 0 49.2-22.2 49.2-49.3v-14.1c0-27.1-22.2-49.3-49.2-49.3zM402.6 231C216.2 231 65 357 65 512.5S216.2 794 402.6 794s337.6-126 337.6-281.5S589.1 231 402.6 231zm0 507C245.1 738 121 634.6 121 512.5c0-62.3 32.3-119.7 84.9-161v48.4h37l159.8 159.9v65.3h-84.4v56.3h225.1v-56.3H459v-65.3l103.5-103.6h65.3v-56.3H459v65.3l-28.1 28.1-93.4-93.5h37v-56.3H216.4c49.4-35 114.3-56.6 186.2-56.6 157.6 0 281.6 103.4 281.6 225.5S560.2 738 402.6 738zm534.7-507H824.7c-15.5 0-27.7 12.6-27.1 28.1l13.1 366h84.4l65.4-366.4c2.7-15.2-7.8-27.7-23.2-27.7z"));
var WeiboSquareOutline = dist.WeiboSquareOutline = getIcon$1("weibo-square", outline, getNode(newViewBox, "M433.6 595.1c-14.2-5.9-32.4.2-41.2 13.9-8.8 13.8-4.7 30.2 9.3 36.6 14.3 6.5 33.2.3 42-13.8 8.8-14.3 4.2-30.6-10.1-36.7zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM467.6 736C353.1 736 236 680.4 236 588.9c0-47.8 30.2-103.1 82.3-155.3 69.5-69.6 150.6-101.4 181.1-70.8 13.5 13.5 14.8 36.8 6.1 64.6-4.5 14 13.1 6.3 13.1 6.3 56.2-23.6 105.2-25 123.1.7 9.6 13.7 8.6 32.8-.2 55.1-4.1 10.2 1.3 11.8 9 14.1 31.7 9.8 66.9 33.6 66.9 75.5.2 69.5-99.7 156.9-249.8 156.9zm207.3-290.8a34.9 34.9 0 0 0-7.2-34.1 34.68 34.68 0 0 0-33.1-10.7 18.24 18.24 0 0 1-7.6-35.7c24.1-5.1 50.1 2.3 67.7 21.9 17.7 19.6 22.4 46.3 14.9 69.8a18.13 18.13 0 0 1-22.9 11.7 18.18 18.18 0 0 1-11.8-22.9zm106 34.3s0 .1 0 0a21.1 21.1 0 0 1-26.6 13.7 21.19 21.19 0 0 1-13.6-26.7c11-34.2 4-73.2-21.7-101.8a104.04 104.04 0 0 0-98.9-32.1 21.14 21.14 0 0 1-25.1-16.3 21.07 21.07 0 0 1 16.2-25.1c49.4-10.5 102.8 4.8 139.1 45.1 36.3 40.2 46.1 95.1 30.6 143.2zm-334.5 6.1c-91.4 9-160.7 65.1-154.7 125.2 5.9 60.1 84.8 101.5 176.2 92.5 91.4-9.1 160.7-65.1 154.7-125.3-5.9-60.1-84.8-101.5-176.2-92.4zm80.2 141.7c-18.7 42.3-72.3 64.8-117.8 50.1-43.9-14.2-62.5-57.7-43.3-96.8 18.9-38.4 68-60.1 111.5-48.8 45 11.7 68 54.2 49.6 95.5zm-58.1-46.7c-5.4-2.2-12.2.5-15.4 5.8-3.1 5.4-1.4 11.5 4.1 13.8 5.5 2.3 12.6-.3 15.8-5.8 3-5.6 1-11.8-4.5-13.8z"));
var YuqueOutline = dist.YuqueOutline = getIcon$1("yuque", outline, getNode(newViewBox, "M854.6 370.6c-9.9-39.4 9.9-102.2 73.4-124.4l-67.9-3.6s-25.7-90-143.6-98c-117.8-8.1-194.9-3-195-3 .1 0 87.4 55.6 52.4 154.7-25.6 52.5-65.8 95.6-108.8 144.7-1.3 1.3-2.5 2.6-3.5 3.7C319.4 605 96 860 96 860c245.9 64.4 410.7-6.3 508.2-91.1 20.5-.2 35.9-.3 46.3-.3 135.8 0 250.6-117.6 245.9-248.4-3.2-89.9-31.9-110.2-41.8-149.6zm-204.1 334c-10.6 0-26.2.1-46.8.3l-23.6.2-17.8 15.5c-47.1 41-104.4 71.5-171.4 87.6-52.5 12.6-110 16.2-172.7 9.6 18-20.5 36.5-41.6 55.4-63.1 92-104.6 173.8-197.5 236.9-268.5l1.4-1.4 1.3-1.5c4.1-4.6 20.6-23.3 24.7-28.1 9.7-11.1 17.3-19.9 24.5-28.6 30.7-36.7 52.2-67.8 69-102.2l1.6-3.3 1.2-3.4c13.7-38.8 15.4-76.9 6.2-112.8 22.5.7 46.5 1.9 71.7 3.6 33.3 2.3 55.5 12.9 71.1 29.2 5.8 6 10.2 12.5 13.4 18.7 1 2 1.7 3.6 2.3 5l5 17.7c-15.7 34.5-19.9 73.3-11.4 107.2 3 11.8 6.9 22.4 12.3 34.4 2.1 4.7 9.5 20.1 11 23.3 10.3 22.7 15.4 43 16.7 78.7 3.3 94.6-82.7 181.9-182 181.9z"));
var YoutubeOutline = dist.YoutubeOutline = getIcon$1("youtube", outline, getNode(newViewBox, "M960 509.2c0-2.2 0-4.7-.1-7.6-.1-8.1-.3-17.2-.5-26.9-.8-27.9-2.2-55.7-4.4-81.9-3-36.1-7.4-66.2-13.4-88.8a139.52 139.52 0 0 0-98.3-98.5c-28.3-7.6-83.7-12.3-161.7-15.2-37.1-1.4-76.8-2.3-116.5-2.8-13.9-.2-26.8-.3-38.4-.4h-29.4c-11.6.1-24.5.2-38.4.4-39.7.5-79.4 1.4-116.5 2.8-78 3-133.5 7.7-161.7 15.2A139.35 139.35 0 0 0 82.4 304C76.3 326.6 72 356.7 69 392.8c-2.2 26.2-3.6 54-4.4 81.9-.3 9.7-.4 18.8-.5 26.9 0 2.9-.1 5.4-.1 7.6v5.6c0 2.2 0 4.7.1 7.6.1 8.1.3 17.2.5 26.9.8 27.9 2.2 55.7 4.4 81.9 3 36.1 7.4 66.2 13.4 88.8 12.8 47.9 50.4 85.7 98.3 98.5 28.2 7.6 83.7 12.3 161.7 15.2 37.1 1.4 76.8 2.3 116.5 2.8 13.9.2 26.8.3 38.4.4h29.4c11.6-.1 24.5-.2 38.4-.4 39.7-.5 79.4-1.4 116.5-2.8 78-3 133.5-7.7 161.7-15.2 47.9-12.8 85.5-50.5 98.3-98.5 6.1-22.6 10.4-52.7 13.4-88.8 2.2-26.2 3.6-54 4.4-81.9.3-9.7.4-18.8.5-26.9 0-2.9.1-5.4.1-7.6v-5.6zm-72 5.2c0 2.1 0 4.4-.1 7.1-.1 7.8-.3 16.4-.5 25.7-.7 26.6-2.1 53.2-4.2 77.9-2.7 32.2-6.5 58.6-11.2 76.3-6.2 23.1-24.4 41.4-47.4 47.5-21 5.6-73.9 10.1-145.8 12.8-36.4 1.4-75.6 2.3-114.7 2.8-13.7.2-26.4.3-37.8.3h-28.6l-37.8-.3c-39.1-.5-78.2-1.4-114.7-2.8-71.9-2.8-124.9-7.2-145.8-12.8-23-6.2-41.2-24.4-47.4-47.5-4.7-17.7-8.5-44.1-11.2-76.3-2.1-24.7-3.4-51.3-4.2-77.9-.3-9.3-.4-18-.5-25.7 0-2.7-.1-5.1-.1-7.1v-4.8c0-2.1 0-4.4.1-7.1.1-7.8.3-16.4.5-25.7.7-26.6 2.1-53.2 4.2-77.9 2.7-32.2 6.5-58.6 11.2-76.3 6.2-23.1 24.4-41.4 47.4-47.5 21-5.6 73.9-10.1 145.8-12.8 36.4-1.4 75.6-2.3 114.7-2.8 13.7-.2 26.4-.3 37.8-.3h28.6l37.8.3c39.1.5 78.2 1.4 114.7 2.8 71.9 2.8 124.9 7.2 145.8 12.8 23 6.2 41.2 24.4 47.4 47.5 4.7 17.7 8.5 44.1 11.2 76.3 2.1 24.7 3.4 51.3 4.2 77.9.3 9.3.4 18 .5 25.7 0 2.7.1 5.1.1 7.1v4.8zM423 646l232-135-232-133z"));
var AlibabaOutline = dist.AlibabaOutline = getIcon$1("alibaba", outline, getNode(newViewBox, "M602.9 669.8c-37.2 2.6-33.6-17.3-11.5-46.2 50.4-67.2 143.7-158.5 147.9-225.2 5.8-86.6-81.3-113.4-171-113.4-62.4 1.6-127 18.9-171 34.6-151.6 53.5-246.6 137.5-306.9 232-62.4 93.4-43 183.2 91.8 185.8 101.8-4.2 170.5-32.5 239.7-68.2.5 0-192.5 55.1-263.9 14.7-7.9-4.2-15.7-10-17.8-26.2 0-33.1 54.6-67.7 86.6-78.7v-56.7c64.5 22.6 140.6 16.3 205.7-32 2.1 5.8 4.2 13.1 3.7 21h11c2.6-22.6-12.6-44.6-37.8-46.2 7.3 5.8 12.6 10.5 15.2 14.7l-1 1-.5.5c-83.9 58.8-165.3 31.5-173.1 29.9l46.7-45.7-13.1-33.1c92.9-32.5 169.5-56.2 296.9-78.7l-28.5-23 14.7-8.9c75.5 21 126.4 36.7 123.8 76.6-1 6.8-3.7 14.7-7.9 23.1C660.1 466.1 594 538 567.2 569c-17.3 20.5-34.6 39.4-46.7 58.3-13.6 19.4-20.5 37.3-21 53.5 2.6 131.8 391.4-61.9 468-112.9-111.7 47.8-232.9 93.5-364.6 101.9zm85-302.9c2.8 5.2 4.1 11.6 4.1 19.1-.1-6.8-1.4-13.3-4.1-19.1z"));
var AlignCenterOutline = dist.AlignCenterOutline = getIcon$1("align-center", outline, getNode(newViewBox, "M264 230h496c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H264c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm496 424c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H264c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496zm144 140H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-424H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var AlignLeftOutline = dist.AlignLeftOutline = getIcon$1("align-left", outline, getNode(newViewBox, "M120 230h496c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0 424h496c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm784 140H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-424H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var AlignRightOutline = dist.AlignRightOutline = getIcon$1("align-right", outline, getNode(newViewBox, "M904 158H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 424H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 212H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-424H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var AlipayOutline = dist.AlipayOutline = getIcon$1("alipay", outline, getNode(newViewBox, "M789 610.3c-38.7-12.9-90.7-32.7-148.5-53.6 34.8-60.3 62.5-129 80.7-203.6H530.5v-68.6h233.6v-38.3H530.5V132h-95.4c-16.7 0-16.7 16.5-16.7 16.5v97.8H182.2v38.3h236.3v68.6H223.4v38.3h378.4a667.18 667.18 0 0 1-54.5 132.9c-122.8-40.4-253.8-73.2-336.1-53-52.6 13-86.5 36.1-106.5 60.3-91.4 111-25.9 279.6 167.2 279.6C386 811.2 496 747.6 581.2 643 708.3 704 960 808.7 960 808.7V659.4s-31.6-2.5-171-49.1zM253.9 746.6c-150.5 0-195-118.3-120.6-183.1 24.8-21.9 70.2-32.6 94.4-35 89.4-8.8 172.2 25.2 269.9 72.8-68.8 89.5-156.3 145.3-243.7 145.3z"));
var AliyunOutline = dist.AliyunOutline = getIcon$1("aliyun", outline, getNode(newViewBox, "M959.2 383.9c-.3-82.1-66.9-148.6-149.1-148.6H575.9l21.6 85.2 201 43.7a42.58 42.58 0 0 1 32.9 39.7c.1.5.1 216.1 0 216.6a42.58 42.58 0 0 1-32.9 39.7l-201 43.7-21.6 85.3h234.2c82.1 0 148.8-66.5 149.1-148.6V383.9zM225.5 660.4a42.58 42.58 0 0 1-32.9-39.7c-.1-.6-.1-216.1 0-216.6.8-19.4 14.6-35.5 32.9-39.7l201-43.7 21.6-85.2H213.8c-82.1 0-148.8 66.4-149.1 148.6V641c.3 82.1 67 148.6 149.1 148.6H448l-21.6-85.3-200.9-43.9zm200.9-158.8h171v21.3h-171z"));
var AmazonOutline = dist.AmazonOutline = getIcon$1("amazon", outline, getNode(newViewBox, "M825 768.9c-3.3-.9-7.3-.4-11.9 1.3-61.6 28.2-121.5 48.3-179.7 60.2C507.7 856 385.2 842.6 266 790.3c-33.1-14.6-79.1-39.2-138-74a9.36 9.36 0 0 0-5.3-2c-2-.1-3.7.1-5.3.9-1.6.8-2.8 1.8-3.7 3.1-.9 1.3-1.1 3.1-.4 5.4.6 2.2 2.1 4.7 4.6 7.4 10.4 12.2 23.3 25.2 38.6 39s35.6 29.4 60.9 46.8c25.3 17.4 51.8 32.9 79.3 46.4 27.6 13.5 59.6 24.9 96.1 34.1s73 13.8 109.4 13.8c36.2 0 71.4-3.7 105.5-10.9 34.2-7.3 63-15.9 86.5-25.9 23.4-9.9 45-21 64.8-33 19.8-12 34.4-22.2 43.9-30.3 9.5-8.2 16.3-14.6 20.2-19.4 4.6-5.7 6.9-10.6 6.9-14.9.1-4.5-1.7-7.1-5-7.9zM527.4 348.1c-15.2 1.3-33.5 4.1-55 8.3-21.5 4.1-41.4 9.3-59.8 15.4s-37.2 14.6-56.3 25.4c-19.2 10.8-35.5 23.2-49 37s-24.5 31.1-33.1 52c-8.6 20.8-12.9 43.7-12.9 68.7 0 27.1 4.7 51.2 14.3 72.5 9.5 21.3 22.2 38 38.2 50.4 15.9 12.4 34 22.1 54 29.2 20 7.1 41.2 10.3 63.2 9.4 22-.9 43.5-4.3 64.4-10.3 20.8-5.9 40.4-15.4 58.6-28.3 18.2-12.9 33.1-28.2 44.8-45.7 4.3 6.6 8.1 11.5 11.5 14.7l8.7 8.9c5.8 5.9 14.7 14.6 26.7 26.1 11.9 11.5 24.1 22.7 36.3 33.7l104.4-99.9-6-4.9c-4.3-3.3-9.4-8-15.2-14.3-5.8-6.2-11.6-13.1-17.2-20.5-5.7-7.4-10.6-16.1-14.7-25.9-4.1-9.8-6.2-19.3-6.2-28.5V258.7c0-10.1-1.9-21-5.7-32.8-3.9-11.7-10.7-24.5-20.7-38.3-10-13.8-22.4-26.2-37.2-37-14.9-10.8-34.7-20-59.6-27.4-24.8-7.4-52.6-11.1-83.2-11.1-31.3 0-60.4 3.7-87.6 10.9-27.1 7.3-50.3 17-69.7 29.2-19.3 12.2-35.9 26.3-49.7 42.4-13.8 16.1-24.1 32.9-30.8 50.4-6.7 17.5-10.1 35.2-10.1 53.1L408 310c5.5-16.4 12.9-30.6 22-42.8 9.2-12.2 17.9-21 25.8-26.5 8-5.5 16.6-9.9 25.7-13.2 9.2-3.3 15.4-5 18.6-5.4 3.2-.3 5.7-.4 7.6-.4 26.7 0 45.2 7.9 55.6 23.6 6.5 9.5 9.7 23.9 9.7 43.3v56.6c-15.2.6-30.4 1.6-45.6 2.9zM573.1 500c0 16.6-2.2 31.7-6.5 45-9.2 29.1-26.7 47.4-52.4 54.8-22.4 6.6-43.7 3.3-63.9-9.8-21.5-14-32.2-33.8-32.2-59.3 0-19.9 5-36.9 15-51.1 10-14.1 23.3-24.7 40-31.7s33-12 49-14.9c15.9-3 33-4.8 51-5.4V500zm335.2 218.9c-4.3-5.4-15.9-8.9-34.9-10.7-19-1.8-35.5-1.7-49.7.4-15.3 1.8-31.1 6.2-47.3 13.4-16.3 7.1-23.4 13.1-21.6 17.8l.7 1.3.9.7 1.4.2h4.6c.8 0 1.8-.1 3.2-.2 1.4-.1 2.7-.3 3.9-.4 1.2-.1 2.9-.3 5.1-.4 2.1-.1 4.1-.4 6-.7.3 0 3.7-.3 10.3-.9 6.6-.6 11.4-1 14.3-1.3 2.9-.3 7.8-.6 14.5-.9 6.7-.3 12.1-.3 16.1 0 4 .3 8.5.7 13.6 1.1 5.1.4 9.2 1.3 12.4 2.7 3.2 1.3 5.6 3 7.1 5.1 5.2 6.6 4.2 21.2-3 43.9s-14 40.8-20.4 54.2c-2.8 5.7-2.8 9.2 0 10.7s6.7.1 11.9-4c15.6-12.2 28.6-30.6 39.1-55.3 6.1-14.6 10.5-29.8 13.1-45.7 2.4-15.9 2-26.2-1.3-31z"));
var AntCloudOutline = dist.AntCloudOutline = getIcon$1("ant-cloud", outline, getNode(newViewBox, "M378.9 738c-3.1 0-6.1-.5-8.8-1.5l4.4 30.7h26.3l-15.5-29.9c-2.1.5-4.2.7-6.4.7zm421-291.2c-12.6 0-24.8 1.5-36.5 4.2-21.4-38.4-62.3-64.3-109.3-64.3-6.9 0-13.6.6-20.2 1.6-35.4-77.4-113.4-131.1-203.9-131.1-112.3 0-205.3 82.6-221.6 190.4C127.3 455.5 64 523.8 64 607c0 88.4 71.6 160.1 160 160.2h50l13.2-27.6c-26.2-8.3-43.3-29-39.1-48.8 4.6-21.6 32.8-33.9 63.1-27.5 22.9 4.9 40.4 19.1 45.5 35.1a26.1 26.1 0 0 1 22.1-12.4h.2c-.8-3.2-1.2-6.5-1.2-9.9 0-20.1 14.8-36.7 34.1-39.6v-25.4c0-4.4 3.6-8 8-8s8 3.6 8 8v26.3c4.6 1.2 8.8 3.2 12.6 5.8l19.5-21.4c3-3.3 8-3.5 11.3-.5 3.3 3 3.5 8 .5 11.3l-20 22-.2.2a40 40 0 0 1-46.9 59.2c-.4 5.6-2.6 10.7-6 14.8l20 38.4H804v-.1c86.5-2.2 156-73 156-160.1 0-88.5-71.7-160.2-160.1-160.2zM338.2 737.2l-4.3 30h24.4l-5.9-41.5c-3.5 4.6-8.3 8.5-14.2 11.5zM797.5 305a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm-65.7 61.3a24 24 0 1 0 48 0 24 24 0 1 0-48 0zM303.4 742.9l-11.6 24.3h26l3.5-24.7c-5.7.8-11.7 1-17.9.4z"));
var ApartmentOutline = dist.ApartmentOutline = getIcon$1("apartment", outline, getNode(newViewBox, "M908 640H804V488c0-4.4-3.6-8-8-8H548v-96h108c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16H368c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h108v96H228c-4.4 0-8 3.6-8 8v152H116c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h288c8.8 0 16-7.2 16-16V656c0-8.8-7.2-16-16-16H292v-88h440v88H620c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h288c8.8 0 16-7.2 16-16V656c0-8.8-7.2-16-16-16zm-564 76v168H176V716h168zm84-408V140h168v168H428zm420 576H680V716h168v168z"));
var AntDesignOutline = dist.AntDesignOutline = getIcon$1("ant-design", outline, getNode(newViewBox, "M716.3 313.8c19-18.9 19-49.7 0-68.6l-69.9-69.9.1.1c-18.5-18.5-50.3-50.3-95.3-95.2-21.2-20.7-55.5-20.5-76.5.5L80.9 474.2a53.84 53.84 0 0 0 0 76.4L474.6 944a54.14 54.14 0 0 0 76.5 0l165.1-165c19-18.9 19-49.7 0-68.6a48.7 48.7 0 0 0-68.7 0l-125 125.2c-5.2 5.2-13.3 5.2-18.5 0L189.5 521.4c-5.2-5.2-5.2-13.3 0-18.5l314.4-314.2c.4-.4.9-.7 1.3-1.1 5.2-4.1 12.4-3.7 17.2 1.1l125.2 125.1c19 19 49.8 19 68.7 0zM408.6 514.4a106.3 106.2 0 1 0 212.6 0 106.3 106.2 0 1 0-212.6 0zm536.2-38.6L821.9 353.5c-19-18.9-49.8-18.9-68.7.1a48.4 48.4 0 0 0 0 68.6l83 82.9c5.2 5.2 5.2 13.3 0 18.5l-81.8 81.7a48.4 48.4 0 0 0 0 68.6 48.7 48.7 0 0 0 68.7 0l121.8-121.7a53.93 53.93 0 0 0-.1-76.4z"));
var AreaChartOutline = dist.AreaChartOutline = getIcon$1("area-chart", outline, getNode(newViewBox, "M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-616-64h536c4.4 0 8-3.6 8-8V284c0-7.2-8.7-10.7-13.7-5.7L592 488.6l-125.4-124a8.03 8.03 0 0 0-11.3 0l-189 189.6a7.87 7.87 0 0 0-2.3 5.6V720c0 4.4 3.6 8 8 8z"));
var ArrowLeftOutline = dist.ArrowLeftOutline = getIcon$1("arrow-left", outline, getNode(newViewBox, "M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 0 0 0 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z"));
var ArrowDownOutline = dist.ArrowDownOutline = getIcon$1("arrow-down", outline, getNode(newViewBox, "M862 465.3h-81c-4.6 0-9 2-12.1 5.5L550 723.1V160c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v563.1L255.1 470.8c-3-3.5-7.4-5.5-12.1-5.5h-81c-6.8 0-10.5 8.1-6 13.2L487.9 861a31.96 31.96 0 0 0 48.3 0L868 478.5c4.5-5.2.8-13.2-6-13.2z"));
var ArrowUpOutline = dist.ArrowUpOutline = getIcon$1("arrow-up", outline, getNode(newViewBox, "M868 545.5L536.1 163a31.96 31.96 0 0 0-48.3 0L156 545.5a7.97 7.97 0 0 0 6 13.2h81c4.6 0 9-2 12.1-5.5L474 300.9V864c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V300.9l218.9 252.3c3 3.5 7.4 5.5 12.1 5.5h81c6.8 0 10.5-8 6-13.2z"));
var ArrowsAltOutline = dist.ArrowsAltOutline = getIcon$1("arrows-alt", outline, getNode(newViewBox, "M855 160.1l-189.2 23.5c-6.6.8-9.3 8.8-4.7 13.5l54.7 54.7-153.5 153.5a8.03 8.03 0 0 0 0 11.3l45.1 45.1c3.1 3.1 8.2 3.1 11.3 0l153.6-153.6 54.7 54.7a7.94 7.94 0 0 0 13.5-4.7L863.9 169a7.9 7.9 0 0 0-8.9-8.9zM416.6 562.3a8.03 8.03 0 0 0-11.3 0L251.8 715.9l-54.7-54.7a7.94 7.94 0 0 0-13.5 4.7L160.1 855c-.6 5.2 3.7 9.5 8.9 8.9l189.2-23.5c6.6-.8 9.3-8.8 4.7-13.5l-54.7-54.7 153.6-153.6c3.1-3.1 3.1-8.2 0-11.3l-45.2-45z"));
var ArrowRightOutline = dist.ArrowRightOutline = getIcon$1("arrow-right", outline, getNode(newViewBox, "M869 487.8L491.2 159.9c-2.9-2.5-6.6-3.9-10.5-3.9h-88.5c-7.4 0-10.8 9.2-5.2 14l350.2 304H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h585.1L386.9 854c-5.6 4.9-2.2 14 5.2 14h91.5c1.9 0 3.8-.7 5.2-2L869 536.2a32.07 32.07 0 0 0 0-48.4z"));
var AuditOutline = dist.AuditOutline = getIcon$1("audit", outline, getNode(newViewBox, "M296 250c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm184 144H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm-48 458H208V148h560v320c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h264c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm440-88H728v-36.6c46.3-13.8 80-56.6 80-107.4 0-61.9-50.1-112-112-112s-112 50.1-112 112c0 50.7 33.7 93.6 80 107.4V764H520c-8.8 0-16 7.2-16 16v152c0 8.8 7.2 16 16 16h352c8.8 0 16-7.2 16-16V780c0-8.8-7.2-16-16-16zM646 620c0-27.6 22.4-50 50-50s50 22.4 50 50-22.4 50-50 50-50-22.4-50-50zm180 266H566v-60h260v60z"));
var BarChartOutline = dist.BarChartOutline = getIcon$1("bar-chart", outline, getNode(newViewBox, "M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-600-80h56c4.4 0 8-3.6 8-8V560c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8zm152 0h56c4.4 0 8-3.6 8-8V384c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v320c0 4.4 3.6 8 8 8zm152 0h56c4.4 0 8-3.6 8-8V462c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v242c0 4.4 3.6 8 8 8zm152 0h56c4.4 0 8-3.6 8-8V304c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v400c0 4.4 3.6 8 8 8z"));
var BarcodeOutline = dist.BarcodeOutline = getIcon$1("barcode", outline, getNode(newViewBox, "M120 160H72c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V168c0-4.4-3.6-8-8-8zm833 0h-48c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V168c0-4.4-3.6-8-8-8zM200 736h112c4.4 0 8-3.6 8-8V168c0-4.4-3.6-8-8-8H200c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8zm321 0h48c4.4 0 8-3.6 8-8V168c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8zm126 0h178c4.4 0 8-3.6 8-8V168c0-4.4-3.6-8-8-8H647c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8zm-255 0h48c4.4 0 8-3.6 8-8V168c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8zm-79 64H201c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h112c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm257 0h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm256 0H648c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h178c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm-385 0h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"));
var BarsOutline = dist.BarsOutline = getIcon$1("bars", outline, getNode(normalViewBox, "M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm0 284a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm0 284a56 56 0 1 0 112 0 56 56 0 1 0-112 0z"));
var BgColorsOutline = dist.BgColorsOutline = getIcon$1("bg-colors", outline, getNode(newViewBox, "M766.4 744.3c43.7 0 79.4-36.2 79.4-80.5 0-53.5-79.4-140.8-79.4-140.8S687 610.3 687 663.8c0 44.3 35.7 80.5 79.4 80.5zm-377.1-44.1c7.1 7.1 18.6 7.1 25.6 0l256.1-256c7.1-7.1 7.1-18.6 0-25.6l-256-256c-.6-.6-1.3-1.2-2-1.7l-78.2-78.2a9.11 9.11 0 0 0-12.8 0l-48 48a9.11 9.11 0 0 0 0 12.8l67.2 67.2-207.8 207.9c-7.1 7.1-7.1 18.6 0 25.6l255.9 256zm12.9-448.6l178.9 178.9H223.4l178.8-178.9zM904 816H120c-4.4 0-8 3.6-8 8v80c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-80c0-4.4-3.6-8-8-8z"));
var BehanceOutline = dist.BehanceOutline = getIcon$1("behance", outline, getNode(newViewBox, "M634 294.3h199.5v48.4H634zM434.1 485.8c44.1-21.1 67.2-53.2 67.2-102.8 0-98.1-73-121.9-157.3-121.9H112v492.4h238.5c89.4 0 173.3-43 173.3-143 0-61.8-29.2-107.5-89.7-124.7zM220.2 345.1h101.5c39.1 0 74.2 10.9 74.2 56.3 0 41.8-27.3 58.6-66 58.6H220.2V345.1zm115.5 324.8H220.1V534.3H338c47.6 0 77.7 19.9 77.7 70.3 0 49.6-35.9 65.3-80 65.3zm575.8-89.5c0-105.5-61.7-193.4-173.3-193.4-108.5 0-182.3 81.7-182.3 188.8 0 111 69.9 187.2 182.3 187.2 85.1 0 140.2-38.3 166.7-120h-86.3c-9.4 30.5-47.6 46.5-77.3 46.5-57.4 0-87.4-33.6-87.4-90.7h256.9c.3-5.9.7-12.1.7-18.4zM653.9 537c3.1-46.9 34.4-76.2 81.2-76.2 49.2 0 73.8 28.9 78.1 76.2H653.9z"));
var BlockOutline = dist.BlockOutline = getIcon$1("block", outline, getNode(newViewBox, "M856 376H648V168c0-8.8-7.2-16-16-16H168c-8.8 0-16 7.2-16 16v464c0 8.8 7.2 16 16 16h208v208c0 8.8 7.2 16 16 16h464c8.8 0 16-7.2 16-16V392c0-8.8-7.2-16-16-16zm-480 16v188H220V220h360v156H392c-8.8 0-16 7.2-16 16zm204 52v136H444V444h136zm224 360H444V648h188c8.8 0 16-7.2 16-16V444h156v360z"));
var BoldOutline = dist.BoldOutline = getIcon$1("bold", outline, getNode(newViewBox, "M697.8 481.4c33.6-35 54.2-82.3 54.2-134.3v-10.2C752 229.3 663.9 142 555.3 142H259.4c-15.1 0-27.4 12.3-27.4 27.4v679.1c0 16.3 13.2 29.5 29.5 29.5h318.7c117 0 211.8-94.2 211.8-210.5v-11c0-73-37.4-137.3-94.2-175.1zM328 238h224.7c57.1 0 103.3 44.4 103.3 99.3v9.5c0 54.8-46.3 99.3-103.3 99.3H328V238zm366.6 429.4c0 62.9-51.7 113.9-115.5 113.9H328V542.7h251.1c63.8 0 115.5 51 115.5 113.9v10.8z"));
var BorderBottomOutline = dist.BorderBottomOutline = getIcon$1("border-bottom", outline, getNode(newViewBox, "M872 808H152c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-720-94h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0-498h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0 332h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0-166h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm166 166h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0-332h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm332 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0 332h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm222-72h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-388 72h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm388-404h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-388 72h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm388 426h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-388 72h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm388-404h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-388 72h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8z"));
var BorderLeftOutline = dist.BorderLeftOutline = getIcon$1("border-left", outline, getNode(newViewBox, "M208 144h-56c-4.4 0-8 3.6-8 8v720c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V152c0-4.4-3.6-8-8-8zm166 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm498 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm166 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM540 310h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM374 808h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var BorderOuterOutline = dist.BorderOuterOutline = getIcon$1("border-outer", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656zM484 366h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zM302 548h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm364 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-182 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0 182h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8z"));
var BorderInnerOutline = dist.BorderInnerOutline = getIcon$1("border-inner", outline, getNode(newViewBox, "M872 476H548V144h-72v332H152c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h324v332h72V548h324c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 498h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-664h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 498h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM650 216h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm56 592h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-56-592h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-166 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm56 592h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-56-426h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm56 260h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var BorderRightOutline = dist.BorderRightOutline = getIcon$1("border-right", outline, getNode(newViewBox, "M872 144h-56c-4.4 0-8 3.6-8 8v720c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V152c0-4.4-3.6-8-8-8zm-166 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-498 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-166 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm166 166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM208 808h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm498 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM374 808h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var BorderHorizontalOutline = dist.BorderHorizontalOutline = getIcon$1("border-horizontal", outline, getNode(newViewBox, "M540 144h-56c-4.4 0-8 3.6-8 8v720c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V152c0-4.4-3.6-8-8-8zm-166 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm498 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-664 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm498 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM208 310h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm664 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-664 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm664 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM374 808h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var BorderTopOutline = dist.BorderTopOutline = getIcon$1("border-top", outline, getNode(newViewBox, "M872 144H152c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM208 310h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 498h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm166-166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm166 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332-498h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 332h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var BorderVerticleOutline = dist.BorderVerticleOutline = getIcon$1("border-verticle", outline, getNode(newViewBox, "M872 476H152c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-166h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 498h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-664h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 498h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM650 216h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm56 592h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-56-592h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-166 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm332 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zM208 808h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM152 382h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm332 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zM208 642h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm332 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var BorderOutline = dist.BorderOutline = getIcon$1("border", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"));
var BranchesOutline = dist.BranchesOutline = getIcon$1("branches", outline, getNode(newViewBox, "M740 161c-61.8 0-112 50.2-112 112 0 50.1 33.1 92.6 78.5 106.9v95.9L320 602.4V318.1c44.2-15 76-56.9 76-106.1 0-61.8-50.2-112-112-112s-112 50.2-112 112c0 49.2 31.8 91 76 106.1V706c-44.2 15-76 56.9-76 106.1 0 61.8 50.2 112 112 112s112-50.2 112-112c0-49.2-31.8-91-76-106.1v-27.8l423.5-138.7a50.52 50.52 0 0 0 34.9-48.2V378.2c42.9-15.8 73.6-57 73.6-105.2 0-61.8-50.2-112-112-112zm-504 51a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm96 600a48.01 48.01 0 0 1-96 0 48.01 48.01 0 0 1 96 0zm408-491a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var CheckOutline = dist.CheckOutline = getIcon$1("check", outline, getNode(newViewBox, "M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 0 0-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z"));
var CiOutline = dist.CiOutline = getIcon$1("ci", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm218-572.1h-50.4c-4.4 0-8 3.6-8 8v384.2c0 4.4 3.6 8 8 8H730c4.4 0 8-3.6 8-8V319.9c0-4.4-3.6-8-8-8zm-281.4 49.6c49.5 0 83.1 31.5 87 77.6.4 4.2 3.8 7.4 8 7.4h52.6c2.4 0 4.4-2 4.4-4.4 0-81.2-64-138.1-152.3-138.1C345.4 304 286 373.5 286 488.4v49c0 114 59.4 182.6 162.3 182.6 88 0 152.3-55.1 152.3-132.5 0-2.4-2-4.4-4.4-4.4h-52.7c-4.2 0-7.6 3.2-8 7.3-4.2 43-37.7 72.4-87 72.4-61.1 0-95.6-44.9-95.6-125.2v-49.3c.1-81.4 34.6-126.8 95.7-126.8z"));
var CloseOutline = dist.CloseOutline = getIcon$1("close", outline, getNode(newViewBox, "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"));
var CloudDownloadOutline = dist.CloudDownloadOutline = getIcon$1("cloud-download", outline, getNode(newViewBox, "M624 706.3h-74.1V464c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v242.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.7a8 8 0 0 0 12.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9z", "M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0 1 52.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 0 1-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z"));
var CloudServerOutline = dist.CloudServerOutline = getIcon$1("cloud-server", outline, getNode(newViewBox, "M704 446H320c-4.4 0-8 3.6-8 8v402c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8V454c0-4.4-3.6-8-8-8zm-328 64h272v117H376V510zm272 290H376V683h272v117z", "M424 748a32 32 0 1 0 64 0 32 32 0 1 0-64 0zm0-178a32 32 0 1 0 64 0 32 32 0 1 0-64 0z", "M811.4 368.9C765.6 248 648.9 162 512.2 162S258.8 247.9 213 368.8C126.9 391.5 63.5 470.2 64 563.6 64.6 668 145.6 752.9 247.6 762c4.7.4 8.7-3.3 8.7-8v-60.4c0-4-3-7.4-7-7.9-27-3.4-52.5-15.2-72.1-34.5-24-23.5-37.2-55.1-37.2-88.6 0-28 9.1-54.4 26.2-76.4 16.7-21.4 40.2-36.9 66.1-43.7l37.9-10 13.9-36.7c8.6-22.8 20.6-44.2 35.7-63.5 14.9-19.2 32.6-36 52.4-50 41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.3c19.9 14 37.5 30.8 52.4 50 15.1 19.3 27.1 40.7 35.7 63.5l13.8 36.6 37.8 10c54.2 14.4 92.1 63.7 92.1 120 0 33.6-13.2 65.1-37.2 88.6-19.5 19.2-44.9 31.1-71.9 34.5-4 .5-6.9 3.9-6.9 7.9V754c0 4.7 4.1 8.4 8.8 8 101.7-9.2 182.5-94 183.2-198.2.6-93.4-62.7-172.1-148.6-194.9z"));
var CloudSyncOutline = dist.CloudSyncOutline = getIcon$1("cloud-sync", outline, getNode(newViewBox, "M811.4 368.9C765.6 248 648.9 162 512.2 162S258.8 247.9 213 368.8C126.9 391.5 63.5 470.2 64 563.6 64.6 668 145.6 752.9 247.6 762c4.7.4 8.7-3.3 8.7-8v-60.4c0-4-3-7.4-7-7.9-27-3.4-52.5-15.2-72.1-34.5-24-23.5-37.2-55.1-37.2-88.6 0-28 9.1-54.4 26.2-76.4 16.7-21.4 40.2-36.9 66.1-43.7l37.9-10 13.9-36.7c8.6-22.8 20.6-44.2 35.7-63.5 14.9-19.2 32.6-36 52.4-50 41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.3c19.9 14 37.5 30.8 52.4 50 15.1 19.3 27.1 40.7 35.7 63.5l13.8 36.6 37.8 10c54.2 14.4 92.1 63.7 92.1 120 0 33.6-13.2 65.1-37.2 88.6-19.5 19.2-44.9 31.1-71.9 34.5-4 .5-6.9 3.9-6.9 7.9V754c0 4.7 4.1 8.4 8.8 8 101.7-9.2 182.5-94 183.2-198.2.6-93.4-62.7-172.1-148.6-194.9z", "M376.9 656.4c1.8-33.5 15.7-64.7 39.5-88.6 25.4-25.5 60-39.8 96-39.8 36.2 0 70.3 14.1 96 39.8 1.4 1.4 2.7 2.8 4.1 4.3l-25 19.6a8 8 0 0 0 3 14.1l98.2 24c5 1.2 9.9-2.6 9.9-7.7l.5-101.3c0-6.7-7.6-10.5-12.9-6.3L663 532.7c-36.6-42-90.4-68.6-150.5-68.6-107.4 0-195 85.1-199.4 191.7-.2 4.5 3.4 8.3 8 8.3H369c4.2-.1 7.7-3.4 7.9-7.7zM703 664h-47.9c-4.2 0-7.7 3.3-8 7.6-1.8 33.5-15.7 64.7-39.5 88.6-25.4 25.5-60 39.8-96 39.8-36.2 0-70.3-14.1-96-39.8-1.4-1.4-2.7-2.8-4.1-4.3l25-19.6a8 8 0 0 0-3-14.1l-98.2-24c-5-1.2-9.9 2.6-9.9 7.7l-.4 101.4c0 6.7 7.6 10.5 12.9 6.3l23.2-18.2c36.6 42 90.4 68.6 150.5 68.6 107.4 0 195-85.1 199.4-191.7.2-4.5-3.4-8.3-8-8.3z"));
var CloudUploadOutline = dist.CloudUploadOutline = getIcon$1("cloud-upload", outline, getNode(newViewBox, "M518.3 459a8 8 0 0 0-12.6 0l-112 141.7a7.98 7.98 0 0 0 6.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z", "M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0 1 52.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 0 1-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z"));
var ClusterOutline = dist.ClusterOutline = getIcon$1("cluster", outline, getNode(newViewBox, "M888 680h-54V540H546v-92h238c8.8 0 16-7.2 16-16V168c0-8.8-7.2-16-16-16H240c-8.8 0-16 7.2-16 16v264c0 8.8 7.2 16 16 16h238v92H190v140h-54c-4.4 0-8 3.6-8 8v176c0 4.4 3.6 8 8 8h176c4.4 0 8-3.6 8-8V688c0-4.4-3.6-8-8-8h-54v-72h220v72h-54c-4.4 0-8 3.6-8 8v176c0 4.4 3.6 8 8 8h176c4.4 0 8-3.6 8-8V688c0-4.4-3.6-8-8-8h-54v-72h220v72h-54c-4.4 0-8 3.6-8 8v176c0 4.4 3.6 8 8 8h176c4.4 0 8-3.6 8-8V688c0-4.4-3.6-8-8-8zM256 805.3c0 1.5-1.2 2.7-2.7 2.7h-58.7c-1.5 0-2.7-1.2-2.7-2.7v-58.7c0-1.5 1.2-2.7 2.7-2.7h58.7c1.5 0 2.7 1.2 2.7 2.7v58.7zm288 0c0 1.5-1.2 2.7-2.7 2.7h-58.7c-1.5 0-2.7-1.2-2.7-2.7v-58.7c0-1.5 1.2-2.7 2.7-2.7h58.7c1.5 0 2.7 1.2 2.7 2.7v58.7zM288 384V216h448v168H288zm544 421.3c0 1.5-1.2 2.7-2.7 2.7h-58.7c-1.5 0-2.7-1.2-2.7-2.7v-58.7c0-1.5 1.2-2.7 2.7-2.7h58.7c1.5 0 2.7 1.2 2.7 2.7v58.7zM360 300a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"));
var CodepenOutline = dist.CodepenOutline = getIcon$1("codepen", outline, getNode(newViewBox, "M911.7 385.3l-.3-1.5c-.2-1-.3-1.9-.6-2.9-.2-.6-.4-1.1-.5-1.7-.3-.8-.5-1.7-.9-2.5-.2-.6-.5-1.1-.8-1.7-.4-.8-.8-1.5-1.2-2.3-.3-.5-.6-1.1-1-1.6-.8-1.2-1.7-2.4-2.6-3.6-.5-.6-1.1-1.3-1.7-1.9-.4-.5-.9-.9-1.4-1.3-.6-.6-1.3-1.1-1.9-1.6-.5-.4-1-.8-1.6-1.2-.2-.1-.4-.3-.6-.4L531.1 117.8a34.3 34.3 0 0 0-38.1 0L127.3 361.3c-.2.1-.4.3-.6.4-.5.4-1 .8-1.6 1.2-.7.5-1.3 1.1-1.9 1.6-.5.4-.9.9-1.4 1.3-.6.6-1.2 1.2-1.7 1.9-1 1.1-1.8 2.3-2.6 3.6-.3.5-.7 1-1 1.6-.4.7-.8 1.5-1.2 2.3-.3.5-.5 1.1-.8 1.7-.3.8-.6 1.7-.9 2.5-.2.6-.4 1.1-.5 1.7-.2.9-.4 1.9-.6 2.9l-.3 1.5c-.2 1.5-.3 3-.3 4.5v243.5c0 1.5.1 3 .3 4.5l.3 1.5.6 2.9c.2.6.3 1.1.5 1.7.3.9.6 1.7.9 2.5.2.6.5 1.1.8 1.7.4.8.7 1.5 1.2 2.3.3.5.6 1.1 1 1.6.5.7.9 1.4 1.5 2.1l1.2 1.5c.5.6 1.1 1.3 1.7 1.9.4.5.9.9 1.4 1.3.6.6 1.3 1.1 1.9 1.6.5.4 1 .8 1.6 1.2.2.1.4.3.6.4L493 905.7c5.6 3.8 12.3 5.8 19.1 5.8 6.6 0 13.3-1.9 19.1-5.8l365.6-243.5c.2-.1.4-.3.6-.4.5-.4 1-.8 1.6-1.2.7-.5 1.3-1.1 1.9-1.6.5-.4.9-.9 1.4-1.3.6-.6 1.2-1.2 1.7-1.9l1.2-1.5 1.5-2.1c.3-.5.7-1 1-1.6.4-.8.8-1.5 1.2-2.3.3-.5.5-1.1.8-1.7.3-.8.6-1.7.9-2.5.2-.5.4-1.1.5-1.7.3-.9.4-1.9.6-2.9l.3-1.5c.2-1.5.3-3 .3-4.5V389.8c-.3-1.5-.4-3-.6-4.5zM546.4 210.5l269.4 179.4-120.3 80.4-149-99.6V210.5zm-68.8 0v160.2l-149 99.6-120.3-80.4 269.3-179.4zM180.7 454.1l86 57.5-86 57.5v-115zm296.9 358.5L208.3 633.2l120.3-80.4 149 99.6v160.2zM512 592.8l-121.6-81.2L512 430.3l121.6 81.2L512 592.8zm34.4 219.8V652.4l149-99.6 120.3 80.4-269.3 179.4zM843.3 569l-86-57.5 86-57.5v115z"));
var CodeSandboxOutline = dist.CodeSandboxOutline = getIcon$1("code-sandbox", outline, getNode(newViewBox, "M709.6 210l.4-.2h.2L512 96 313.9 209.8h-.2l.7.3L151.5 304v416L512 928l360.5-208V304l-162.9-94zM482.7 843.6L339.6 761V621.4L210 547.8V372.9l272.7 157.3v313.4zM238.2 321.5l134.7-77.8 138.9 79.7 139.1-79.9 135.2 78-273.9 158-274-158zM814 548.3l-128.8 73.1v139.1l-143.9 83V530.4L814 373.1v175.2z"));
var ColumHeightOutline = dist.ColumHeightOutline = getIcon$1("colum-height", outline, getNode(newViewBox, "M840 836H184c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h656c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm0-724H184c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h656c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM610.8 378c6 0 9.4-7 5.7-11.7L515.7 238.7a7.14 7.14 0 0 0-11.3 0L403.6 366.3a7.23 7.23 0 0 0 5.7 11.7H476v268h-62.8c-6 0-9.4 7-5.7 11.7l100.8 127.5c2.9 3.7 8.5 3.7 11.3 0l100.8-127.5c3.7-4.7.4-11.7-5.7-11.7H548V378h62.8z"));
var ColumnWidthOutline = dist.ColumnWidthOutline = getIcon$1("column-width", outline, getNode(newViewBox, "M180 176h-60c-4.4 0-8 3.6-8 8v656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V184c0-4.4-3.6-8-8-8zm724 0h-60c-4.4 0-8 3.6-8 8v656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V184c0-4.4-3.6-8-8-8zM785.3 504.3L657.7 403.6a7.23 7.23 0 0 0-11.7 5.7V476H378v-62.8c0-6-7-9.4-11.7-5.7L238.7 508.3a7.14 7.14 0 0 0 0 11.3l127.5 100.8c4.7 3.7 11.7.4 11.7-5.7V548h268v62.8c0 6 7 9.4 11.7 5.7l127.5-100.8c3.8-2.9 3.8-8.5.2-11.4z"));
var ColumnHeightOutline = dist.ColumnHeightOutline = getIcon$1("column-height", outline, getNode(newViewBox, "M840 836H184c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h656c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm0-724H184c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h656c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM610.8 378c6 0 9.4-7 5.7-11.7L515.7 238.7a7.14 7.14 0 0 0-11.3 0L403.6 366.3a7.23 7.23 0 0 0 5.7 11.7H476v268h-62.8c-6 0-9.4 7-5.7 11.7l100.8 127.5c2.9 3.7 8.5 3.7 11.3 0l100.8-127.5c3.7-4.7.4-11.7-5.7-11.7H548V378h62.8z"));
var CoffeeOutline = dist.CoffeeOutline = getIcon$1("coffee", outline, getNode(normalViewBox, "M275 281c19.9 0 36-16.1 36-36V36c0-19.9-16.1-36-36-36s-36 16.1-36 36v209c0 19.9 16.1 36 36 36zm613 144H768c0-39.8-32.2-72-72-72H200c-39.8 0-72 32.2-72 72v248c0 3.4.2 6.7.7 9.9-.5 7-.7 14-.7 21.1 0 176.7 143.3 320 320 320 160.1 0 292.7-117.5 316.3-271H888c39.8 0 72-32.2 72-72V497c0-39.8-32.2-72-72-72zM696 681h-1.1c.7 7.6 1.1 15.2 1.1 23 0 137-111 248-248 248S200 841 200 704c0-7.8.4-15.4 1.1-23H200V425h496v256zm192-8H776V497h112v176zM613 281c19.9 0 36-16.1 36-36V36c0-19.9-16.1-36-36-36s-36 16.1-36 36v209c0 19.9 16.1 36 36 36zm-170 0c19.9 0 36-16.1 36-36V36c0-19.9-16.1-36-36-36s-36 16.1-36 36v209c0 19.9 16.1 36 36 36z"));
var CopyrightOutline = dist.CopyrightOutline = getIcon$1("copyright", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm5.6-532.7c53 0 89 33.8 93 83.4.3 4.2 3.8 7.4 8 7.4h56.7c2.6 0 4.7-2.1 4.7-4.7 0-86.7-68.4-147.4-162.7-147.4C407.4 290 344 364.2 344 486.8v52.3C344 660.8 407.4 734 517.3 734c94 0 162.7-58.8 162.7-141.4 0-2.6-2.1-4.7-4.7-4.7h-56.8c-4.2 0-7.6 3.2-8 7.3-4.2 46.1-40.1 77.8-93 77.8-65.3 0-102.1-47.9-102.1-133.6v-52.6c.1-87 37-135.5 102.2-135.5z"));
var DashOutline = dist.DashOutline = getIcon$1("dash", outline, getNode(newViewBox, "M112 476h160v72H112zm320 0h160v72H432zm320 0h160v72H752z"));
var DeploymentUnitOutline = dist.DeploymentUnitOutline = getIcon$1("deployment-unit", outline, getNode(newViewBox, "M888.3 693.2c-42.5-24.6-94.3-18-129.2 12.8l-53-30.7V523.6c0-15.7-8.4-30.3-22-38.1l-136-78.3v-67.1c44.2-15 76-56.8 76-106.1 0-61.9-50.1-112-112-112s-112 50.1-112 112c0 49.3 31.8 91.1 76 106.1v67.1l-136 78.3c-13.6 7.8-22 22.4-22 38.1v151.6l-53 30.7c-34.9-30.8-86.8-37.4-129.2-12.8-53.5 31-71.7 99.4-41 152.9 30.8 53.5 98.9 71.9 152.2 41 42.5-24.6 62.7-73 53.6-118.8l48.7-28.3 140.6 81c6.8 3.9 14.4 5.9 22 5.9s15.2-2 22-5.9L674.5 740l48.7 28.3c-9.1 45.7 11.2 94.2 53.6 118.8 53.3 30.9 121.5 12.6 152.2-41 30.8-53.6 12.6-122-40.7-152.9zm-673 138.4a47.6 47.6 0 0 1-65.2-17.6c-13.2-22.9-5.4-52.3 17.5-65.5a47.6 47.6 0 0 1 65.2 17.6c13.2 22.9 5.4 52.3-17.5 65.5zM522 463.8zM464 234a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm170 446.2l-122 70.3-122-70.3V539.8l122-70.3 122 70.3v140.4zm239.9 133.9c-13.2 22.9-42.4 30.8-65.2 17.6-22.8-13.2-30.7-42.6-17.5-65.5s42.4-30.8 65.2-17.6c22.9 13.2 30.7 42.5 17.5 65.5z"));
var DesktopOutline = dist.DesktopOutline = getIcon$1("desktop", outline, getNode(newViewBox, "M928 140H96c-17.7 0-32 14.3-32 32v496c0 17.7 14.3 32 32 32h380v112H304c-8.8 0-16 7.2-16 16v48c0 4.4 3.6 8 8 8h432c4.4 0 8-3.6 8-8v-48c0-8.8-7.2-16-16-16H548V700h380c17.7 0 32-14.3 32-32V172c0-17.7-14.3-32-32-32zm-40 488H136V212h752v416z"));
var DingdingOutline = dist.DingdingOutline = getIcon$1("dingding", outline, getNode(newViewBox, "M573.7 252.5C422.5 197.4 201.3 96.7 201.3 96.7c-15.7-4.1-17.9 11.1-17.9 11.1-5 61.1 33.6 160.5 53.6 182.8 19.9 22.3 319.1 113.7 319.1 113.7S326 357.9 270.5 341.9c-55.6-16-37.9 17.8-37.9 17.8 11.4 61.7 64.9 131.8 107.2 138.4 42.2 6.6 220.1 4 220.1 4s-35.5 4.1-93.2 11.9c-42.7 5.8-97 12.5-111.1 17.8-33.1 12.5 24 62.6 24 62.6 84.7 76.8 129.7 50.5 129.7 50.5 33.3-10.7 61.4-18.5 85.2-24.2L565 743.1h84.6L603 928l205.3-271.9H700.8l22.3-38.7c.3.5.4.8.4.8S799.8 496.1 829 433.8l.6-1h-.1c5-10.8 8.6-19.7 10-25.8 17-71.3-114.5-99.4-265.8-154.5z"));
var DisconnectOutline = dist.DisconnectOutline = getIcon$1("disconnect", outline, getNode(newViewBox, "M832.6 191.4c-84.6-84.6-221.5-84.6-306 0l-96.9 96.9 51 51 96.9-96.9c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204l-96.9 96.9 51.1 51.1 96.9-96.9c84.4-84.6 84.4-221.5-.1-306.1zM446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l96.9-96.9-51.1-51.1-96.9 96.9c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l96.9-96.9-51-51-96.8 97zM260.3 209.4a8.03 8.03 0 0 0-11.3 0L209.4 249a8.03 8.03 0 0 0 0 11.3l554.4 554.4c3.1 3.1 8.2 3.1 11.3 0l39.6-39.6c3.1-3.1 3.1-8.2 0-11.3L260.3 209.4z"));
var DollarOutline = dist.DollarOutline = getIcon$1("dollar", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm47.7-395.2l-25.4-5.9V348.6c38 5.2 61.5 29 65.5 58.2.5 4 3.9 6.9 7.9 6.9h44.9c4.7 0 8.4-4.1 8-8.8-6.1-62.3-57.4-102.3-125.9-109.2V263c0-4.4-3.6-8-8-8h-28.1c-4.4 0-8 3.6-8 8v33c-70.8 6.9-126.2 46-126.2 119 0 67.6 49.8 100.2 102.1 112.7l24.7 6.3v142.7c-44.2-5.9-69-29.5-74.1-61.3-.6-3.8-4-6.6-7.9-6.6H363c-4.7 0-8.4 4-8 8.7 4.5 55 46.2 105.6 135.2 112.1V761c0 4.4 3.6 8 8 8h28.4c4.4 0 8-3.6 8-8.1l-.2-31.7c78.3-6.9 134.3-48.8 134.3-124-.1-69.4-44.2-100.4-109-116.4zm-68.6-16.2c-5.6-1.6-10.3-3.1-15-5-33.8-12.2-49.5-31.9-49.5-57.3 0-36.3 27.5-57 64.5-61.7v124zM534.3 677V543.3c3.1.9 5.9 1.6 8.8 2.2 47.3 14.4 63.2 34.4 63.2 65.1 0 39.1-29.4 62.6-72 66.4z"));
var DoubleRightOutline = dist.DoubleRightOutline = getIcon$1("double-right", outline, getNode(newViewBox, "M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 0 0 188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 0 0 492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z"));
var DotChartOutline = dist.DotChartOutline = getIcon$1("dot-chart", outline, getNode(newViewBox, "M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 1 0 128 0 64 64 0 1 0-128 0zm118-224a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm158 228a96 96 0 1 0 192 0 96 96 0 1 0-192 0zm148-314a56 56 0 1 0 112 0 56 56 0 1 0-112 0z"));
var DoubleLeftOutline = dist.DoubleLeftOutline = getIcon$1("double-left", outline, getNode(newViewBox, "M272.9 512l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L186.8 492.3a31.99 31.99 0 0 0 0 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H532c6.7 0 10.4-7.7 6.3-12.9L272.9 512zm304 0l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L490.8 492.3a31.99 31.99 0 0 0 0 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H836c6.7 0 10.4-7.7 6.3-12.9L576.9 512z"));
var DownloadOutline = dist.DownloadOutline = getIcon$1("download", outline, getNode(newViewBox, "M505.7 661a8 8 0 0 0 12.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z"));
var DribbbleOutline = dist.DribbbleOutline = getIcon$1("dribbble", outline, getNode(newViewBox, "M512 96C282.6 96 96 282.6 96 512s186.6 416 416 416 416-186.6 416-416S741.4 96 512 96zm275.1 191.8c49.5 60.5 79.5 137.5 80.2 221.4-11.7-2.5-129.2-26.3-247.4-11.4-2.5-6.1-5-12.2-7.6-18.3-7.4-17.3-15.3-34.6-23.6-51.5C720 374.3 779.6 298 787.1 287.8zM512 157.2c90.3 0 172.8 33.9 235.5 89.5-6.4 9.1-59.9 81-186.2 128.4-58.2-107-122.7-194.8-132.6-208 27.3-6.6 55.2-9.9 83.3-9.9zM360.9 191c9.4 12.8 72.9 100.9 131.7 205.5C326.4 440.6 180 440 164.1 439.8c23.1-110.3 97.4-201.9 196.8-248.8zM156.7 512.5c0-3.6.1-7.3.2-10.9 15.5.3 187.7 2.5 365.2-50.6 10.2 19.9 19.9 40.1 28.8 60.3-4.7 1.3-9.4 2.7-14 4.2C353.6 574.9 256.1 736.4 248 750.1c-56.7-63-91.3-146.3-91.3-237.6zM512 867.8c-82.2 0-157.9-28-218.1-75 6.4-13.1 78.3-152 278.7-221.9l2.3-.8c49.9 129.6 70.5 238.3 75.8 269.5A350.46 350.46 0 0 1 512 867.8zm198.5-60.7c-3.6-21.6-22.5-125.6-69-253.3C752.9 536 850.7 565.2 862.8 569c-15.8 98.8-72.5 184.2-152.3 238.1z"));
var DropboxOutline = dist.DropboxOutline = getIcon$1("dropbox", outline, getNode(newViewBox, "M64 556.9l264.2 173.5L512.5 577 246.8 412.7zm896-290.3zm0 0L696.8 95 512.5 248.5l265.2 164.2L512.5 577l184.3 153.4L960 558.8 777.7 412.7zM513 609.8L328.2 763.3l-79.4-51.5v57.8L513 928l263.7-158.4v-57.8l-78.9 51.5zM328.2 95L64 265.1l182.8 147.6 265.7-164.2zM64 556.9z"));
var EllipsisOutline = dist.EllipsisOutline = getIcon$1("ellipsis", outline, getNode(newViewBox, "M176 511a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm280 0a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm280 0a56 56 0 1 0 112 0 56 56 0 1 0-112 0z"));
var EnterOutline = dist.EnterOutline = getIcon$1("enter", outline, getNode(newViewBox, "M864 170h-60c-4.4 0-8 3.6-8 8v518H310v-73c0-6.7-7.8-10.5-13-6.3l-141.9 112a8 8 0 0 0 0 12.6l141.9 112c5.3 4.2 13 .4 13-6.3v-75h498c35.3 0 64-28.7 64-64V178c0-4.4-3.6-8-8-8z"));
var EuroOutline = dist.EuroOutline = getIcon$1("euro", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm117.7-588.6c-15.9-3.5-34.4-5.4-55.3-5.4-106.7 0-178.9 55.7-198.6 149.9H344c-4.4 0-8 3.6-8 8v27.2c0 4.4 3.6 8 8 8h26.4c-.3 4.1-.3 8.4-.3 12.8v36.9H344c-4.4 0-8 3.6-8 8V568c0 4.4 3.6 8 8 8h30.2c17.2 99.2 90.4 158 200.2 158 20.9 0 39.4-1.7 55.3-5.1 3.7-.8 6.4-4 6.4-7.8v-42.8c0-5-4.6-8.8-9.5-7.8-14.7 2.8-31.9 4.1-51.8 4.1-68.5 0-114.5-36.6-129.8-98.6h130.6c4.4 0 8-3.6 8-8v-27.2c0-4.4-3.6-8-8-8H439.2v-36c0-4.7 0-9.4.3-13.8h135.9c4.4 0 8-3.6 8-8v-27.2c0-4.4-3.6-8-8-8H447.1c17.2-56.9 62.3-90.4 127.6-90.4 19.9 0 37.1 1.5 51.7 4.4a8 8 0 0 0 9.6-7.8v-42.8c0-3.8-2.6-7-6.3-7.8z"));
var ExceptionOutline = dist.ExceptionOutline = getIcon$1("exception", outline, getNode(newViewBox, "M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm376 116c-119.3 0-216 96.7-216 216s96.7 216 216 216 216-96.7 216-216-96.7-216-216-216zm107.5 323.5C750.8 868.2 712.6 884 672 884s-78.8-15.8-107.5-44.5C535.8 810.8 520 772.6 520 732s15.8-78.8 44.5-107.5C593.2 595.8 631.4 580 672 580s78.8 15.8 107.5 44.5C808.2 653.2 824 691.4 824 732s-15.8 78.8-44.5 107.5zM640 812a32 32 0 1 0 64 0 32 32 0 1 0-64 0zm12-64h40c4.4 0 8-3.6 8-8V628c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8zM440 852H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var ExclamationOutline = dist.ExclamationOutline = getIcon$1("exclamation", outline, getNode(newViewBox, "M448 804a64 64 0 1 0 128 0 64 64 0 1 0-128 0zm32-168h64c4.4 0 8-3.6 8-8V164c0-4.4-3.6-8-8-8h-64c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8z"));
var ExportOutline = dist.ExportOutline = getIcon$1("export", outline, getNode(newViewBox, "M888.3 757.4h-53.8c-4.2 0-7.7 3.5-7.7 7.7v61.8H197.1V197.1h629.8v61.8c0 4.2 3.5 7.7 7.7 7.7h53.8c4.2 0 7.7-3.4 7.7-7.7V158.7c0-17-13.7-30.7-30.7-30.7H158.7c-17 0-30.7 13.7-30.7 30.7v706.6c0 17 13.7 30.7 30.7 30.7h706.6c17 0 30.7-13.7 30.7-30.7V765.1c0-4.3-3.5-7.7-7.7-7.7zm18.6-251.7L765 393.7c-5.3-4.2-13-.4-13 6.3v76H438c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h314v76c0 6.7 7.8 10.5 13 6.3l141.9-112a8 8 0 0 0 0-12.6z"));
var FallOutline = dist.FallOutline = getIcon$1("fall", outline, getNode(newViewBox, "M925.9 804l-24-199.2c-.8-6.6-8.9-9.4-13.6-4.7L829 659.5 557.7 388.3c-6.3-6.2-16.4-6.2-22.6 0L433.3 490 156.6 213.3a8.03 8.03 0 0 0-11.3 0l-45 45.2a8.03 8.03 0 0 0 0 11.3L422 591.7c6.2 6.3 16.4 6.3 22.6 0L546.4 490l226.1 226-59.3 59.3a8.01 8.01 0 0 0 4.7 13.6l199.2 24c5.1.7 9.5-3.7 8.8-8.9z"));
var FileDoneOutline = dist.FileDoneOutline = getIcon$1("file-done", outline, getNode(newViewBox, "M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm376 116c-119.3 0-216 96.7-216 216s96.7 216 216 216 216-96.7 216-216-96.7-216-216-216zm107.5 323.5C750.8 868.2 712.6 884 672 884s-78.8-15.8-107.5-44.5C535.8 810.8 520 772.6 520 732s15.8-78.8 44.5-107.5C593.2 595.8 631.4 580 672 580s78.8 15.8 107.5 44.5C808.2 653.2 824 691.4 824 732s-15.8 78.8-44.5 107.5zM761 656h-44.3c-2.6 0-5 1.2-6.5 3.3l-63.5 87.8-23.1-31.9a7.92 7.92 0 0 0-6.5-3.3H573c-6.5 0-10.3 7.4-6.5 12.7l73.8 102.1c3.2 4.4 9.7 4.4 12.9 0l114.2-158c3.9-5.3.1-12.7-6.4-12.7zM440 852H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var FileSyncOutline = dist.FileSyncOutline = getIcon$1("file-sync", outline, getNode(newViewBox, "M296 256c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm192 200v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8zm-48 396H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm104.1-115.6c1.8-34.5 16.2-66.8 40.8-91.4 26.2-26.2 62-41 99.1-41 37.4 0 72.6 14.6 99.1 41 3.2 3.2 6.3 6.6 9.2 10.1L769.2 673a8 8 0 0 0 3 14.1l93.3 22.5c5 1.2 9.8-2.6 9.9-7.7l.6-95.4a8 8 0 0 0-12.9-6.4l-20.3 15.8C805.4 569.6 748.1 540 684 540c-109.9 0-199.6 86.9-204 195.7-.2 4.5 3.5 8.3 8 8.3h48.1c4.3 0 7.8-3.3 8-7.6zM880 744h-48.1c-4.3 0-7.8 3.3-8 7.6-1.8 34.5-16.2 66.8-40.8 91.4-26.2 26.2-62 41-99.1 41-37.4 0-72.6-14.6-99.1-41-3.2-3.2-6.3-6.6-9.2-10.1l23.1-17.9a8 8 0 0 0-3-14.1l-93.3-22.5c-5-1.2-9.8 2.6-9.9 7.7l-.6 95.4a8 8 0 0 0 12.9 6.4l20.3-15.8C562.6 918.4 619.9 948 684 948c109.9 0 199.6-86.9 204-195.7.2-4.5-3.5-8.3-8-8.3z"));
var FileProtectOutline = dist.FileProtectOutline = getIcon$1("file-protect", outline, getNode(newViewBox, "M644.7 669.2a7.92 7.92 0 0 0-6.5-3.3H594c-6.5 0-10.3 7.4-6.5 12.7l73.8 102.1c3.2 4.4 9.7 4.4 12.9 0l114.2-158c3.8-5.3 0-12.7-6.5-12.7h-44.3c-2.6 0-5 1.2-6.5 3.3l-63.5 87.8-22.9-31.9zM688 306v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm184 458H208V148h560v296c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h312c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm402.6-320.8l-192-66.7c-.9-.3-1.7-.4-2.6-.4s-1.8.1-2.6.4l-192 66.7a7.96 7.96 0 0 0-5.4 7.5v251.1c0 2.5 1.1 4.8 3.1 6.3l192 150.2c1.4 1.1 3.2 1.7 4.9 1.7s3.5-.6 4.9-1.7l192-150.2c1.9-1.5 3.1-3.8 3.1-6.3V538.7c0-3.4-2.2-6.4-5.4-7.5zM826 763.7L688 871.6 550 763.7V577l138-48 138 48v186.7z"));
var FileSearchOutline = dist.FileSearchOutline = getIcon$1("file-search", outline, getNode(newViewBox, "M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"));
var FileJpgOutline = dist.FileJpgOutline = getIcon$1("file-jpg", outline, getNode(normalViewBox, "M874.6 301.8L596.8 21.3c-4.5-4.5-9.4-8.3-14.7-11.5-1.4-.8-2.8-1.6-4.3-2.3-.9-.5-1.9-.9-2.8-1.3-9-4-18.9-6.2-29-6.2H201c-39.8 0-73 32.2-73 72v880c0 39.8 33.2 72 73 72h623c39.8 0 71-32.2 71-72V352.5c0-19-7-37.2-20.4-50.7zM583 110.4L783.8 312H583V110.4zM823 952H200V72h311v240c0 39.8 33.2 72 73 72h239v568zM350 696.5c0 24.2-7.5 31.4-21.9 31.4-9 0-18.4-5.8-24.8-18.5L272.9 732c13.4 22.9 32.3 34.2 61.3 34.2 41.6 0 60.8-29.9 60.8-66.2V577h-45v119.5zM501.3 577H437v186h44v-62h21.6c39.1 0 73.1-19.6 73.1-63.6 0-45.8-33.5-60.4-74.4-60.4zm-.8 89H481v-53h18.2c21.5 0 33.4 6.2 33.4 24.9 0 18.1-10.5 28.1-32.1 28.1zm182.5-9v36h30v30.1c-4 2.9-11 4.7-17.7 4.7-34.3 0-50.7-21.4-50.7-58.2 0-36.1 19.7-57.4 47.1-57.4 15.3 0 25 6.2 34 14.4l23.7-28.3c-12.7-12.8-32.1-24.2-59.2-24.2-49.6 0-91.1 35.3-91.1 97 0 62.7 40 95.1 91.5 95.1 25.9 0 49.2-10.2 61.5-22.6V657H683z"));
var FontColorsOutline = dist.FontColorsOutline = getIcon$1("font-colors", outline, getNode(newViewBox, "M904 816H120c-4.4 0-8 3.6-8 8v80c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-80c0-4.4-3.6-8-8-8zm-650.3-80h85c4.2 0 8-2.7 9.3-6.8l53.7-166h219.2l53.2 166c1.3 4 5 6.8 9.3 6.8h89.1c1.1 0 2.2-.2 3.2-.5a9.7 9.7 0 0 0 6-12.4L573.6 118.6a9.9 9.9 0 0 0-9.2-6.6H462.1c-4.2 0-7.9 2.6-9.2 6.6L244.5 723.1c-.4 1-.5 2.1-.5 3.2-.1 5.3 4.3 9.7 9.7 9.7zm255.9-516.1h4.1l83.8 263.8H424.9l84.7-263.8z"));
var FontSizeOutline = dist.FontSizeOutline = getIcon$1("font-size", outline, getNode(newViewBox, "M920 416H616c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-56h60v320h-46c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h164c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-46V480h60v56c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V424c0-4.4-3.6-8-8-8zM656 296V168c0-4.4-3.6-8-8-8H104c-4.4 0-8 3.6-8 8v128c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-64h168v560h-92c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h264c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-92V232h168v64c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8z"));
var ForkOutline = dist.ForkOutline = getIcon$1("fork", outline, getNode(newViewBox, "M752 100c-61.8 0-112 50.2-112 112 0 47.7 29.9 88.5 72 104.6v27.6L512 601.4 312 344.2v-27.6c42.1-16.1 72-56.9 72-104.6 0-61.8-50.2-112-112-112s-112 50.2-112 112c0 50.6 33.8 93.5 80 107.3v34.4c0 9.7 3.3 19.3 9.3 27L476 672.3v33.6c-44.2 15-76 56.9-76 106.1 0 61.8 50.2 112 112 112s112-50.2 112-112c0-49.2-31.8-91-76-106.1v-33.6l226.7-291.6c6-7.7 9.3-17.3 9.3-27v-34.4c46.2-13.8 80-56.7 80-107.3 0-61.8-50.2-112-112-112zM224 212a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm336 600a48.01 48.01 0 0 1-96 0 48.01 48.01 0 0 1 96 0zm192-552a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"));
var FormOutline = dist.FormOutline = getIcon$1("form", outline, getNode(newViewBox, "M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z", "M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 0 0-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z"));
var FullscreenExitOutline = dist.FullscreenExitOutline = getIcon$1("fullscreen-exit", outline, getNode(newViewBox, "M391 240.9c-.8-6.6-8.9-9.4-13.6-4.7l-43.7 43.7L200 146.3a8.03 8.03 0 0 0-11.3 0l-42.4 42.3a8.03 8.03 0 0 0 0 11.3L280 333.6l-43.9 43.9a8.01 8.01 0 0 0 4.7 13.6L401 410c5.1.6 9.5-3.7 8.9-8.9L391 240.9zm10.1 373.2L240.8 633c-6.6.8-9.4 8.9-4.7 13.6l43.9 43.9L146.3 824a8.03 8.03 0 0 0 0 11.3l42.4 42.3c3.1 3.1 8.2 3.1 11.3 0L333.7 744l43.7 43.7A8.01 8.01 0 0 0 391 783l18.9-160.1c.6-5.1-3.7-9.4-8.8-8.8zm221.8-204.2L783.2 391c6.6-.8 9.4-8.9 4.7-13.6L744 333.6 877.7 200c3.1-3.1 3.1-8.2 0-11.3l-42.4-42.3a8.03 8.03 0 0 0-11.3 0L690.3 279.9l-43.7-43.7a8.01 8.01 0 0 0-13.6 4.7L614.1 401c-.6 5.2 3.7 9.5 8.8 8.9zM744 690.4l43.9-43.9a8.01 8.01 0 0 0-4.7-13.6L623 614c-5.1-.6-9.5 3.7-8.9 8.9L633 783.1c.8 6.6 8.9 9.4 13.6 4.7l43.7-43.7L824 877.7c3.1 3.1 8.2 3.1 11.3 0l42.4-42.3c3.1-3.1 3.1-8.2 0-11.3L744 690.4z"));
var FullscreenOutline = dist.FullscreenOutline = getIcon$1("fullscreen", outline, getNode(newViewBox, "M290 236.4l43.9-43.9a8.01 8.01 0 0 0-4.7-13.6L169 160c-5.1-.6-9.5 3.7-8.9 8.9L179 329.1c.8 6.6 8.9 9.4 13.6 4.7l43.7-43.7L370 423.7c3.1 3.1 8.2 3.1 11.3 0l42.4-42.3c3.1-3.1 3.1-8.2 0-11.3L290 236.4zm352.7 187.3c3.1 3.1 8.2 3.1 11.3 0l133.7-133.6 43.7 43.7a8.01 8.01 0 0 0 13.6-4.7L863.9 169c.6-5.1-3.7-9.5-8.9-8.9L694.8 179c-6.6.8-9.4 8.9-4.7 13.6l43.9 43.9L600.3 370a8.03 8.03 0 0 0 0 11.3l42.4 42.4zM845 694.9c-.8-6.6-8.9-9.4-13.6-4.7l-43.7 43.7L654 600.3a8.03 8.03 0 0 0-11.3 0l-42.4 42.3a8.03 8.03 0 0 0 0 11.3L734 787.6l-43.9 43.9a8.01 8.01 0 0 0 4.7 13.6L855 864c5.1.6 9.5-3.7 8.9-8.9L845 694.9zm-463.7-94.6a8.03 8.03 0 0 0-11.3 0L236.3 733.9l-43.7-43.7a8.01 8.01 0 0 0-13.6 4.7L160.1 855c-.6 5.1 3.7 9.5 8.9 8.9L329.2 845c6.6-.8 9.4-8.9 4.7-13.6L290 787.6 423.7 654c3.1-3.1 3.1-8.2 0-11.3l-42.4-42.4z"));
var GatewayOutline = dist.GatewayOutline = getIcon$1("gateway", outline, getNode(newViewBox, "M928 392c8.8 0 16-7.2 16-16V192c0-8.8-7.2-16-16-16H744c-8.8 0-16 7.2-16 16v56H296v-56c0-8.8-7.2-16-16-16H96c-8.8 0-16 7.2-16 16v184c0 8.8 7.2 16 16 16h56v240H96c-8.8 0-16 7.2-16 16v184c0 8.8 7.2 16 16 16h184c8.8 0 16-7.2 16-16v-56h432v56c0 8.8 7.2 16 16 16h184c8.8 0 16-7.2 16-16V648c0-8.8-7.2-16-16-16h-56V392h56zM792 240h88v88h-88v-88zm-648 88v-88h88v88h-88zm88 456h-88v-88h88v88zm648-88v88h-88v-88h88zm-80-64h-56c-8.8 0-16 7.2-16 16v56H296v-56c0-8.8-7.2-16-16-16h-56V392h56c8.8 0 16-7.2 16-16v-56h432v56c0 8.8 7.2 16 16 16h56v240z"));
var DownOutline = dist.DownOutline = getIcon$1("down", outline, getNode(newViewBox, "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"));
var DragOutline = dist.DragOutline = getIcon$1("drag", outline, getNode(newViewBox, "M909.3 506.3L781.7 405.6a7.23 7.23 0 0 0-11.7 5.7V476H548V254h64.8c6 0 9.4-7 5.7-11.7L517.7 114.7a7.14 7.14 0 0 0-11.3 0L405.6 242.3a7.23 7.23 0 0 0 5.7 11.7H476v222H254v-64.8c0-6-7-9.4-11.7-5.7L114.7 506.3a7.14 7.14 0 0 0 0 11.3l127.5 100.8c4.7 3.7 11.7.4 11.7-5.7V548h222v222h-64.8c-6 0-9.4 7-5.7 11.7l100.8 127.5c2.9 3.7 8.5 3.7 11.3 0l100.8-127.5c3.7-4.7.4-11.7-5.7-11.7H548V548h222v64.8c0 6 7 9.4 11.7 5.7l127.5-100.8a7.3 7.3 0 0 0 .1-11.4z"));
var GlobalOutline = dist.GlobalOutline = getIcon$1("global", outline, getNode(newViewBox, "M854.4 800.9c.2-.3.5-.6.7-.9C920.6 722.1 960 621.7 960 512s-39.4-210.1-104.8-288c-.2-.3-.5-.5-.7-.8-1.1-1.3-2.1-2.5-3.2-3.7-.4-.5-.8-.9-1.2-1.4l-4.1-4.7-.1-.1c-1.5-1.7-3.1-3.4-4.6-5.1l-.1-.1c-3.2-3.4-6.4-6.8-9.7-10.1l-.1-.1-4.8-4.8-.3-.3c-1.5-1.5-3-2.9-4.5-4.3-.5-.5-1-1-1.6-1.5-1-1-2-1.9-3-2.8-.3-.3-.7-.6-1-1C736.4 109.2 629.5 64 512 64s-224.4 45.2-304.3 119.2c-.3.3-.7.6-1 1-1 .9-2 1.9-3 2.9-.5.5-1 1-1.6 1.5-1.5 1.4-3 2.9-4.5 4.3l-.3.3-4.8 4.8-.1.1c-3.3 3.3-6.5 6.7-9.7 10.1l-.1.1c-1.6 1.7-3.1 3.4-4.6 5.1l-.1.1c-1.4 1.5-2.8 3.1-4.1 4.7-.4.5-.8.9-1.2 1.4-1.1 1.2-2.1 2.5-3.2 3.7-.2.3-.5.5-.7.8C103.4 301.9 64 402.3 64 512s39.4 210.1 104.8 288c.2.3.5.6.7.9l3.1 3.7c.4.5.8.9 1.2 1.4l4.1 4.7c0 .1.1.1.1.2 1.5 1.7 3 3.4 4.6 5l.1.1c3.2 3.4 6.4 6.8 9.6 10.1l.1.1c1.6 1.6 3.1 3.2 4.7 4.7l.3.3c3.3 3.3 6.7 6.5 10.1 9.6 80.1 74 187 119.2 304.5 119.2s224.4-45.2 304.3-119.2a300 300 0 0 0 10-9.6l.3-.3c1.6-1.6 3.2-3.1 4.7-4.7l.1-.1c3.3-3.3 6.5-6.7 9.6-10.1l.1-.1c1.5-1.7 3.1-3.3 4.6-5 0-.1.1-.1.1-.2 1.4-1.5 2.8-3.1 4.1-4.7.4-.5.8-.9 1.2-1.4a99 99 0 0 0 3.3-3.7zm4.1-142.6c-13.8 32.6-32 62.8-54.2 90.2a444.07 444.07 0 0 0-81.5-55.9c11.6-46.9 18.8-98.4 20.7-152.6H887c-3 40.9-12.6 80.6-28.5 118.3zM887 484H743.5c-1.9-54.2-9.1-105.7-20.7-152.6 29.3-15.6 56.6-34.4 81.5-55.9A373.86 373.86 0 0 1 887 484zM658.3 165.5c39.7 16.8 75.8 40 107.6 69.2a394.72 394.72 0 0 1-59.4 41.8c-15.7-45-35.8-84.1-59.2-115.4 3.7 1.4 7.4 2.9 11 4.4zm-90.6 700.6c-9.2 7.2-18.4 12.7-27.7 16.4V697a389.1 389.1 0 0 1 115.7 26.2c-8.3 24.6-17.9 47.3-29 67.8-17.4 32.4-37.8 58.3-59 75.1zm59-633.1c11 20.6 20.7 43.3 29 67.8A389.1 389.1 0 0 1 540 327V141.6c9.2 3.7 18.5 9.1 27.7 16.4 21.2 16.7 41.6 42.6 59 75zM540 640.9V540h147.5c-1.6 44.2-7.1 87.1-16.3 127.8l-.3 1.2A445.02 445.02 0 0 0 540 640.9zm0-156.9V383.1c45.8-2.8 89.8-12.5 130.9-28.1l.3 1.2c9.2 40.7 14.7 83.5 16.3 127.8H540zm-56 56v100.9c-45.8 2.8-89.8 12.5-130.9 28.1l-.3-1.2c-9.2-40.7-14.7-83.5-16.3-127.8H484zm-147.5-56c1.6-44.2 7.1-87.1 16.3-127.8l.3-1.2c41.1 15.6 85 25.3 130.9 28.1V484H336.5zM484 697v185.4c-9.2-3.7-18.5-9.1-27.7-16.4-21.2-16.7-41.7-42.7-59.1-75.1-11-20.6-20.7-43.3-29-67.8 37.2-14.6 75.9-23.3 115.8-26.1zm0-370a389.1 389.1 0 0 1-115.7-26.2c8.3-24.6 17.9-47.3 29-67.8 17.4-32.4 37.8-58.4 59.1-75.1 9.2-7.2 18.4-12.7 27.7-16.4V327zM365.7 165.5c3.7-1.5 7.3-3 11-4.4-23.4 31.3-43.5 70.4-59.2 115.4-21-12-40.9-26-59.4-41.8 31.8-29.2 67.9-52.4 107.6-69.2zM165.5 365.7c13.8-32.6 32-62.8 54.2-90.2 24.9 21.5 52.2 40.3 81.5 55.9-11.6 46.9-18.8 98.4-20.7 152.6H137c3-40.9 12.6-80.6 28.5-118.3zM137 540h143.5c1.9 54.2 9.1 105.7 20.7 152.6a444.07 444.07 0 0 0-81.5 55.9A373.86 373.86 0 0 1 137 540zm228.7 318.5c-39.7-16.8-75.8-40-107.6-69.2 18.5-15.8 38.4-29.7 59.4-41.8 15.7 45 35.8 84.1 59.2 115.4-3.7-1.4-7.4-2.9-11-4.4zm292.6 0c-3.7 1.5-7.3 3-11 4.4 23.4-31.3 43.5-70.4 59.2-115.4 21 12 40.9 26 59.4 41.8a373.81 373.81 0 0 1-107.6 69.2z"));
var GooglePlusOutline = dist.GooglePlusOutline = getIcon$1("google-plus", outline, getNode(newViewBox, "M879.5 470.4c-.3-27-.4-54.2-.5-81.3h-80.8c-.3 27-.5 54.1-.7 81.3-27.2.1-54.2.3-81.2.6v80.9c27 .3 54.2.5 81.2.8.3 27 .3 54.1.5 81.1h80.9c.1-27 .3-54.1.5-81.3 27.2-.3 54.2-.4 81.2-.7v-80.9c-26.9-.2-54.1-.2-81.1-.5zm-530 .4c-.1 32.3 0 64.7.1 97 54.2 1.8 108.5 1 162.7 1.8-23.9 120.3-187.4 159.3-273.9 80.7-89-68.9-84.8-220 7.7-284 64.7-51.6 156.6-38.9 221.3 5.8 25.4-23.5 49.2-48.7 72.1-74.7-53.8-42.9-119.8-73.5-190-70.3-146.6-4.9-281.3 123.5-283.7 270.2-9.4 119.9 69.4 237.4 180.6 279.8 110.8 42.7 252.9 13.6 323.7-86 46.7-62.9 56.8-143.9 51.3-220-90.7-.7-181.3-.6-271.9-.3z"));
var GoogleOutline = dist.GoogleOutline = getIcon$1("google", outline, getNode(newViewBox, "M881 442.4H519.7v148.5h206.4c-8.9 48-35.9 88.6-76.6 115.8-34.4 23-78.3 36.6-129.9 36.6-99.9 0-184.4-67.5-214.6-158.2-7.6-23-12-47.6-12-72.9s4.4-49.9 12-72.9c30.3-90.6 114.8-158.1 214.7-158.1 56.3 0 106.8 19.4 146.6 57.4l110-110.1c-66.5-62-153.2-100-256.6-100-149.9 0-279.6 86-342.7 211.4-26 51.8-40.8 110.4-40.8 172.4S151 632.8 177 684.6C240.1 810 369.8 896 519.7 896c103.6 0 190.4-34.4 253.8-93 72.5-66.8 114.4-165.2 114.4-282.1 0-27.2-2.4-53.3-6.9-78.5z"));
var HeatMapOutline = dist.HeatMapOutline = getIcon$1("heat-map", outline, getNode(newViewBox, "M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-790.4-23.9L512 231.9 858.7 832H165.3zm319-474.1l-228 394c-12.3 21.3 3.1 48 27.7 48h455.8c24.7 0 40.1-26.7 27.7-48L539.7 358c-6.2-10.7-17-16-27.7-16-10.8 0-21.6 5.3-27.7 16zm214 386H325.7L512 422l186.3 322zm-214-194.1l-57 98.4C415 669.5 430.4 696 455 696h114c24.6 0 39.9-26.5 27.7-47.7l-57-98.4c-6.1-10.6-16.9-15.9-27.7-15.9s-21.5 5.3-27.7 15.9zm57.1 98.4h-58.7l29.4-50.7 29.3 50.7z"));
var GoldOutline = dist.GoldOutline = getIcon$1("gold", outline, getNode(newViewBox, "M342 472h342c.4 0 .9 0 1.3-.1 4.4-.7 7.3-4.8 6.6-9.2l-40.2-248c-.6-3.9-4-6.7-7.9-6.7H382.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8zm91.2-196h159.5l20.7 128h-201l20.8-128zm2.5 282.7c-.6-3.9-4-6.7-7.9-6.7H166.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8h342c.4 0 .9 0 1.3-.1 4.4-.7 7.3-4.8 6.6-9.2l-40.2-248zM196.5 748l20.7-128h159.5l20.7 128H196.5zm709.4 58.7l-40.2-248c-.6-3.9-4-6.7-7.9-6.7H596.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8h342c.4 0 .9 0 1.3-.1 4.3-.7 7.3-4.8 6.6-9.2zM626.5 748l20.7-128h159.5l20.7 128H626.5z"));
var HistoryOutline = dist.HistoryOutline = getIcon$1("history", outline, getNode(newViewBox, "M536.1 273H488c-4.4 0-8 3.6-8 8v275.3c0 2.6 1.2 5 3.3 6.5l165.3 120.7c3.6 2.6 8.6 1.9 11.2-1.7l28.6-39c2.7-3.7 1.9-8.7-1.7-11.2L544.1 528.5V281c0-4.4-3.6-8-8-8zm219.8 75.2l156.8 38.3c5 1.2 9.9-2.6 9.9-7.7l.8-161.5c0-6.7-7.7-10.5-12.9-6.3L752.9 334.1a8 8 0 0 0 3 14.1zm167.7 301.1l-56.7-19.5a8 8 0 0 0-10.1 4.8c-1.9 5.1-3.9 10.1-6 15.1-17.8 42.1-43.3 80-75.9 112.5a353 353 0 0 1-112.5 75.9 352.18 352.18 0 0 1-137.7 27.8c-47.8 0-94.1-9.3-137.7-27.8a353 353 0 0 1-112.5-75.9c-32.5-32.5-58-70.4-75.9-112.5A353.44 353.44 0 0 1 171 512c0-47.8 9.3-94.2 27.8-137.8 17.8-42.1 43.3-80 75.9-112.5a353 353 0 0 1 112.5-75.9C430.6 167.3 477 158 524.8 158s94.1 9.3 137.7 27.8A353 353 0 0 1 775 261.7c10.2 10.3 19.8 21 28.6 32.3l59.8-46.8C784.7 146.6 662.2 81.9 524.6 82 285 82.1 92.6 276.7 95 516.4 97.4 751.9 288.9 942 524.8 942c185.5 0 343.5-117.6 403.7-282.3 1.5-4.2-.7-8.9-4.9-10.4z"));
var IeOutline = dist.IeOutline = getIcon$1("ie", outline, getNode(newViewBox, "M852.6 367.6c16.3-36.9 32.1-90.7 32.1-131.8 0-109.1-119.5-147.6-314.5-57.9-161.4-10.8-316.8 110.5-355.6 279.7 46.3-52.3 117.4-123.4 183-151.7C316.1 378.3 246.7 470 194 565.6c-31.1 56.9-66 148.8-66 217.5 0 147.9 139.3 129.8 270.4 63 47.1 23.1 99.8 23.4 152.5 23.4 145.7 0 276.4-81.4 325.2-219H694.9c-78.8 132.9-295.2 79.5-295.2-71.2h493.2c9.6-65.4-2.5-143.6-40.3-211.7zM224.8 648.3c26.6 76.7 80.6 143.8 150.4 185-133.1 73.4-259.9 43.6-150.4-185zm174-163.3c3-82.7 75.4-142.3 156-142.3 80.1 0 153 59.6 156 142.3h-312zm276.8-281.4c32.1-15.4 72.8-33 108.8-33 47.1 0 81.4 32.6 81.4 80.6 0 30-11.1 73.5-21.9 101.8-39.3-63.5-98.9-122.4-168.3-149.4z"));
var InboxOutline = dist.InboxOutline = getIcon$1("inbox", outline, getNode(normalViewBox, "M885.2 446.3l-.2-.8-112.2-285.1c-5-16.1-19.9-27.2-36.8-27.2H281.2c-17 0-32.1 11.3-36.9 27.6L139.4 443l-.3.7-.2.8c-1.3 4.9-1.7 9.9-1 14.8-.1 1.6-.2 3.2-.2 4.8V830a60.9 60.9 0 0 0 60.8 60.8h627.2c33.5 0 60.8-27.3 60.9-60.8V464.1c0-1.3 0-2.6-.1-3.7.4-4.9 0-9.6-1.3-14.1zm-295.8-43l-.3 15.7c-.8 44.9-31.8 75.1-77.1 75.1-22.1 0-41.1-7.1-54.8-20.6S436 441.2 435.6 419l-.3-15.7H229.5L309 210h399.2l81.7 193.3H589.4zm-375 76.8h157.3c24.3 57.1 76 90.8 140.4 90.8 33.7 0 65-9.4 90.3-27.2 22.2-15.6 39.5-37.4 50.7-63.6h156.5V814H214.4V480.1z"));
var ImportOutline = dist.ImportOutline = getIcon$1("import", outline, getNode(newViewBox, "M888.3 757.4h-53.8c-4.2 0-7.7 3.5-7.7 7.7v61.8H197.1V197.1h629.8v61.8c0 4.2 3.5 7.7 7.7 7.7h53.8c4.2 0 7.7-3.4 7.7-7.7V158.7c0-17-13.7-30.7-30.7-30.7H158.7c-17 0-30.7 13.7-30.7 30.7v706.6c0 17 13.7 30.7 30.7 30.7h706.6c17 0 30.7-13.7 30.7-30.7V765.1c0-4.3-3.5-7.7-7.7-7.7zM902 476H588v-76c0-6.7-7.8-10.5-13-6.3l-141.9 112a8 8 0 0 0 0 12.6l141.9 112c5.3 4.2 13 .4 13-6.3v-76h314c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var InfoOutline = dist.InfoOutline = getIcon$1("info", outline, getNode(newViewBox, "M448 224a64 64 0 1 0 128 0 64 64 0 1 0-128 0zm96 168h-64c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V400c0-4.4-3.6-8-8-8z"));
var ItalicOutline = dist.ItalicOutline = getIcon$1("italic", outline, getNode(newViewBox, "M798 160H366c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h181.2l-156 544H229c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h432c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8H474.4l156-544H798c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8z"));
var IssuesCloseOutline = dist.IssuesCloseOutline = getIcon$1("issues-close", outline, getNode(newViewBox, "M464 688a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm72-112c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48zm400-188h-59.3c-2.6 0-5 1.2-6.5 3.3L763.7 538.1l-49.9-68.8a7.92 7.92 0 0 0-6.5-3.3H648c-6.5 0-10.3 7.4-6.5 12.7l109.2 150.7a16.1 16.1 0 0 0 26 0l165.8-228.7c3.8-5.3 0-12.7-6.5-12.7zm-44 306h-64.2c-5.5 0-10.6 2.9-13.6 7.5a352.2 352.2 0 0 1-49.8 62.2A355.92 355.92 0 0 1 651.1 840a355 355 0 0 1-138.7 27.9c-48.1 0-94.8-9.4-138.7-27.9a355.92 355.92 0 0 1-113.3-76.3A353.06 353.06 0 0 1 184 650.5c-18.6-43.8-28-90.5-28-138.5s9.4-94.7 28-138.5c17.9-42.4 43.6-80.5 76.4-113.2 32.8-32.7 70.9-58.4 113.3-76.3a355 355 0 0 1 138.7-27.9c48.1 0 94.8 9.4 138.7 27.9 42.4 17.9 80.5 43.6 113.3 76.3 19 19 35.6 39.8 49.8 62.2 2.9 4.7 8.1 7.5 13.6 7.5H892c6 0 9.8-6.3 7.2-11.6C828.8 178.5 684.7 82 517.7 80 278.9 77.2 80.5 272.5 80 511.2 79.5 750.1 273.3 944 512.4 944c169.2 0 315.6-97 386.7-238.4A8 8 0 0 0 892 694z"));
var KeyOutline = dist.KeyOutline = getIcon$1("key", outline, getNode(newViewBox, "M608 112c-167.9 0-304 136.1-304 304 0 70.3 23.9 135 63.9 186.5l-41.1 41.1-62.3-62.3a8.15 8.15 0 0 0-11.4 0l-39.8 39.8a8.15 8.15 0 0 0 0 11.4l62.3 62.3-44.9 44.9-62.3-62.3a8.15 8.15 0 0 0-11.4 0l-39.8 39.8a8.15 8.15 0 0 0 0 11.4l62.3 62.3-65.3 65.3a8.03 8.03 0 0 0 0 11.3l42.3 42.3c3.1 3.1 8.2 3.1 11.3 0l253.6-253.6A304.06 304.06 0 0 0 608 720c167.9 0 304-136.1 304-304S775.9 112 608 112zm161.2 465.2C726.2 620.3 668.9 644 608 644c-60.9 0-118.2-23.7-161.2-66.8-43.1-43-66.8-100.3-66.8-161.2 0-60.9 23.7-118.2 66.8-161.2 43-43.1 100.3-66.8 161.2-66.8 60.9 0 118.2 23.7 161.2 66.8 43.1 43 66.8 100.3 66.8 161.2 0 60.9-23.7 118.2-66.8 161.2z"));
var LaptopOutline = dist.LaptopOutline = getIcon$1("laptop", outline, getNode(newViewBox, "M956.9 845.1L896.4 632V168c0-17.7-14.3-32-32-32h-704c-17.7 0-32 14.3-32 32v464L67.9 845.1C60.4 866 75.8 888 98 888h828.8c22.2 0 37.6-22 30.1-42.9zM200.4 208h624v395h-624V208zm228.3 608l8.1-37h150.3l8.1 37H428.7zm224 0l-19.1-86.7c-.8-3.7-4.1-6.3-7.8-6.3H398.2c-3.8 0-7 2.6-7.8 6.3L371.3 816H151l42.3-149h638.2l42.3 149H652.7z"));
var LeftOutline = dist.LeftOutline = getIcon$1("left", outline, getNode(newViewBox, "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 0 0 0 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"));
var LinkOutline = dist.LinkOutline = getIcon$1("link", outline, getNode(newViewBox, "M574 665.4a8.03 8.03 0 0 0-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8a8.03 8.03 0 0 0-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zm258.6-474c-84.6-84.6-221.5-84.6-306 0L410.3 307.6a8.03 8.03 0 0 0 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6a8.03 8.03 0 0 0 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1zM610.1 372.3a8.03 8.03 0 0 0-11.3 0L372.3 598.7a8.03 8.03 0 0 0 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z"));
var LineChartOutline = dist.LineChartOutline = getIcon$1("line-chart", outline, getNode(newViewBox, "M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM305.8 637.7c3.1 3.1 8.1 3.1 11.3 0l138.3-137.6L583 628.5c3.1 3.1 8.2 3.1 11.3 0l275.4-275.3c3.1-3.1 3.1-8.2 0-11.3l-39.6-39.6a8.03 8.03 0 0 0-11.3 0l-230 229.9L461.4 404a8.03 8.03 0 0 0-11.3 0L266.3 586.7a8.03 8.03 0 0 0 0 11.3l39.5 39.7z"));
var LineHeightOutline = dist.LineHeightOutline = getIcon$1("line-height", outline, getNode(newViewBox, "M648 160H104c-4.4 0-8 3.6-8 8v128c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-64h168v560h-92c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h264c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-92V232h168v64c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V168c0-4.4-3.6-8-8-8zm272.8 546H856V318h64.8c6 0 9.4-7 5.7-11.7L825.7 178.7a7.14 7.14 0 0 0-11.3 0L713.6 306.3a7.23 7.23 0 0 0 5.7 11.7H784v388h-64.8c-6 0-9.4 7-5.7 11.7l100.8 127.5c2.9 3.7 8.5 3.7 11.3 0l100.8-127.5a7.2 7.2 0 0 0-5.6-11.7z"));
var LineOutline = dist.LineOutline = getIcon$1("line", outline, getNode(newViewBox, "M904 476H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var Loading3QuartersOutline = dist.Loading3QuartersOutline = getIcon$1("loading-3-quarters", outline, getNode(normalViewBox, "M512 1024c-69.1 0-136.2-13.5-199.3-40.2C251.7 958 197 921 150 874c-47-47-84-101.7-109.8-162.7C13.5 648.2 0 581.1 0 512c0-19.9 16.1-36 36-36s36 16.1 36 36c0 59.4 11.6 117 34.6 171.3 22.2 52.4 53.9 99.5 94.3 139.9 40.4 40.4 87.5 72.2 139.9 94.3C395 940.4 452.6 952 512 952c59.4 0 117-11.6 171.3-34.6 52.4-22.2 99.5-53.9 139.9-94.3 40.4-40.4 72.2-87.5 94.3-139.9C940.4 629 952 571.4 952 512c0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.2C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3s-13.5 136.2-40.2 199.3C958 772.3 921 827 874 874c-47 47-101.8 83.9-162.7 109.7-63.1 26.8-130.2 40.3-199.3 40.3z"));
var LoadingOutline = dist.LoadingOutline = getIcon$1("loading", outline, getNode(normalViewBox, "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"));
var LoginOutline = dist.LoginOutline = getIcon$1("login", outline, getNode(newViewBox, "M521.7 82c-152.5-.4-286.7 78.5-363.4 197.7-3.4 5.3.4 12.3 6.7 12.3h70.3c4.8 0 9.3-2.1 12.3-5.8 7-8.5 14.5-16.7 22.4-24.5 32.6-32.5 70.5-58.1 112.7-75.9 43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 32.6 32.5 58.1 70.4 76 112.5C865.7 417.8 875 464.1 875 512c0 47.9-9.4 94.2-27.8 137.8-17.8 42.1-43.4 80-76 112.5s-70.5 58.1-112.7 75.9A352.8 352.8 0 0 1 520.6 866c-47.9 0-94.3-9.4-137.9-27.8A353.84 353.84 0 0 1 270 762.3c-7.9-7.9-15.3-16.1-22.4-24.5-3-3.7-7.6-5.8-12.3-5.8H165c-6.3 0-10.2 7-6.7 12.3C234.9 863.2 368.5 942 520.6 942c236.2 0 428-190.1 430.4-425.6C953.4 277.1 761.3 82.6 521.7 82zM395.02 624v-76h-314c-4.4 0-8-3.6-8-8v-56c0-4.4 3.6-8 8-8h314v-76c0-6.7 7.8-10.5 13-6.3l141.9 112a8 8 0 0 1 0 12.6l-141.9 112c-5.2 4.1-13 .4-13-6.3z"));
var LogoutOutline = dist.LogoutOutline = getIcon$1("logout", outline, getNode(newViewBox, "M868 732h-70.3c-4.8 0-9.3 2.1-12.3 5.8-7 8.5-14.5 16.7-22.4 24.5a353.84 353.84 0 0 1-112.7 75.9A352.8 352.8 0 0 1 512.4 866c-47.9 0-94.3-9.4-137.9-27.8a353.84 353.84 0 0 1-112.7-75.9 353.28 353.28 0 0 1-76-112.5C167.3 606.2 158 559.9 158 512s9.4-94.2 27.8-137.8c17.8-42.1 43.4-80 76-112.5s70.5-58.1 112.7-75.9c43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 7.9 7.9 15.3 16.1 22.4 24.5 3 3.7 7.6 5.8 12.3 5.8H868c6.3 0 10.2-7 6.7-12.3C798 160.5 663.8 81.6 511.3 82 271.7 82.6 79.6 277.1 82 516.4 84.4 751.9 276.2 942 512.4 942c152.1 0 285.7-78.8 362.3-197.7 3.4-5.3-.4-12.3-6.7-12.3zm88.9-226.3L815 393.7c-5.3-4.2-13-.4-13 6.3v76H488c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h314v76c0 6.7 7.8 10.5 13 6.3l141.9-112a8 8 0 0 0 0-12.6z"));
var ManOutline = dist.ManOutline = getIcon$1("man", outline, getNode(newViewBox, "M874 120H622c-3.3 0-6 2.7-6 6v56c0 3.3 2.7 6 6 6h160.4L583.1 387.3c-50-38.5-111-59.3-175.1-59.3-76.9 0-149.3 30-203.6 84.4S120 539.1 120 616s30 149.3 84.4 203.6C258.7 874 331.1 904 408 904s149.3-30 203.6-84.4C666 765.3 696 692.9 696 616c0-64.1-20.8-124.9-59.2-174.9L836 241.9V402c0 3.3 2.7 6 6 6h56c3.3 0 6-2.7 6-6V150c0-16.5-13.5-30-30-30zM408 828c-116.9 0-212-95.1-212-212s95.1-212 212-212 212 95.1 212 212-95.1 212-212 212z"));
var MediumOutline = dist.MediumOutline = getIcon$1("medium", outline, getNode(newViewBox, "M834.7 279.8l61.3-58.9V208H683.7L532.4 586.4 360.3 208H137.7v12.9l71.6 86.6c7 6.4 10.6 15.8 9.7 25.2V673c2.2 12.3-1.7 24.8-10.3 33.7L128 805v12.7h228.6v-12.9l-80.6-98a39.99 39.99 0 0 1-11.1-33.7V378.7l200.7 439.2h23.3l172.6-439.2v349.9c0 9.2 0 11.1-6 17.2l-62.1 60.3V819h301.2v-12.9l-59.9-58.9c-5.2-4-7.9-10.7-6.8-17.2V297a18.1 18.1 0 0 1 6.8-17.2z"));
var MediumWorkmarkOutline = dist.MediumWorkmarkOutline = getIcon$1("medium-workmark", outline, getNode(normalViewBox, "M517.2 590.55c0 3.55 0 4.36 2.4 6.55l13.43 13.25v.57h-59.57v-25.47a41.44 41.44 0 0 1-39.5 27.65c-30.61 0-52.84-24.25-52.84-68.87 0-41.8 23.99-69.69 57.65-69.69a35.15 35.15 0 0 1 34.61 21.67v-56.19a6.99 6.99 0 0 0-2.71-6.79l-12.8-12.45v-.56l59.33-7.04v177.37zm-43.74-8.09v-83.83a22.2 22.2 0 0 0-17.74-8.4c-14.48 0-28.47 13.25-28.47 52.62 0 36.86 12.07 49.88 27.1 49.88a23.91 23.91 0 0 0 19.11-10.27zm83.23 28.46V497.74a7.65 7.65 0 0 0-2.4-6.79l-13.19-13.74v-.57h59.56v114.8c0 3.55 0 4.36 2.4 6.54l13.12 12.45v.57l-59.49-.08zm-2.16-175.67c0-13.4 10.74-24.25 23.99-24.25 13.25 0 23.98 10.86 23.98 24.25 0 13.4-10.73 24.25-23.98 24.25s-23.99-10.85-23.99-24.25zm206.83 155.06c0 3.55 0 4.6 2.4 6.79l13.43 13.25v.57h-59.88V581.9a43.4 43.4 0 0 1-41.01 31.2c-26.55 0-40.78-19.56-40.78-56.59 0-17.86 0-37.43.56-59.41a6.91 6.91 0 0 0-2.4-6.55L620.5 477.2v-.57h59.09v73.81c0 24.25 3.51 40.42 18.54 40.42a23.96 23.96 0 0 0 19.35-12.2v-80.85a7.65 7.65 0 0 0-2.4-6.79l-13.27-13.82v-.57h59.56V590.3zm202.76 20.6c0-4.36.8-59.97.8-72.75 0-24.25-3.76-40.98-20.63-40.98a26.7 26.7 0 0 0-21.19 11.64 99.68 99.68 0 0 1 2.4 23.04c0 16.81-.56 38.23-.8 59.66a6.91 6.91 0 0 0 2.4 6.55l13.43 12.45v.56h-60.12c0-4.04.8-59.98.8-72.76 0-24.65-3.76-40.98-20.39-40.98-8.2.3-15.68 4.8-19.83 11.96v82.46c0 3.56 0 4.37 2.4 6.55l13.11 12.45v.56h-59.48V498.15a7.65 7.65 0 0 0-2.4-6.8l-13.19-14.14v-.57H841v28.78c5.53-19 23.13-31.76 42.7-30.96 19.82 0 33.26 11.16 38.93 32.34a46.41 46.41 0 0 1 44.77-32.34c26.55 0 41.58 19.8 41.58 57.23 0 17.87-.56 38.24-.8 59.66a6.5 6.5 0 0 0 2.72 6.55l13.11 12.45v.57h-59.88zM215.87 593.3l17.66 17.05v.57h-89.62v-.57l17.99-17.05a6.91 6.91 0 0 0 2.4-6.55V477.69c0-4.6 0-10.83.8-16.16L104.66 613.1h-.72l-62.6-139.45c-1.37-3.47-1.77-3.72-2.65-6.06v91.43a32.08 32.08 0 0 0 2.96 17.87l25.19 33.46v.57H0v-.57l25.18-33.55a32.16 32.16 0 0 0 2.96-17.78V457.97A19.71 19.71 0 0 0 24 444.15L6.16 420.78v-.56h63.96l53.56 118.1 47.17-118.1h62.6v.56l-17.58 19.8a6.99 6.99 0 0 0-2.72 6.8v139.37a6.5 6.5 0 0 0 2.72 6.55zm70.11-54.65v.56c0 34.6 17.67 48.5 38.38 48.5a43.5 43.5 0 0 0 40.77-24.97h.56c-7.2 34.2-28.14 50.36-59.48 50.36-33.82 0-65.72-20.61-65.72-68.39 0-50.2 31.98-70.25 67.32-70.25 28.46 0 58.76 13.58 58.76 57.24v6.95h-80.59zm0-6.95h39.42v-7.04c0-35.57-7.28-45.03-18.23-45.03-13.27 0-21.35 14.15-21.35 52.07h.16z"));
var MenuUnfoldOutline = dist.MenuUnfoldOutline = getIcon$1("menu-unfold", outline, getNode(newViewBox, "M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM142.4 642.1L298.7 519a8.84 8.84 0 0 0 0-13.9L142.4 381.9c-5.8-4.6-14.4-.5-14.4 6.9v246.3a8.9 8.9 0 0 0 14.4 7z"));
var MenuFoldOutline = dist.MenuFoldOutline = getIcon$1("menu-fold", outline, getNode(newViewBox, "M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM115.4 518.9L271.7 642c5.8 4.6 14.4.5 14.4-6.9V388.9c0-7.4-8.5-11.5-14.4-6.9L115.4 505.1a8.74 8.74 0 0 0 0 13.8z"));
var MenuOutline = dist.MenuOutline = getIcon$1("menu", outline, getNode(newViewBox, "M904 160H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8zm0 624H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8zm0-312H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8z"));
var MinusOutline = dist.MinusOutline = getIcon$1("minus", outline, getNode(newViewBox, "M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z"));
var MonitorOutline = dist.MonitorOutline = getIcon$1("monitor", outline, getNode(newViewBox, "M692.8 412.7l.2-.2-34.6-44.3a7.97 7.97 0 0 0-11.2-1.4l-50.4 39.3-70.5-90.1a7.97 7.97 0 0 0-11.2-1.4l-37.9 29.7a7.97 7.97 0 0 0-1.4 11.2l70.5 90.2-.2.1 34.6 44.3c2.7 3.5 7.7 4.1 11.2 1.4l50.4-39.3 64.1 82c2.7 3.5 7.7 4.1 11.2 1.4l37.9-29.6c3.5-2.7 4.1-7.7 1.4-11.2l-64.1-82.1zM608 112c-167.9 0-304 136.1-304 304 0 70.3 23.9 135 63.9 186.5L114.3 856.1a8.03 8.03 0 0 0 0 11.3l42.3 42.3c3.1 3.1 8.2 3.1 11.3 0l253.6-253.6C473 696.1 537.7 720 608 720c167.9 0 304-136.1 304-304S775.9 112 608 112zm161.2 465.2C726.2 620.3 668.9 644 608 644s-118.2-23.7-161.2-66.8C403.7 534.2 380 476.9 380 416s23.7-118.2 66.8-161.2c43-43.1 100.3-66.8 161.2-66.8s118.2 23.7 161.2 66.8c43.1 43 66.8 100.3 66.8 161.2s-23.7 118.2-66.8 161.2z"));
var MoreOutline = dist.MoreOutline = getIcon$1("more", outline, getNode(newViewBox, "M456 231a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm0 280a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm0 280a56 56 0 1 0 112 0 56 56 0 1 0-112 0z"));
var OrderedListOutline = dist.OrderedListOutline = getIcon$1("ordered-list", outline, getNode(newViewBox, "M920 760H336c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-568H336c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H336c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM216 712H100c-2.2 0-4 1.8-4 4v34c0 2.2 1.8 4 4 4h72.4v20.5h-35.7c-2.2 0-4 1.8-4 4v34c0 2.2 1.8 4 4 4h35.7V838H100c-2.2 0-4 1.8-4 4v34c0 2.2 1.8 4 4 4h116c2.2 0 4-1.8 4-4V716c0-2.2-1.8-4-4-4zM100 188h38v120c0 2.2 1.8 4 4 4h40c2.2 0 4-1.8 4-4V152c0-4.4-3.6-8-8-8h-78c-2.2 0-4 1.8-4 4v36c0 2.2 1.8 4 4 4zm116 240H100c-2.2 0-4 1.8-4 4v36c0 2.2 1.8 4 4 4h68.4l-70.3 77.7a8.3 8.3 0 0 0-2.1 5.4V592c0 2.2 1.8 4 4 4h116c2.2 0 4-1.8 4-4v-36c0-2.2-1.8-4-4-4h-68.4l70.3-77.7a8.3 8.3 0 0 0 2.1-5.4V432c0-2.2-1.8-4-4-4z"));
var NumberOutline = dist.NumberOutline = getIcon$1("number", outline, getNode(newViewBox, "M872 394c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8H708V152c0-4.4-3.6-8-8-8h-64c-4.4 0-8 3.6-8 8v166H400V152c0-4.4-3.6-8-8-8h-64c-4.4 0-8 3.6-8 8v166H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h168v236H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h168v166c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V706h228v166c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V706h164c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8H708V394h164zM628 630H400V394h228v236z"));
var PauseOutline = dist.PauseOutline = getIcon$1("pause", outline, getNode(newViewBox, "M304 176h80v672h-80zm408 0h-64c-4.4 0-8 3.6-8 8v656c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V184c0-4.4-3.6-8-8-8z"));
var PercentageOutline = dist.PercentageOutline = getIcon$1("percentage", outline, getNode(newViewBox, "M855.7 210.8l-42.4-42.4a8.03 8.03 0 0 0-11.3 0L168.3 801.9a8.03 8.03 0 0 0 0 11.3l42.4 42.4c3.1 3.1 8.2 3.1 11.3 0L855.6 222c3.2-3 3.2-8.1.1-11.2zM304 448c79.4 0 144-64.6 144-144s-64.6-144-144-144-144 64.6-144 144 64.6 144 144 144zm0-216c39.7 0 72 32.3 72 72s-32.3 72-72 72-72-32.3-72-72 32.3-72 72-72zm416 344c-79.4 0-144 64.6-144 144s64.6 144 144 144 144-64.6 144-144-64.6-144-144-144zm0 216c-39.7 0-72-32.3-72-72s32.3-72 72-72 72 32.3 72 72-32.3 72-72 72z"));
var PaperClipOutline = dist.PaperClipOutline = getIcon$1("paper-clip", outline, getNode(newViewBox, "M779.3 196.6c-94.2-94.2-247.6-94.2-341.7 0l-261 260.8c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0 0 12.7 0l261-260.8c32.4-32.4 75.5-50.2 121.3-50.2s88.9 17.8 121.2 50.2c32.4 32.4 50.2 75.5 50.2 121.2 0 45.8-17.8 88.8-50.2 121.2l-266 265.9-43.1 43.1c-40.3 40.3-105.8 40.3-146.1 0-19.5-19.5-30.2-45.4-30.2-73s10.7-53.5 30.2-73l263.9-263.8c6.7-6.6 15.5-10.3 24.9-10.3h.1c9.4 0 18.1 3.7 24.7 10.3 6.7 6.7 10.3 15.5 10.3 24.9 0 9.3-3.7 18.1-10.3 24.7L372.4 653c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0 0 12.7 0l215.6-215.6c19.9-19.9 30.8-46.3 30.8-74.4s-11-54.6-30.8-74.4c-41.1-41.1-107.9-41-149 0L463 364 224.8 602.1A172.22 172.22 0 0 0 174 724.8c0 46.3 18.1 89.8 50.8 122.5 33.9 33.8 78.3 50.7 122.7 50.7 44.4 0 88.8-16.9 122.6-50.7l309.2-309C824.8 492.7 850 432 850 367.5c.1-64.6-25.1-125.3-70.7-170.9z"));
var PicCenterOutline = dist.PicCenterOutline = getIcon$1("pic-center", outline, getNode(newViewBox, "M952 792H72c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h880c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-632H72c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h880c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM848 660c8.8 0 16-7.2 16-16V380c0-8.8-7.2-16-16-16H176c-8.8 0-16 7.2-16 16v264c0 8.8 7.2 16 16 16h672zM232 436h560v152H232V436z"));
var PicLeftOutline = dist.PicLeftOutline = getIcon$1("pic-left", outline, getNode(newViewBox, "M952 792H72c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h880c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-632H72c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h880c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM608 660c8.8 0 16-7.2 16-16V380c0-8.8-7.2-16-16-16H96c-8.8 0-16 7.2-16 16v264c0 8.8 7.2 16 16 16h512zM152 436h400v152H152V436zm552 210c0 4.4 3.6 8 8 8h224c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H712c-4.4 0-8 3.6-8 8v56zm8-204h224c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H712c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8z"));
var PlusOutline = dist.PlusOutline = getIcon$1("plus", outline, getNode(newViewBox, "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z", "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"));
var PicRightOutline = dist.PicRightOutline = getIcon$1("pic-right", outline, getNode(newViewBox, "M952 792H72c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h880c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-632H72c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h880c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-24 500c8.8 0 16-7.2 16-16V380c0-8.8-7.2-16-16-16H416c-8.8 0-16 7.2-16 16v264c0 8.8 7.2 16 16 16h512zM472 436h400v152H472V436zM80 646c0 4.4 3.6 8 8 8h224c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H88c-4.4 0-8 3.6-8 8v56zm8-204h224c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H88c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8z"));
var PoundOutline = dist.PoundOutline = getIcon$1("pound", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm138-209.8H469.8v-4.7c27.4-17.2 43.9-50.4 43.9-91.1 0-14.1-2.2-27.9-5.3-41H607c4.4 0 8-3.6 8-8v-30c0-4.4-3.6-8-8-8H495c-7.2-22.6-13.4-45.7-13.4-70.5 0-43.5 34-70.2 87.3-70.2 21.5 0 42.5 4.1 60.4 10.5 5.2 1.9 10.6-2 10.6-7.6v-39.5c0-3.3-2.1-6.3-5.2-7.5-18.8-7.2-43.8-12.7-70.3-12.7-92.9 0-151.5 44.5-151.5 120.3 0 26.3 6.9 52 14.6 77.1H374c-4.4 0-8 3.6-8 8v30c0 4.4 3.6 8 8 8h67.1c3.4 14.7 5.9 29.4 5.9 44.2 0 45.2-28.8 83.3-72.8 94.2-3.6.9-6.1 4.1-6.1 7.8V722c0 4.4 3.6 8 8 8H650c4.4 0 8-3.6 8-8v-39.8c0-4.4-3.6-8-8-8z"));
var PoweroffOutline = dist.PoweroffOutline = getIcon$1("poweroff", outline, getNode(newViewBox, "M705.6 124.9a8 8 0 0 0-11.6 7.2v64.2c0 5.5 2.9 10.6 7.5 13.6a352.2 352.2 0 0 1 62.2 49.8c32.7 32.8 58.4 70.9 76.3 113.3a355 355 0 0 1 27.9 138.7c0 48.1-9.4 94.8-27.9 138.7a355.92 355.92 0 0 1-76.3 113.3 353.06 353.06 0 0 1-113.2 76.4c-43.8 18.6-90.5 28-138.5 28s-94.7-9.4-138.5-28a353.06 353.06 0 0 1-113.2-76.4A355.92 355.92 0 0 1 184 650.4a355 355 0 0 1-27.9-138.7c0-48.1 9.4-94.8 27.9-138.7 17.9-42.4 43.6-80.5 76.3-113.3 19-19 39.8-35.6 62.2-49.8 4.7-2.9 7.5-8.1 7.5-13.6V132c0-6-6.3-9.8-11.6-7.2C178.5 195.2 82 339.3 80 506.3 77.2 745.1 272.5 943.5 511.2 944c239 .5 432.8-193.3 432.8-432.4 0-169.2-97-315.7-238.4-386.7zM480 560h64c4.4 0 8-3.6 8-8V88c0-4.4-3.6-8-8-8h-64c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8z"));
var PullRequestOutline = dist.PullRequestOutline = getIcon$1("pull-request", outline, getNode(newViewBox, "M788 705.9V192c0-8.8-7.2-16-16-16H602v-68.8c0-6-7-9.4-11.7-5.7L462.7 202.3a7.14 7.14 0 0 0 0 11.3l127.5 100.8c4.7 3.7 11.7.4 11.7-5.7V240h114v465.9c-44.2 15-76 56.9-76 106.1 0 61.8 50.2 112 112 112s112-50.2 112-112c.1-49.2-31.7-91-75.9-106.1zM752 860a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96zM384 212c0-61.8-50.2-112-112-112s-112 50.2-112 112c0 49.2 31.8 91 76 106.1V706c-44.2 15-76 56.9-76 106.1 0 61.8 50.2 112 112 112s112-50.2 112-112c0-49.2-31.8-91-76-106.1V318.1c44.2-15.1 76-56.9 76-106.1zm-160 0a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm96 600a48.01 48.01 0 0 1-96 0 48.01 48.01 0 0 1 96 0z"));
var QqOutline = dist.QqOutline = getIcon$1("qq", outline, getNode(newViewBox, "M824.8 613.2c-16-51.4-34.4-94.6-62.7-165.3C766.5 262.2 689.3 112 511.5 112 331.7 112 256.2 265.2 261 447.9c-28.4 70.8-46.7 113.7-62.7 165.3-34 109.5-23 154.8-14.6 155.8 18 2.2 70.1-82.4 70.1-82.4 0 49 25.2 112.9 79.8 159-26.4 8.1-85.7 29.9-71.6 53.8 11.4 19.3 196.2 12.3 249.5 6.3 53.3 6 238.1 13 249.5-6.3 14.1-23.8-45.3-45.7-71.6-53.8 54.6-46.2 79.8-110.1 79.8-159 0 0 52.1 84.6 70.1 82.4 8.5-1.1 19.5-46.4-14.5-155.8z"));
var QuestionOutline = dist.QuestionOutline = getIcon$1("question", outline, getNode(newViewBox, "M764 280.9c-14-30.6-33.9-58.1-59.3-81.6C653.1 151.4 584.6 125 512 125s-141.1 26.4-192.7 74.2c-25.4 23.6-45.3 51-59.3 81.7-14.6 32-22 65.9-22 100.9v27c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-27c0-99.5 88.6-180.4 197.6-180.4s197.6 80.9 197.6 180.4c0 40.8-14.5 79.2-42 111.2-27.2 31.7-65.6 54.4-108.1 64-24.3 5.5-46.2 19.2-61.7 38.8a110.85 110.85 0 0 0-23.9 68.6v31.4c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-31.4c0-15.7 10.9-29.5 26-32.9 58.4-13.2 111.4-44.7 149.3-88.7 19.1-22.3 34-47.1 44.3-74 10.7-27.9 16.1-57.2 16.1-87 0-35-7.4-69-22-100.9zM512 787c-30.9 0-56 25.1-56 56s25.1 56 56 56 56-25.1 56-56-25.1-56-56-56z"));
var RadarChartOutline = dist.RadarChartOutline = getIcon$1("radar-chart", outline, getNode(newViewBox, "M926.8 397.1l-396-288a31.81 31.81 0 0 0-37.6 0l-396 288a31.99 31.99 0 0 0-11.6 35.8l151.3 466a32 32 0 0 0 30.4 22.1h489.5c13.9 0 26.1-8.9 30.4-22.1l151.3-466c4.2-13.2-.5-27.6-11.7-35.8zM838.6 417l-98.5 32-200-144.7V199.9L838.6 417zM466 567.2l-89.1 122.3-55.2-169.2L466 567.2zm-116.3-96.8L484 373.3v140.8l-134.3-43.7zM512 599.2l93.9 128.9H418.1L512 599.2zm28.1-225.9l134.2 97.1L540.1 514V373.3zM558 567.2l144.3-46.9-55.2 169.2L558 567.2zm-74-367.3v104.4L283.9 449l-98.5-32L484 199.9zM169.3 470.8l86.5 28.1 80.4 246.4-53.8 73.9-113.1-348.4zM327.1 853l50.3-69h269.3l50.3 69H327.1zm414.5-33.8l-53.8-73.9 80.4-246.4 86.5-28.1-113.1 348.4z"));
var QrcodeOutline = dist.QrcodeOutline = getIcon$1("qrcode", outline, getNode(newViewBox, "M468 128H160c-17.7 0-32 14.3-32 32v308c0 4.4 3.6 8 8 8h332c4.4 0 8-3.6 8-8V136c0-4.4-3.6-8-8-8zm-56 284H192V192h220v220zm-138-74h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm194 210H136c-4.4 0-8 3.6-8 8v308c0 17.7 14.3 32 32 32h308c4.4 0 8-3.6 8-8V556c0-4.4-3.6-8-8-8zm-56 284H192V612h220v220zm-138-74h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm590-630H556c-4.4 0-8 3.6-8 8v332c0 4.4 3.6 8 8 8h332c4.4 0 8-3.6 8-8V160c0-17.7-14.3-32-32-32zm-32 284H612V192h220v220zm-138-74h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm194 210h-48c-4.4 0-8 3.6-8 8v134h-78V556c0-4.4-3.6-8-8-8H556c-4.4 0-8 3.6-8 8v332c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h78v102c0 4.4 3.6 8 8 8h190c4.4 0 8-3.6 8-8V556c0-4.4-3.6-8-8-8zM746 832h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm142 0h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"));
var RadiusBottomleftOutline = dist.RadiusBottomleftOutline = getIcon$1("radius-bottomleft", outline, getNode(newViewBox, "M712 824h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm2-696h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM136 374h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm0-174h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm752 624h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-348 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-230 72h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm230 624H358c-87.3 0-158-70.7-158-158V484c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v182c0 127 103 230 230 230h182c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var RadiusBottomrightOutline = dist.RadiusBottomrightOutline = getIcon$1("radius-bottomright", outline, getNode(newViewBox, "M368 824h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-58-624h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm578 102h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM192 824h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm292 72h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm174 0h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm230 276h-56c-4.4 0-8 3.6-8 8v182c0 87.3-70.7 158-158 158H484c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h182c127 0 230-103 230-230V484c0-4.4-3.6-8-8-8z"));
var RadiusUpleftOutline = dist.RadiusUpleftOutline = getIcon$1("radius-upleft", outline, getNode(newViewBox, "M656 200h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm58 624h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM192 650h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm696-696h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-348 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-174 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm174-696H358c-127 0-230 103-230 230v182c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V358c0-87.3 70.7-158 158-158h182c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var RadiusUprightOutline = dist.RadiusUprightOutline = getIcon$1("radius-upright", outline, getNode(newViewBox, "M368 128h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-2 696h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm522-174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM192 128h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 174h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm348 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm174 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-48-696H484c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h182c87.3 0 158 70.7 158 158v182c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V358c0-127-103-230-230-230z"));
var RadiusSettingOutline = dist.RadiusSettingOutline = getIcon$1("radius-setting", outline, getNode(newViewBox, "M396 140h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-44 684h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm524-204h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM192 344h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 160h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 160h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 160h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm320 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm160 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm140-284c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V370c0-127-103-230-230-230H484c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h170c87.3 0 158 70.7 158 158v170zM236 96H92c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h144c4.4 0 8-3.6 8-8V104c0-4.4-3.6-8-8-8zm-48 101.6c0 1.3-1.1 2.4-2.4 2.4h-43.2c-1.3 0-2.4-1.1-2.4-2.4v-43.2c0-1.3 1.1-2.4 2.4-2.4h43.2c1.3 0 2.4 1.1 2.4 2.4v43.2zM920 780H776c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h144c4.4 0 8-3.6 8-8V788c0-4.4-3.6-8-8-8zm-48 101.6c0 1.3-1.1 2.4-2.4 2.4h-43.2c-1.3 0-2.4-1.1-2.4-2.4v-43.2c0-1.3 1.1-2.4 2.4-2.4h43.2c1.3 0 2.4 1.1 2.4 2.4v43.2z"));
var RedditOutline = dist.RedditOutline = getIcon$1("reddit", outline, getNode(newViewBox, "M288 568a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm338.7 119.7c-23.1 18.2-68.9 37.8-114.7 37.8s-91.6-19.6-114.7-37.8c-14.4-11.3-35.3-8.9-46.7 5.5s-8.9 35.3 5.5 46.7C396.3 771.6 457.5 792 512 792s115.7-20.4 155.9-52.1a33.25 33.25 0 1 0-41.2-52.2zM960 456c0-61.9-50.1-112-112-112-42.1 0-78.7 23.2-97.9 57.6-57.6-31.5-127.7-51.8-204.1-56.5L612.9 195l127.9 36.9c11.5 32.6 42.6 56.1 79.2 56.1 46.4 0 84-37.6 84-84s-37.6-84-84-84c-32 0-59.8 17.9-74 44.2L603.5 123a33.2 33.2 0 0 0-39.6 18.4l-90.8 203.9c-74.5 5.2-142.9 25.4-199.2 56.2A111.94 111.94 0 0 0 176 344c-61.9 0-112 50.1-112 112 0 45.8 27.5 85.1 66.8 102.5-7.1 21-10.8 43-10.8 65.5 0 154.6 175.5 280 392 280s392-125.4 392-280c0-22.6-3.8-44.5-10.8-65.5C932.5 541.1 960 501.8 960 456zM820 172.5a31.5 31.5 0 1 1 0 63 31.5 31.5 0 0 1 0-63zM120 456c0-30.9 25.1-56 56-56a56 56 0 0 1 50.6 32.1c-29.3 22.2-53.5 47.8-71.5 75.9a56.23 56.23 0 0 1-35.1-52zm392 381.5c-179.8 0-325.5-95.6-325.5-213.5S332.2 410.5 512 410.5 837.5 506.1 837.5 624 691.8 837.5 512 837.5zM868.8 508c-17.9-28.1-42.2-53.7-71.5-75.9 9-18.9 28.3-32.1 50.6-32.1 30.9 0 56 25.1 56 56 .1 23.5-14.5 43.7-35.1 52zM624 568a56 56 0 1 0 112 0 56 56 0 1 0-112 0z"));
var RedoOutline = dist.RedoOutline = getIcon$1("redo", outline, getNode(newViewBox, "M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 0 1-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 0 1-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 0 0-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z"));
var ReloadOutline = dist.ReloadOutline = getIcon$1("reload", outline, getNode(newViewBox, "M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 0 0-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 0 1 655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 0 1 279 755.2a342.16 342.16 0 0 1-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 0 1 109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 0 0 3 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z"));
var RetweetOutline = dist.RetweetOutline = getIcon$1("retweet", outline, getNode(normalViewBox, "M136 552h63.6c4.4 0 8-3.6 8-8V288.7h528.6v72.6c0 1.9.6 3.7 1.8 5.2a8.3 8.3 0 0 0 11.7 1.4L893 255.4c4.3-5 3.6-10.3 0-13.2L749.7 129.8a8.22 8.22 0 0 0-5.2-1.8c-4.6 0-8.4 3.8-8.4 8.4V209H199.7c-39.5 0-71.7 32.2-71.7 71.8V544c0 4.4 3.6 8 8 8zm752-80h-63.6c-4.4 0-8 3.6-8 8v255.3H287.8v-72.6c0-1.9-.6-3.7-1.8-5.2a8.3 8.3 0 0 0-11.7-1.4L131 768.6c-4.3 5-3.6 10.3 0 13.2l143.3 112.4c1.5 1.2 3.3 1.8 5.2 1.8 4.6 0 8.4-3.8 8.4-8.4V815h536.6c39.5 0 71.7-32.2 71.7-71.8V480c-.2-4.4-3.8-8-8.2-8z"));
var RightOutline = dist.RightOutline = getIcon$1("right", outline, getNode(newViewBox, "M765.7 486.8L314.9 134.7A7.97 7.97 0 0 0 302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 0 0 0-50.4z"));
var RiseOutline = dist.RiseOutline = getIcon$1("rise", outline, getNode(newViewBox, "M917 211.1l-199.2 24c-6.6.8-9.4 8.9-4.7 13.6l59.3 59.3-226 226-101.8-101.7c-6.3-6.3-16.4-6.2-22.6 0L100.3 754.1a8.03 8.03 0 0 0 0 11.3l45 45.2c3.1 3.1 8.2 3.1 11.3 0L433.3 534 535 635.7c6.3 6.2 16.4 6.2 22.6 0L829 364.5l59.3 59.3a8.01 8.01 0 0 0 13.6-4.7l24-199.2c.7-5.1-3.7-9.5-8.9-8.8z"));
var RollbackOutline = dist.RollbackOutline = getIcon$1("rollback", outline, getNode(newViewBox, "M793 242H366v-74c0-6.7-7.7-10.4-12.9-6.3l-142 112a8 8 0 0 0 0 12.6l142 112c5.2 4.1 12.9.4 12.9-6.3v-74h415v470H175c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h618c35.3 0 64-28.7 64-64V306c0-35.3-28.7-64-64-64z"));
var SafetyOutline = dist.SafetyOutline = getIcon$1("safety", outline, getNode(normalViewBox, "M512 64L128 192v384c0 212.1 171.9 384 384 384s384-171.9 384-384V192L512 64zm312 512c0 172.3-139.7 312-312 312S200 748.3 200 576V246l312-110 312 110v330z", "M378.4 475.1a35.91 35.91 0 0 0-50.9 0 35.91 35.91 0 0 0 0 50.9l129.4 129.4 2.1 2.1a33.98 33.98 0 0 0 48.1 0L730.6 434a33.98 33.98 0 0 0 0-48.1l-2.8-2.8a33.98 33.98 0 0 0-48.1 0L483 579.7 378.4 475.1z"));
var RobotOutline = dist.RobotOutline = getIcon$1("robot", outline, getNode(newViewBox, "M300 328a60 60 0 1 0 120 0 60 60 0 1 0-120 0zM852 64H172c-17.7 0-32 14.3-32 32v660c0 17.7 14.3 32 32 32h680c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-32 660H204V128h616v596zM604 328a60 60 0 1 0 120 0 60 60 0 1 0-120 0zm250.2 556H169.8c-16.5 0-29.8 14.3-29.8 32v36c0 4.4 3.3 8 7.4 8h729.1c4.1 0 7.4-3.6 7.4-8v-36c.1-17.7-13.2-32-29.7-32zM664 508H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z"));
var SearchOutline = dist.SearchOutline = getIcon$1("search", outline, getNode(newViewBox, "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"));
var ScanOutline = dist.ScanOutline = getIcon$1("scan", outline, getNode(newViewBox, "M136 384h56c4.4 0 8-3.6 8-8V200h176c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H196c-37.6 0-68 30.4-68 68v180c0 4.4 3.6 8 8 8zm512-184h176v176c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V196c0-37.6-30.4-68-68-68H648c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zM376 824H200V648c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v180c0 37.6 30.4 68 68 68h180c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm512-184h-56c-4.4 0-8 3.6-8 8v176H648c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h180c37.6 0 68-30.4 68-68V648c0-4.4-3.6-8-8-8zm16-164H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var ScissorOutline = dist.ScissorOutline = getIcon$1("scissor", outline, getNode(newViewBox, "M567.1 512l318.5-319.3c5-5 1.5-13.7-5.6-13.7h-90.5c-2.1 0-4.2.8-5.6 2.3l-273.3 274-90.2-90.5c12.5-22.1 19.7-47.6 19.7-74.8 0-83.9-68.1-152-152-152s-152 68.1-152 152 68.1 152 152 152c27.7 0 53.6-7.4 75.9-20.3l90 90.3-90.1 90.3A151.04 151.04 0 0 0 288 582c-83.9 0-152 68.1-152 152s68.1 152 152 152 152-68.1 152-152c0-27.2-7.2-52.7-19.7-74.8l90.2-90.5 273.3 274c1.5 1.5 3.5 2.3 5.6 2.3H880c7.1 0 10.7-8.6 5.6-13.7L567.1 512zM288 370c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80zm0 444c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"));
var SelectOutline = dist.SelectOutline = getIcon$1("select", outline, getNode(newViewBox, "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h360c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H184V184h656v320c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V144c0-17.7-14.3-32-32-32zM653.3 599.4l52.2-52.2a8.01 8.01 0 0 0-4.7-13.6l-179.4-21c-5.1-.6-9.5 3.7-8.9 8.9l21 179.4c.8 6.6 8.9 9.4 13.6 4.7l52.4-52.4 256.2 256.2c3.1 3.1 8.2 3.1 11.3 0l42.4-42.4c3.1-3.1 3.1-8.2 0-11.3L653.3 599.4z"));
var ShakeOutline = dist.ShakeOutline = getIcon$1("shake", outline, getNode(newViewBox, "M324 666a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm616.7-309.6L667.6 83.2C655.2 70.9 638.7 64 621.1 64s-34.1 6.8-46.5 19.2L83.3 574.5a65.85 65.85 0 0 0 0 93.1l273.2 273.2c12.3 12.3 28.9 19.2 46.5 19.2s34.1-6.8 46.5-19.2l491.3-491.3c25.6-25.7 25.6-67.5-.1-93.1zM403 880.1L143.9 621l477.2-477.2 259 259.2L403 880.1zM152.8 373.7a7.9 7.9 0 0 0 11.2 0L373.7 164a7.9 7.9 0 0 0 0-11.2l-38.4-38.4a7.9 7.9 0 0 0-11.2 0L114.3 323.9a7.9 7.9 0 0 0 0 11.2l38.5 38.6zm718.6 276.6a7.9 7.9 0 0 0-11.2 0L650.3 860.1a7.9 7.9 0 0 0 0 11.2l38.4 38.4a7.9 7.9 0 0 0 11.2 0L909.7 700a7.9 7.9 0 0 0 0-11.2l-38.3-38.5z"));
var ShareAltOutline = dist.ShareAltOutline = getIcon$1("share-alt", outline, getNode(newViewBox, "M752 664c-28.5 0-54.8 10-75.4 26.7L469.4 540.8a160.68 160.68 0 0 0 0-57.6l207.2-149.9C697.2 350 723.5 360 752 360c66.2 0 120-53.8 120-120s-53.8-120-120-120-120 53.8-120 120c0 11.6 1.6 22.7 4.7 33.3L439.9 415.8C410.7 377.1 364.3 352 312 352c-88.4 0-160 71.6-160 160s71.6 160 160 160c52.3 0 98.7-25.1 127.9-63.8l196.8 142.5c-3.1 10.6-4.7 21.8-4.7 33.3 0 66.2 53.8 120 120 120s120-53.8 120-120-53.8-120-120-120zm0-476c28.7 0 52 23.3 52 52s-23.3 52-52 52-52-23.3-52-52 23.3-52 52-52zM312 600c-48.5 0-88-39.5-88-88s39.5-88 88-88 88 39.5 88 88-39.5 88-88 88zm440 236c-28.7 0-52-23.3-52-52s23.3-52 52-52 52 23.3 52 52-23.3 52-52 52z"));
var ShoppingCartOutline = dist.ShoppingCartOutline = getIcon$1("shopping-cart", outline, getNode(normalViewBox, "M922.9 701.9H327.4l29.9-60.9 496.8-.9c16.8 0 31.2-12 34.2-28.6l68.8-385.1c1.8-10.1-.9-20.5-7.5-28.4a34.99 34.99 0 0 0-26.6-12.5l-632-2.1-5.4-25.4c-3.4-16.2-18-28-34.6-28H96.5a35.3 35.3 0 1 0 0 70.6h125.9L246 312.8l58.1 281.3-74.8 122.1a34.96 34.96 0 0 0-3 36.8c6 11.9 18.1 19.4 31.5 19.4h62.8a102.43 102.43 0 0 0-20.6 61.7c0 56.6 46 102.6 102.6 102.6s102.6-46 102.6-102.6c0-22.3-7.4-44-20.6-61.7h161.1a102.43 102.43 0 0 0-20.6 61.7c0 56.6 46 102.6 102.6 102.6s102.6-46 102.6-102.6c0-22.3-7.4-44-20.6-61.7H923c19.4 0 35.3-15.8 35.3-35.3a35.42 35.42 0 0 0-35.4-35.2zM305.7 253l575.8 1.9-56.4 315.8-452.3.8L305.7 253zm96.9 612.7c-17.4 0-31.6-14.2-31.6-31.6 0-17.4 14.2-31.6 31.6-31.6s31.6 14.2 31.6 31.6a31.6 31.6 0 0 1-31.6 31.6zm325.1 0c-17.4 0-31.6-14.2-31.6-31.6 0-17.4 14.2-31.6 31.6-31.6s31.6 14.2 31.6 31.6a31.6 31.6 0 0 1-31.6 31.6z"));
var ShrinkOutline = dist.ShrinkOutline = getIcon$1("shrink", outline, getNode(newViewBox, "M881.7 187.4l-45.1-45.1a8.03 8.03 0 0 0-11.3 0L667.8 299.9l-54.7-54.7a7.94 7.94 0 0 0-13.5 4.7L576.1 439c-.6 5.2 3.7 9.5 8.9 8.9l189.2-23.5c6.6-.8 9.3-8.8 4.7-13.5l-54.7-54.7 157.6-157.6c3-3 3-8.1-.1-11.2zM439 576.1l-189.2 23.5c-6.6.8-9.3 8.9-4.7 13.5l54.7 54.7-157.5 157.5a8.03 8.03 0 0 0 0 11.3l45.1 45.1c3.1 3.1 8.2 3.1 11.3 0l157.6-157.6 54.7 54.7a7.94 7.94 0 0 0 13.5-4.7L447.9 585a7.9 7.9 0 0 0-8.9-8.9z"));
var SlackOutline = dist.SlackOutline = getIcon$1("slack", outline, getNode(newViewBox, "M409.4 128c-42.4 0-76.7 34.4-76.7 76.8 0 20.3 8.1 39.9 22.4 54.3a76.74 76.74 0 0 0 54.3 22.5h76.7v-76.8c0-42.3-34.3-76.7-76.7-76.8zm0 204.8H204.7c-42.4 0-76.7 34.4-76.7 76.8s34.4 76.8 76.7 76.8h204.6c42.4 0 76.7-34.4 76.7-76.8.1-42.4-34.3-76.8-76.6-76.8zM614 486.4c42.4 0 76.8-34.4 76.7-76.8V204.8c0-42.4-34.3-76.8-76.7-76.8-42.4 0-76.7 34.4-76.7 76.8v204.8c0 42.5 34.3 76.8 76.7 76.8zm281.4-76.8c0-42.4-34.4-76.8-76.7-76.8S742 367.2 742 409.6v76.8h76.7c42.3 0 76.7-34.4 76.7-76.8zm-76.8 128H614c-42.4 0-76.7 34.4-76.7 76.8 0 20.3 8.1 39.9 22.4 54.3a76.74 76.74 0 0 0 54.3 22.5h204.6c42.4 0 76.7-34.4 76.7-76.8.1-42.4-34.3-76.7-76.7-76.8zM614 742.4h-76.7v76.8c0 42.4 34.4 76.8 76.7 76.8 42.4 0 76.8-34.4 76.7-76.8.1-42.4-34.3-76.7-76.7-76.8zM409.4 537.6c-42.4 0-76.7 34.4-76.7 76.8v204.8c0 42.4 34.4 76.8 76.7 76.8 42.4 0 76.8-34.4 76.7-76.8V614.4c0-20.3-8.1-39.9-22.4-54.3a76.92 76.92 0 0 0-54.3-22.5zM128 614.4c0 20.3 8.1 39.9 22.4 54.3a76.74 76.74 0 0 0 54.3 22.5c42.4 0 76.8-34.4 76.7-76.8v-76.8h-76.7c-42.3 0-76.7 34.4-76.7 76.8z"));
var SmallDashOutline = dist.SmallDashOutline = getIcon$1("small-dash", outline, getNode(newViewBox, "M112 476h72v72h-72zm182 0h72v72h-72zm364 0h72v72h-72zm182 0h72v72h-72zm-364 0h72v72h-72z"));
var SolutionOutline = dist.SolutionOutline = getIcon$1("solution", outline, getNode(newViewBox, "M688 264c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48zm-8 136H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM480 544H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm-48 308H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h264c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm356.8-74.4c29-26.3 47.2-64.3 47.2-106.6 0-79.5-64.5-144-144-144s-144 64.5-144 144c0 42.3 18.2 80.3 47.2 106.6-57 32.5-96.2 92.7-99.2 162.1-.2 4.5 3.5 8.3 8 8.3h48.1c4.2 0 7.7-3.3 8-7.6C564 871.2 621.7 816 692 816s128 55.2 131.9 124.4c.2 4.2 3.7 7.6 8 7.6H880c4.6 0 8.2-3.8 8-8.3-2.9-69.5-42.2-129.6-99.2-162.1zM692 591c44.2 0 80 35.8 80 80s-35.8 80-80 80-80-35.8-80-80 35.8-80 80-80z"));
var SketchOutline = dist.SketchOutline = getIcon$1("sketch", outline, getNode(newViewBox, "M925.6 405.1l-203-253.7a6.5 6.5 0 0 0-5-2.4H306.4c-1.9 0-3.8.9-5 2.4l-203 253.7a6.5 6.5 0 0 0 .2 8.3l408.6 459.5c1.2 1.4 3 2.1 4.8 2.1 1.8 0 3.5-.8 4.8-2.1l408.6-459.5a6.5 6.5 0 0 0 .2-8.3zM645.2 206.4l34.4 133.9-132.5-133.9h98.1zm8.2 178.5H370.6L512 242l141.4 142.9zM378.8 206.4h98.1L344.3 340.3l34.5-133.9zm-53.4 7l-44.1 171.5h-93.1l137.2-171.5zM194.6 434.9H289l125.8 247.7-220.2-247.7zM512 763.4L345.1 434.9h333.7L512 763.4zm97.1-80.8L735 434.9h94.4L609.1 682.6zm133.6-297.7l-44.1-171.5 137.2 171.5h-93.1z"));
var SortDescendingOutline = dist.SortDescendingOutline = getIcon$1("sort-descending", outline, getNode(newViewBox, "M839.6 433.8L749 150.5a9.24 9.24 0 0 0-8.9-6.5h-77.4c-4.1 0-7.6 2.6-8.9 6.5l-91.3 283.3c-.3.9-.5 1.9-.5 2.9 0 5.1 4.2 9.3 9.3 9.3h56.4c4.2 0 7.8-2.8 9-6.8l17.5-61.6h89l17.3 61.5c1.1 4 4.8 6.8 9 6.8h61.2c1 0 1.9-.1 2.8-.4 2.4-.8 4.3-2.4 5.5-4.6 1.1-2.2 1.3-4.7.6-7.1zM663.3 325.5l32.8-116.9h6.3l32.1 116.9h-71.2zm143.5 492.9H677.2v-.4l132.6-188.9c1.1-1.6 1.7-3.4 1.7-5.4v-36.4c0-5.1-4.2-9.3-9.3-9.3h-204c-5.1 0-9.3 4.2-9.3 9.3v43c0 5.1 4.2 9.3 9.3 9.3h122.6v.4L587.7 828.9a9.35 9.35 0 0 0-1.7 5.4v36.4c0 5.1 4.2 9.3 9.3 9.3h211.4c5.1 0 9.3-4.2 9.3-9.3v-43a9.2 9.2 0 0 0-9.2-9.3zM310.3 167.1a8 8 0 0 0-12.6 0L185.7 309c-4.2 5.3-.4 13 6.3 13h76v530c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V322h76c6.7 0 10.5-7.8 6.3-13l-112-141.9z"));
var SortAscendingOutline = dist.SortAscendingOutline = getIcon$1("sort-ascending", outline, getNode(newViewBox, "M839.6 433.8L749 150.5a9.24 9.24 0 0 0-8.9-6.5h-77.4c-4.1 0-7.6 2.6-8.9 6.5l-91.3 283.3c-.3.9-.5 1.9-.5 2.9 0 5.1 4.2 9.3 9.3 9.3h56.4c4.2 0 7.8-2.8 9-6.8l17.5-61.6h89l17.3 61.5c1.1 4 4.8 6.8 9 6.8h61.2c1 0 1.9-.1 2.8-.4 2.4-.8 4.3-2.4 5.5-4.6 1.1-2.2 1.3-4.7.6-7.1zM663.3 325.5l32.8-116.9h6.3l32.1 116.9h-71.2zm143.5 492.9H677.2v-.4l132.6-188.9c1.1-1.6 1.7-3.4 1.7-5.4v-36.4c0-5.1-4.2-9.3-9.3-9.3h-204c-5.1 0-9.3 4.2-9.3 9.3v43c0 5.1 4.2 9.3 9.3 9.3h122.6v.4L587.7 828.9a9.35 9.35 0 0 0-1.7 5.4v36.4c0 5.1 4.2 9.3 9.3 9.3h211.4c5.1 0 9.3-4.2 9.3-9.3v-43a9.2 9.2 0 0 0-9.2-9.3zM416 702h-76V172c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v530h-76c-6.7 0-10.5 7.8-6.3 13l112 141.9a8 8 0 0 0 12.6 0l112-141.9c4.1-5.2.4-13-6.3-13z"));
var StockOutline = dist.StockOutline = getIcon$1("stock", outline, getNode(newViewBox, "M904 747H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM165.7 621.8l39.7 39.5c3.1 3.1 8.2 3.1 11.3 0l234.7-233.9 97.6 97.3a32.11 32.11 0 0 0 45.2 0l264.2-263.2c3.1-3.1 3.1-8.2 0-11.3l-39.7-39.6a8.03 8.03 0 0 0-11.3 0l-235.7 235-97.7-97.3a32.11 32.11 0 0 0-45.2 0L165.7 610.5a7.94 7.94 0 0 0 0 11.3z"));
var SwapLeftOutline = dist.SwapLeftOutline = getIcon$1("swap-left", outline, getNode(normalViewBox, "M872 572H266.8l144.3-183c4.1-5.2.4-13-6.3-13H340c-9.8 0-19.1 4.5-25.1 12.2l-164 208c-16.5 21-1.6 51.8 25.1 51.8h696c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z"));
var SwapRightOutline = dist.SwapRightOutline = getIcon$1("swap-right", outline, getNode(normalViewBox, "M873.1 596.2l-164-208A32 32 0 0 0 684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z"));
var StrikethroughOutline = dist.StrikethroughOutline = getIcon$1("strikethrough", outline, getNode(newViewBox, "M952 474H569.9c-10-2-20.5-4-31.6-6-15.9-2.9-22.2-4.1-30.8-5.8-51.3-10-82.2-20-106.8-34.2-35.1-20.5-52.2-48.3-52.2-85.1 0-37 15.2-67.7 44-89 28.4-21 68.8-32.1 116.8-32.1 54.8 0 97.1 14.4 125.8 42.8 14.6 14.4 25.3 32.1 31.8 52.6 1.3 4.1 2.8 10 4.3 17.8.9 4.8 5.2 8.2 9.9 8.2h72.8c5.6 0 10.1-4.6 10.1-10.1v-1c-.7-6.8-1.3-12.1-2-16-7.3-43.5-28-81.7-59.7-110.3-44.4-40.5-109.7-61.8-188.7-61.8-72.3 0-137.4 18.1-183.3 50.9-25.6 18.4-45.4 41.2-58.6 67.7-13.5 27.1-20.3 58.4-20.3 92.9 0 29.5 5.7 54.5 17.3 76.5 8.3 15.7 19.6 29.5 34.1 42H72c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h433.2c2.1.4 3.9.8 5.9 1.2 30.9 6.2 49.5 10.4 66.6 15.2 23 6.5 40.6 13.3 55.2 21.5 35.8 20.2 53.3 49.2 53.3 89 0 35.3-15.5 66.8-43.6 88.8-30.5 23.9-75.6 36.4-130.5 36.4-43.7 0-80.7-8.5-110.2-25-29.1-16.3-49.1-39.8-59.7-69.5-.8-2.2-1.7-5.2-2.7-9-1.2-4.4-5.3-7.5-9.7-7.5h-79.7c-5.6 0-10.1 4.6-10.1 10.1v1c.2 2.3.4 4.2.6 5.7 6.5 48.8 30.3 88.8 70.7 118.8 47.1 34.8 113.4 53.2 191.8 53.2 84.2 0 154.8-19.8 204.2-57.3 25-18.9 44.2-42.2 57.1-69 13-27.1 19.7-57.9 19.7-91.5 0-31.8-5.8-58.4-17.8-81.4-5.8-11.2-13.1-21.5-21.8-30.8H952c4.4 0 8-3.6 8-8v-60a8 8 0 0 0-8-7.9z"));
var SwapOutline = dist.SwapOutline = getIcon$1("swap", outline, getNode(newViewBox, "M847.9 592H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h605.2L612.9 851c-4.1 5.2-.4 13 6.3 13h72.5c4.9 0 9.5-2.2 12.6-6.1l168.8-214.1c16.5-21 1.6-51.8-25.2-51.8zM872 356H266.8l144.3-183c4.1-5.2.4-13-6.3-13h-72.5c-4.9 0-9.5 2.2-12.6 6.1L150.9 380.2c-16.5 21-1.6 51.8 25.1 51.8h696c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z"));
var SyncOutline = dist.SyncOutline = getIcon$1("sync", outline, getNode(newViewBox, "M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 0 1 755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 0 0 3 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 0 0 8 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 0 1 512.1 856a342.24 342.24 0 0 1-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 0 0-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 0 0-8-8.2z"));
var TableOutline = dist.TableOutline = getIcon$1("table", outline, getNode(newViewBox, "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z"));
var TeamOutline = dist.TeamOutline = getIcon$1("team", outline, getNode(newViewBox, "M824.2 699.9a301.55 301.55 0 0 0-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 0 0-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 0 0 8 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 0 1 612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 0 0 8-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 0 1-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 0 1 612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 0 1-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 0 0 8 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z"));
var TaobaoOutline = dist.TaobaoOutline = getIcon$1("taobao", outline, getNode(newViewBox, "M168.5 273.7a68.7 68.7 0 1 0 137.4 0 68.7 68.7 0 1 0-137.4 0zm730 79.2s-23.7-184.4-426.9-70.1c17.3-30 25.6-49.5 25.6-49.5L396.4 205s-40.6 132.6-113 194.4c0 0 70.1 40.6 69.4 39.4 20.1-20.1 38.2-40.6 53.7-60.4 16.1-7 31.5-13.6 46.7-19.8-18.6 33.5-48.7 83.8-78.8 115.6l42.4 37s28.8-27.7 60.4-61.2h36v61.8H372.9v49.5h140.3v118.5c-1.7 0-3.6 0-5.4-.2-15.4-.7-39.5-3.3-49-18.2-11.5-18.1-3-51.5-2.4-71.9h-97l-3.4 1.8s-35.5 159.1 102.3 155.5c129.1 3.6 203-36 238.6-63.1l14.2 52.6 79.6-33.2-53.9-131.9-64.6 20.1 12.1 45.2c-16.6 12.4-35.6 21.7-56.2 28.4V561.3h137.1v-49.5H628.1V450h137.6v-49.5H521.3c17.6-21.4 31.5-41.1 35-53.6l-42.5-11.6c182.8-65.5 284.5-54.2 283.6 53.2v282.8s10.8 97.1-100.4 90.1l-60.2-12.9-14.2 57.1S882.5 880 903.7 680.2c21.3-200-5.2-327.3-5.2-327.3zm-707.4 18.3l-45.4 69.7 83.6 52.1s56 28.5 29.4 81.9C233.8 625.5 112 736.3 112 736.3l109 68.1c75.4-163.7 70.5-142 89.5-200.7 19.5-60.1 23.7-105.9-9.4-139.1-42.4-42.6-47-46.6-110-93.4z"));
var ToTopOutline = dist.ToTopOutline = getIcon$1("to-top", outline, getNode(newViewBox, "M885 780H165c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM400 325.7h73.9V664c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V325.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 171a8 8 0 0 0-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13z"));
var TrademarkOutline = dist.TrademarkOutline = getIcon$1("trademark", outline, getNode(newViewBox, "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm87.5-334.7c34.8-12.8 78.4-49 78.4-119.2 0-71.2-45.5-131.1-144.2-131.1H378c-4.4 0-8 3.6-8 8v410c0 4.4 3.6 8 8 8h54.5c4.4 0 8-3.6 8-8V561.2h88.7l74.6 159.2c1.3 2.8 4.1 4.6 7.2 4.6h62a7.9 7.9 0 0 0 7.1-11.5l-80.6-164.2zM522 505h-81.5V357h83.4c48 0 80.9 25.3 80.9 75.5 0 46.9-29.8 72.5-82.8 72.5z"));
var TransactionOutline = dist.TransactionOutline = getIcon$1("transaction", outline, getNode(newViewBox, "M668.6 320c0-4.4-3.6-8-8-8h-54.5c-3 0-5.8 1.7-7.1 4.4l-84.7 168.8H511l-84.7-168.8a8 8 0 0 0-7.1-4.4h-55.7c-1.3 0-2.6.3-3.8 1-3.9 2.1-5.3 7-3.2 10.8l103.9 191.6h-57c-4.4 0-8 3.6-8 8v27.1c0 4.4 3.6 8 8 8h76v39h-76c-4.4 0-8 3.6-8 8v27.1c0 4.4 3.6 8 8 8h76V704c0 4.4 3.6 8 8 8h49.9c4.4 0 8-3.6 8-8v-63.5h76.3c4.4 0 8-3.6 8-8v-27.1c0-4.4-3.6-8-8-8h-76.3v-39h76.3c4.4 0 8-3.6 8-8v-27.1c0-4.4-3.6-8-8-8H564l103.7-191.6c.5-1.1.9-2.4.9-3.7zM157.9 504.2a352.7 352.7 0 0 1 103.5-242.4c32.5-32.5 70.3-58.1 112.4-75.9 43.6-18.4 89.9-27.8 137.6-27.8 47.8 0 94.1 9.3 137.6 27.8 42.1 17.8 79.9 43.4 112.4 75.9 10 10 19.3 20.5 27.9 31.4l-50 39.1a8 8 0 0 0 3 14.1l156.8 38.3c5 1.2 9.9-2.6 9.9-7.7l.8-161.5c0-6.7-7.7-10.5-12.9-6.3l-47.8 37.4C770.7 146.3 648.6 82 511.5 82 277 82 86.3 270.1 82 503.8a8 8 0 0 0 8 8.2h60c4.3 0 7.8-3.5 7.9-7.8zM934 512h-60c-4.3 0-7.9 3.5-8 7.8a352.7 352.7 0 0 1-103.5 242.4 352.57 352.57 0 0 1-112.4 75.9c-43.6 18.4-89.9 27.8-137.6 27.8s-94.1-9.3-137.6-27.8a352.57 352.57 0 0 1-112.4-75.9c-10-10-19.3-20.5-27.9-31.4l49.9-39.1a8 8 0 0 0-3-14.1l-156.8-38.3c-5-1.2-9.9 2.6-9.9 7.7l-.8 161.7c0 6.7 7.7 10.5 12.9 6.3l47.8-37.4C253.3 877.7 375.4 942 512.5 942 747 942 937.7 753.9 942 520.2a8 8 0 0 0-8-8.2z"));
var TwitterOutline = dist.TwitterOutline = getIcon$1("twitter", outline, getNode(newViewBox, "M928 254.3c-30.6 13.2-63.9 22.7-98.2 26.4a170.1 170.1 0 0 0 75-94 336.64 336.64 0 0 1-108.2 41.2A170.1 170.1 0 0 0 672 174c-94.5 0-170.5 76.6-170.5 170.6 0 13.2 1.6 26.4 4.2 39.1-141.5-7.4-267.7-75-351.6-178.5a169.32 169.32 0 0 0-23.2 86.1c0 59.2 30.1 111.4 76 142.1a172 172 0 0 1-77.1-21.7v2.1c0 82.9 58.6 151.6 136.7 167.4a180.6 180.6 0 0 1-44.9 5.8c-11.1 0-21.6-1.1-32.2-2.6C211 652 273.9 701.1 348.8 702.7c-58.6 45.9-132 72.9-211.7 72.9-14.3 0-27.5-.5-41.2-2.1C171.5 822 261.2 850 357.8 850 671.4 850 843 590.2 843 364.7c0-7.4 0-14.8-.5-22.2 33.2-24.3 62.3-54.4 85.5-88.2z"));
var UnderlineOutline = dist.UnderlineOutline = getIcon$1("underline", outline, getNode(newViewBox, "M824 804H200c-4.4 0-8 3.4-8 7.6v60.8c0 4.2 3.6 7.6 8 7.6h624c4.4 0 8-3.4 8-7.6v-60.8c0-4.2-3.6-7.6-8-7.6zm-312-76c69.4 0 134.6-27.1 183.8-76.2C745 602.7 772 537.4 772 468V156c0-6.6-5.4-12-12-12h-60c-6.6 0-12 5.4-12 12v312c0 97-79 176-176 176s-176-79-176-176V156c0-6.6-5.4-12-12-12h-60c-6.6 0-12 5.4-12 12v312c0 69.4 27.1 134.6 76.2 183.8C377.3 701 442.6 728 512 728z"));
var UndoOutline = dist.UndoOutline = getIcon$1("undo", outline, getNode(newViewBox, "M511.4 124C290.5 124.3 112 303 112 523.9c0 128 60.2 242 153.8 315.2l-37.5 48c-4.1 5.3-.3 13 6.3 12.9l167-.8c5.2 0 9-4.9 7.7-9.9L369.8 727a8 8 0 0 0-14.1-3L315 776.1c-10.2-8-20-16.7-29.3-26a318.64 318.64 0 0 1-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 0 1-68.6 101.7c-7.5 7.5-15.3 14.5-23.4 21.2a7.93 7.93 0 0 0-1.2 11.1l39.4 50.5c2.8 3.5 7.9 4.1 11.4 1.3C854.5 760.8 912 649.1 912 523.9c0-221.1-179.4-400.2-400.6-399.9z"));
var UnorderedListOutline = dist.UnorderedListOutline = getIcon$1("unordered-list", outline, getNode(newViewBox, "M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm0 284a56 56 0 1 0 112 0 56 56 0 1 0-112 0zm0 284a56 56 0 1 0 112 0 56 56 0 1 0-112 0z"));
var UpOutline = dist.UpOutline = getIcon$1("up", outline, getNode(newViewBox, "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 0 0 140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"));
var UploadOutline = dist.UploadOutline = getIcon$1("upload", outline, getNode(newViewBox, "M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 0 0-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z"));
var UserAddOutline = dist.UserAddOutline = getIcon$1("user-add", outline, getNode(newViewBox, "M678.3 642.4c24.2-13 51.9-20.4 81.4-20.4h.1c3 0 4.4-3.6 2.2-5.6a371.67 371.67 0 0 0-103.7-65.8c-.4-.2-.8-.3-1.2-.5C719.2 505 759.6 431.7 759.6 349c0-137-110.8-248-247.5-248S264.7 212 264.7 349c0 82.7 40.4 156 102.6 201.1-.4.2-.8.3-1.2.5-44.7 18.9-84.8 46-119.3 80.6a373.42 373.42 0 0 0-80.4 119.5A373.6 373.6 0 0 0 137 888.8a8 8 0 0 0 8 8.2h59.9c4.3 0 7.9-3.5 8-7.8 2-77.2 32.9-149.5 87.6-204.3C357 628.2 432.2 597 512.2 597c56.7 0 111.1 15.7 158 45.1a8.1 8.1 0 0 0 8.1.3zM512.2 521c-45.8 0-88.9-17.9-121.4-50.4A171.2 171.2 0 0 1 340.5 349c0-45.9 17.9-89.1 50.3-121.6S466.3 177 512.2 177s88.9 17.9 121.4 50.4A171.2 171.2 0 0 1 683.9 349c0 45.9-17.9 89.1-50.3 121.6C601.1 503.1 558 521 512.2 521zM880 759h-84v-84c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v84h-84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h84v84c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-84h84c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var UsergroupAddOutline = dist.UsergroupAddOutline = getIcon$1("usergroup-add", outline, getNode(newViewBox, "M892 772h-80v-80c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v80h-80c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h80v80c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-80h80c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM373.5 498.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 0 1-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.8-1.7-203.2 89.2-203.2 200 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 0 0 8 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.8-1.1 6.4-4.8 5.9-8.8zM824 472c0-109.4-87.9-198.3-196.9-200C516.3 270.3 424 361.2 424 472c0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 0 0-86.4 60.4C357 742.6 326 814.8 324 891.8a8 8 0 0 0 8 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5C505.8 695.7 563 672 624 672c110.4 0 200-89.5 200-200zm-109.5 90.5C690.3 586.7 658.2 600 624 600s-66.3-13.3-90.5-37.5a127.26 127.26 0 0 1-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4-.1 34.2-13.4 66.3-37.6 90.5z"));
var UserOutline = dist.UserOutline = getIcon$1("user", outline, getNode(newViewBox, "M858.5 763.6a374 374 0 0 0-80.6-119.5 375.63 375.63 0 0 0-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 0 0-80.6 119.5A371.7 371.7 0 0 0 136 901.8a8 8 0 0 0 8 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 0 0 8-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z"));
var UserDeleteOutline = dist.UserDeleteOutline = getIcon$1("user-delete", outline, getNode(newViewBox, "M678.3 655.4c24.2-13 51.9-20.4 81.4-20.4h.1c3 0 4.4-3.6 2.2-5.6a371.67 371.67 0 0 0-103.7-65.8c-.4-.2-.8-.3-1.2-.5C719.2 518 759.6 444.7 759.6 362c0-137-110.8-248-247.5-248S264.7 225 264.7 362c0 82.7 40.4 156 102.6 201.1-.4.2-.8.3-1.2.5-44.7 18.9-84.8 46-119.3 80.6a373.42 373.42 0 0 0-80.4 119.5A373.6 373.6 0 0 0 137 901.8a8 8 0 0 0 8 8.2h59.9c4.3 0 7.9-3.5 8-7.8 2-77.2 32.9-149.5 87.6-204.3C357 641.2 432.2 610 512.2 610c56.7 0 111.1 15.7 158 45.1a8.1 8.1 0 0 0 8.1.3zM512.2 534c-45.8 0-88.9-17.9-121.4-50.4A171.2 171.2 0 0 1 340.5 362c0-45.9 17.9-89.1 50.3-121.6S466.3 190 512.2 190s88.9 17.9 121.4 50.4A171.2 171.2 0 0 1 683.9 362c0 45.9-17.9 89.1-50.3 121.6C601.1 516.1 558 534 512.2 534zM880 772H640c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h240c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"));
var UsergroupDeleteOutline = dist.UsergroupDeleteOutline = getIcon$1("usergroup-delete", outline, getNode(newViewBox, "M888 784H664c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h224c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM373.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 0 1-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 0 0 8 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7zM824 484c0-109.4-87.9-198.3-196.9-200C516.3 282.3 424 373.2 424 484c0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 0 0-86.4 60.4C357 754.6 326 826.8 324 903.8a8 8 0 0 0 8 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5C505.8 707.7 563 684 624 684c110.4 0 200-89.5 200-200zm-109.5 90.5C690.3 598.7 658.2 612 624 612s-66.3-13.3-90.5-37.5a127.26 127.26 0 0 1-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4-.1 34.2-13.4 66.3-37.6 90.5z"));
var VerticalAlignBottomOutline = dist.VerticalAlignBottomOutline = getIcon$1("vertical-align-bottom", outline, getNode(newViewBox, "M859.9 780H164.1c-4.5 0-8.1 3.6-8.1 8v60c0 4.4 3.6 8 8.1 8h695.8c4.5 0 8.1-3.6 8.1-8v-60c0-4.4-3.6-8-8.1-8zM505.7 669a8 8 0 0 0 12.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V176c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8z"));
var VerticalAlignMiddleOutline = dist.VerticalAlignMiddleOutline = getIcon$1("vertical-align-middle", outline, getNode(newViewBox, "M859.9 474H164.1c-4.5 0-8.1 3.6-8.1 8v60c0 4.4 3.6 8 8.1 8h695.8c4.5 0 8.1-3.6 8.1-8v-60c0-4.4-3.6-8-8.1-8zm-353.6-74.7c2.9 3.7 8.5 3.7 11.3 0l100.8-127.5c3.7-4.7.4-11.7-5.7-11.7H550V104c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v156h-62.8c-6 0-9.4 7-5.7 11.7l100.8 127.6zm11.4 225.4a7.14 7.14 0 0 0-11.3 0L405.6 752.3a7.23 7.23 0 0 0 5.7 11.7H474v156c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V764h62.8c6 0 9.4-7 5.7-11.7L517.7 624.7z"));
var VerticalAlignTopOutline = dist.VerticalAlignTopOutline = getIcon$1("vertical-align-top", outline, getNode(newViewBox, "M859.9 168H164.1c-4.5 0-8.1 3.6-8.1 8v60c0 4.4 3.6 8 8.1 8h695.8c4.5 0 8.1-3.6 8.1-8v-60c0-4.4-3.6-8-8.1-8zM518.3 355a8 8 0 0 0-12.6 0l-112 141.7a7.98 7.98 0 0 0 6.3 12.9h73.9V848c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V509.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 355z"));
var VerticalRightOutline = dist.VerticalRightOutline = getIcon$1("vertical-right", outline, getNode(newViewBox, "M326 164h-64c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V172c0-4.4-3.6-8-8-8zm444 72.4V164c0-6.8-7.9-10.5-13.1-6.1L335 512l421.9 354.1c5.2 4.4 13.1.7 13.1-6.1v-72.4c0-9.4-4.2-18.4-11.4-24.5L459.4 512l299.2-251.1c7.2-6.1 11.4-15.1 11.4-24.5z"));
var VerticalLeftOutline = dist.VerticalLeftOutline = getIcon$1("vertical-left", outline, getNode(newViewBox, "M762 164h-64c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V172c0-4.4-3.6-8-8-8zm-508 0v72.4c0 9.5 4.2 18.4 11.4 24.5L564.6 512 265.4 763.1c-7.2 6.1-11.4 15-11.4 24.5V860c0 6.8 7.9 10.5 13.1 6.1L689 512 267.1 157.9A7.95 7.95 0 0 0 254 164z"));
var WifiOutline = dist.WifiOutline = getIcon$1("wifi", outline, getNode(newViewBox, "M723 620.5C666.8 571.6 593.4 542 513 542s-153.8 29.6-210.1 78.6a8.1 8.1 0 0 0-.8 11.2l36 42.9c2.9 3.4 8 3.8 11.4.9C393.1 637.2 450.3 614 513 614s119.9 23.2 163.5 61.5c3.4 2.9 8.5 2.5 11.4-.9l36-42.9c2.8-3.3 2.4-8.3-.9-11.2zm117.4-140.1C751.7 406.5 637.6 362 513 362s-238.7 44.5-327.5 118.4a8.05 8.05 0 0 0-1 11.3l36 42.9c2.8 3.4 7.9 3.8 11.2 1C308 472.2 406.1 434 513 434s205 38.2 281.2 101.6c3.4 2.8 8.4 2.4 11.2-1l36-42.9c2.8-3.4 2.4-8.5-1-11.3zm116.7-139C835.7 241.8 680.3 182 511 182c-168.2 0-322.6 59-443.7 157.4a8 8 0 0 0-1.1 11.4l36 42.9c2.8 3.3 7.8 3.8 11.1 1.1C222 306.7 360.3 254 511 254c151.8 0 291 53.5 400 142.7 3.4 2.8 8.4 2.3 11.2-1.1l36-42.9c2.9-3.4 2.4-8.5-1.1-11.3zM448 778a64 64 0 1 0 128 0 64 64 0 1 0-128 0z"));
var ZhihuOutline = dist.ZhihuOutline = getIcon$1("zhihu", outline, getNode(newViewBox, "M564.7 230.1V803h60l25.2 71.4L756.3 803h131.5V230.1H564.7zm247.7 497h-59.9l-75.1 50.4-17.8-50.4h-18V308.3h170.7v418.8zM526.1 486.9H393.3c2.1-44.9 4.3-104.3 6.6-172.9h130.9l-.1-8.1c0-.6-.2-14.7-2.3-29.1-2.1-15-6.6-34.9-21-34.9H287.8c4.4-20.6 15.7-69.7 29.4-93.8l6.4-11.2-12.9-.7c-.8 0-19.6-.9-41.4 10.6-35.7 19-51.7 56.4-58.7 84.4-18.4 73.1-44.6 123.9-55.7 145.6-3.3 6.4-5.3 10.2-6.2 12.8-1.8 4.9-.8 9.8 2.8 13 10.5 9.5 38.2-2.9 38.5-3 .6-.3 1.3-.6 2.2-1 13.9-6.3 55.1-25 69.8-84.5h56.7c.7 32.2 3.1 138.4 2.9 172.9h-141l-2.1 1.5c-23.1 16.9-30.5 63.2-30.8 65.2l-1.4 9.2h167c-12.3 78.3-26.5 113.4-34 127.4-3.7 7-7.3 14-10.7 20.8-21.3 42.2-43.4 85.8-126.3 153.6-3.6 2.8-7 8-4.8 13.7 2.4 6.3 9.3 9.1 24.6 9.1 5.4 0 11.8-.3 19.4-1 49.9-4.4 100.8-18 135.1-87.6 17-35.1 31.7-71.7 43.9-108.9L497 850l5-12c.8-1.9 19-46.3 5.1-95.9l-.5-1.8-108.1-123-22 16.6c6.4-26.1 10.6-49.9 12.5-71.1h158.7v-8c0-40.1-18.5-63.9-19.2-64.9l-2.4-3z"));
var WeiboOutline = dist.WeiboOutline = getIcon$1("weibo", outline, getNode(newViewBox, "M457.3 543c-68.1-17.7-145 16.2-174.6 76.2-30.1 61.2-1 129.1 67.8 151.3 71.2 23 155.2-12.2 184.4-78.3 28.7-64.6-7.2-131-77.6-149.2zm-52 156.2c-13.8 22.1-43.5 31.7-65.8 21.6-22-10-28.5-35.7-14.6-57.2 13.7-21.4 42.3-31 64.4-21.7 22.4 9.5 29.6 35 16 57.3zm45.5-58.5c-5 8.6-16.1 12.7-24.7 9.1-8.5-3.5-11.2-13.1-6.4-21.5 5-8.4 15.6-12.4 24.1-9.1 8.7 3.2 11.8 12.9 7 21.5zm334.5-197.2c15 4.8 31-3.4 35.9-18.3 11.8-36.6 4.4-78.4-23.2-109a111.39 111.39 0 0 0-106-34.3 28.45 28.45 0 0 0-21.9 33.8 28.39 28.39 0 0 0 33.8 21.8c18.4-3.9 38.3 1.8 51.9 16.7a54.2 54.2 0 0 1 11.3 53.3 28.45 28.45 0 0 0 18.2 36zm99.8-206c-56.7-62.9-140.4-86.9-217.7-70.5a32.98 32.98 0 0 0-25.4 39.3 33.12 33.12 0 0 0 39.3 25.5c55-11.7 114.4 5.4 154.8 50.1 40.3 44.7 51.2 105.7 34 159.1-5.6 17.4 3.9 36 21.3 41.7 17.4 5.6 36-3.9 41.6-21.2v-.1c24.1-75.4 8.9-161.1-47.9-223.9zM729 499c-12.2-3.6-20.5-6.1-14.1-22.1 13.8-34.7 15.2-64.7.3-86-28-40.1-104.8-37.9-192.8-1.1 0 0-27.6 12.1-20.6-9.8 13.5-43.5 11.5-79.9-9.6-101-47.7-47.8-174.6 1.8-283.5 110.6C127.3 471.1 80 557.5 80 632.2 80 775.1 263.2 862 442.5 862c235 0 391.3-136.5 391.3-245 0-65.5-55.2-102.6-104.8-118zM443 810.8c-143 14.1-266.5-50.5-275.8-144.5-9.3-93.9 99.2-181.5 242.2-195.6 143-14.2 266.5 50.5 275.8 144.4C694.4 709 586 796.6 443 810.8z"));
var WomanOutline = dist.WomanOutline = getIcon$1("woman", outline, getNode(newViewBox, "M712.8 548.8c53.6-53.6 83.2-125 83.2-200.8 0-75.9-29.5-147.2-83.2-200.8C659.2 93.6 587.8 64 512 64s-147.2 29.5-200.8 83.2C257.6 200.9 228 272.1 228 348c0 63.8 20.9 124.4 59.4 173.9 7.3 9.4 15.2 18.3 23.7 26.9 8.5 8.5 17.5 16.4 26.8 23.7 39.6 30.8 86.3 50.4 136.1 57V736H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h114v140c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V812h114c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8H550V629.5c61.5-8.2 118.2-36.1 162.8-80.7zM512 556c-55.6 0-107.7-21.6-147.1-60.9C325.6 455.8 304 403.6 304 348s21.6-107.7 60.9-147.1C404.2 161.5 456.4 140 512 140s107.7 21.6 147.1 60.9C698.4 240.2 720 292.4 720 348s-21.6 107.7-60.9 147.1C619.7 534.4 567.6 556 512 556z"));
var ZoomInOutline = dist.ZoomInOutline = getIcon$1("zoom-in", outline, getNode(newViewBox, "M637 443H519V309c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v134H325c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h118v134c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V519h118c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm284 424L775 721c122.1-148.9 113.6-369.5-26-509-148-148.1-388.4-148.1-537 0-148.1 148.6-148.1 389 0 537 139.5 139.6 360.1 148.1 509 26l146 146c3.2 2.8 8.3 2.8 11 0l43-43c2.8-2.7 2.8-7.8 0-11zM696 696c-118.8 118.7-311.2 118.7-430 0-118.7-118.8-118.7-311.2 0-430 118.8-118.7 311.2-118.7 430 0 118.7 118.8 118.7 311.2 0 430z"));
var AccountBookTwoTone = dist.AccountBookTwoTone = getIcon$1("account-book", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M712 304c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H384v48c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H184v584h656V256H712v48zm-65.6 121.8l-89.3 164.1h49.1c4.4 0 8 3.6 8 8v21.3c0 4.4-3.6 8-8 8h-65.4v33.7h65.4c4.4 0 8 3.6 8 8v21.3c0 4.4-3.6 8-8 8h-65.4V752c0 4.4-3.6 8-8 8h-41.3c-4.4 0-8-3.6-8-8v-53.8h-65.1c-4.4 0-8-3.6-8-8v-21.3c0-4.4 3.6-8 8-8h65.1v-33.7h-65.1c-4.4 0-8-3.6-8-8v-21.3c0-4.4 3.6-8 8-8H467l-89.3-164c-2.1-3.9-.7-8.8 3.2-10.9 1.1-.7 2.5-1 3.8-1h46a8 8 0 0 1 7.1 4.4l73.4 145.4h2.8l73.4-145.4c1.3-2.7 4.1-4.4 7.1-4.4h45c4.5 0 8 3.6 7.9 8 0 1.3-.4 2.6-1 3.8z"
  ], [
    primaryColor,
    "M639.5 414h-45c-3 0-5.8 1.7-7.1 4.4L514 563.8h-2.8l-73.4-145.4a8 8 0 0 0-7.1-4.4h-46c-1.3 0-2.7.3-3.8 1-3.9 2.1-5.3 7-3.2 10.9l89.3 164h-48.6c-4.4 0-8 3.6-8 8v21.3c0 4.4 3.6 8 8 8h65.1v33.7h-65.1c-4.4 0-8 3.6-8 8v21.3c0 4.4 3.6 8 8 8h65.1V752c0 4.4 3.6 8 8 8h41.3c4.4 0 8-3.6 8-8v-53.8h65.4c4.4 0 8-3.6 8-8v-21.3c0-4.4-3.6-8-8-8h-65.4v-33.7h65.4c4.4 0 8-3.6 8-8v-21.3c0-4.4-3.6-8-8-8h-49.1l89.3-164.1c.6-1.2 1-2.5 1-3.8.1-4.4-3.4-8-7.9-8z"
  ], [
    primaryColor,
    "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v584z"
  ]);
});
var ZoomOutOutline = dist.ZoomOutOutline = getIcon$1("zoom-out", outline, getNode(newViewBox, "M637 443H325c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h312c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm284 424L775 721c122.1-148.9 113.6-369.5-26-509-148-148.1-388.4-148.1-537 0-148.1 148.6-148.1 389 0 537 139.5 139.6 360.1 148.1 509 26l146 146c3.2 2.8 8.3 2.8 11 0l43-43c2.8-2.7 2.8-7.8 0-11zM696 696c-118.8 118.7-311.2 118.7-430 0-118.7-118.8-118.7-311.2 0-430 118.8-118.7 311.2-118.7 430 0 118.7 118.8 118.7 311.2 0 430z"));
var AlertTwoTone = dist.AlertTwoTone = getIcon$1("alert", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M340 585c0-5.5 4.5-10 10-10h44c5.5 0 10 4.5 10 10v171h355V563c0-136.4-110.6-247-247-247S265 426.6 265 563v193h75V585z"
  ], [
    primaryColor,
    "M216.9 310.5l39.6-39.6c3.1-3.1 3.1-8.2 0-11.3l-67.9-67.9a8.03 8.03 0 0 0-11.3 0l-39.6 39.6a8.03 8.03 0 0 0 0 11.3l67.9 67.9c3.1 3.1 8.1 3.1 11.3 0zm669.6-79.2l-39.6-39.6a8.03 8.03 0 0 0-11.3 0l-67.9 67.9a8.03 8.03 0 0 0 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l67.9-67.9c3.1-3.2 3.1-8.2 0-11.3zM484 180h56c4.4 0 8-3.6 8-8V76c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v96c0 4.4 3.6 8 8 8zm348 712H192c-17.7 0-32 14.3-32 32v24c0 4.4 3.6 8 8 8h688c4.4 0 8-3.6 8-8v-24c0-17.7-14.3-32-32-32zm-639-96c0 17.7 14.3 32 32 32h574c17.7 0 32-14.3 32-32V563c0-176.2-142.8-319-319-319S193 386.8 193 563v233zm72-233c0-136.4 110.6-247 247-247s247 110.6 247 247v193H404V585c0-5.5-4.5-10-10-10h-44c-5.5 0-10 4.5-10 10v171h-75V563z"
  ]);
});
var ApiTwoTone = dist.ApiTwoTone = getIcon$1("api", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M148.2 674.6zm106.7-92.3c-25 25-38.7 58.1-38.7 93.4s13.8 68.5 38.7 93.4c25 25 58.1 38.7 93.4 38.7 35.3 0 68.5-13.8 93.4-38.7l59.4-59.4-186.8-186.8-59.4 59.4zm420.8-366.1c-35.3 0-68.5 13.8-93.4 38.7l-59.4 59.4 186.8 186.8 59.4-59.4c24.9-25 38.7-58.1 38.7-93.4s-13.8-68.5-38.7-93.4c-25-25-58.1-38.7-93.4-38.7z"
  ], [
    primaryColor,
    "M578.9 546.7a8.03 8.03 0 0 0-11.3 0L501 613.3 410.7 523l66.7-66.7c3.1-3.1 3.1-8.2 0-11.3L441 408.6a8.03 8.03 0 0 0-11.3 0L363 475.3l-43-43a7.85 7.85 0 0 0-5.7-2.3c-2 0-4.1.8-5.7 2.3L206.8 534.2a199.45 199.45 0 0 0-58.6 140.4c-.2 39.5 11.2 79.1 34.3 113.1l-76.1 76.1a8.03 8.03 0 0 0 0 11.3l42.4 42.4c1.6 1.6 3.6 2.3 5.7 2.3s4.1-.8 5.7-2.3l76.1-76.1c33.7 22.9 72.9 34.3 112.1 34.3 51.2 0 102.4-19.5 141.5-58.6l101.9-101.9c3.1-3.1 3.1-8.2 0-11.3l-43-43 66.7-66.7c3.1-3.1 3.1-8.2 0-11.3l-36.6-36.2zM441.7 769.1a131.32 131.32 0 0 1-93.4 38.7c-35.3 0-68.4-13.7-93.4-38.7-24.9-24.9-38.7-58.1-38.7-93.4s13.7-68.4 38.7-93.4l59.4-59.4 186.8 186.8-59.4 59.4zm476-620.3l-42.4-42.4c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-76.1 76.1a199.27 199.27 0 0 0-112.1-34.3c-51.2 0-102.4 19.5-141.5 58.6L432.3 308.7a8.03 8.03 0 0 0 0 11.3L704 591.7c1.6 1.6 3.6 2.3 5.7 2.3 2 0 4.1-.8 5.7-2.3l101.9-101.9c68.9-69 77-175.7 24.3-253.5l76.1-76.1c3.1-3.2 3.1-8.3 0-11.4zM769.1 441.7l-59.4 59.4-186.8-186.8 59.4-59.4c24.9-24.9 58.1-38.7 93.4-38.7s68.4 13.7 93.4 38.7c24.9 24.9 38.7 58.1 38.7 93.4s-13.8 68.4-38.7 93.4z"
  ]);
});
var AppstoreTwoTone = dist.AppstoreTwoTone = getIcon$1("appstore", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M864 144H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm-52 268H612V212h200v200zM464 544H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16zm-52 268H212V612h200v200zm52-668H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm-52 268H212V212h200v200zm452 132H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16zm-52 268H612V612h200v200z"
  ], [
    secondaryColor,
    "M212 212h200v200H212zm400 0h200v200H612zM212 612h200v200H212zm400 0h200v200H612z"
  ]);
});
var BankTwoTone = dist.BankTwoTone = getIcon$1("bank", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M240.9 393.9h542.2L512 196.7z"], [
    primaryColor,
    "M894 462c30.9 0 43.8-39.7 18.7-58L530.8 126.2a31.81 31.81 0 0 0-37.6 0L111.3 404c-25.1 18.2-12.2 58 18.8 58H192v374h-72c-4.4 0-8 3.6-8 8v52c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-52c0-4.4-3.6-8-8-8h-72V462h62zM381 836H264V462h117v374zm189 0H453V462h117v374zm190 0H642V462h118v374zM240.9 393.9L512 196.7l271.1 197.2H240.9z"
  ]);
});
var AudioTwoTone = dist.AudioTwoTone = getIcon$1("audio", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 552c54.3 0 98-43.2 98-96V232c0-52.8-43.7-96-98-96s-98 43.2-98 96v224c0 52.8 43.7 96 98 96z"
  ], [
    primaryColor,
    "M842 454c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 140.3-113.7 254-254 254S258 594.3 258 454c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 168.7 126.6 307.9 290 327.6V884H326.7c-13.7 0-24.7 14.3-24.7 32v36c0 4.4 2.8 8 6.2 8h407.6c3.4 0 6.2-3.6 6.2-8v-36c0-17.7-11-32-24.7-32H548V782.1c165.3-18 294-158 294-328.1z"
  ], [
    primaryColor,
    "M512 624c93.9 0 170-75.2 170-168V232c0-92.8-76.1-168-170-168s-170 75.2-170 168v224c0 92.8 76.1 168 170 168zm-98-392c0-52.8 43.7-96 98-96s98 43.2 98 96v224c0 52.8-43.7 96-98 96s-98-43.2-98-96V232z"
  ]);
});
var BellTwoTone = dist.BellTwoTone = getIcon$1("bell", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 220c-55.6 0-107.8 21.6-147.1 60.9S304 372.4 304 428v340h416V428c0-55.6-21.6-107.8-60.9-147.1S567.6 220 512 220zm280 208c0-141.1-104.3-257.8-240-277.2v.1c135.7 19.4 240 136 240 277.1zM472 150.9v-.1C336.3 170.2 232 286.9 232 428c0-141.1 104.3-257.7 240-277.1z"
  ], [
    primaryColor,
    "M816 768h-24V428c0-141.1-104.3-257.7-240-277.1V112c0-22.1-17.9-40-40-40s-40 17.9-40 40v38.9c-135.7 19.4-240 136-240 277.1v340h-24c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h216c0 61.8 50.2 112 112 112s112-50.2 112-112h216c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM512 888c-26.5 0-48-21.5-48-48h96c0 26.5-21.5 48-48 48zm208-120H304V428c0-55.6 21.6-107.8 60.9-147.1S456.4 220 512 220c55.6 0 107.8 21.6 147.1 60.9S720 372.4 720 428v340z"
  ]);
});
var BookTwoTone = dist.BookTwoTone = getIcon$1("book", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-260 72h96v209.9L621.5 312 572 347.4V136zM232 888V136h280v296.9c0 3.3 1 6.6 3 9.3a15.9 15.9 0 0 0 22.3 3.7l83.8-59.9 81.4 59.4c2.7 2 6 3.1 9.4 3.1 8.8 0 16-7.2 16-16V136h64v752H232z"
  ], [secondaryColor, "M668 345.9V136h-96v211.4l49.5-35.4z"], [
    secondaryColor,
    "M727.9 136v296.5c0 8.8-7.2 16-16 16-3.4 0-6.7-1.1-9.4-3.1L621.1 386l-83.8 59.9a15.9 15.9 0 0 1-22.3-3.7c-2-2.7-3-6-3-9.3V136H232v752h559.9V136h-64z"
  ]);
});
var BoxPlotTwoTone = dist.BoxPlotTwoTone = getIcon$1("box-plot", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M296 368h88v288h-88zm152 0h280v288H448z"], [
    primaryColor,
    "M952 224h-52c-4.4 0-8 3.6-8 8v248h-92V304c0-4.4-3.6-8-8-8H232c-4.4 0-8 3.6-8 8v176h-92V232c0-4.4-3.6-8-8-8H72c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V548h92v172c0 4.4 3.6 8 8 8h560c4.4 0 8-3.6 8-8V548h92v244c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V232c0-4.4-3.6-8-8-8zM384 656h-88V368h88v288zm344 0H448V368h280v288z"
  ]);
});
var BugTwoTone = dist.BugTwoTone = getIcon$1("bug", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M308 412v268c0 36.78 9.68 71.96 27.8 102.9a205.39 205.39 0 0 0 73.3 73.3A202.68 202.68 0 0 0 512 884c36.78 0 71.96-9.68 102.9-27.8a205.39 205.39 0 0 0 73.3-73.3A202.68 202.68 0 0 0 716 680V412H308zm484 172v96c0 6.5-.22 12.95-.66 19.35C859.94 728.64 908 796.7 908 876a8 8 0 0 1-8 8h-56a8 8 0 0 1-8-8c0-44.24-23.94-82.89-59.57-103.7a278.63 278.63 0 0 1-22.66 49.02 281.39 281.39 0 0 1-100.45 100.45C611.84 946.07 563.55 960 512 960s-99.84-13.93-141.32-38.23a281.39 281.39 0 0 1-100.45-100.45 278.63 278.63 0 0 1-22.66-49.02A119.95 119.95 0 0 0 188 876a8 8 0 0 1-8 8h-56a8 8 0 0 1-8-8c0-79.3 48.07-147.36 116.66-176.65A284.12 284.12 0 0 1 232 680v-96H84a8 8 0 0 1-8-8v-56a8 8 0 0 1 8-8h148V412c-76.77 0-139-62.23-139-139a8 8 0 0 1 8-8h60a8 8 0 0 1 8 8 63 63 0 0 0 63 63h560a63 63 0 0 0 63-63 8 8 0 0 1 8-8h60a8 8 0 0 1 8 8c0 76.77-62.23 139-139 139v100h148a8 8 0 0 1 8 8v56a8 8 0 0 1-8 8H792zM368 272a8 8 0 0 1-8 8h-56a8 8 0 0 1-8-8c0-40.04 8.78-76.75 25.9-108.07a184.57 184.57 0 0 1 74.03-74.03C427.25 72.78 463.96 64 504 64h16c40.04 0 76.75 8.78 108.07 25.9a184.57 184.57 0 0 1 74.03 74.03C719.22 195.25 728 231.96 728 272a8 8 0 0 1-8 8h-56a8 8 0 0 1-8-8c0-28.33-5.94-53.15-17.08-73.53a112.56 112.56 0 0 0-45.39-45.4C573.15 141.95 548.33 136 520 136h-16c-28.33 0-53.15 5.94-73.53 17.08a112.56 112.56 0 0 0-45.4 45.39C373.95 218.85 368 243.67 368 272z"
  ], [
    secondaryColor,
    "M308 412v268c0 36.78 9.68 71.96 27.8 102.9a205.39 205.39 0 0 0 73.3 73.3A202.68 202.68 0 0 0 512 884c36.78 0 71.96-9.68 102.9-27.8a205.39 205.39 0 0 0 73.3-73.3A202.68 202.68 0 0 0 716 680V412H308z"
  ]);
});
var BulbTwoTone = dist.BulbTwoTone = getIcon$1("bulb", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 136c-141.4 0-256 114.6-256 256 0 92.5 49.4 176.3 128.1 221.8l35.9 20.8V752h184V634.6l35.9-20.8C718.6 568.3 768 484.5 768 392c0-141.4-114.6-256-256-256z"
  ], [
    primaryColor,
    "M632 888H392c-4.4 0-8 3.6-8 8v32c0 17.7 14.3 32 32 32h192c17.7 0 32-14.3 32-32v-32c0-4.4-3.6-8-8-8zM512 64c-181.1 0-328 146.9-328 328 0 121.4 66 227.4 164 284.1V792c0 17.7 14.3 32 32 32h264c17.7 0 32-14.3 32-32V676.1c98-56.7 164-162.7 164-284.1 0-181.1-146.9-328-328-328zm127.9 549.8L604 634.6V752H420V634.6l-35.9-20.8C305.4 568.3 256 484.5 256 392c0-141.4 114.6-256 256-256s256 114.6 256 256c0 92.5-49.4 176.3-128.1 221.8z"
  ]);
});
var CalculatorTwoTone = dist.CalculatorTwoTone = getIcon$1("calculator", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm256.2-75h-50.8c-2.2 0-4.5-1.1-5.9-2.9L348 718.6l-35.5 43.5a7.38 7.38 0 0 1-5.9 2.9h-50.8c-6.6 0-10.2-7.9-5.8-13.1l62.7-76.8-61.2-74.9c-4.3-5.2-.7-13.1 5.9-13.1h50.9c2.2 0 4.5 1.1 5.9 2.9l34 41.6 34-41.6c1.5-1.9 3.6-2.9 5.9-2.9h50.8c6.6 0 10.2 7.9 5.9 13.1L383.5 675l62.7 76.8c4.2 5.3.6 13.2-6 13.2zM576 335c0-2.2 1.4-4 3.2-4h193.5c1.9 0 3.3 1.8 3.3 4v48c0 2.2-1.4 4-3.2 4H579.2c-1.8 0-3.2-1.8-3.2-4v-48zm0 265c0-2.2 1.4-4 3.2-4h193.5c1.9 0 3.3 1.8 3.3 4v48c0 2.2-1.4 4-3.2 4H579.2c-1.8 0-3.2-1.8-3.2-4v-48zm0 104c0-2.2 1.4-4 3.2-4h193.5c1.9 0 3.3 1.8 3.3 4v48c0 2.2-1.4 4-3.2 4H579.2c-1.8 0-3.2-1.8-3.2-4v-48zM248 335c0-2.2 1.4-4 3.2-4H320v-68.8c0-1.8 1.8-3.2 4-3.2h48c2.2 0 4 1.4 4 3.2V331h68.7c1.9 0 3.3 1.8 3.3 4v48c0 2.2-1.4 4-3.2 4H376v68.7c0 1.9-1.8 3.3-4 3.3h-48c-2.2 0-4-1.4-4-3.2V387h-68.8c-1.8 0-3.2-1.8-3.2-4v-48z"
  ], [
    primaryColor,
    "M383.5 675l61.3-74.8c4.3-5.2.7-13.1-5.9-13.1h-50.8c-2.3 0-4.4 1-5.9 2.9l-34 41.6-34-41.6a7.69 7.69 0 0 0-5.9-2.9h-50.9c-6.6 0-10.2 7.9-5.9 13.1l61.2 74.9-62.7 76.8c-4.4 5.2-.8 13.1 5.8 13.1h50.8c2.3 0 4.4-1 5.9-2.9l35.5-43.5 35.5 43.5c1.4 1.8 3.7 2.9 5.9 2.9h50.8c6.6 0 10.2-7.9 6-13.2L383.5 675zM251.2 387H320v68.8c0 1.8 1.8 3.2 4 3.2h48c2.2 0 4-1.4 4-3.3V387h68.8c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H376v-68.8c0-1.8-1.8-3.2-4-3.2h-48c-2.2 0-4 1.4-4 3.2V331h-68.8c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4zm328 369h193.6c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H579.2c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4zm0-104h193.6c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H579.2c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4zm0-265h193.6c1.8 0 3.2-1.8 3.2-4v-48c0-2.2-1.4-4-3.3-4H579.2c-1.8 0-3.2 1.8-3.2 4v48c0 2.2 1.4 4 3.2 4z"
  ]);
});
var BuildTwoTone = dist.BuildTwoTone = getIcon$1("build", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M144 546h200v200H144zm268-268h200v200H412z"], [
    primaryColor,
    "M916 210H376c-17.7 0-32 14.3-32 32v236H108c-17.7 0-32 14.3-32 32v272c0 17.7 14.3 32 32 32h540c17.7 0 32-14.3 32-32V546h236c17.7 0 32-14.3 32-32V242c0-17.7-14.3-32-32-32zM344 746H144V546h200v200zm268 0H412V546h200v200zm0-268H412V278h200v200zm268 0H680V278h200v200z"
  ]);
});
var CalendarTwoTone = dist.CalendarTwoTone = getIcon$1("calendar", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M712 304c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H384v48c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H184v136h656V256H712v48z"
  ], [
    primaryColor,
    "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zm0-448H184V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136z"
  ]);
});
var CameraTwoTone = dist.CameraTwoTone = getIcon$1("camera", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M864 320H677.2l-17.1-47.8-22.9-64.2H386.7l-22.9 64.2-17.1 47.8H160c-4.4 0-8 3.6-8 8v456c0 4.4 3.6 8 8 8h704c4.4 0 8-3.6 8-8V328c0-4.4-3.6-8-8-8zM512 704c-88.4 0-160-71.6-160-160s71.6-160 160-160 160 71.6 160 160-71.6 160-160 160z"
  ], [
    primaryColor,
    "M512 384c-88.4 0-160 71.6-160 160s71.6 160 160 160 160-71.6 160-160-71.6-160-160-160zm0 256c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z"
  ], [
    primaryColor,
    "M864 248H728l-32.4-90.8a32.07 32.07 0 0 0-30.2-21.2H358.6c-13.5 0-25.6 8.5-30.1 21.2L296 248H160c-44.2 0-80 35.8-80 80v456c0 44.2 35.8 80 80 80h704c44.2 0 80-35.8 80-80V328c0-44.2-35.8-80-80-80zm8 536c0 4.4-3.6 8-8 8H160c-4.4 0-8-3.6-8-8V328c0-4.4 3.6-8 8-8h186.7l17.1-47.8 22.9-64.2h250.5l22.9 64.2 17.1 47.8H864c4.4 0 8 3.6 8 8v456z"
  ]);
});
var CarTwoTone = dist.CarTwoTone = getIcon$1("car", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M199.6 474L184 517v237h656V517l-15.6-43H199.6zM264 621c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm388 75c0 4.4-3.6 8-8 8H380c-4.4 0-8-3.6-8-8v-84c0-4.4 3.6-8 8-8h40c4.4 0 8 3.6 8 8v36h168v-36c0-4.4 3.6-8 8-8h40c4.4 0 8 3.6 8 8v84zm108-75c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z"
  ], [primaryColor, "M720 581a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"], [
    primaryColor,
    "M959 413.4L935.3 372a8 8 0 0 0-10.9-2.9l-50.7 29.6-78.3-216.2a63.9 63.9 0 0 0-60.9-44.4H301.2c-34.7 0-65.5 22.4-76.2 55.5l-74.6 205.2-50.8-29.6a8 8 0 0 0-10.9 2.9L65 413.4c-2.2 3.8-.9 8.6 2.9 10.8l60.4 35.2-14.5 40c-1.2 3.2-1.8 6.6-1.8 10v348.2c0 15.7 11.8 28.4 26.3 28.4h67.6c12.3 0 23-9.3 25.6-22.3l7.7-37.7h545.6l7.7 37.7c2.7 13 13.3 22.3 25.6 22.3h67.6c14.5 0 26.3-12.7 26.3-28.4V509.4c0-3.4-.6-6.8-1.8-10l-14.5-40 60.3-35.2a8 8 0 0 0 3-10.8zM292.7 218.1l.5-1.3.4-1.3c1.1-3.3 4.1-5.5 7.6-5.5h427.6l75.4 208H220l72.7-199.9zM840 754H184V517l15.6-43h624.8l15.6 43v237z"
  ], [
    primaryColor,
    "M224 581a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm420 23h-40c-4.4 0-8 3.6-8 8v36H428v-36c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v84c0 4.4 3.6 8 8 8h264c4.4 0 8-3.6 8-8v-84c0-4.4-3.6-8-8-8z"
  ]);
});
var CarryOutTwoTone = dist.CarryOutTwoTone = getIcon$1("carry-out", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v584z"
  ], [
    secondaryColor,
    "M712 304c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H384v48c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H184v584h656V256H712v48zm-17.5 128.8L481.9 725.5a16.1 16.1 0 0 1-26 0l-126.4-174c-3.8-5.3 0-12.7 6.5-12.7h55.2c5.2 0 10 2.5 13 6.6l64.7 89 150.9-207.8c3-4.1 7.9-6.6 13-6.6H688c6.5 0 10.3 7.4 6.5 12.8z"
  ], [
    primaryColor,
    "M688 420h-55.2c-5.1 0-10 2.5-13 6.6L468.9 634.4l-64.7-89c-3-4.1-7.8-6.6-13-6.6H336c-6.5 0-10.3 7.4-6.5 12.7l126.4 174a16.1 16.1 0 0 0 26 0l212.6-292.7c3.8-5.4 0-12.8-6.5-12.8z"
  ]);
});
var CheckCircleTwoTone = dist.CheckCircleTwoTone = getIcon$1("check-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 0 1-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z"
  ], [
    primaryColor,
    "M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0 0 51.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z"
  ]);
});
var CheckSquareTwoTone = dist.CheckSquareTwoTone = getIcon$1("check-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm130-367.8h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H688c6.5 0 10.3 7.4 6.5 12.7l-210.6 292a31.8 31.8 0 0 1-51.7 0L307.5 484.9c-3.8-5.3 0-12.7 6.5-12.7z"
  ], [
    primaryColor,
    "M432.2 657.7a31.8 31.8 0 0 0 51.7 0l210.6-292c3.8-5.3 0-12.7-6.5-12.7h-46.9c-10.3 0-19.9 5-25.9 13.3L458 584.3l-71.2-98.8c-6-8.4-15.7-13.3-25.9-13.3H314c-6.5 0-10.3 7.4-6.5 12.7l124.7 172.8z"
  ]);
});
var ClockCircleTwoTone = dist.ClockCircleTwoTone = getIcon$1("clock-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm176.5 509.7l-28.6 39a7.99 7.99 0 0 1-11.2 1.7L483.3 569.8a7.92 7.92 0 0 1-3.3-6.5V288c0-4.4 3.6-8 8-8h48.1c4.4 0 8 3.6 8 8v247.5l142.6 103.1c3.6 2.5 4.4 7.5 1.8 11.1z"
  ], [
    primaryColor,
    "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.3c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.9 11.2-1.7l28.6-39c2.6-3.6 1.8-8.6-1.8-11.1z"
  ]);
});
var CloseCircleTwoTone = dist.CloseCircleTwoTone = getIcon$1("close-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm171.8 527.1c1.2 1.5 1.9 3.3 1.9 5.2 0 4.5-3.6 8-8 8l-66-.3-99.3-118.4-99.3 118.5-66.1.3c-4.4 0-8-3.6-8-8 0-1.9.7-3.7 1.9-5.2L471 512.3l-130.1-155a8.32 8.32 0 0 1-1.9-5.2c0-4.5 3.6-8 8-8l66.1.3 99.3 118.4 99.4-118.5 66-.3c4.4 0 8 3.6 8 8 0 1.9-.6 3.8-1.8 5.2l-130.1 155 129.9 154.9z"
  ], [
    primaryColor,
    "M685.8 352c0-4.4-3.6-8-8-8l-66 .3-99.4 118.5-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155-130.1 154.9a8.32 8.32 0 0 0-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3 99.3-118.5L611.7 680l66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.9 512.2l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z"
  ]);
});
var CloudTwoTone = dist.CloudTwoTone = getIcon$1("cloud", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M791.9 492l-37.8-10-13.8-36.5c-8.6-22.7-20.6-44.1-35.7-63.4a245.73 245.73 0 0 0-52.4-49.9c-41.1-28.9-89.5-44.2-140-44.2s-98.9 15.3-140 44.2a245.6 245.6 0 0 0-52.4 49.9 240.47 240.47 0 0 0-35.7 63.4l-13.9 36.6-37.9 9.9a125.7 125.7 0 0 0-66.1 43.7A123.1 123.1 0 0 0 140 612c0 33.1 12.9 64.3 36.3 87.7 23.4 23.4 54.5 36.3 87.6 36.3h496.2c33.1 0 64.2-12.9 87.6-36.3A123.3 123.3 0 0 0 884 612c0-56.2-37.8-105.5-92.1-120z"
  ], [
    primaryColor,
    "M811.4 418.7C765.6 297.9 648.9 212 512.2 212S258.8 297.8 213 418.6C127.3 441.1 64 519.1 64 612c0 110.5 89.5 200 199.9 200h496.2C870.5 812 960 722.5 960 612c0-92.7-63.1-170.7-148.6-193.3zm36.3 281a123.07 123.07 0 0 1-87.6 36.3H263.9c-33.1 0-64.2-12.9-87.6-36.3A123.3 123.3 0 0 1 140 612c0-28 9.1-54.3 26.2-76.3a125.7 125.7 0 0 1 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0 1 52.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10c54.3 14.5 92.1 63.8 92.1 120 0 33.1-12.9 64.3-36.3 87.7z"
  ]);
});
var CloseSquareTwoTone = dist.CloseSquareTwoTone = getIcon$1("close-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm163.9-473.9A7.95 7.95 0 0 1 354 353h58.9c4.7 0 9.2 2.1 12.3 5.7L512 462.2l86.8-103.5c3-3.6 7.5-5.7 12.3-5.7H670c6.8 0 10.5 7.9 6.1 13.1L553.8 512l122.3 145.9c4.4 5.2.7 13.1-6.1 13.1h-58.9c-4.7 0-9.2-2.1-12.3-5.7L512 561.8l-86.8 103.5c-3 3.6-7.5 5.7-12.3 5.7H354c-6.8 0-10.5-7.9-6.1-13.1L470.2 512 347.9 366.1z"
  ], [
    primaryColor,
    "M354 671h58.9c4.8 0 9.3-2.1 12.3-5.7L512 561.8l86.8 103.5c3.1 3.6 7.6 5.7 12.3 5.7H670c6.8 0 10.5-7.9 6.1-13.1L553.8 512l122.3-145.9c4.4-5.2.7-13.1-6.1-13.1h-58.9c-4.8 0-9.3 2.1-12.3 5.7L512 462.2l-86.8-103.5c-3.1-3.6-7.6-5.7-12.3-5.7H354c-6.8 0-10.5 7.9-6.1 13.1L470.2 512 347.9 657.9A7.95 7.95 0 0 0 354 671z"
  ]);
});
var CodeTwoTone = dist.CodeTwoTone = getIcon$1("code", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm339.5-223h185c4.1 0 7.5 3.6 7.5 8v48c0 4.4-3.4 8-7.5 8h-185c-4.1 0-7.5-3.6-7.5-8v-48c0-4.4 3.4-8 7.5-8zM308 610.3c0-2.3 1.1-4.6 2.9-6.1L420.7 512l-109.8-92.2a7.63 7.63 0 0 1-2.9-6.1V351c0-6.8 7.9-10.5 13.1-6.1l192 160.9c3.9 3.2 3.9 9.1 0 12.3l-192 161c-5.2 4.4-13.1.7-13.1-6.1v-62.7z"
  ], [
    primaryColor,
    "M321.1 679.1l192-161c3.9-3.2 3.9-9.1 0-12.3l-192-160.9A7.95 7.95 0 0 0 308 351v62.7c0 2.4 1 4.6 2.9 6.1L420.7 512l-109.8 92.2a8.1 8.1 0 0 0-2.9 6.1V673c0 6.8 7.9 10.5 13.1 6.1zM516 673c0 4.4 3.4 8 7.5 8h185c4.1 0 7.5-3.6 7.5-8v-48c0-4.4-3.4-8-7.5-8h-185c-4.1 0-7.5 3.6-7.5 8v48z"
  ]);
});
var CompassTwoTone = dist.CompassTwoTone = getIcon$1("compass", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zM327.6 701.7c-2 .9-4.4 0-5.3-2.1-.4-1-.4-2.2 0-3.2L421 470.9 553.1 603l-225.5 98.7zm375.1-375.1L604 552.1 471.9 420l225.5-98.7c2-.9 4.4 0 5.3 2.1.4 1 .4 2.1 0 3.2z"
  ], [
    primaryColor,
    "M322.3 696.4c-.4 1-.4 2.2 0 3.2.9 2.1 3.3 3 5.3 2.1L553.1 603 421 470.9l-98.7 225.5zm375.1-375.1L471.9 420 604 552.1l98.7-225.5c.4-1.1.4-2.2 0-3.2-.9-2.1-3.3-3-5.3-2.1z"
  ], [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ]);
});
var ContactsTwoTone = dist.ContactsTwoTone = getIcon$1("contacts", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M460.3 526a51.7 52 0 1 0 103.4 0 51.7 52 0 1 0-103.4 0z"
  ], [
    secondaryColor,
    "M768 352c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-56H548v56c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-56H328v56c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-56H136v496h752V296H768v56zM661 736h-43.8c-4.2 0-7.6-3.3-7.9-7.5-3.8-50.5-46-90.5-97.2-90.5s-93.4 39.9-97.2 90.5c-.3 4.2-3.7 7.5-7.9 7.5h-43.9a8 8 0 0 1-8-8.4c2.8-53.3 31.9-99.6 74.6-126.1-18.1-20-29.1-46.4-29.1-75.5 0-61.9 49.9-112 111.4-112s111.4 50.1 111.4 112c0 29.1-11 55.6-29.1 75.5 42.7 26.4 71.9 72.8 74.7 126.1a8 8 0 0 1-8 8.4z"
  ], [
    primaryColor,
    "M594.3 601.5a111.8 111.8 0 0 0 29.1-75.5c0-61.9-49.9-112-111.4-112s-111.4 50.1-111.4 112c0 29.1 11 55.5 29.1 75.5a158.09 158.09 0 0 0-74.6 126.1 8 8 0 0 0 8 8.4H407c4.2 0 7.6-3.3 7.9-7.5 3.8-50.6 46-90.5 97.2-90.5s93.4 40 97.2 90.5c.3 4.2 3.7 7.5 7.9 7.5H661a8 8 0 0 0 8-8.4c-2.8-53.3-32-99.7-74.7-126.1zM512 578c-28.5 0-51.7-23.3-51.7-52s23.2-52 51.7-52 51.7 23.3 51.7 52-23.2 52-51.7 52z"
  ], [
    primaryColor,
    "M928 224H768v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H548v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H328v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H96c-17.7 0-32 14.3-32 32v576c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32zm-40 568H136V296h120v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h120v496z"
  ]);
});
var ContainerTwoTone = dist.ContainerTwoTone = getIcon$1("container", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M635 771.7c-34.5 28.6-78.2 44.3-123 44.3s-88.5-15.8-123-44.3a194.02 194.02 0 0 1-59.1-84.7H232v201h560V687h-97.9c-11.6 32.8-32 62.3-59.1 84.7z"
  ], [
    primaryColor,
    "M320 501h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"
  ], [
    primaryColor,
    "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-40 824H232V687h97.9c11.6 32.8 32 62.3 59.1 84.7 34.5 28.5 78.2 44.3 123 44.3s88.5-15.7 123-44.3c27.1-22.4 47.5-51.9 59.1-84.7H792v201zm0-264H643.6l-5.2 24.7C626.4 708.5 573.2 752 512 752s-114.4-43.5-126.5-103.3l-5.2-24.7H232V136h560v488z"
  ], [
    primaryColor,
    "M320 341h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"
  ]);
});
var ControlTwoTone = dist.ControlTwoTone = getIcon$1("control", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M616 440a36 36 0 1 0 72 0 36 36 0 1 0-72 0zM340.4 601.5l1.5 2.4c0 .1.1.1.1.2l.9 1.2c.1.1.2.2.2.3 1 1.3 2 2.5 3.2 3.6l.2.2c.4.4.8.8 1.2 1.1.8.8 1.7 1.5 2.6 2.1h.1l1.2.9c.1.1.3.2.4.3 1.2.8 2.5 1.6 3.9 2.2.2.1.5.2.7.4.4.2.7.3 1.1.5.3.1.7.3 1 .4.5.2 1 .4 1.5.5.4.1.9.3 1.3.4l.9.3 1.4.3c.2.1.5.1.7.2.7.1 1.4.3 2.1.4.2 0 .4 0 .6.1.6.1 1.1.1 1.7.2.2 0 .4 0 .7.1.8 0 1.5.1 2.3.1s1.5 0 2.3-.1c.2 0 .4 0 .7-.1.6 0 1.2-.1 1.7-.2.2 0 .4 0 .6-.1.7-.1 1.4-.2 2.1-.4.2-.1.5-.1.7-.2l1.4-.3.9-.3c.4-.1.9-.3 1.3-.4.5-.2 1-.4 1.5-.5.3-.1.7-.3 1-.4.4-.2.7-.3 1.1-.5.2-.1.5-.2.7-.4 1.3-.7 2.6-1.4 3.9-2.2.1-.1.3-.2.4-.3l1.2-.9h.1c.9-.7 1.8-1.4 2.6-2.1.4-.4.8-.7 1.2-1.1l.2-.2c1.1-1.1 2.2-2.4 3.2-3.6.1-.1.2-.2.2-.3l.9-1.2c0-.1.1-.1.1-.2l1.5-2.4c.1-.2.2-.3.3-.5 2.7-5.1 4.3-10.9 4.3-17s-1.6-12-4.3-17c-.1-.2-.2-.4-.3-.5l-1.5-2.4c0-.1-.1-.1-.1-.2l-.9-1.2c-.1-.1-.2-.2-.2-.3-1-1.3-2-2.5-3.2-3.6l-.2-.2c-.4-.4-.8-.8-1.2-1.1-.8-.8-1.7-1.5-2.6-2.1h-.1l-1.2-.9c-.1-.1-.3-.2-.4-.3-1.2-.8-2.5-1.6-3.9-2.2-.2-.1-.5-.2-.7-.4-.4-.2-.7-.3-1.1-.5-.3-.1-.7-.3-1-.4-.5-.2-1-.4-1.5-.5-.4-.1-.9-.3-1.3-.4l-.9-.3-1.4-.3c-.2-.1-.5-.1-.7-.2-.7-.1-1.4-.3-2.1-.4-.2 0-.4 0-.6-.1-.6-.1-1.1-.1-1.7-.2-.2 0-.4 0-.7-.1-.8 0-1.5-.1-2.3-.1s-1.5 0-2.3.1c-.2 0-.4 0-.7.1-.6 0-1.2.1-1.7.2-.2 0-.4 0-.6.1-.7.1-1.4.2-2.1.4-.2.1-.5.1-.7.2l-1.4.3-.9.3c-.4.1-.9.3-1.3.4-.5.2-1 .4-1.5.5-.3.1-.7.3-1 .4-.4.2-.7.3-1.1.5-.2.1-.5.2-.7.4-1.3.7-2.6 1.4-3.9 2.2-.1.1-.3.2-.4.3l-1.2.9h-.1c-.9.7-1.8 1.4-2.6 2.1-.4.4-.8.7-1.2 1.1l-.2.2a54.8 54.8 0 0 0-3.2 3.6c-.1.1-.2.2-.2.3l-.9 1.2c0 .1-.1.1-.1.2l-1.5 2.4c-.1.2-.2.3-.3.5-2.7 5.1-4.3 10.9-4.3 17s1.6 12 4.3 17c.1.2.2.3.3.5z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm436.4-499.1c-.2 0-.3.1-.4.1v-77c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v77c-.2 0-.3-.1-.4-.1 42 13.4 72.4 52.7 72.4 99.1 0 46.4-30.4 85.7-72.4 99.1.2 0 .3-.1.4-.1v221c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V539c.2 0 .3.1.4.1-42-13.4-72.4-52.7-72.4-99.1 0-46.4 30.4-85.7 72.4-99.1zM340 485V264c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v221c41.7 13.6 72 52.8 72 99s-30.3 85.5-72 99v77c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-77c-41.7-13.6-72-52.8-72-99s30.3-85.5 72-99z"
  ], [
    primaryColor,
    "M340 683v77c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-77c41.7-13.5 72-52.8 72-99s-30.3-85.4-72-99V264c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v221c-41.7 13.5-72 52.8-72 99s30.3 85.4 72 99zm.1-116c.1-.2.2-.3.3-.5l1.5-2.4c0-.1.1-.1.1-.2l.9-1.2c0-.1.1-.2.2-.3 1-1.2 2.1-2.5 3.2-3.6l.2-.2c.4-.4.8-.7 1.2-1.1.8-.7 1.7-1.4 2.6-2.1h.1l1.2-.9c.1-.1.3-.2.4-.3 1.3-.8 2.6-1.5 3.9-2.2.2-.2.5-.3.7-.4.4-.2.7-.3 1.1-.5.3-.1.7-.3 1-.4.5-.1 1-.3 1.5-.5.4-.1.9-.3 1.3-.4l.9-.3 1.4-.3c.2-.1.5-.1.7-.2.7-.2 1.4-.3 2.1-.4.2-.1.4-.1.6-.1.5-.1 1.1-.2 1.7-.2.3-.1.5-.1.7-.1.8-.1 1.5-.1 2.3-.1s1.5.1 2.3.1c.3.1.5.1.7.1.6.1 1.1.1 1.7.2.2.1.4.1.6.1.7.1 1.4.3 2.1.4.2.1.5.1.7.2l1.4.3.9.3c.4.1.9.3 1.3.4.5.1 1 .3 1.5.5.3.1.7.3 1 .4.4.2.7.3 1.1.5.2.2.5.3.7.4 1.4.6 2.7 1.4 3.9 2.2.1.1.3.2.4.3l1.2.9h.1c.9.6 1.8 1.3 2.6 2.1.4.3.8.7 1.2 1.1l.2.2c1.2 1.1 2.2 2.3 3.2 3.6 0 .1.1.2.2.3l.9 1.2c0 .1.1.1.1.2l1.5 2.4A36.03 36.03 0 0 1 408 584c0 6.1-1.6 11.9-4.3 17-.1.2-.2.3-.3.5l-1.5 2.4c0 .1-.1.1-.1.2l-.9 1.2c0 .1-.1.2-.2.3-1 1.2-2.1 2.5-3.2 3.6l-.2.2c-.4.4-.8.7-1.2 1.1-.8.7-1.7 1.4-2.6 2.1h-.1l-1.2.9c-.1.1-.3.2-.4.3-1.3.8-2.6 1.5-3.9 2.2-.2.2-.5.3-.7.4-.4.2-.7.3-1.1.5-.3.1-.7.3-1 .4-.5.1-1 .3-1.5.5-.4.1-.9.3-1.3.4l-.9.3-1.4.3c-.2.1-.5.1-.7.2-.7.2-1.4.3-2.1.4-.2.1-.4.1-.6.1-.5.1-1.1.2-1.7.2-.3.1-.5.1-.7.1-.8.1-1.5.1-2.3.1s-1.5-.1-2.3-.1c-.3-.1-.5-.1-.7-.1-.6-.1-1.1-.1-1.7-.2-.2-.1-.4-.1-.6-.1-.7-.1-1.4-.3-2.1-.4-.2-.1-.5-.1-.7-.2l-1.4-.3-.9-.3c-.4-.1-.9-.3-1.3-.4-.5-.1-1-.3-1.5-.5-.3-.1-.7-.3-1-.4-.4-.2-.7-.3-1.1-.5-.2-.2-.5-.3-.7-.4-1.4-.6-2.7-1.4-3.9-2.2-.1-.1-.3-.2-.4-.3l-1.2-.9h-.1c-.9-.6-1.8-1.3-2.6-2.1-.4-.3-.8-.7-1.2-1.1l-.2-.2c-1.2-1.1-2.2-2.3-3.2-3.6 0-.1-.1-.2-.2-.3l-.9-1.2c0-.1-.1-.1-.1-.2l-1.5-2.4c-.1-.2-.2-.3-.3-.5-2.7-5-4.3-10.9-4.3-17s1.6-11.9 4.3-17zm280.3-27.9c-.1 0-.2-.1-.4-.1v221c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V539c-.1 0-.2.1-.4.1 42-13.4 72.4-52.7 72.4-99.1 0-46.4-30.4-85.7-72.4-99.1.1 0 .2.1.4.1v-77c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v77c.1 0 .2-.1.4-.1-42 13.4-72.4 52.7-72.4 99.1 0 46.4 30.4 85.7 72.4 99.1zM652 404c19.9 0 36 16.1 36 36s-16.1 36-36 36-36-16.1-36-36 16.1-36 36-36z"
  ]);
});
var CopyTwoTone = dist.CopyTwoTone = getIcon$1("copy", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M232 706h142c22.1 0 40 17.9 40 40v142h250V264H232v442z"], [
    primaryColor,
    "M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32z"
  ], [
    primaryColor,
    "M704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"
  ]);
});
var CreditCardTwoTone = dist.CreditCardTwoTone = getIcon$1("credit-card", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M136 792h752V440H136v352zm507-144c0-4.4 3.6-8 8-8h165c4.4 0 8 3.6 8 8v72c0 4.4-3.6 8-8 8H651c-4.4 0-8-3.6-8-8v-72zM136 232h752v120H136z"
  ], [
    primaryColor,
    "M651 728h165c4.4 0 8-3.6 8-8v-72c0-4.4-3.6-8-8-8H651c-4.4 0-8 3.6-8 8v72c0 4.4 3.6 8 8 8z"
  ], [
    primaryColor,
    "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136V440h752v352zm0-440H136V232h752v120z"
  ]);
});
var CrownTwoTone = dist.CrownTwoTone = getIcon$1("crown", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M911.9 283.9v.5L835.5 865c-1 8-7.9 14-15.9 14H204.5c-8.1 0-14.9-6.1-16-14l-76.4-580.6v-.6 1.6L188.5 866c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.1-.5.1-1 0-1.5z"
  ], [
    secondaryColor,
    "M773.6 810.6l53.9-409.4-139.8 86.1L512 252.9 336.3 487.3l-139.8-86.1 53.8 409.4h523.3zm-374.2-189c0-62.1 50.5-112.6 112.6-112.6s112.6 50.5 112.6 112.6v1c0 62.1-50.5 112.6-112.6 112.6s-112.6-50.5-112.6-112.6v-1z"
  ], [
    primaryColor,
    "M512 734.2c61.9 0 112.3-50.2 112.6-112.1v-.5c0-62.1-50.5-112.6-112.6-112.6s-112.6 50.5-112.6 112.6v.5c.3 61.9 50.7 112.1 112.6 112.1zm0-160.9c26.6 0 48.2 21.6 48.2 48.3 0 26.6-21.6 48.3-48.2 48.3s-48.2-21.6-48.2-48.3c0-26.6 21.6-48.3 48.2-48.3z"
  ], [
    primaryColor,
    "M188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6v-.5c.3-6.4-6.7-10.8-12.3-7.4L705 396.4 518.4 147.5a8.06 8.06 0 0 0-12.9 0L319 396.4 124.3 276.5c-5.5-3.4-12.6.9-12.2 7.3v.6L188.5 865zm147.8-377.7L512 252.9l175.7 234.4 139.8-86.1-53.9 409.4H250.3l-53.8-409.4 139.8 86.1z"
  ]);
});
var CustomerServiceTwoTone = dist.CustomerServiceTwoTone = getIcon$1("customer-service", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M696 632h128v192H696zm-496 0h128v192H200z"], [
    primaryColor,
    "M512 128c-212.1 0-384 171.9-384 384v360c0 13.3 10.7 24 24 24h184c35.3 0 64-28.7 64-64V624c0-35.3-28.7-64-64-64H200v-48c0-172.3 139.7-312 312-312s312 139.7 312 312v48H688c-35.3 0-64 28.7-64 64v208c0 35.3 28.7 64 64 64h184c13.3 0 24-10.7 24-24V512c0-212.1-171.9-384-384-384zM328 632v192H200V632h128zm496 192H696V632h128v192z"
  ]);
});
var DashboardTwoTone = dist.DashboardTwoTone = getIcon$1("dashboard", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 188c-99.3 0-192.7 38.7-263 109-70.3 70.2-109 163.6-109 263 0 105.6 44.5 205.5 122.6 276h498.8A371.12 371.12 0 0 0 884 560c0-99.3-38.7-192.7-109-263-70.2-70.3-163.6-109-263-109zm-30 44c0-4.4 3.6-8 8-8h44c4.4 0 8 3.6 8 8v80c0 4.4-3.6 8-8 8h-44c-4.4 0-8-3.6-8-8v-80zM270 582c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8v-44c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v44zm90.7-204.4l-31.1 31.1a8.03 8.03 0 0 1-11.3 0l-56.6-56.6a8.03 8.03 0 0 1 0-11.3l31.1-31.1c3.1-3.1 8.2-3.1 11.3 0l56.6 56.6c3.1 3.1 3.1 8.2 0 11.3zm291.1 83.5l-84.5 84.5c5 18.7.2 39.4-14.5 54.1a55.95 55.95 0 0 1-79.2 0 55.95 55.95 0 0 1 0-79.2 55.87 55.87 0 0 1 54.1-14.5l84.5-84.5c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3c3.1 3.1 3.1 8.2 0 11.3zm43-52.4l-31.1-31.1a8.03 8.03 0 0 1 0-11.3l56.6-56.6c3.1-3.1 8.2-3.1 11.3 0l31.1 31.1c3.1 3.1 3.1 8.2 0 11.3l-56.6 56.6a8.03 8.03 0 0 1-11.3 0zM846 538v44c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8v-44c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8z"
  ], [
    primaryColor,
    "M623.5 421.5a8.03 8.03 0 0 0-11.3 0L527.7 506c-18.7-5-39.4-.2-54.1 14.5a55.95 55.95 0 0 0 0 79.2 55.95 55.95 0 0 0 79.2 0 55.87 55.87 0 0 0 14.5-54.1l84.5-84.5c3.1-3.1 3.1-8.2 0-11.3l-28.3-28.3zM490 320h44c4.4 0 8-3.6 8-8v-80c0-4.4-3.6-8-8-8h-44c-4.4 0-8 3.6-8 8v80c0 4.4 3.6 8 8 8z"
  ], [
    primaryColor,
    "M924.8 385.6a446.7 446.7 0 0 0-96-142.4 446.7 446.7 0 0 0-142.4-96C631.1 123.8 572.5 112 512 112s-119.1 11.8-174.4 35.2a446.7 446.7 0 0 0-142.4 96 446.7 446.7 0 0 0-96 142.4C75.8 440.9 64 499.5 64 560c0 132.7 58.3 257.7 159.9 343.1l1.7 1.4c5.8 4.8 13.1 7.5 20.6 7.5h531.7c7.5 0 14.8-2.7 20.6-7.5l1.7-1.4C901.7 817.7 960 692.7 960 560c0-60.5-11.9-119.1-35.2-174.4zM761.4 836H262.6A371.12 371.12 0 0 1 140 560c0-99.4 38.7-192.8 109-263 70.3-70.3 163.7-109 263-109 99.4 0 192.8 38.7 263 109 70.3 70.3 109 163.7 109 263 0 105.6-44.5 205.5-122.6 276z"
  ], [
    primaryColor,
    "M762.7 340.8l-31.1-31.1a8.03 8.03 0 0 0-11.3 0l-56.6 56.6a8.03 8.03 0 0 0 0 11.3l31.1 31.1c3.1 3.1 8.2 3.1 11.3 0l56.6-56.6c3.1-3.1 3.1-8.2 0-11.3zM750 538v44c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8v-44c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8zM304.1 309.7a8.03 8.03 0 0 0-11.3 0l-31.1 31.1a8.03 8.03 0 0 0 0 11.3l56.6 56.6c3.1 3.1 8.2 3.1 11.3 0l31.1-31.1c3.1-3.1 3.1-8.2 0-11.3l-56.6-56.6zM262 530h-80c-4.4 0-8 3.6-8 8v44c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8v-44c0-4.4-3.6-8-8-8z"
  ]);
});
var DeleteTwoTone = dist.DeleteTwoTone = getIcon$1("delete", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M292.7 840h438.6l24.2-512h-487z"], [
    primaryColor,
    "M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-504-72h304v72H360v-72zm371.3 656H292.7l-24.2-512h487l-24.2 512z"
  ]);
});
var DiffTwoTone = dist.DiffTwoTone = getIcon$1("diff", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M232 264v624h432V413.8L514.2 264H232zm336 489c0 3.8-3.4 7-7.5 7h-225c-4.1 0-7.5-3.2-7.5-7v-42c0-3.8 3.4-7 7.5-7h225c4.1 0 7.5 3.2 7.5 7v42zm0-262v42c0 3.8-3.4 7-7.5 7H476v84.9c0 3.9-3.1 7.1-7 7.1h-42c-3.8 0-7-3.2-7-7.1V540h-84.5c-4.1 0-7.5-3.2-7.5-7v-42c0-3.9 3.4-7 7.5-7H420v-84.9c0-3.9 3.2-7.1 7-7.1h42c3.9 0 7 3.2 7 7.1V484h84.5c4.1 0 7.5 3.1 7.5 7z"
  ], [
    primaryColor,
    "M854.2 306.6L611.3 72.9c-6-5.7-13.9-8.9-22.2-8.9H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h277l219 210.6V824c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V329.6c0-8.7-3.5-17-9.8-23z"
  ], [
    primaryColor,
    "M553.4 201.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v704c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32V397.3c0-8.5-3.4-16.6-9.4-22.6L553.4 201.4zM664 888H232V264h282.2L664 413.8V888z"
  ], [
    primaryColor,
    "M476 399.1c0-3.9-3.1-7.1-7-7.1h-42c-3.8 0-7 3.2-7 7.1V484h-84.5c-4.1 0-7.5 3.1-7.5 7v42c0 3.8 3.4 7 7.5 7H420v84.9c0 3.9 3.2 7.1 7 7.1h42c3.9 0 7-3.2 7-7.1V540h84.5c4.1 0 7.5-3.2 7.5-7v-42c0-3.9-3.4-7-7.5-7H476v-84.9zM560.5 704h-225c-4.1 0-7.5 3.2-7.5 7v42c0 3.8 3.4 7 7.5 7h225c4.1 0 7.5-3.2 7.5-7v-42c0-3.8-3.4-7-7.5-7z"
  ]);
});
var DatabaseTwoTone = dist.DatabaseTwoTone = getIcon$1("database", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M232 616h560V408H232v208zm112-144c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zM232 888h560V680H232v208zm112-144c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zM232 344h560V136H232v208zm112-144c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40z"
  ], [
    primaryColor,
    "M304 512a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0 272a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0-544a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"
  ], [
    primaryColor,
    "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-40 824H232V680h560v208zm0-272H232V408h560v208zm0-272H232V136h560v208z"
  ]);
});
var DislikeTwoTone = dist.DislikeTwoTone = getIcon$1("dislike", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M273 100.1v428h.3l-.3-428zM820.4 525l-21.9-19 14-25.5a56.2 56.2 0 0 0 6.9-27.3c0-16.5-7.1-32.2-19.6-43l-21.9-19 13.9-25.4a56.2 56.2 0 0 0 6.9-27.3c0-16.5-7.1-32.2-19.6-43l-21.9-19 13.9-25.4a56.2 56.2 0 0 0 6.9-27.3c0-22.4-13.2-42.6-33.6-51.8H345v345.2c18.6 67.2 46.4 168 83.5 302.5a44.28 44.28 0 0 0 42.2 32.3c7.5.1 15-2.2 21.1-6.7 9.9-7.4 15.2-18.6 14.6-30.5l-9.6-198.4h314.4C829 605.5 840 587.1 840 568c0-16.5-7.1-32.2-19.6-43z"
  ], [
    primaryColor,
    "M112 132v364c0 17.7 14.3 32 32 32h65V100h-65c-17.7 0-32 14.3-32 32zm773.9 358.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4a66.1 66.1 0 0 0-26.5-5.4H273l.3 428 85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zm-74.7 126.1H496.8l9.6 198.4c.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7a44.28 44.28 0 0 1-42.2-32.3c-37.1-134.4-64.9-235.2-83.5-302.5V172h399.4a56.85 56.85 0 0 1 33.6 51.8c0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19a56.76 56.76 0 0 1 19.6 43c0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19a56.76 56.76 0 0 1 19.6 43c0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19a56.76 56.76 0 0 1 19.6 43c0 19.1-11 37.5-28.8 48.4z"
  ]);
});
var DownCircleTwoTone = dist.DownCircleTwoTone = getIcon$1("down-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm184.4 277.7l-178 246a7.95 7.95 0 0 1-12.9 0l-178-246c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 4.9 25.9 13.2L512 563.6l105.2-145.4c6-8.3 15.7-13.2 25.9-13.2H690c6.5 0 10.3 7.4 6.4 12.7z"
  ], [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    primaryColor,
    "M690 405h-46.9c-10.2 0-19.9 4.9-25.9 13.2L512 563.6 406.8 418.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246c3.2 4.4 9.7 4.4 12.9 0l178-246c3.9-5.3.1-12.7-6.4-12.7z"
  ]);
});
var DownSquareTwoTone = dist.DownSquareTwoTone = getIcon$1("down-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm150-440h46.9c10.3 0 19.9 4.9 25.9 13.2L512 558.6l105.2-145.4c6-8.3 15.7-13.2 25.9-13.2H690c6.5 0 10.3 7.4 6.4 12.7l-178 246a7.95 7.95 0 0 1-12.9 0l-178-246c-3.8-5.3 0-12.7 6.5-12.7z"
  ], [
    primaryColor,
    "M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.9-5.3.1-12.7-6.4-12.7h-46.9c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z"
  ]);
});
var EnvironmentTwoTone = dist.EnvironmentTwoTone = getIcon$1("environment", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M724.4 224.9C667.7 169.5 592.3 139 512 139s-155.7 30.5-212.4 85.8C243.1 280 212 353.2 212 431.1c0 241.3 234.1 407.2 300 449.1 65.9-41.9 300-207.8 300-449.1 0-77.9-31.1-151.1-87.6-206.2zM512 615c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z"
  ], [
    primaryColor,
    "M512 263c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 0 1 512 551c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 0 1 400 439c0-29.9 11.7-58 32.8-79.2C454 338.6 482.1 327 512 327c29.9 0 58 11.6 79.2 32.8S624 409.1 624 439c0 29.9-11.6 58-32.8 79.2z"
  ], [
    primaryColor,
    "M854.6 289.1a362.49 362.49 0 0 0-79.9-115.7 370.83 370.83 0 0 0-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 0 0 169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0 0 22.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 880.2c-65.9-41.9-300-207.8-300-449.1 0-77.9 31.1-151.1 87.6-206.3C356.3 169.5 431.7 139 512 139s155.7 30.5 212.4 85.9C780.9 280 812 353.2 812 431.1c0 241.3-234.1 407.2-300 449.1z"
  ]);
});
var EditTwoTone = dist.EditTwoTone = getIcon$1("edit", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M761.1 288.3L687.8 215 325.1 577.6l-15.6 89 88.9-15.7z"], [
    primaryColor,
    "M880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32zm-622.3-84c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 0 0 0-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 0 0 9.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89z"
  ]);
});
var ExclamationCircleTwoTone = dist.ExclamationCircleTwoTone = getIcon$1("exclamation-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm-32 156c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"
  ], [
    primaryColor,
    "M488 576h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8zm-24 112a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"
  ]);
});
var ExperimentTwoTone = dist.ExperimentTwoTone = getIcon$1("experiment", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M551.9 513c19.6 0 35.9-14.2 39.3-32.8A40.02 40.02 0 0 1 552 512a40 40 0 0 1-40-39.4v.5c0 22 17.9 39.9 39.9 39.9zM752 687.8l-.3-.3c-29-17.5-62.3-26.8-97-26.8-44.9 0-87.2 15.7-121 43.8a256.27 256.27 0 0 1-164.9 59.9c-41.2 0-81-9.8-116.7-28L210.5 844h603l-59.9-155.2-1.6-1z"
  ], [
    primaryColor,
    "M879 824.9L696.3 352V178H768v-68H256v68h71.7v174L145 824.9c-2.8 7.4-4.3 15.2-4.3 23.1 0 35.3 28.7 64 64 64h614.6c7.9 0 15.7-1.5 23.1-4.3 33-12.7 49.4-49.8 36.6-82.8zM395.7 364.7V180h232.6v184.7L719.2 600c-20.7-5.3-42.1-8-63.9-8-61.2 0-119.2 21.5-165.3 60a188.78 188.78 0 0 1-121.3 43.9c-32.7 0-64.1-8.3-91.8-23.7l118.8-307.5zM210.5 844l41.6-107.6.1-.2c35.7 18.1 75.4 27.8 116.6 27.8 61.2 0 119.2-21.5 165.3-60 33.9-28.2 76.3-43.9 121.3-43.9 35 0 68.4 9.5 97.6 27.1l.6 1.6L813.5 844h-603z"
  ], [
    primaryColor,
    "M552 512c19.3 0 35.4-13.6 39.2-31.8.6-2.7.8-5.4.8-8.2 0-22.1-17.9-40-40-40s-40 17.9-40 40v.6a40 40 0 0 0 40 39.4z"
  ]);
});
var EyeInvisibleTwoTone = dist.EyeInvisibleTwoTone = getIcon$1("eye-invisible", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M254.89 758.85l125.57-125.57a176 176 0 0 1 248.82-248.82L757 256.72Q651.69 186.07 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 0 0 0 51.5q69.27 145.91 173.09 221.05zM942.2 486.2Q889.46 375.11 816.7 305L672.48 449.27a176.09 176.09 0 0 1-227.22 227.21L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 0 0 0-51.5z"
  ], [
    primaryColor,
    "M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 0 0 0-51.5zM878.63 165.56L836 122.88a8 8 0 0 0-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 0 0 0 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 0 0 0 11.31L155.17 889a8 8 0 0 0 11.31 0l712.15-712.12a8 8 0 0 0 0-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 0 0-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 0 1 146.2-106.69L401.31 546.2A112 112 0 0 1 396 512z"
  ], [
    primaryColor,
    "M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 0 0 227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 0 1-112 112z"
  ]);
});
var EyeTwoTone = dist.EyeTwoTone = getIcon$1("eye", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M81.8 537.8a60.3 60.3 0 0 1 0-51.5C176.6 286.5 319.8 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 0 0 0 51.5C176.6 737.5 319.9 838 512 838c-192.1 0-335.4-100.5-430.2-300.2z"
  ], [
    secondaryColor,
    "M512 258c-161.3 0-279.4 81.8-362.7 254C232.6 684.2 350.7 766 512 766c161.4 0 279.5-81.8 362.7-254C791.4 339.8 673.3 258 512 258zm-4 430c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z"
  ], [
    primaryColor,
    "M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 0 0 0 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258s279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766z"
  ], [
    primaryColor,
    "M508 336c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"
  ]);
});
var FileAddTwoTone = dist.FileAddTwoTone = getIcon$1("file-add", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm126 236v48c0 4.4-3.6 8-8 8H544v108c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V644H372c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h108V472c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v108h108c4.4 0 8 3.6 8 8z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z"
  ]);
});
var FileExclamationTwoTone = dist.FileExclamationTwoTone = getIcon$1("file-exclamation", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm-54 96c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V448zm32 336c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M488 640h48c4.4 0 8-3.6 8-8V448c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v184c0 4.4 3.6 8 8 8zm-16 104a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"
  ]);
});
var FileImageTwoTone = dist.FileImageTwoTone = getIcon$1("file-image", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm-134 50c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zm296 294H328.1c-6.7 0-10.4-7.7-6.3-12.9l99.8-127.2a8 8 0 0 1 12.6 0l41.1 52.4 77.8-99.2a8.1 8.1 0 0 1 12.7 0l136.5 174c4.1 5.2.4 12.9-6.3 12.9z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M553.1 509.1l-77.8 99.2-41.1-52.4a8 8 0 0 0-12.6 0l-99.8 127.2a7.98 7.98 0 0 0 6.3 12.9H696c6.7 0 10.4-7.7 6.3-12.9l-136.5-174a8.1 8.1 0 0 0-12.7 0zM360 442a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"
  ]);
});
var FileExcelTwoTone = dist.FileExcelTwoTone = getIcon$1("file-excel", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm51.6 120h35.7a12.04 12.04 0 0 1 10.1 18.5L546.1 623l84 130.4c3.6 5.6 2 13-3.6 16.6-2 1.2-4.2 1.9-6.5 1.9h-37.5c-4.1 0-8-2.1-10.2-5.7L510 664.8l-62.7 101.5c-2.2 3.5-6 5.7-10.2 5.7h-34.5a12.04 12.04 0 0 1-10.2-18.4l83.4-132.8-82.3-130.4c-3.6-5.7-1.9-13.1 3.7-16.6 1.9-1.3 4.1-1.9 6.4-1.9H442c4.2 0 8.1 2.2 10.3 5.8l61.8 102.4 61.2-102.3c2.2-3.6 6.1-5.8 10.3-5.8z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M514.1 580.1l-61.8-102.4c-2.2-3.6-6.1-5.8-10.3-5.8h-38.4c-2.3 0-4.5.6-6.4 1.9-5.6 3.5-7.3 10.9-3.7 16.6l82.3 130.4-83.4 132.8a12.04 12.04 0 0 0 10.2 18.4h34.5c4.2 0 8-2.2 10.2-5.7L510 664.8l62.3 101.4c2.2 3.6 6.1 5.7 10.2 5.7H620c2.3 0 4.5-.7 6.5-1.9 5.6-3.6 7.2-11 3.6-16.6l-84-130.4 85.3-132.5a12.04 12.04 0 0 0-10.1-18.5h-35.7c-4.2 0-8.1 2.2-10.3 5.8l-61.2 102.3z"
  ]);
});
var FileMarkdownTwoTone = dist.FileMarkdownTwoTone = getIcon$1("file-markdown", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm72.3 122H641c6.6 0 12 5.4 12 12v272c0 6.6-5.4 12-12 12h-27.2c-6.6 0-12-5.4-12-12V581.7L535 732.3c-2 4.3-6.3 7.1-11 7.1h-24.1a12 12 0 0 1-11-7.1l-66.8-150.2V758c0 6.6-5.4 12-12 12H383c-6.6 0-12-5.4-12-12V486c0-6.6 5.4-12 12-12h35c4.8 0 9.1 2.8 11 7.2l83.2 191 83.1-191c1.9-4.4 6.2-7.2 11-7.2z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M429 481.2c-1.9-4.4-6.2-7.2-11-7.2h-35c-6.6 0-12 5.4-12 12v272c0 6.6 5.4 12 12 12h27.1c6.6 0 12-5.4 12-12V582.1l66.8 150.2a12 12 0 0 0 11 7.1H524c4.7 0 9-2.8 11-7.1l66.8-150.6V758c0 6.6 5.4 12 12 12H641c6.6 0 12-5.4 12-12V486c0-6.6-5.4-12-12-12h-34.7c-4.8 0-9.1 2.8-11 7.2l-83.1 191-83.2-191z"
  ]);
});
var FilePdfTwoTone = dist.FilePdfTwoTone = getIcon$1("file-pdf", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M509.2 490.8c-.7-1.3-1.4-1.9-2.2-2-2.9 3.3-2.2 31.5 2.7 51.4 4-13.6 4.7-40.5-.5-49.4zm-1.6 120.5c-7.7 20-18.8 47.3-32.1 71.4 4-1.6 8.1-3.3 12.3-5 17.6-7.2 37.3-15.3 58.9-20.2-14.9-11.8-28.4-27.7-39.1-46.2z"
  ], [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm55 287.6c16.1-1.9 30.6-2.8 44.3-2.3 12.8.4 23.6 2 32 5.1.2.1.3.1.5.2.4.2.8.3 1.2.5.5.2 1.1.4 1.6.7.1.1.3.1.4.2 4.1 1.8 7.5 4 10.1 6.6 9.1 9.1 11.8 26.1 6.2 39.6-3.2 7.7-11.7 20.5-33.3 20.5-21.8 0-53.9-9.7-82.1-24.8-25.5 4.3-53.7 13.9-80.9 23.1-5.8 2-11.8 4-17.6 5.9-38 65.2-66.5 79.4-84.1 79.4-4.2 0-7.8-.9-10.8-2-6.9-2.6-12.8-8-16.5-15-.9-1.7-1.6-3.4-2.2-5.2-1.6-4.8-2.1-9.6-1.3-13.6l.6-2.7c.1-.2.1-.4.2-.6.2-.7.4-1.4.7-2.1 0-.1.1-.2.1-.3 4.1-11.9 13.6-23.4 27.7-34.6 12.3-9.8 27.1-18.7 45.9-28.4 15.9-28 37.6-75.1 51.2-107.4-10.8-41.8-16.7-74.6-10.1-98.6.9-3.3 2.5-6.4 4.6-9.1.2-.2.3-.4.5-.6.1-.1.1-.2.2-.2 6.3-7.5 16.9-11.9 28.1-11.5 16.6.7 29.7 11.5 33 30.1 1.7 8 2.2 16.5 1.9 25.7v.7c0 .5 0 1-.1 1.5-.7 13.3-3 26.6-7.3 44.7-.4 1.6-.8 3.2-1.2 5.2l-1 4.1-.1.3c.1.2.1.3.2.5l1.8 4.5c.1.3.3.7.4 1 .7 1.6 1.4 3.3 2.1 4.8v.1c8.7 18.8 19.7 33.4 33.9 45.1 4.3 3.5 8.9 6.7 13.9 9.8 1.8-.5 3.5-.7 5.3-.9z"
  ], [
    secondaryColor,
    "M391.5 761c5.7-4.4 16.2-14.5 30.1-34.7-10.3 9.4-23.4 22.4-30.1 34.7zm270.9-83l.2-.3h.2c.6-.4.5-.7.4-.9-.1-.1-4.5-9.3-45.1-7.4 35.3 13.9 43.5 9.1 44.3 8.6z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M535.9 585.3c-.8-1.7-1.5-3.3-2.2-4.9-.1-.3-.3-.7-.4-1l-1.8-4.5c-.1-.2-.1-.3-.2-.5l.1-.3.2-1.1c4-16.3 8.6-35.3 9.4-54.4v-.7c.3-8.6-.2-17.2-2-25.6-3.8-21.3-19.5-29.6-32.9-30.2-11.3-.5-21.8 4-28.1 11.4-.1.1-.1.2-.2.2-.2.2-.4.4-.5.6-2.1 2.7-3.7 5.8-4.6 9.1-6.6 24-.7 56.8 10.1 98.6-13.6 32.4-35.3 79.4-51.2 107.4v.1c-27.7 14.3-64.1 35.8-73.6 62.9 0 .1-.1.2-.1.3-.2.7-.5 1.4-.7 2.1-.1.2-.1.4-.2.6-.2.9-.5 1.8-.6 2.7-.9 4-.4 8.8 1.3 13.6.6 1.8 1.3 3.5 2.2 5.2 3.7 7 9.6 12.4 16.5 15 3 1.1 6.6 2 10.8 2 17.6 0 46.1-14.2 84.1-79.4 5.8-1.9 11.8-3.9 17.6-5.9 27.2-9.2 55.4-18.8 80.9-23.1 28.2 15.1 60.3 24.8 82.1 24.8 21.6 0 30.1-12.8 33.3-20.5 5.6-13.5 2.9-30.5-6.2-39.6-2.6-2.6-6-4.8-10.1-6.6-.1-.1-.3-.1-.4-.2-.5-.2-1.1-.4-1.6-.7-.4-.2-.8-.3-1.2-.5-.2-.1-.3-.1-.5-.2-16.2-5.8-41.7-6.7-76.3-2.8l-5.3.6c-5-3-9.6-6.3-13.9-9.8-14.2-11.3-25.1-25.8-33.8-44.7zM391.5 761c6.7-12.3 19.8-25.3 30.1-34.7-13.9 20.2-24.4 30.3-30.1 34.7zM507 488.8c.8.1 1.5.7 2.2 2 5.2 8.9 4.5 35.8.5 49.4-4.9-19.9-5.6-48.1-2.7-51.4zm-19.2 188.9c-4.2 1.7-8.3 3.4-12.3 5 13.3-24.1 24.4-51.4 32.1-71.4 10.7 18.5 24.2 34.4 39.1 46.2-21.6 4.9-41.3 13-58.9 20.2zm175.4-.9c.1.2.2.5-.4.9h-.2l-.2.3c-.8.5-9 5.3-44.3-8.6 40.6-1.9 45 7.3 45.1 7.4z"
  ]);
});
var FilePptTwoTone = dist.FilePptTwoTone = getIcon$1("file-ppt", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M464.5 516.2v108.4h38.9c44.7 0 71.2-10.9 71.2-54.3 0-34.4-20.1-54.1-53.9-54.1h-56.2z"
  ], [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm90 218.4c0 55.2-36.8 94.1-96.2 94.1h-63.3V760c0 4.4-3.6 8-8 8H424c-4.4 0-8-3.6-8-8V484c0-4.4 3.6-8 8-8v.1h104c59.7 0 96 39.8 96 94.3z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M424 476.1c-4.4-.1-8 3.5-8 7.9v276c0 4.4 3.6 8 8 8h32.5c4.4 0 8-3.6 8-8v-95.5h63.3c59.4 0 96.2-38.9 96.2-94.1 0-54.5-36.3-94.3-96-94.3H424zm150.6 94.2c0 43.4-26.5 54.3-71.2 54.3h-38.9V516.2h56.2c33.8 0 53.9 19.7 53.9 54.1z"
  ]);
});
var FileTextTwoTone = dist.FileTextTwoTone = getIcon$1("file-text", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm-22 322c0 4.4-3.6 8-8 8H320c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zm200-184v48c0 4.4-3.6 8-8 8H320c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h384c4.4 0 8 3.6 8 8z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M312 490v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8zm192 128H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"
  ]);
});
var FileUnknownTwoTone = dist.FileUnknownTwoTone = getIcon$1("file-unknown", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm-22 424c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm110-228.4c.7 44.9-29.7 84.5-74.3 98.9-5.7 1.8-9.7 7.3-9.7 13.3V672c0 5.5-4.5 10-10 10h-32c-5.5 0-10-4.5-10-10v-32c.2-19.8 15.4-37.3 34.7-40.1C549 596.2 570 574.3 570 549c0-28.1-25.8-51.5-58-51.5s-58 23.4-58 51.6c0 5.2-4.4 9.4-9.8 9.4h-32.4c-5.4 0-9.8-4.1-9.8-9.5 0-57.4 50.1-103.7 111.5-103 59.3.8 107.7 46.1 108.5 101.6z"
  ], [
    primaryColor,
    "M854.6 288.7L639.4 73.4c-6-6-14.2-9.4-22.7-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.6-9.4-22.6zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M480 744a32 32 0 1 0 64 0 32 32 0 1 0-64 0zm-78-195c0 5.4 4.4 9.5 9.8 9.5h32.4c5.4 0 9.8-4.2 9.8-9.4 0-28.2 25.8-51.6 58-51.6s58 23.4 58 51.5c0 25.3-21 47.2-49.3 50.9-19.3 2.8-34.5 20.3-34.7 40.1v32c0 5.5 4.5 10 10 10h32c5.5 0 10-4.5 10-10v-12.2c0-6 4-11.5 9.7-13.3 44.6-14.4 75-54 74.3-98.9-.8-55.5-49.2-100.8-108.5-101.6-61.4-.7-111.5 45.6-111.5 103z"
  ]);
});
var FileZipTwoTone = dist.FileZipTwoTone = getIcon$1("file-zip", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M344 630h32v2h-32z"], [
    secondaryColor,
    "M534 352V136H360v64h64v64h-64v64h64v64h-64v64h64v64h-64v62h64v160H296V520h64v-64h-64v-64h64v-64h-64v-64h64v-64h-64v-64h-64v752h560V394H576a42 42 0 0 1-42-42z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h64v64h64v-64h174v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M296 392h64v64h-64zm0-128h64v64h-64zm0 318v160h128V582h-64v-62h-64v62zm48 50v-2h32v64h-32v-62zm16-432h64v64h-64zm0 256h64v64h-64zm0-128h64v64h-64z"
  ]);
});
var FileWordTwoTone = dist.FileWordTwoTone = getIcon$1("file-word", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42zm101.3 129.3c1.3-5.4 6.1-9.3 11.7-9.3h35.6a12.04 12.04 0 0 1 11.6 15.1l-74.4 276c-1.4 5.3-6.2 8.9-11.6 8.9h-31.8c-5.4 0-10.2-3.7-11.6-8.9l-52.8-197-52.8 197c-1.4 5.3-6.2 8.9-11.6 8.9h-32c-5.4 0-10.2-3.7-11.6-8.9l-74.2-276a12.02 12.02 0 0 1 11.6-15.1h35.4c5.6 0 10.4 3.9 11.7 9.3L434.6 680l49.7-198.9c1.3-5.4 6.1-9.1 11.6-9.1h32.2c5.5 0 10.3 3.7 11.6 9.1l49.8 199.3 45.8-199.1z"
  ], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ], [
    primaryColor,
    "M528.1 472h-32.2c-5.5 0-10.3 3.7-11.6 9.1L434.6 680l-46.1-198.7c-1.3-5.4-6.1-9.3-11.7-9.3h-35.4a12.02 12.02 0 0 0-11.6 15.1l74.2 276c1.4 5.2 6.2 8.9 11.6 8.9h32c5.4 0 10.2-3.6 11.6-8.9l52.8-197 52.8 197c1.4 5.2 6.2 8.9 11.6 8.9h31.8c5.4 0 10.2-3.6 11.6-8.9l74.4-276a12.04 12.04 0 0 0-11.6-15.1H647c-5.6 0-10.4 3.9-11.7 9.3l-45.8 199.1-49.8-199.3c-1.3-5.4-6.1-9.1-11.6-9.1z"
  ]);
});
var FileTwoTone = dist.FileTwoTone = getIcon$1("file", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M534 352V136H232v752h560V394H576a42 42 0 0 1-42-42z"], [
    primaryColor,
    "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0 0 42 42h216v494z"
  ]);
});
var FilterTwoTone = dist.FilterTwoTone = getIcon$1("filter", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M420.6 798h182.9V642H420.6zM411 561.4l9.5 16.6h183l9.5-16.6L811.3 226H212.7z"
  ], [
    primaryColor,
    "M880.1 154H143.9c-24.5 0-39.8 26.7-27.5 48L349 597.4V838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V597.4L907.7 202c12.2-21.3-3.1-48-27.6-48zM603.5 798H420.6V642h182.9v156zm9.5-236.6l-9.5 16.6h-183l-9.5-16.6L212.7 226h598.6L613 561.4z"
  ]);
});
var FireTwoTone = dist.FireTwoTone = getIcon$1("fire", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M737 438.6c-9.6 15.5-21.1 30.7-34.4 45.6a73.1 73.1 0 0 1-51 24.4 73.36 73.36 0 0 1-53.4-18.8 74.01 74.01 0 0 1-24.4-59.8c3-47.4-12.4-103.1-45.8-165.7-16.9-31.4-37.1-58.2-61.2-80.4a240 240 0 0 1-12.1 46.5 354.26 354.26 0 0 1-58.2 101 349.6 349.6 0 0 1-58.6 56.8c-34 26.1-62 60-80.8 97.9a275.96 275.96 0 0 0-29.1 124c0 74.9 29.5 145.3 83 198.4 53.7 53.2 125 82.4 201 82.4s147.3-29.2 201-82.4c53.5-53 83-123.5 83-198.4 0-39.2-8.1-77.3-24-113.1-9.3-21-21-40.5-35-58.4z"
  ], [
    primaryColor,
    "M834.1 469.2A347.49 347.49 0 0 0 751.2 354l-29.1-26.7a8.09 8.09 0 0 0-13 3.3l-13 37.3c-8.1 23.4-23 47.3-44.1 70.8-1.4 1.5-3 1.9-4.1 2-1.1.1-2.8-.1-4.3-1.5-1.4-1.2-2.1-3-2-4.8 3.7-60.2-14.3-128.1-53.7-202C555.3 171 510 123.1 453.4 89.7l-41.3-24.3c-5.4-3.2-12.3 1-12 7.3l2.2 48c1.5 32.8-2.3 61.8-11.3 85.9-11 29.5-26.8 56.9-47 81.5a295.64 295.64 0 0 1-47.5 46.1 352.6 352.6 0 0 0-100.3 121.5A347.75 347.75 0 0 0 160 610c0 47.2 9.3 92.9 27.7 136a349.4 349.4 0 0 0 75.5 110.9c32.4 32 70 57.2 111.9 74.7C418.5 949.8 464.5 959 512 959s93.5-9.2 136.9-27.3A348.6 348.6 0 0 0 760.8 857c32.4-32 57.8-69.4 75.5-110.9a344.2 344.2 0 0 0 27.7-136c0-48.8-10-96.2-29.9-140.9zM713 808.5c-53.7 53.2-125 82.4-201 82.4s-147.3-29.2-201-82.4c-53.5-53.1-83-123.5-83-198.4 0-43.5 9.8-85.2 29.1-124 18.8-37.9 46.8-71.8 80.8-97.9a349.6 349.6 0 0 0 58.6-56.8c25-30.5 44.6-64.5 58.2-101a240 240 0 0 0 12.1-46.5c24.1 22.2 44.3 49 61.2 80.4 33.4 62.6 48.8 118.3 45.8 165.7a74.01 74.01 0 0 0 24.4 59.8 73.36 73.36 0 0 0 53.4 18.8c19.7-1 37.8-9.7 51-24.4 13.3-14.9 24.8-30.1 34.4-45.6 14 17.9 25.7 37.4 35 58.4 15.9 35.8 24 73.9 24 113.1 0 74.9-29.5 145.4-83 198.4z"
  ]);
});
var FolderAddTwoTone = dist.FolderAddTwoTone = getIcon$1("folder-add", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M372.5 256H184v512h656V370.4H492.1L372.5 256zM540 443.1V528h84.5c4.1 0 7.5 3.1 7.5 7v42c0 3.8-3.4 7-7.5 7H540v84.9c0 3.9-3.1 7.1-7 7.1h-42c-3.8 0-7-3.2-7-7.1V584h-84.5c-4.1 0-7.5-3.2-7.5-7v-42c0-3.9 3.4-7 7.5-7H484v-84.9c0-3.9 3.2-7.1 7-7.1h42c3.9 0 7 3.2 7 7.1z"
  ], [
    primaryColor,
    "M880 298.4H521L403.7 186.2a8.15 8.15 0 0 0-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM840 768H184V256h188.5l119.6 114.4H840V768z"
  ], [
    primaryColor,
    "M484 443.1V528h-84.5c-4.1 0-7.5 3.1-7.5 7v42c0 3.8 3.4 7 7.5 7H484v84.9c0 3.9 3.2 7.1 7 7.1h42c3.9 0 7-3.2 7-7.1V584h84.5c4.1 0 7.5-3.2 7.5-7v-42c0-3.9-3.4-7-7.5-7H540v-84.9c0-3.9-3.1-7.1-7-7.1h-42c-3.8 0-7 3.2-7 7.1z"
  ]);
});
var FlagTwoTone = dist.FlagTwoTone = getIcon$1("flag", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M184 232h368v336H184z"], [secondaryColor, "M624 632c0 4.4-3.6 8-8 8H504v73h336V377H624v255z"], [
    primaryColor,
    "M880 305H624V192c0-17.7-14.3-32-32-32H184v-40c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v784c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V640h248v113c0 17.7 14.3 32 32 32h416c17.7 0 32-14.3 32-32V337c0-17.7-14.3-32-32-32zM184 568V232h368v336H184zm656 145H504v-73h112c4.4 0 8-3.6 8-8V377h216v336z"
  ]);
});
var FolderTwoTone = dist.FolderTwoTone = getIcon$1("folder", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 298.4H521L403.7 186.2a8.15 8.15 0 0 0-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM840 768H184V256h188.5l119.6 114.4H840V768z"
  ], [secondaryColor, "M372.5 256H184v512h656V370.4H492.1z"]);
});
var FolderOpenTwoTone = dist.FolderOpenTwoTone = getIcon$1("folder-open", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M159 768h612.3l103.4-256H262.3z"], [
    primaryColor,
    "M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 0 0-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z"
  ]);
});
var FrownTwoTone = dist.FrownTwoTone = getIcon$1("frown", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zM288 421a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm376 272h-48.1c-4.2 0-7.8-3.2-8.1-7.4C604 636.1 562.5 597 512 597s-92.1 39.1-95.8 88.6c-.3 4.2-3.9 7.4-8.1 7.4H360a8 8 0 0 1-8-8.4c4.4-84.3 74.5-151.6 160-151.6s155.6 67.3 160 151.6a8 8 0 0 1-8 8.4zm24-224a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"
  ], [
    primaryColor,
    "M288 421a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm224 112c-85.5 0-155.6 67.3-160 151.6a8 8 0 0 0 8 8.4h48.1c4.2 0 7.8-3.2 8.1-7.4 3.7-49.5 45.3-88.6 95.8-88.6s92 39.1 95.8 88.6c.3 4.2 3.9 7.4 8.1 7.4H664a8 8 0 0 0 8-8.4C667.6 600.3 597.5 533 512 533zm128-112a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"
  ]);
});
var FundTwoTone = dist.FundTwoTone = getIcon$1("fund", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136V232h752v560z"
  ], [
    secondaryColor,
    "M136 792h752V232H136v560zm56.4-130.5l214.9-215c3.1-3.1 8.2-3.1 11.3 0L533 561l254.5-254.6c3.1-3.1 8.2-3.1 11.3 0l36.8 36.8c3.1 3.1 3.1 8.2 0 11.3l-297 297.2a8.03 8.03 0 0 1-11.3 0L412.9 537.2 240.4 709.7a8.03 8.03 0 0 1-11.3 0l-36.7-36.9a8.03 8.03 0 0 1 0-11.3z"
  ], [
    primaryColor,
    "M229.1 709.7c3.1 3.1 8.2 3.1 11.3 0l172.5-172.5 114.4 114.5c3.1 3.1 8.2 3.1 11.3 0l297-297.2c3.1-3.1 3.1-8.2 0-11.3l-36.8-36.8a8.03 8.03 0 0 0-11.3 0L533 561 418.6 446.5a8.03 8.03 0 0 0-11.3 0l-214.9 215a8.03 8.03 0 0 0 0 11.3l36.7 36.9z"
  ]);
});
var FunnelPlotTwoTone = dist.FunnelPlotTwoTone = getIcon$1("funnel-plot", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M420.6 798h182.9V650H420.6zM297.7 374h428.6l85-148H212.7zm113.2 197.4l8.4 14.6h185.3l8.4-14.6L689.6 438H334.4z"
  ], [
    primaryColor,
    "M880.1 154H143.9c-24.5 0-39.8 26.7-27.5 48L349 607.4V838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V607.4L907.7 202c12.2-21.3-3.1-48-27.6-48zM603.5 798H420.6V650h182.9v148zm9.5-226.6l-8.4 14.6H419.3l-8.4-14.6L334.4 438h355.2L613 571.4zM726.3 374H297.7l-85-148h598.6l-85 148z"
  ]);
});
var GiftTwoTone = dist.GiftTwoTone = getIcon$1("gift", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M546 378h298v104H546zM228 550h250v308H228zm-48-172h298v104H180zm366 172h250v308H546z"
  ], [
    primaryColor,
    "M880 310H732.4c13.6-21.4 21.6-46.8 21.6-74 0-76.1-61.9-138-138-138-41.4 0-78.7 18.4-104 47.4-25.3-29-62.6-47.4-104-47.4-76.1 0-138 61.9-138 138 0 27.2 7.9 52.6 21.6 74H144c-17.7 0-32 14.3-32 32v200c0 4.4 3.6 8 8 8h40v344c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V550h40c4.4 0 8-3.6 8-8V342c0-17.7-14.3-32-32-32zM478 858H228V550h250v308zm0-376H180V378h298v104zm0-176h-70c-38.6 0-70-31.4-70-70s31.4-70 70-70 70 31.4 70 70v70zm68-70c0-38.6 31.4-70 70-70s70 31.4 70 70-31.4 70-70 70h-70v-70zm250 622H546V550h250v308zm48-376H546V378h298v104z"
  ]);
});
var HddTwoTone = dist.HddTwoTone = getIcon$1("hdd", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M232 888h560V680H232v208zm448-140c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zM232 616h560V408H232v208zm72-128c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H312c-4.4 0-8-3.6-8-8v-48zm-72-144h560V136H232v208zm72-128c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H312c-4.4 0-8-3.6-8-8v-48z"
  ], [
    primaryColor,
    "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-40 824H232V680h560v208zm0-272H232V408h560v208zm0-272H232V136h560v208z"
  ], [
    primaryColor,
    "M312 544h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H312c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm0-272h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H312c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm328 516a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"
  ]);
});
var HeartTwoTone = dist.HeartTwoTone = getIcon$1("heart", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M923 283.6a260.04 260.04 0 0 0-56.9-82.8 264.4 264.4 0 0 0-84-55.5A265.34 265.34 0 0 0 679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 0 0-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"
  ], [
    secondaryColor,
    "M679.7 201c-73.1 0-136.5 40.8-167.7 100.4C480.8 241.8 417.4 201 344.3 201c-104 0-188.3 82.6-188.3 184.5 0 201.2 356 429.3 356 429.3s356-228.1 356-429.3C868 283.6 783.7 201 679.7 201z"
  ]);
});
var HighlightTwoTone = dist.HighlightTwoTone = getIcon$1("highlight", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M229.6 796.3h160.2l54.3-54.1-80.1-78.9zm220.7-397.1l262.8 258.9 147.3-145-262.8-259zm-77.1 166.1l171.4 168.9 68.6-67.6-171.4-168.9z"
  ], [
    primaryColor,
    "M957.6 507.5L603.2 158.3a7.9 7.9 0 0 0-11.2 0L353.3 393.5a8.03 8.03 0 0 0-.1 11.3l.1.1 40 39.4-117.2 115.3a8.03 8.03 0 0 0-.1 11.3l.1.1 39.5 38.9-189.1 187H72.1c-4.4 0-8.1 3.6-8.1 8v55.2c0 4.4 3.6 8 8 8h344.9c2.1 0 4.1-.8 5.6-2.3l76.1-75.6L539 830a7.9 7.9 0 0 0 11.2 0l117.1-115.6 40.1 39.5a7.9 7.9 0 0 0 11.2 0l238.7-235.2c3.4-3 3.4-8 .3-11.2zM389.8 796.3H229.6l134.4-133 80.1 78.9-54.3 54.1zm154.8-62.1L373.2 565.3l68.6-67.6 171.4 168.9-68.6 67.6zm168.5-76.1L450.3 399.2l147.3-145.1 262.8 259-147.3 145z"
  ]);
});
var HomeTwoTone = dist.HomeTwoTone = getIcon$1("home", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512.1 172.6l-370 369.7h96V868H392V640c0-22.1 17.9-40 40-40h160c22.1 0 40 17.9 40 40v228h153.9V542.3H882L535.2 195.7l-23.1-23.1zm434.5 422.9c-6 6-13.1 10.8-20.8 13.9 7.7-3.2 14.8-7.9 20.8-13.9zm-887-34.7c5 30.3 31.4 53.5 63.1 53.5h.9c-31.9 0-58.9-23-64-53.5zm-.9-10.5v-1.9 1.9zm.1-2.6c.1-3.1.5-6.1 1-9.1-.6 2.9-.9 6-1 9.1z"
  ], [
    primaryColor,
    "M951 510c0-.1-.1-.1-.1-.2l-1.8-2.1c-.1-.1-.2-.3-.4-.4-.7-.8-1.5-1.6-2.2-2.4L560.1 118.8l-25.9-25.9a31.5 31.5 0 0 0-44.4 0L77.5 505a63.6 63.6 0 0 0-16 26.6l-.6 2.1-.3 1.1-.3 1.2c-.2.7-.3 1.4-.4 2.1 0 .1 0 .3-.1.4-.6 3-.9 6-1 9.1v3.3c0 .5 0 1 .1 1.5 0 .5 0 .9.1 1.4 0 .5.1 1 .1 1.5 0 .6.1 1.2.2 1.8 0 .3.1.6.1.9l.3 2.5v.1c5.1 30.5 32.2 53.5 64 53.5h42.5V940h691.7V614.3h43.4c8.6 0 16.9-1.7 24.5-4.9s14.7-7.9 20.8-13.9a63.6 63.6 0 0 0 18.7-45.3c0-14.7-5-28.8-14.3-40.2zM568 868H456V664h112v204zm217.9-325.7V868H632V640c0-22.1-17.9-40-40-40H432c-22.1 0-40 17.9-40 40v228H238.1V542.3h-96l370-369.7 23.1 23.1L882 542.3h-96.1z"
  ]);
});
var HourglassTwoTone = dist.HourglassTwoTone = getIcon$1("hourglass", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 548c-42.2 0-81.9 16.4-111.7 46.3A156.63 156.63 0 0 0 354 706v134h316V706c0-42.2-16.4-81.9-46.3-111.7A156.63 156.63 0 0 0 512 548zM354 318c0 42.2 16.4 81.9 46.3 111.7C430.1 459.6 469.8 476 512 476s81.9-16.4 111.7-46.3C653.6 399.9 670 360.2 670 318V184H354v134z"
  ], [
    primaryColor,
    "M742 318V184h86c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H196c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h86v134c0 81.5 42.4 153.2 106.4 194-64 40.8-106.4 112.5-106.4 194v134h-86c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h632c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-86V706c0-81.5-42.4-153.2-106.4-194 64-40.8 106.4-112.5 106.4-194zm-72 388v134H354V706c0-42.2 16.4-81.9 46.3-111.7C430.1 564.4 469.8 548 512 548s81.9 16.4 111.7 46.3C653.6 624.1 670 663.8 670 706zm0-388c0 42.2-16.4 81.9-46.3 111.7C593.9 459.6 554.2 476 512 476s-81.9-16.4-111.7-46.3A156.63 156.63 0 0 1 354 318V184h316v134z"
  ]);
});
var Html5TwoTone = dist.Html5TwoTone = getIcon$1("html5", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M145 96l66 746.6L511.8 928l299.6-85.4L878.7 96H145zm610.9 700.6l-244.1 69.6-245.2-69.6-56.7-641.2h603.8l-57.8 641.2z"
  ], [
    secondaryColor,
    "M209.9 155.4l56.7 641.2 245.2 69.6 244.1-69.6 57.8-641.2H209.9zm530.4 117.9l-4.8 47.2-1.7 19.5H381.7l8.2 94.2H511v-.2h214.7l-3.2 24.3-21.2 242.2-1.7 16.3-187.7 51.7v.4h-1.7l-188.6-52-11.3-144.7h91l6.5 73.2 102.4 27.7h.8v-.2l102.4-27.7 11.4-118.5H511.9v.1H305.4l-22.7-253.5L281 249h461l-1.7 24.3z"
  ], [
    primaryColor,
    "M281 249l1.7 24.3 22.7 253.5h206.5v-.1h112.9l-11.4 118.5L511 672.9v.2h-.8l-102.4-27.7-6.5-73.2h-91l11.3 144.7 188.6 52h1.7v-.4l187.7-51.7 1.7-16.3 21.2-242.2 3.2-24.3H511v.2H389.9l-8.2-94.2h352.1l1.7-19.5 4.8-47.2L742 249H511z"
  ]);
});
var IdcardTwoTone = dist.IdcardTwoTone = getIcon$1("idcard", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136V232h752v560z"
  ], [
    secondaryColor,
    "M136 792h752V232H136v560zm472-372c0-4.4 1-8 2.3-8h123.4c1.3 0 2.3 3.6 2.3 8v48c0 4.4-1 8-2.3 8H610.3c-1.3 0-2.3-3.6-2.3-8v-48zm0 144c0-4.4 3.2-8 7.1-8h185.7c3.9 0 7.1 3.6 7.1 8v48c0 4.4-3.2 8-7.1 8H615.1c-3.9 0-7.1-3.6-7.1-8v-48zM216.2 664.6c2.8-53.3 31.9-99.6 74.6-126.1-18.1-20-29.1-46.4-29.1-75.5 0-61.9 49.9-112 111.4-112s111.4 50.1 111.4 112c0 29.1-11 55.6-29.1 75.5 42.6 26.4 71.8 72.8 74.6 126.1a8 8 0 0 1-8 8.4h-43.9c-4.2 0-7.6-3.3-7.9-7.5-3.8-50.5-46-90.5-97.2-90.5s-93.4 40-97.2 90.5c-.3 4.2-3.7 7.5-7.9 7.5H224c-4.6 0-8.2-3.8-7.8-8.4z"
  ], [
    secondaryColor,
    "M321.3 463a51.7 52 0 1 0 103.4 0 51.7 52 0 1 0-103.4 0z"
  ], [
    primaryColor,
    "M610.3 476h123.4c1.3 0 2.3-3.6 2.3-8v-48c0-4.4-1-8-2.3-8H610.3c-1.3 0-2.3 3.6-2.3 8v48c0 4.4 1 8 2.3 8zm4.8 144h185.7c3.9 0 7.1-3.6 7.1-8v-48c0-4.4-3.2-8-7.1-8H615.1c-3.9 0-7.1 3.6-7.1 8v48c0 4.4 3.2 8 7.1 8zM224 673h43.9c4.2 0 7.6-3.3 7.9-7.5 3.8-50.5 46-90.5 97.2-90.5s93.4 40 97.2 90.5c.3 4.2 3.7 7.5 7.9 7.5H522a8 8 0 0 0 8-8.4c-2.8-53.3-32-99.7-74.6-126.1a111.8 111.8 0 0 0 29.1-75.5c0-61.9-49.9-112-111.4-112s-111.4 50.1-111.4 112c0 29.1 11 55.5 29.1 75.5a158.09 158.09 0 0 0-74.6 126.1c-.4 4.6 3.2 8.4 7.8 8.4zm149-262c28.5 0 51.7 23.3 51.7 52s-23.2 52-51.7 52-51.7-23.3-51.7-52 23.2-52 51.7-52z"
  ]);
});
var InfoCircleTwoTone = dist.InfoCircleTwoTone = getIcon$1("info-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm32 588c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"
  ], [
    primaryColor,
    "M464 336a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z"
  ]);
});
var InsuranceTwoTone = dist.InsuranceTwoTone = getIcon$1("insurance", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6z"
  ], [secondaryColor, "M521.9 358.8h97.9v41.6h-97.9z"], [
    secondaryColor,
    "M214 226.7v427.6l298 232.2 298-232.2V226.7L512 125.1 214 226.7zM413.3 656h-.2c0 4.4-3.6 8-8 8h-37.3c-4.4 0-8-3.6-8-8V471.4c-7.7 9.2-15.4 17.9-23.1 26a6.04 6.04 0 0 1-10.2-2.4l-13.2-43.5c-.6-2-.2-4.1 1.2-5.6 37-43.4 64.7-95.1 82.2-153.6 1.1-3.5 5-5.3 8.4-3.7l38.6 18.3c2.7 1.3 4.1 4.4 3.2 7.2a429.2 429.2 0 0 1-33.6 79V656zm257.9-340v127.2c0 4.4-3.6 8-8 8h-66.7v18.6h98.8c4.4 0 8 3.6 8 8v35.6c0 4.4-3.6 8-8 8h-59c18.1 29.1 41.8 54.3 72.3 76.9 2.6 2.1 3.2 5.9 1.2 8.5l-26.3 35.3a5.92 5.92 0 0 1-8.9.7c-30.6-29.3-56.8-65.2-78.1-106.9V656c0 4.4-3.6 8-8 8h-36.2c-4.4 0-8-3.6-8-8V536c-22 44.7-49 80.8-80.6 107.6a6.38 6.38 0 0 1-4.8 1.4c-1.7-.3-3.2-1.3-4.1-2.8L432 605.7a6 6 0 0 1 1.6-8.1c28.6-20.3 51.9-45.2 71-76h-55.1c-4.4 0-8-3.6-8-8V478c0-4.4 3.6-8 8-8h94.9v-18.6h-65.9c-4.4 0-8-3.6-8-8V316c0-4.4 3.6-8 8-8h184.7c4.4 0 8 3.6 8 8z"
  ], [
    primaryColor,
    "M443.7 306.9l-38.6-18.3c-3.4-1.6-7.3.2-8.4 3.7-17.5 58.5-45.2 110.2-82.2 153.6a5.7 5.7 0 0 0-1.2 5.6l13.2 43.5c1.4 4.5 7 5.8 10.2 2.4 7.7-8.1 15.4-16.8 23.1-26V656c0 4.4 3.6 8 8 8h37.3c4.4 0 8-3.6 8-8h.2V393.1a429.2 429.2 0 0 0 33.6-79c.9-2.8-.5-5.9-3.2-7.2zm26.8 9.1v127.4c0 4.4 3.6 8 8 8h65.9V470h-94.9c-4.4 0-8 3.6-8 8v35.6c0 4.4 3.6 8 8 8h55.1c-19.1 30.8-42.4 55.7-71 76a6 6 0 0 0-1.6 8.1l22.8 36.5c.9 1.5 2.4 2.5 4.1 2.8 1.7.3 3.5-.2 4.8-1.4 31.6-26.8 58.6-62.9 80.6-107.6v120c0 4.4 3.6 8 8 8h36.2c4.4 0 8-3.6 8-8V535.9c21.3 41.7 47.5 77.6 78.1 106.9 2.6 2.5 6.7 2.2 8.9-.7l26.3-35.3c2-2.6 1.4-6.4-1.2-8.5-30.5-22.6-54.2-47.8-72.3-76.9h59c4.4 0 8-3.6 8-8v-35.6c0-4.4-3.6-8-8-8h-98.8v-18.6h66.7c4.4 0 8-3.6 8-8V316c0-4.4-3.6-8-8-8H478.5c-4.4 0-8 3.6-8 8zm51.4 42.8h97.9v41.6h-97.9v-41.6z"
  ]);
});
var InteractionTwoTone = dist.InteractionTwoTone = getIcon$1("interaction", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm114-401.9c0-55.3 44.6-100.1 99.7-100.1h205.8v-53.4c0-5.6 6.5-8.8 10.9-5.3L723.5 365c3.5 2.7 3.5 8 0 10.7l-109.1 85.7c-4.4 3.5-10.9.4-10.9-5.3v-53.4H397.8c-19.6 0-35.5 15.9-35.5 35.6v78.9c0 3.8-3.1 6.8-6.8 6.8h-50.7c-3.8 0-6.8-3-6.8-7v-78.9zm2.6 210.3l109.1-85.7c4.4-3.5 10.9-.4 10.9 5.3v53.4h205.6c19.6 0 35.5-15.9 35.5-35.6v-78.9c0-3.8 3.1-6.8 6.8-6.8h50.7c3.8 0 6.8 3.1 6.8 6.8v78.9c0 55.3-44.6 100.1-99.7 100.1H420.6v53.4c0 5.6-6.5 8.8-10.9 5.3l-109.1-85.7c-3.5-2.7-3.5-8 0-10.5z"
  ], [
    primaryColor,
    "M304.8 524h50.7c3.7 0 6.8-3 6.8-6.8v-78.9c0-19.7 15.9-35.6 35.5-35.6h205.7v53.4c0 5.7 6.5 8.8 10.9 5.3l109.1-85.7c3.5-2.7 3.5-8 0-10.7l-109.1-85.7c-4.4-3.5-10.9-.3-10.9 5.3V338H397.7c-55.1 0-99.7 44.8-99.7 100.1V517c0 4 3 7 6.8 7zm-4.2 134.9l109.1 85.7c4.4 3.5 10.9.3 10.9-5.3v-53.4h205.7c55.1 0 99.7-44.8 99.7-100.1v-78.9c0-3.7-3-6.8-6.8-6.8h-50.7c-3.7 0-6.8 3-6.8 6.8v78.9c0 19.7-15.9 35.6-35.5 35.6H420.6V568c0-5.7-6.5-8.8-10.9-5.3l-109.1 85.7c-3.5 2.5-3.5 7.8 0 10.5z"
  ]);
});
var InterationTwoTone = dist.InterationTwoTone = getIcon$1("interation", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm114-401.9c0-55.3 44.6-100.1 99.7-100.1h205.8v-53.4c0-5.6 6.5-8.8 10.9-5.3L723.5 365c3.5 2.7 3.5 8 0 10.7l-109.1 85.7c-4.4 3.5-10.9.4-10.9-5.3v-53.4H397.8c-19.6 0-35.5 15.9-35.5 35.6v78.9c0 3.8-3.1 6.8-6.8 6.8h-50.7c-3.8 0-6.8-3-6.8-7v-78.9zm2.6 210.3l109.1-85.7c4.4-3.5 10.9-.4 10.9 5.3v53.4h205.6c19.6 0 35.5-15.9 35.5-35.6v-78.9c0-3.8 3.1-6.8 6.8-6.8h50.7c3.8 0 6.8 3.1 6.8 6.8v78.9c0 55.3-44.6 100.1-99.7 100.1H420.6v53.4c0 5.6-6.5 8.8-10.9 5.3l-109.1-85.7c-3.5-2.7-3.5-8 0-10.5z"
  ], [
    primaryColor,
    "M304.8 524h50.7c3.7 0 6.8-3 6.8-6.8v-78.9c0-19.7 15.9-35.6 35.5-35.6h205.7v53.4c0 5.7 6.5 8.8 10.9 5.3l109.1-85.7c3.5-2.7 3.5-8 0-10.7l-109.1-85.7c-4.4-3.5-10.9-.3-10.9 5.3V338H397.7c-55.1 0-99.7 44.8-99.7 100.1V517c0 4 3 7 6.8 7zm-4.2 134.9l109.1 85.7c4.4 3.5 10.9.3 10.9-5.3v-53.4h205.7c55.1 0 99.7-44.8 99.7-100.1v-78.9c0-3.7-3-6.8-6.8-6.8h-50.7c-3.7 0-6.8 3-6.8 6.8v78.9c0 19.7-15.9 35.6-35.5 35.6H420.6V568c0-5.7-6.5-8.8-10.9-5.3l-109.1 85.7c-3.5 2.5-3.5 7.8 0 10.5z"
  ]);
});
var LayoutTwoTone = dist.LayoutTwoTone = getIcon$1("layout", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M384 185h456v136H384zm-200 0h136v656H184zm696-73H144c-17.7 0-32 14.3-32 32v1c0-17.7 14.3-32 32-32h736c17.7 0 32 14.3 32 32v-1c0-17.7-14.3-32-32-32zM384 385h456v456H384z"
  ], [
    primaryColor,
    "M880 113H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V145c0-17.7-14.3-32-32-32zM320 841H184V185h136v656zm520 0H384V385h456v456zm0-520H384V185h456v136z"
  ]);
});
var LeftCircleTwoTone = dist.LeftCircleTwoTone = getIcon$1("left-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm104 240.9c0 10.3-4.9 19.9-13.2 25.9L457.4 512l145.4 105.1c8.3 6 13.2 15.7 13.2 25.9v46.9c0 6.5-7.4 10.3-12.7 6.5l-246-178a7.95 7.95 0 0 1 0-12.9l246-178c5.3-3.8 12.7 0 12.7 6.5v46.9z"
  ], [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    primaryColor,
    "M603.3 327.5l-246 178a7.95 7.95 0 0 0 0 12.9l246 178c5.3 3.8 12.7 0 12.7-6.5V643c0-10.2-4.9-19.9-13.2-25.9L457.4 512l145.4-105.2c8.3-6 13.2-15.6 13.2-25.9V334c0-6.5-7.4-10.3-12.7-6.5z"
  ]);
});
var LeftSquareTwoTone = dist.LeftSquareTwoTone = getIcon$1("left-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm181.3-334.5l246-178c5.3-3.8 12.7 0 12.7 6.5v46.9c0 10.3-4.9 19.9-13.2 25.9L465.4 512l145.4 105.2c8.3 6 13.2 15.7 13.2 25.9V690c0 6.5-7.4 10.3-12.7 6.4l-246-178a7.95 7.95 0 0 1 0-12.9z"
  ], [
    primaryColor,
    "M365.3 518.4l246 178c5.3 3.9 12.7.1 12.7-6.4v-46.9c0-10.2-4.9-19.9-13.2-25.9L465.4 512l145.4-105.2c8.3-6 13.2-15.6 13.2-25.9V334c0-6.5-7.4-10.3-12.7-6.5l-246 178a7.95 7.95 0 0 0 0 12.9z"
  ]);
});
var LikeTwoTone = dist.LikeTwoTone = getIcon$1("like", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M273 495.9v428l.3-428zm538.2-88.3H496.8l9.6-198.4c.6-11.9-4.7-23.1-14.6-30.5-6.1-4.5-13.6-6.8-21.1-6.7-19.6.1-36.9 13.4-42.2 32.3-37.1 134.4-64.9 235.2-83.5 302.5V852h399.4a56.85 56.85 0 0 0 33.6-51.8c0-9.7-2.3-18.9-6.9-27.3l-13.9-25.4 21.9-19a56.76 56.76 0 0 0 19.6-43c0-9.7-2.3-18.9-6.9-27.3l-13.9-25.4 21.9-19a56.76 56.76 0 0 0 19.6-43c0-9.7-2.3-18.9-6.9-27.3l-14-25.5 21.9-19a56.76 56.76 0 0 0 19.6-43c0-19.1-11-37.5-28.8-48.4z"
  ], [
    primaryColor,
    "M112 528v364c0 17.7 14.3 32 32 32h65V496h-65c-17.7 0-32 14.3-32 32zm773.9 5.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.5-65.5-111a67.67 67.67 0 0 0-34.3-9.3H572.3l6-122.9c1.5-29.7-9-57.9-29.5-79.4a106.4 106.4 0 0 0-77.9-33.4c-52 0-98 35-111.8 85.1l-85.8 310.8-.3 428h472.1c9.3 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37zM820.4 499l-21.9 19 14 25.5a56.2 56.2 0 0 1 6.9 27.3c0 16.5-7.1 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 0 1 6.9 27.3c0 16.5-7.1 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 0 1 6.9 27.3c0 22.4-13.2 42.6-33.6 51.8H345V506.8c18.6-67.2 46.4-168 83.5-302.5a44.28 44.28 0 0 1 42.2-32.3c7.5-.1 15 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.1 32.2-19.6 43z"
  ]);
});
var LockTwoTone = dist.LockTwoTone = getIcon$1("lock", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304z"
  ], [
    secondaryColor,
    "M232 840h560V536H232v304zm280-226a48.01 48.01 0 0 1 28 87v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 0 1 28-87z"
  ], [
    primaryColor,
    "M484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 1 0-56 0z"
  ]);
});
var MailTwoTone = dist.MailTwoTone = getIcon$1("mail", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M477.5 536.3L135.9 270.7l-27.5-21.4 27.6 21.5V792h752V270.8L546.2 536.3a55.99 55.99 0 0 1-68.7 0z"
  ], [secondaryColor, "M876.3 198.8l39.3 50.5-27.6 21.5 27.7-21.5-39.3-50.5z"], [
    primaryColor,
    "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-94.5 72.1L512 482 190.5 232.1h643zm54.5 38.7V792H136V270.8l-27.6-21.5 27.5 21.4 341.6 265.6a55.99 55.99 0 0 0 68.7 0L888 270.8l27.6-21.5-39.3-50.5h.1l39.3 50.5-27.7 21.5z"
  ]);
});
var MedicineBoxTwoTone = dist.MedicineBoxTwoTone = getIcon$1("medicine-box", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M244.3 328L184 513.4V840h656V513.4L779.7 328H244.3zM660 628c0 4.4-3.6 8-8 8H544v108c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V636H372c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h108V464c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v108h108c4.4 0 8 3.6 8 8v48z"
  ], [
    primaryColor,
    "M652 572H544V464c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V636h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"
  ], [
    primaryColor,
    "M839.2 278.1a32 32 0 0 0-30.4-22.1H736V144c0-17.7-14.3-32-32-32H320c-17.7 0-32 14.3-32 32v112h-72.8a31.9 31.9 0 0 0-30.4 22.1L112 502v378c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V502l-72.8-223.9zM360 184h304v72H360v-72zm480 656H184V513.4L244.3 328h535.4L840 513.4V840z"
  ]);
});
var MehTwoTone = dist.MehTwoTone = getIcon$1("meh", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zM288 421a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm384 200c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h304c4.4 0 8 3.6 8 8v48zm16-152a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"
  ], [
    primaryColor,
    "M288 421a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm376 144H360c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm-24-144a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"
  ]);
});
var MessageTwoTone = dist.MessageTwoTone = getIcon$1("message", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M775.3 248.9a369.62 369.62 0 0 0-119-80A370.2 370.2 0 0 0 512.1 140h-1.7c-99.7.4-193 39.4-262.8 109.9-69.9 70.5-108 164.1-107.6 263.8.3 60.3 15.3 120.2 43.5 173.1l4.5 8.4V836h140.8l8.4 4.5c52.9 28.2 112.8 43.2 173.1 43.5h1.7c99 0 192-38.2 262.1-107.6 70.4-69.8 109.5-163.1 110.1-262.7.2-50.6-9.5-99.6-28.9-145.8a370.15 370.15 0 0 0-80-119zM312 560a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96zm200 0a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96zm200 0a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"
  ], [
    primaryColor,
    "M664 512a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm-400 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"
  ], [
    primaryColor,
    "M925.2 338.4c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 0 0-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 0 0-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 0 0 112 714v152a46 46 0 0 0 46 46h152.1A449.4 449.4 0 0 0 510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 0 0 142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z"
  ], [primaryColor, "M464 512a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"]);
});
var MinusCircleTwoTone = dist.MinusCircleTwoTone = getIcon$1("minus-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm192 396c0 4.4-3.6 8-8 8H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h368c4.4 0 8 3.6 8 8v48z"
  ], [
    primaryColor,
    "M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"
  ]);
});
var MinusSquareTwoTone = dist.MinusSquareTwoTone = getIcon$1("minus-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm136-352c0-4.4 3.6-8 8-8h368c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H328c-4.4 0-8-3.6-8-8v-48z"
  ], [
    primaryColor,
    "M328 544h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"
  ]);
});
var MobileTwoTone = dist.MobileTwoTone = getIcon$1("mobile", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M744 64H280c-35.3 0-64 28.7-64 64v768c0 35.3 28.7 64 64 64h464c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zm-8 824H288V136h448v752z"
  ], [
    secondaryColor,
    "M288 888h448V136H288v752zm224-142c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40z"
  ], [primaryColor, "M472 786a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"]);
});
var PauseCircleTwoTone = dist.PauseCircleTwoTone = getIcon$1("pause-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm-80 524c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V360c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v304zm224 0c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V360c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v304z"
  ], [
    primaryColor,
    "M424 352h-48c-4.4 0-8 3.6-8 8v304c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8zm224 0h-48c-4.4 0-8 3.6-8 8v304c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8z"
  ]);
});
var MoneyCollectTwoTone = dist.MoneyCollectTwoTone = getIcon$1("money-collect", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M256 744.4l256 93.1 256-93.1V184H256v560.4zM359.7 313c1.2-.7 2.5-1 3.8-1h55.7a8 8 0 0 1 7.1 4.4L511 485.2h3.3L599 316.4c1.3-2.7 4.1-4.4 7.1-4.4h54.5c4.4 0 8 3.6 8.1 7.9 0 1.3-.4 2.6-1 3.8L564 515.3h57.6c4.4 0 8 3.6 8 8v27.1c0 4.4-3.6 8-8 8h-76.3v39h76.3c4.4 0 8 3.6 8 8v27.1c0 4.4-3.6 8-8 8h-76.3V704c0 4.4-3.6 8-8 8h-49.9c-4.4 0-8-3.6-8-8v-63.4h-76c-4.4 0-8-3.6-8-8v-27.1c0-4.4 3.6-8 8-8h76v-39h-76c-4.4 0-8-3.6-8-8v-27.1c0-4.4 3.6-8 8-8h57L356.5 323.8c-2.1-3.8-.7-8.7 3.2-10.8z"
  ], [
    primaryColor,
    "M911.5 700.7a8 8 0 0 0-10.3-4.8L840 718.2V180c0-37.6-30.4-68-68-68H252c-37.6 0-68 30.4-68 68v538.2l-61.3-22.3c-.9-.3-1.8-.5-2.7-.5-4.4 0-8 3.6-8 8V763c0 3.3 2.1 6.3 5.3 7.5L501 910.1c7.1 2.6 14.8 2.6 21.9 0l383.8-139.5c3.2-1.2 5.3-4.2 5.3-7.5v-59.6c0-1-.2-1.9-.5-2.8zM768 744.4l-256 93.1-256-93.1V184h512v560.4z"
  ], [
    primaryColor,
    "M460.4 515.4h-57c-4.4 0-8 3.6-8 8v27.1c0 4.4 3.6 8 8 8h76v39h-76c-4.4 0-8 3.6-8 8v27.1c0 4.4 3.6 8 8 8h76V704c0 4.4 3.6 8 8 8h49.9c4.4 0 8-3.6 8-8v-63.5h76.3c4.4 0 8-3.6 8-8v-27.1c0-4.4-3.6-8-8-8h-76.3v-39h76.3c4.4 0 8-3.6 8-8v-27.1c0-4.4-3.6-8-8-8H564l103.7-191.6c.6-1.2 1-2.5 1-3.8-.1-4.3-3.7-7.9-8.1-7.9h-54.5c-3 0-5.8 1.7-7.1 4.4l-84.7 168.8H511l-84.7-168.8a8 8 0 0 0-7.1-4.4h-55.7c-1.3 0-2.6.3-3.8 1-3.9 2.1-5.3 7-3.2 10.8l103.9 191.6z"
  ]);
});
var NotificationTwoTone = dist.NotificationTwoTone = getIcon$1("notification", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M229.6 678.1c-3.7 11.6-5.6 23.9-5.6 36.4 0-12.5 2-24.8 5.7-36.4h-.1zm76.3-260.2H184v188.2h121.9l12.9 5.2L840 820.7V203.3L318.8 412.7z"
  ], [
    primaryColor,
    "M880 112c-3.8 0-7.7.7-11.6 2.3L292 345.9H128c-8.8 0-16 7.4-16 16.6v299c0 9.2 7.2 16.6 16 16.6h101.7c-3.7 11.6-5.7 23.9-5.7 36.4 0 65.9 53.8 119.5 120 119.5 55.4 0 102.1-37.6 115.9-88.4l408.6 164.2c3.9 1.5 7.8 2.3 11.6 2.3 16.9 0 32-14.2 32-33.2V145.2C912 126.2 897 112 880 112zM344 762.3c-26.5 0-48-21.4-48-47.8 0-11.2 3.9-21.9 11-30.4l84.9 34.1c-2 24.6-22.7 44.1-47.9 44.1zm496 58.4L318.8 611.3l-12.9-5.2H184V417.9h121.9l12.9-5.2L840 203.3v617.4z"
  ]);
});
var PhoneTwoTone = dist.PhoneTwoTone = getIcon$1("phone", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M721.7 184.9L610.9 295.8l120.8 120.7-8 21.6A481.29 481.29 0 0 1 438 723.9l-21.6 8-.9-.9-119.8-120-110.8 110.9 104.5 104.5c10.8 10.7 26 15.7 40.8 13.2 117.9-19.5 235.4-82.9 330.9-178.4s158.9-213.1 178.4-331c2.5-14.8-2.5-30-13.3-40.8L721.7 184.9z"
  ], [
    primaryColor,
    "M877.1 238.7L770.6 132.3c-13-13-30.4-20.3-48.8-20.3s-35.8 7.2-48.8 20.3L558.3 246.8c-13 13-20.3 30.5-20.3 48.9 0 18.5 7.2 35.8 20.3 48.9l89.6 89.7a405.46 405.46 0 0 1-86.4 127.3c-36.7 36.9-79.6 66-127.2 86.6l-89.6-89.7c-13-13-30.4-20.3-48.8-20.3a68.2 68.2 0 0 0-48.8 20.3L132.3 673c-13 13-20.3 30.5-20.3 48.9 0 18.5 7.2 35.8 20.3 48.9l106.4 106.4c22.2 22.2 52.8 34.9 84.2 34.9 6.5 0 12.8-.5 19.2-1.6 132.4-21.8 263.8-92.3 369.9-198.3C818 606 888.4 474.6 910.4 342.1c6.3-37.6-6.3-76.3-33.3-103.4zm-37.6 91.5c-19.5 117.9-82.9 235.5-178.4 331s-213 158.9-330.9 178.4c-14.8 2.5-30-2.5-40.8-13.2L184.9 721.9 295.7 611l119.8 120 .9.9 21.6-8a481.29 481.29 0 0 0 285.7-285.8l8-21.6-120.8-120.7 110.8-110.9 104.5 104.5c10.8 10.8 15.8 26 13.3 40.8z"
  ]);
});
var PictureTwoTone = dist.PictureTwoTone = getIcon$1("picture", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2z"
  ], [
    secondaryColor,
    "M424.6 765.8l-150.1-178L136 752.1V792h752v-30.4L658.1 489z"
  ], [
    secondaryColor,
    "M136 652.7l132.4-157c3.2-3.8 9-3.8 12.2 0l144 170.7L652 396.8c3.2-3.8 9-3.8 12.2 0L888 662.2V232H136v420.7zM304 280a88 88 0 1 1 0 176 88 88 0 0 1 0-176z"
  ], [secondaryColor, "M276 368a28 28 0 1 0 56 0 28 28 0 1 0-56 0z"], [
    primaryColor,
    "M304 456a88 88 0 1 0 0-176 88 88 0 0 0 0 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z"
  ]);
});
var PlayCircleTwoTone = dist.PlayCircleTwoTone = getIcon$1("play-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm164.1 378.2L457.7 677.1a8.02 8.02 0 0 1-12.7-6.5V353a8 8 0 0 1 12.7-6.5l218.4 158.8a7.9 7.9 0 0 1 0 12.9z"
  ], [
    primaryColor,
    "M676.1 505.3L457.7 346.5A8 8 0 0 0 445 353v317.6a8.02 8.02 0 0 0 12.7 6.5l218.4-158.9a7.9 7.9 0 0 0 0-12.9z"
  ]);
});
var PlaySquareTwoTone = dist.PlaySquareTwoTone = getIcon$1("play-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm240-484.7c0-9.4 10.9-14.7 18.3-8.8l199.4 156.7a11.2 11.2 0 0 1 0 17.6L442.3 677.6c-7.4 5.8-18.3.6-18.3-8.8V355.3z"
  ], [
    primaryColor,
    "M442.3 677.6l199.4-156.8a11.2 11.2 0 0 0 0-17.6L442.3 346.5c-7.4-5.9-18.3-.6-18.3 8.8v313.5c0 9.4 10.9 14.6 18.3 8.8z"
  ]);
});
var PieChartTwoTone = dist.PieChartTwoTone = getIcon$1("pie-chart", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M316.2 920.5c-47.6-20.1-90.4-49-127.1-85.7a398.19 398.19 0 0 1-85.7-127.1A397.12 397.12 0 0 1 72 552.2v.2a398.57 398.57 0 0 0 117 282.5c36.7 36.7 79.4 65.5 127 85.6A396.64 396.64 0 0 0 471.6 952c27 0 53.6-2.7 79.7-7.9-25.9 5.2-52.4 7.8-79.3 7.8-54 .1-106.4-10.5-155.8-31.4zM560 472c-4.4 0-8-3.6-8-8V79.9c0-1.3.3-2.5.9-3.6-.9 1.3-1.5 2.9-1.5 4.6v383.7c0 4.4 3.6 8 8 8l383.6-1c1.6 0 3.1-.5 4.4-1.3-1 .5-2.2.7-3.4.7l-384 1z"
  ], [
    secondaryColor,
    "M619.8 147.6v256.6l256.4-.7c-13-62.5-44.3-120.5-90-166.1a332.24 332.24 0 0 0-166.4-89.8z"
  ], [
    secondaryColor,
    "M438 221.7c-75.9 7.6-146.2 40.9-200.8 95.5C174.5 379.9 140 463.3 140 552s34.5 172.1 97.2 234.8c62.3 62.3 145.1 96.8 233.2 97.2 88.2.4 172.7-34.1 235.3-96.2C761 733 794.6 662.3 802.3 586H438V221.7z"
  ], [
    primaryColor,
    "M864 518H506V160c0-4.4-3.6-8-8-8h-26a398.46 398.46 0 0 0-282.8 117.1 398.19 398.19 0 0 0-85.7 127.1A397.61 397.61 0 0 0 72 552v.2c0 53.9 10.6 106.2 31.4 155.5 20.1 47.6 49 90.4 85.7 127.1 36.7 36.7 79.5 65.6 127.1 85.7A397.61 397.61 0 0 0 472 952c26.9 0 53.4-2.6 79.3-7.8 26.1-5.3 51.7-13.1 76.4-23.6 47.6-20.1 90.4-49 127.1-85.7 36.7-36.7 65.6-79.5 85.7-127.1A397.61 397.61 0 0 0 872 552v-26c0-4.4-3.6-8-8-8zM705.7 787.8A331.59 331.59 0 0 1 470.4 884c-88.1-.4-170.9-34.9-233.2-97.2C174.5 724.1 140 640.7 140 552s34.5-172.1 97.2-234.8c54.6-54.6 124.9-87.9 200.8-95.5V586h364.3c-7.7 76.3-41.3 147-96.6 201.8z"
  ], [
    primaryColor,
    "M952 462.4l-2.6-28.2c-8.5-92.1-49.4-179-115.2-244.6A399.4 399.4 0 0 0 589 74.6L560.7 72c-3.4-.3-6.4 1.5-7.8 4.3a8.7 8.7 0 0 0-.9 3.6V464c0 4.4 3.6 8 8 8l384-1c1.2 0 2.3-.3 3.4-.7a8.1 8.1 0 0 0 4.6-7.9zm-332.2-58.2V147.6a332.24 332.24 0 0 1 166.4 89.8c45.7 45.6 77 103.6 90 166.1l-256.4.7z"
  ]);
});
var PlusCircleTwoTone = dist.PlusCircleTwoTone = getIcon$1("plus-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm192 396c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z"
  ], [
    primaryColor,
    "M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"
  ]);
});
var PlusSquareTwoTone = dist.PlusSquareTwoTone = getIcon$1("plus-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm136-352c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48z"
  ], [
    primaryColor,
    "M328 544h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"
  ]);
});
var PoundCircleTwoTone = dist.PoundCircleTwoTone = getIcon$1("pound-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm146 582.1c0 4.4-3.6 8-8 8H376.2c-4.4 0-8-3.6-8-8v-38.5c0-3.7 2.5-6.9 6.1-7.8 44-10.9 72.8-49 72.8-94.2 0-14.7-2.5-29.4-5.9-44.2H374c-4.4 0-8-3.6-8-8v-30c0-4.4 3.6-8 8-8h53.7c-7.8-25.1-14.6-50.7-14.6-77.1 0-75.8 58.6-120.3 151.5-120.3 26.5 0 51.4 5.5 70.3 12.7 3.1 1.2 5.2 4.2 5.2 7.5v39.5a8 8 0 0 1-10.6 7.6c-17.9-6.4-39-10.5-60.4-10.5-53.3 0-87.3 26.6-87.3 70.2 0 24.7 6.2 47.9 13.4 70.5h112c4.4 0 8 3.6 8 8v30c0 4.4-3.6 8-8 8h-98.6c3.1 13.2 5.3 26.9 5.3 41 0 40.7-16.5 73.9-43.9 91.1v4.7h180c4.4 0 8 3.6 8 8v39.8z"
  ], [
    primaryColor,
    "M650 674.3H470v-4.7c27.4-17.2 43.9-50.4 43.9-91.1 0-14.1-2.2-27.8-5.3-41h98.6c4.4 0 8-3.6 8-8v-30c0-4.4-3.6-8-8-8h-112c-7.2-22.6-13.4-45.8-13.4-70.5 0-43.6 34-70.2 87.3-70.2 21.4 0 42.5 4.1 60.4 10.5a8 8 0 0 0 10.6-7.6v-39.5c0-3.3-2.1-6.3-5.2-7.5-18.9-7.2-43.8-12.7-70.3-12.7-92.9 0-151.5 44.5-151.5 120.3 0 26.4 6.8 52 14.6 77.1H374c-4.4 0-8 3.6-8 8v30c0 4.4 3.6 8 8 8h67.2c3.4 14.8 5.9 29.5 5.9 44.2 0 45.2-28.8 83.3-72.8 94.2-3.6.9-6.1 4.1-6.1 7.8v38.5c0 4.4 3.6 8 8 8H650c4.4 0 8-3.6 8-8v-39.8c0-4.4-3.6-8-8-8z"
  ]);
});
var PrinterTwoTone = dist.PrinterTwoTone = getIcon$1("printer", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M360 180h304v152H360zm492 220H172c-6.6 0-12 5.4-12 12v292h132V500h440v204h132V412c0-6.6-5.4-12-12-12zm-24 84c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-40c0-4.4 3.6-8 8-8h40c4.4 0 8 3.6 8 8v40z"
  ], [
    primaryColor,
    "M852 332H732V120c0-4.4-3.6-8-8-8H300c-4.4 0-8 3.6-8 8v212H172c-44.2 0-80 35.8-80 80v328c0 17.7 14.3 32 32 32h168v132c0 4.4 3.6 8 8 8h424c4.4 0 8-3.6 8-8V772h168c17.7 0 32-14.3 32-32V412c0-44.2-35.8-80-80-80zM360 180h304v152H360V180zm304 664H360V568h304v276zm200-140H732V500H292v204H160V412c0-6.6 5.4-12 12-12h680c6.6 0 12 5.4 12 12v292z"
  ], [
    primaryColor,
    "M820 436h-40c-4.4 0-8 3.6-8 8v40c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-40c0-4.4-3.6-8-8-8z"
  ]);
});
var ProfileTwoTone = dist.ProfileTwoTone = getIcon$1("profile", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm300-496c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48zm0 144c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48zm0 144c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48zM380 328c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zm0 144c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zm0 144c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40z"
  ], [
    primaryColor,
    "M340 656a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0-144a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm0-144a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm152 320h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H492c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm0-144h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H492c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm0-144h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H492c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"
  ]);
});
var ProjectTwoTone = dist.ProjectTwoTone = getIcon$1("project", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm472-560c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v256c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8V280zm-192 0c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8V280zm-192 0c0-4.4 3.6-8 8-8h80c4.4 0 8 3.6 8 8v464c0 4.4-3.6 8-8 8h-80c-4.4 0-8-3.6-8-8V280z"
  ], [
    primaryColor,
    "M280 752h80c4.4 0 8-3.6 8-8V280c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8zm192-280h80c4.4 0 8-3.6 8-8V280c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8v184c0 4.4 3.6 8 8 8zm192 72h80c4.4 0 8-3.6 8-8V280c0-4.4-3.6-8-8-8h-80c-4.4 0-8 3.6-8 8v256c0 4.4 3.6 8 8 8z"
  ]);
});
var PushpinTwoTone = dist.PushpinTwoTone = getIcon$1("pushpin", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M474.8 357.7l-24.5 24.5-34.4-3.8c-9.6-1.1-19.3-1.6-28.9-1.6-29 0-57.5 4.7-84.7 14.1-14 4.8-27.4 10.8-40.3 17.9l353.1 353.3a259.92 259.92 0 0 0 30.4-153.9l-3.8-34.4 24.5-24.5L800 415.5 608.5 224 474.8 357.7z"
  ], [
    primaryColor,
    "M878.3 392.1L631.9 145.7c-6.5-6.5-15-9.7-23.5-9.7s-17 3.2-23.5 9.7L423.8 306.9c-12.2-1.4-24.5-2-36.8-2-73.2 0-146.4 24.1-206.5 72.3a33.23 33.23 0 0 0-2.7 49.4l181.7 181.7-215.4 215.2a15.8 15.8 0 0 0-4.6 9.8l-3.4 37.2c-.9 9.4 6.6 17.4 15.9 17.4.5 0 1 0 1.5-.1l37.2-3.4c3.7-.3 7.2-2 9.8-4.6l215.4-215.4 181.7 181.7c6.5 6.5 15 9.7 23.5 9.7 9.7 0 19.3-4.2 25.9-12.4 56.3-70.3 79.7-158.3 70.2-243.4l161.1-161.1c12.9-12.8 12.9-33.8 0-46.8zM666.2 549.3l-24.5 24.5 3.8 34.4a259.92 259.92 0 0 1-30.4 153.9L262 408.8c12.9-7.1 26.3-13.1 40.3-17.9 27.2-9.4 55.7-14.1 84.7-14.1 9.6 0 19.3.5 28.9 1.6l34.4 3.8 24.5-24.5L608.5 224 800 415.5 666.2 549.3z"
  ]);
});
var PropertySafetyTwoTone = dist.PropertySafetyTwoTone = getIcon$1("property-safety", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6z"
  ], [
    secondaryColor,
    "M214 226.7v427.6l298 232.2 298-232.2V226.7L512 125.1 214 226.7zM593.9 318h45c5.5 0 10 4.5 10 10 .1 1.7-.3 3.3-1.1 4.8l-87.7 161.1h45.7c5.5 0 10 4.5 10 10v21.3c0 5.5-4.5 10-10 10h-63.4v29.7h63.4c5.5 0 10 4.5 10 10v21.3c0 5.5-4.5 10-10 10h-63.4V658c0 5.5-4.5 10-10 10h-41.3c-5.5 0-10-4.5-10-10v-51.8H418c-5.5 0-10-4.5-10-10v-21.3c0-5.5 4.5-10 10-10h63.1v-29.7H418c-5.5 0-10-4.5-10-10v-21.3c0-5.5 4.5-10 10-10h45.2l-88-161.1c-2.6-4.8-.9-10.9 4-13.6 1.5-.8 3.1-1.2 4.8-1.2h46c3.8 0 7.2 2.1 8.9 5.5l72.9 144.3L585 323.5a10 10 0 0 1 8.9-5.5z"
  ], [
    primaryColor,
    "M438.9 323.5a9.88 9.88 0 0 0-8.9-5.5h-46c-1.7 0-3.3.4-4.8 1.2-4.9 2.7-6.6 8.8-4 13.6l88 161.1H418c-5.5 0-10 4.5-10 10v21.3c0 5.5 4.5 10 10 10h63.1v29.7H418c-5.5 0-10 4.5-10 10v21.3c0 5.5 4.5 10 10 10h63.1V658c0 5.5 4.5 10 10 10h41.3c5.5 0 10-4.5 10-10v-51.8h63.4c5.5 0 10-4.5 10-10v-21.3c0-5.5-4.5-10-10-10h-63.4v-29.7h63.4c5.5 0 10-4.5 10-10v-21.3c0-5.5-4.5-10-10-10h-45.7l87.7-161.1c.8-1.5 1.2-3.1 1.1-4.8 0-5.5-4.5-10-10-10h-45a10 10 0 0 0-8.9 5.5l-73.2 144.3-72.9-144.3z"
  ]);
});
var QuestionCircleTwoTone = dist.QuestionCircleTwoTone = getIcon$1("question-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm0 632c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 0 0-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z"
  ], [
    primaryColor,
    "M472 732a40 40 0 1 0 80 0 40 40 0 1 0-80 0zm151.6-415.3C593.6 290.5 554 276 512 276s-81.6 14.4-111.6 40.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56 72.7-21.2 8.1-39.2 22.3-52.1 40.9-13.2 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-22.7a48.3 48.3 0 0 1 30.9-44.8c59-22.7 97.1-74.7 97.1-132.5 0-39.3-17.2-76-48.4-103.3z"
  ]);
});
var ReconciliationTwoTone = dist.ReconciliationTwoTone = getIcon$1("reconciliation", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M740 344H404V240H304v160h176c17.7 0 32 14.3 32 32v360h328V240H740v104zM584 448c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56zm92 301c-50.8 0-92-41.2-92-92s41.2-92 92-92 92 41.2 92 92-41.2 92-92 92zm92-341v96c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-96c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8z"
  ], [secondaryColor, "M642 657a34 34 0 1 0 68 0 34 34 0 1 0-68 0z"], [
    primaryColor,
    "M592 512h48c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm112-104v96c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-96c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"
  ], [
    primaryColor,
    "M880 168H668c0-30.9-25.1-56-56-56h-80c-30.9 0-56 25.1-56 56H264c-17.7 0-32 14.3-32 32v200h-88c-17.7 0-32 14.3-32 32v448c0 17.7 14.3 32 32 32h336c17.7 0 32-14.3 32-32v-16h368c17.7 0 32-14.3 32-32V200c0-17.7-14.3-32-32-32zm-412 64h72v-56h64v56h72v48H468v-48zm-20 616H176V616h272v232zm0-296H176v-88h272v88zm392 240H512V432c0-17.7-14.3-32-32-32H304V240h100v104h336V240h100v552z"
  ], [
    primaryColor,
    "M676 565c-50.8 0-92 41.2-92 92s41.2 92 92 92 92-41.2 92-92-41.2-92-92-92zm0 126c-18.8 0-34-15.2-34-34s15.2-34 34-34 34 15.2 34 34-15.2 34-34 34z"
  ]);
});
var RedEnvelopeTwoTone = dist.RedEnvelopeTwoTone = getIcon$1("red-envelope", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-40 824H232V193.1l260.3 204.1c11.6 9.1 27.9 9.1 39.5 0L792 193.1V888zm0-751.3h-31.7L512 331.3 263.7 136.7H232v-.7h560v.7z"
  ], [
    secondaryColor,
    "M492.3 397.2L232 193.1V888h560V193.1L531.8 397.2a31.99 31.99 0 0 1-39.5 0zm99.4 60.9h47.8a8.45 8.45 0 0 1 7.4 12.4l-87.2 161h45.9c4.6 0 8.4 3.8 8.4 8.4V665c0 4.6-3.8 8.4-8.4 8.4h-63.3V702h63.3c4.6 0 8.4 3.8 8.4 8.4v25c.2 4.7-3.5 8.5-8.2 8.5h-63.3v49.9c0 4.6-3.8 8.4-8.4 8.4h-43.7c-4.6 0-8.4-3.8-8.4-8.4v-49.9h-63c-4.6 0-8.4-3.8-8.4-8.4v-25.1c0-4.6 3.8-8.4 8.4-8.4h63v-28.6h-63c-4.6 0-8.4-3.8-8.4-8.4v-25.1c0-4.6 3.8-8.4 8.4-8.4h45.4L377 470.4a8.4 8.4 0 0 1 3.4-11.4c1.3-.6 2.6-1 3.9-1h48.8c3.2 0 6.1 1.8 7.5 4.6l71.7 142 71.9-141.9a8.6 8.6 0 0 1 7.5-4.6z"
  ], [secondaryColor, "M232 136.7h31.7L512 331.3l248.3-194.6H792v-.7H232z"], [
    primaryColor,
    "M440.6 462.6a8.38 8.38 0 0 0-7.5-4.6h-48.8c-1.3 0-2.6.4-3.9 1a8.4 8.4 0 0 0-3.4 11.4l87.4 161.1H419c-4.6 0-8.4 3.8-8.4 8.4V665c0 4.6 3.8 8.4 8.4 8.4h63V702h-63c-4.6 0-8.4 3.8-8.4 8.4v25.1c0 4.6 3.8 8.4 8.4 8.4h63v49.9c0 4.6 3.8 8.4 8.4 8.4h43.7c4.6 0 8.4-3.8 8.4-8.4v-49.9h63.3c4.7 0 8.4-3.8 8.2-8.5v-25c0-4.6-3.8-8.4-8.4-8.4h-63.3v-28.6h63.3c4.6 0 8.4-3.8 8.4-8.4v-25.1c0-4.6-3.8-8.4-8.4-8.4h-45.9l87.2-161a8.45 8.45 0 0 0-7.4-12.4h-47.8c-3.1 0-6 1.8-7.5 4.6l-71.9 141.9-71.7-142z"
  ]);
});
var RestTwoTone = dist.RestTwoTone = getIcon$1("rest", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M326.4 844h363.2l44.3-520H282l44.4 520zM508 416c79.5 0 144 64.5 144 144s-64.5 144-144 144-144-64.5-144-144 64.5-144 144-144z"
  ], [
    primaryColor,
    "M508 704c79.5 0 144-64.5 144-144s-64.5-144-144-144-144 64.5-144 144 64.5 144 144 144zm0-224c44.2 0 80 35.8 80 80s-35.8 80-80 80-80-35.8-80-80 35.8-80 80-80z"
  ], [
    primaryColor,
    "M832 256h-28.1l-35.7-120.9c-4-13.7-16.5-23.1-30.7-23.1h-451c-14.3 0-26.8 9.4-30.7 23.1L220.1 256H192c-17.7 0-32 14.3-32 32v28c0 4.4 3.6 8 8 8h45.8l47.7 558.7a32 32 0 0 0 31.9 29.3h429.2a32 32 0 0 0 31.9-29.3L802.2 324H856c4.4 0 8-3.6 8-8v-28c0-17.7-14.3-32-32-32zm-518.6-76h397.2l22.4 76H291l22.4-76zm376.2 664H326.4L282 324h451.9l-44.3 520z"
  ]);
});
var RightCircleTwoTone = dist.RightCircleTwoTone = getIcon$1("right-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm154.7 378.4l-246 178c-5.3 3.8-12.7 0-12.7-6.5V643c0-10.2 4.9-19.9 13.2-25.9L566.6 512 421.2 406.8c-8.3-6-13.2-15.6-13.2-25.9V334c0-6.5 7.4-10.3 12.7-6.5l246 178c4.4 3.2 4.4 9.7 0 12.9z"
  ], [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    primaryColor,
    "M666.7 505.5l-246-178c-5.3-3.8-12.7 0-12.7 6.5v46.9c0 10.3 4.9 19.9 13.2 25.9L566.6 512 421.2 617.1c-8.3 6-13.2 15.7-13.2 25.9v46.9c0 6.5 7.4 10.3 12.7 6.5l246-178c4.4-3.2 4.4-9.7 0-12.9z"
  ]);
});
var RocketTwoTone = dist.RocketTwoTone = getIcon$1("rocket", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M261.7 621.4c-9.4 14.6-17 30.3-22.5 46.6H324V558.7c-24.8 16.2-46 37.5-62.3 62.7zM700 558.7V668h84.8c-5.5-16.3-13.1-32-22.5-46.6a211.6 211.6 0 0 0-62.3-62.7zm-64-239.9l-124-147-124 147V668h248V318.8zM512 448a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"
  ], [
    primaryColor,
    "M864 736c0-111.6-65.4-208-160-252.9V317.3c0-15.1-5.3-29.7-15.1-41.2L536.5 95.4C530.1 87.8 521 84 512 84s-18.1 3.8-24.5 11.4L335.1 276.1a63.97 63.97 0 0 0-15.1 41.2v165.8C225.4 528 160 624.4 160 736h156.5c-2.3 7.2-3.5 15-3.5 23.8 0 22.1 7.6 43.7 21.4 60.8a97.2 97.2 0 0 0 43.1 30.6c23.1 54 75.6 88.8 134.5 88.8 29.1 0 57.3-8.6 81.4-24.8 23.6-15.8 41.9-37.9 53-64a97 97 0 0 0 43.1-30.5 97.52 97.52 0 0 0 21.4-60.8c0-8.4-1.1-16.4-3.1-23.8L864 736zm-540-68h-84.8c5.5-16.3 13.1-32 22.5-46.6 16.3-25.2 37.5-46.5 62.3-62.7V668zm64-184.9V318.8l124-147 124 147V668H388V483.1zm240.1 301.1c-5.2 3-11.2 4.2-17.1 3.4l-19.5-2.4-2.8 19.4c-5.4 37.9-38.4 66.5-76.7 66.5s-71.3-28.6-76.7-66.5l-2.8-19.5-19.5 2.5a27.7 27.7 0 0 1-17.1-3.5c-8.7-5-14.1-14.3-14.1-24.4 0-10.6 5.9-19.4 14.6-23.8h231.3c8.8 4.5 14.6 13.3 14.6 23.8-.1 10.2-5.5 19.6-14.2 24.5zM700 668V558.7a211.6 211.6 0 0 1 62.3 62.7c9.4 14.6 17 30.3 22.5 46.6H700z"
  ], [primaryColor, "M464 400a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"]);
});
var RightSquareTwoTone = dist.RightSquareTwoTone = getIcon$1("right-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm216-196.9c0-10.2 4.9-19.9 13.2-25.9L558.6 512 413.2 406.8c-8.3-6-13.2-15.6-13.2-25.9V334c0-6.5 7.4-10.3 12.7-6.5l246 178c4.4 3.2 4.4 9.7 0 12.9l-246 178c-5.3 3.9-12.7.1-12.7-6.4v-46.9z"
  ], [
    primaryColor,
    "M412.7 696.4l246-178c4.4-3.2 4.4-9.7 0-12.9l-246-178c-5.3-3.8-12.7 0-12.7 6.5v46.9c0 10.3 4.9 19.9 13.2 25.9L558.6 512 413.2 617.2c-8.3 6-13.2 15.7-13.2 25.9V690c0 6.5 7.4 10.3 12.7 6.4z"
  ]);
});
var SafetyCertificateTwoTone = dist.SafetyCertificateTwoTone = getIcon$1("safety-certificate", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6z"
  ], [
    secondaryColor,
    "M214 226.7v427.6l298 232.2 298-232.2V226.7L512 125.1 214 226.7zM632.8 328H688c6.5 0 10.3 7.4 6.5 12.7L481.9 633.4a16.1 16.1 0 0 1-26 0l-126.4-174c-3.8-5.3 0-12.7 6.5-12.7h55.2c5.2 0 10 2.5 13 6.6l64.7 89.1 150.9-207.8c3-4.1 7.9-6.6 13-6.6z"
  ], [
    primaryColor,
    "M404.2 453.3c-3-4.1-7.8-6.6-13-6.6H336c-6.5 0-10.3 7.4-6.5 12.7l126.4 174a16.1 16.1 0 0 0 26 0l212.6-292.7c3.8-5.3 0-12.7-6.5-12.7h-55.2c-5.1 0-10 2.5-13 6.6L468.9 542.4l-64.7-89.1z"
  ]);
});
var SaveTwoTone = dist.SaveTwoTone = getIcon$1("save", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M704 320c0 17.7-14.3 32-32 32H352c-17.7 0-32-14.3-32-32V184H184v656h656V341.8l-136-136V320zM512 730c-79.5 0-144-64.5-144-144s64.5-144 144-144 144 64.5 144 144-64.5 144-144 144z"
  ], [
    primaryColor,
    "M512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z"
  ], [
    primaryColor,
    "M893.3 293.3L730.7 130.7c-.7-.7-1.4-1.3-2.1-2-.1-.1-.3-.2-.4-.3-.7-.7-1.5-1.3-2.2-1.9a64 64 0 0 0-22-11.7V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840z"
  ]);
});
var ScheduleTwoTone = dist.ScheduleTwoTone = getIcon$1("schedule", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M768 352c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-56H548v56c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-56H328v56c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-56H136v496h752V296H768v56zM424 688c0 4.4-3.6 8-8 8H232c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zm0-136c0 4.4-3.6 8-8 8H232c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zm374.4-91.2l-165 228.7a15.9 15.9 0 0 1-25.8 0L493.5 531.3c-3.8-5.3 0-12.7 6.5-12.7h54.9c5.1 0 9.9 2.4 12.9 6.6l52.8 73.1 103.6-143.7c3-4.1 7.8-6.6 12.8-6.5h54.9c6.5 0 10.3 7.4 6.5 12.7z"
  ], [
    primaryColor,
    "M724.2 454.6L620.6 598.3l-52.8-73.1c-3-4.2-7.8-6.6-12.9-6.6H500c-6.5 0-10.3 7.4-6.5 12.7l114.1 158.2a15.9 15.9 0 0 0 25.8 0l165-228.7c3.8-5.3 0-12.7-6.5-12.7H737c-5-.1-9.8 2.4-12.8 6.5zM416 496H232c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"
  ], [
    primaryColor,
    "M928 224H768v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H548v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H328v-56c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v56H96c-17.7 0-32 14.3-32 32v576c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32zm-40 568H136V296h120v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h148v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56h120v496z"
  ], [
    primaryColor,
    "M416 632H232c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"
  ]);
});
var SecurityScanTwoTone = dist.SecurityScanTwoTone = getIcon$1("security-scan", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M866.9 169.9L527.1 54.1C523 52.7 517.5 52 512 52s-11 .7-15.1 2.1L157.1 169.9c-8.3 2.8-15.1 12.4-15.1 21.2v482.4c0 8.8 5.7 20.4 12.6 25.9L499.3 968c3.5 2.7 8 4.1 12.6 4.1s9.2-1.4 12.6-4.1l344.7-268.6c6.9-5.4 12.6-17 12.6-25.9V191.1c.2-8.8-6.6-18.3-14.9-21.2zM810 654.3L512 886.5 214 654.3V226.7l298-101.6 298 101.6v427.6z"
  ], [
    secondaryColor,
    "M460.7 451.1a80.1 80.1 0 1 0 160.2 0 80.1 80.1 0 1 0-160.2 0z"
  ], [
    secondaryColor,
    "M214 226.7v427.6l298 232.2 298-232.2V226.7L512 125.1 214 226.7zm428.7 122.5c56.3 56.3 56.3 147.5 0 203.8-48.5 48.5-123 55.2-178.6 20.1l-77.5 77.5a8.03 8.03 0 0 1-11.3 0l-34-34a8.03 8.03 0 0 1 0-11.3l77.5-77.5c-35.1-55.7-28.4-130.1 20.1-178.6 56.3-56.3 147.5-56.3 203.8 0z"
  ], [
    primaryColor,
    "M418.8 527.8l-77.5 77.5a8.03 8.03 0 0 0 0 11.3l34 34c3.1 3.1 8.2 3.1 11.3 0l77.5-77.5c55.6 35.1 130.1 28.4 178.6-20.1 56.3-56.3 56.3-147.5 0-203.8-56.3-56.3-147.5-56.3-203.8 0-48.5 48.5-55.2 122.9-20.1 178.6zm65.4-133.3a80.1 80.1 0 0 1 113.3 0 80.1 80.1 0 0 1 0 113.3c-31.3 31.3-82 31.3-113.3 0s-31.3-82 0-113.3z"
  ]);
});
var SettingTwoTone = dist.SettingTwoTone = getIcon$1("setting", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M859.3 569.7l.2.1c3.1-18.9 4.6-38.2 4.6-57.3 0-17.1-1.3-34.3-3.7-51.1 2.4 16.7 3.6 33.6 3.6 50.5 0 19.4-1.6 38.8-4.7 57.8zM99 398.1c-.5-.4-.9-.8-1.4-1.3.7.7 1.4 1.4 2.2 2.1l65.5 55.9v-.1L99 398.1zm536.6-216h.1l-15.5-83.8c-.2-1-.4-1.9-.7-2.8.1.5.3 1.1.4 1.6l15.7 85zm54 546.5l31.4-25.8 92.8 32.9c17-22.9 31.3-47.5 42.6-73.6l-74.7-63.9 6.6-40.1c2.5-15.1 3.8-30.6 3.8-46.1s-1.3-31-3.8-46.1l-6.5-39.9 74.7-63.9c-11.4-26-25.6-50.7-42.6-73.6l-92.8 32.9-31.4-25.8c-23.9-19.6-50.6-35-79.3-45.8l-38.1-14.3-17.9-97a377.5 377.5 0 0 0-85 0l-17.9 97.2-37.9 14.3c-28.5 10.8-55 26.2-78.7 45.7l-31.4 25.9-93.4-33.2c-17 22.9-31.3 47.5-42.6 73.6l75.5 64.5-6.5 40c-2.5 14.9-3.7 30.2-3.7 45.5 0 15.2 1.3 30.6 3.7 45.5l6.5 40-75.5 64.5c11.4 26 25.6 50.7 42.6 73.6l93.4-33.2 31.4 25.9c23.7 19.5 50.2 34.9 78.7 45.7l37.8 14.5 17.9 97.2c28.2 3.2 56.9 3.2 85 0l17.9-97 38.1-14.3c28.8-10.8 55.4-26.2 79.3-45.8zm-177.1-50.3c-30.5 0-59.2-7.8-84.3-21.5C373.3 627 336 568.9 336 502c0-97.2 78.8-176 176-176 66.9 0 125 37.3 154.8 92.2 13.7 25 21.5 53.7 21.5 84.3 0 97.1-78.7 175.8-175.8 175.8zM207.2 812.8c-5.5 1.9-11.2 2.3-16.6 1.2 5.7 1.2 11.7 1 17.5-1l81.4-29c-.1-.1-.3-.2-.4-.3l-81.9 29.1zm717.6-414.7l-65.5 56c0 .2.1.5.1.7l65.4-55.9c7.1-6.1 11.1-14.9 11.2-24-.3 8.8-4.3 17.3-11.2 23.2z"
  ], [
    secondaryColor,
    "M935.8 646.6c.5 4.7 0 9.5-1.7 14.1l-.9 2.6a446.02 446.02 0 0 1-79.7 137.9l-1.8 2.1a32 32 0 0 1-35.1 9.5l-81.3-28.9a350 350 0 0 1-99.7 57.6l-15.7 85a32.05 32.05 0 0 1-25.8 25.7l-2.7.5a445.2 445.2 0 0 1-79.2 7.1h.3c26.7 0 53.4-2.4 79.4-7.1l2.7-.5a32.05 32.05 0 0 0 25.8-25.7l15.7-84.9c36.2-13.6 69.6-32.9 99.6-57.5l81.2 28.9a32 32 0 0 0 35.1-9.5l1.8-2.1c34.8-41.1 61.5-87.4 79.6-137.7l.9-2.6c1.6-4.7 2.1-9.7 1.5-14.5z"
  ], [
    primaryColor,
    "M688 502c0-30.3-7.7-58.9-21.2-83.8C637 363.3 578.9 326 512 326c-97.2 0-176 78.8-176 176 0 66.9 37.3 125 92.2 154.8 24.9 13.5 53.4 21.2 83.8 21.2 97.2 0 176-78.8 176-176zm-288 0c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 0 1 624 502c0 29.9-11.7 58-32.8 79.2A111.6 111.6 0 0 1 512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 0 1 400 502z"
  ], [
    primaryColor,
    "M594.1 952.2a32.05 32.05 0 0 0 25.8-25.7l15.7-85a350 350 0 0 0 99.7-57.6l81.3 28.9a32 32 0 0 0 35.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c1.7-4.6 2.2-9.4 1.7-14.1-.9-7.9-4.7-15.4-11-20.9l-65.3-55.9-.2-.1c3.1-19 4.7-38.4 4.7-57.8 0-16.9-1.2-33.9-3.6-50.5-.3-2.2-.7-4.4-1-6.6 0-.2-.1-.5-.1-.7l65.5-56c6.9-5.9 10.9-14.4 11.2-23.2.1-4-.5-8.1-1.9-12l-.9-2.6a443.74 443.74 0 0 0-79.7-137.9l-1.8-2.1a32.12 32.12 0 0 0-35.1-9.5l-81.3 28.9c-30-24.6-63.4-44-99.6-57.6h-.1l-15.7-85c-.1-.5-.2-1.1-.4-1.6a32.08 32.08 0 0 0-25.4-24.1l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 0 0-25.8 25.7l-15.8 85.4a351.86 351.86 0 0 0-99 57.4l-81.9-29.1a32 32 0 0 0-35.1 9.5l-1.8 2.1a446.02 446.02 0 0 0-79.7 137.9l-.9 2.6a32.09 32.09 0 0 0 7.9 33.9c.5.4.9.9 1.4 1.3l66.3 56.6v.1c-3.1 18.8-4.6 37.9-4.6 57 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 0 0-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1c4.9 5.7 11.4 9.4 18.5 10.7 5.4 1 11.1.7 16.6-1.2l81.9-29.1c.1.1.3.2.4.3 29.7 24.3 62.8 43.6 98.6 57.1l15.8 85.4a32.05 32.05 0 0 0 25.8 25.7l2.7.5c26.1 4.7 52.8 7.1 79.5 7.1h.3c26.6 0 53.3-2.4 79.2-7.1l2.7-.5zm-39.8-66.5a377.5 377.5 0 0 1-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 0 1-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97z"
  ]);
});
var ShopTwoTone = dist.ShopTwoTone = getIcon$1("shop", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M839.5 344h-655c-.3 0-.5.2-.5.5v91.2c0 59.8 49 108.3 109.3 108.3 40.7 0 76.2-22 95.1-54.7 2.9-5.1 8.4-8.3 14.3-8.3s11.3 3.2 14.3 8.3c18.8 32.7 54.3 54.7 95 54.7 40.8 0 76.4-22.1 95.1-54.9 2.9-5 8.2-8.1 13.9-8.1h.6c5.8 0 11 3.1 13.9 8.1 18.8 32.8 54.4 54.9 95.2 54.9C791 544 840 495.5 840 435.7v-91.2c0-.3-.2-.5-.5-.5z"
  ], [
    primaryColor,
    "M882 272.1V144c0-17.7-14.3-32-32-32H174c-17.7 0-32 14.3-32 32v128.1c-16.7 1-30 14.9-30 31.9v131.7a177 177 0 0 0 14.4 70.4c4.3 10.2 9.6 19.8 15.6 28.9v345c0 17.6 14.3 32 32 32h676c17.7 0 32-14.3 32-32V535a175 175 0 0 0 15.6-28.9c9.5-22.3 14.4-46 14.4-70.4V304c0-17-13.3-30.9-30-31.9zM214 184h596v88H214v-88zm362 656.1H448V736h128v104.1zm234.4 0H640V704c0-17.7-14.3-32-32-32H416c-17.7 0-32 14.3-32 32v136.1H214V597.9c2.9 1.4 5.9 2.8 9 4 22.3 9.4 46 14.1 70.4 14.1 24.4 0 48-4.7 70.4-14.1 13.8-5.8 26.8-13.2 38.7-22.1.2-.1.4-.1.6 0a180.4 180.4 0 0 0 38.7 22.1c22.3 9.4 46 14.1 70.4 14.1s48-4.7 70.4-14.1c13.8-5.8 26.8-13.2 38.7-22.1.2-.1.4-.1.6 0a180.4 180.4 0 0 0 38.7 22.1c22.3 9.4 46 14.1 70.4 14.1s48-4.7 70.4-14.1c3-1.3 6-2.6 9-4v242.2zM840 435.7c0 59.8-49 108.3-109.3 108.3-40.8 0-76.4-22.1-95.2-54.9-2.9-5-8.1-8.1-13.9-8.1h-.6c-5.7 0-11 3.1-13.9 8.1A109.24 109.24 0 0 1 512 544c-40.7 0-76.2-22-95-54.7-3-5.1-8.4-8.3-14.3-8.3s-11.4 3.2-14.3 8.3a109.63 109.63 0 0 1-95.1 54.7C233 544 184 495.5 184 435.7v-91.2c0-.3.2-.5.5-.5h655c.3 0 .5.2.5.5v91.2z"
  ]);
});
var ShoppingTwoTone = dist.ShoppingTwoTone = getIcon$1("shopping", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M696 472c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-88H400v88c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-88h-96v456h560V384h-96v88z"
  ], [
    primaryColor,
    "M832 312H696v-16c0-101.6-82.4-184-184-184s-184 82.4-184 184v16H192c-17.7 0-32 14.3-32 32v536c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V344c0-17.7-14.3-32-32-32zm-432-16c0-61.9 50.1-112 112-112s112 50.1 112 112v16H400v-16zm392 544H232V384h96v88c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-88h224v88c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-88h96v456z"
  ]);
});
var SkinTwoTone = dist.SkinTwoTone = getIcon$1("skin", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 318c-79.2 0-148.5-48.8-176.7-120H182v196h119v432h422V394h119V198H688.7c-28.2 71.2-97.5 120-176.7 120z"
  ], [
    primaryColor,
    "M870 126H663.8c-17.4 0-32.9 11.9-37 29.3C614.3 208.1 567 246 512 246s-102.3-37.9-114.8-90.7a37.93 37.93 0 0 0-37-29.3H154a44 44 0 0 0-44 44v252a44 44 0 0 0 44 44h75v388a44 44 0 0 0 44 44h478a44 44 0 0 0 44-44V466h75a44 44 0 0 0 44-44V170a44 44 0 0 0-44-44zm-28 268H723v432H301V394H182V198h153.3c28.2 71.2 97.5 120 176.7 120s148.5-48.8 176.7-120H842v196z"
  ]);
});
var SlidersTwoTone = dist.SlidersTwoTone = getIcon$1("sliders", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M180 292h80v440h-80zm369 180h-74a3 3 0 0 0-3 3v74a3 3 0 0 0 3 3h74a3 3 0 0 0 3-3v-74a3 3 0 0 0-3-3zm215-108h80v296h-80z"
  ], [
    primaryColor,
    "M904 296h-66v-96c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v96h-66c-4.4 0-8 3.6-8 8v416c0 4.4 3.6 8 8 8h66v96c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8v-96h66c4.4 0 8-3.6 8-8V304c0-4.4-3.6-8-8-8zm-60 364h-80V364h80v296zM612 404h-66V232c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v172h-66c-4.4 0-8 3.6-8 8v200c0 4.4 3.6 8 8 8h66v172c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8V620h66c4.4 0 8-3.6 8-8V412c0-4.4-3.6-8-8-8zm-60 145a3 3 0 0 1-3 3h-74a3 3 0 0 1-3-3v-74a3 3 0 0 1 3-3h74a3 3 0 0 1 3 3v74zM320 224h-66v-56c0-4.4-3.6-8-8-8h-52c-4.4 0-8 3.6-8 8v56h-66c-4.4 0-8 3.6-8 8v560c0 4.4 3.6 8 8 8h66v56c0 4.4 3.6 8 8 8h52c4.4 0 8-3.6 8-8v-56h66c4.4 0 8-3.6 8-8V232c0-4.4-3.6-8-8-8zm-60 508h-80V292h80v440z"
  ]);
});
var SmileTwoTone = dist.SmileTwoTone = getIcon$1("smile", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zM288 421a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm224 272c-85.5 0-155.6-67.3-160-151.6a8 8 0 0 1 8-8.4h48.1c4.2 0 7.8 3.2 8.1 7.4C420 589.9 461.5 629 512 629s92.1-39.1 95.8-88.6c.3-4.2 3.9-7.4 8.1-7.4H664a8 8 0 0 1 8 8.4C667.6 625.7 597.5 693 512 693zm176-224a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z"
  ], [
    primaryColor,
    "M288 421a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm376 112h-48.1c-4.2 0-7.8 3.2-8.1 7.4-3.7 49.5-45.3 88.6-95.8 88.6s-92-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 0 0-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 0 0-8-8.4zm-24-112a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"
  ]);
});
var SnippetsTwoTone = dist.SnippetsTwoTone = getIcon$1("snippets", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M450 510V336H232v552h432V550H490c-22.1 0-40-17.9-40-40z"
  ], [
    primaryColor,
    "M832 112H724V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H500V72c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v40H320c-17.7 0-32 14.3-32 32v120h-96c-17.7 0-32 14.3-32 32v632c0 17.7 14.3 32 32 32h512c17.7 0 32-14.3 32-32v-96h96c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM664 888H232V336h218v174c0 22.1 17.9 40 40 40h174v338zm0-402H514V336h.2L664 485.8v.2zm128 274h-56V456L544 264H360v-80h68v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h152v32c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-32h68v576z"
  ]);
});
var SoundTwoTone = dist.SoundTwoTone = getIcon$1("sound", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M275.4 424H146v176h129.4l18 11.7L586 803V221L293.3 412.3z"
  ], [
    primaryColor,
    "M892.1 737.8l-110.3-63.7a15.9 15.9 0 0 0-21.7 5.9l-19.9 34.5c-4.4 7.6-1.8 17.4 5.8 21.8L856.3 800a15.9 15.9 0 0 0 21.7-5.9l19.9-34.5c4.4-7.6 1.7-17.4-5.8-21.8zM934 476H806c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16h128c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16zM760 344a15.9 15.9 0 0 0 21.7 5.9L892 286.2c7.6-4.4 10.2-14.2 5.8-21.8L878 230a15.9 15.9 0 0 0-21.7-5.9L746 287.8a15.99 15.99 0 0 0-5.8 21.8L760 344zM625.9 115c-5.9 0-11.9 1.6-17.4 5.3L254 352H90c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h164l354.5 231.7c5.5 3.6 11.6 5.3 17.4 5.3 16.7 0 32.1-13.3 32.1-32.1V147.1c0-18.8-15.4-32.1-32.1-32.1zM586 803L293.4 611.7l-18-11.7H146V424h129.4l17.9-11.7L586 221v582z"
  ]);
});
var StarTwoTone = dist.StarTwoTone = getIcon$1("star", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512.5 190.4l-94.4 191.3-211.2 30.7 152.8 149-36.1 210.3 188.9-99.3 188.9 99.2-36.1-210.3 152.8-148.9-211.2-30.7z"
  ], [
    primaryColor,
    "M908.6 352.8l-253.9-36.9L541.2 85.8c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L370.3 315.9l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 0 0 .6 45.3l183.7 179.1L239 839.4a31.95 31.95 0 0 0 46.4 33.7l227.1-119.4 227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3zM665.3 561.3l36.1 210.3-188.9-99.2-188.9 99.3 36.1-210.3-152.8-149 211.2-30.7 94.4-191.3 94.4 191.3 211.2 30.7-152.8 148.9z"
  ]);
});
var StopTwoTone = dist.StopTwoTone = getIcon$1("stop", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm288.5 682.8L277.7 224C258 240 240 258 224 277.7l522.8 522.8C682.8 852.7 601 884 512 884c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372c0 89-31.3 170.8-83.5 234.8z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372c89 0 170.8-31.3 234.8-83.5L224 277.7c16-19.7 34-37.7 53.7-53.7l522.8 522.8C852.7 682.8 884 601 884 512c0-205.4-166.6-372-372-372z"
  ]);
});
var SwitcherTwoTone = dist.SwitcherTwoTone = getIcon$1("switcher", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [secondaryColor, "M184 840h528V312H184v528zm116-290h296v64H300v-64z"], [
    primaryColor,
    "M880 112H264c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h576v576c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V144c0-17.7-14.3-32-32-32z"
  ], [
    primaryColor,
    "M752 240H144c-17.7 0-32 14.3-32 32v608c0 17.7 14.3 32 32 32h608c17.7 0 32-14.3 32-32V272c0-17.7-14.3-32-32-32zm-40 600H184V312h528v528z"
  ], [primaryColor, "M300 550h296v64H300z"]);
});
var TabletTwoTone = dist.TabletTwoTone = getIcon$1("tablet", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M800 64H224c-35.3 0-64 28.7-64 64v768c0 35.3 28.7 64 64 64h576c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zm-8 824H232V136h560v752z"
  ], [
    secondaryColor,
    "M232 888h560V136H232v752zm280-144c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40z"
  ], [primaryColor, "M472 784a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"]);
});
var TagTwoTone = dist.TagTwoTone = getIcon$1("tag", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M589 164.6L189.3 564.3l270.4 270.4L859.4 435 836 188l-247-23.4zM680 432c-48.5 0-88-39.5-88-88s39.5-88 88-88 88 39.5 88 88-39.5 88-88 88z"
  ], [
    primaryColor,
    "M680 256c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88zm0 120c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"
  ], [
    primaryColor,
    "M938 458.8l-29.6-312.6c-1.5-16.2-14.4-29-30.6-30.6L565.2 86h-.4c-3.2 0-5.7 1-7.6 2.9L88.9 557.2a9.96 9.96 0 0 0 0 14.1l363.8 363.8a9.9 9.9 0 0 0 7.1 2.9c2.7 0 5.2-1 7.1-2.9l468.3-468.3c2-2.1 3-5 2.8-8zM459.7 834.7L189.3 564.3 589 164.6 836 188l23.4 247-399.7 399.7z"
  ]);
});
var TagsTwoTone = dist.TagsTwoTone = getIcon$1("tags", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M477.5 694l311.9-311.8-19-224.6-224.6-19-311.9 311.9L477.5 694zm116-415.5a47.81 47.81 0 0 1 33.9-33.9c16.6-4.4 34.2.3 46.4 12.4a47.93 47.93 0 0 1 12.4 46.4 47.81 47.81 0 0 1-33.9 33.9c-16.6 4.4-34.2-.3-46.4-12.4a48.3 48.3 0 0 1-12.4-46.4z"
  ], [
    secondaryColor,
    "M476.6 792.6c-1.7-.2-3.4-1-4.7-2.3L137.7 456.1a8.03 8.03 0 0 1 0-11.3L515.9 66.6c1.2-1.3 2.9-2.1 4.7-2.3h-.4c-2.3-.2-4.7.6-6.3 2.3L135.7 444.8a8.03 8.03 0 0 0 0 11.3l334.2 334.2c1.8 1.9 4.3 2.6 6.7 2.3z"
  ], [
    primaryColor,
    "M889.7 539.8l-39.6-39.5a8.03 8.03 0 0 0-11.3 0l-362 361.3-237.6-237a8.03 8.03 0 0 0-11.3 0l-39.6 39.5a8.03 8.03 0 0 0 0 11.3l243.2 242.8 39.6 39.5c3.1 3.1 8.2 3.1 11.3 0l407.3-406.6c3.1-3.1 3.1-8.2 0-11.3zM652.3 337.3a47.81 47.81 0 0 0 33.9-33.9c4.4-16.6-.3-34.2-12.4-46.4a47.93 47.93 0 0 0-46.4-12.4 47.81 47.81 0 0 0-33.9 33.9c-4.4 16.6.3 34.2 12.4 46.4a48.3 48.3 0 0 0 46.4 12.4z"
  ], [
    primaryColor,
    "M137.7 444.8a8.03 8.03 0 0 0 0 11.3l334.2 334.2c1.3 1.3 2.9 2.1 4.7 2.3 2.4.3 4.8-.5 6.6-2.3L861.4 412c1.7-1.7 2.5-4 2.3-6.3l-25.5-301.4c-.7-7.8-6.8-13.9-14.6-14.6L522.2 64.3h-1.6c-1.8.2-3.4 1-4.7 2.3L137.7 444.8zm408.1-306.2l224.6 19 19 224.6L477.5 694 233.9 450.5l311.9-311.9z"
  ]);
});
var ToolTwoTone = dist.ToolTwoTone = getIcon$1("tool", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M706.8 488.7a32.05 32.05 0 0 1-45.3 0L537 364.2a32.05 32.05 0 0 1 0-45.3l132.9-132.8a184.2 184.2 0 0 0-144 53.5c-58.1 58.1-69.3 145.3-33.6 214.6L439.5 507c-.1 0-.1-.1-.1-.1L209.3 737l79.2 79.2 274-274.1.1.1 8.8-8.8c69.3 35.7 156.5 24.5 214.6-33.6 39.2-39.1 57.3-92.1 53.6-143.9L706.8 488.7z"
  ], [
    primaryColor,
    "M876.6 239.5c-.5-.9-1.2-1.8-2-2.5-5-5-13.1-5-18.1 0L684.2 409.3l-67.9-67.9L788.7 169c.8-.8 1.4-1.6 2-2.5 3.6-6.1 1.6-13.9-4.5-17.5-98.2-58-226.8-44.7-311.3 39.7-67 67-89.2 162-66.5 247.4l-293 293c-3 3-2.8 7.9.3 11l169.7 169.7c3.1 3.1 8.1 3.3 11 .3l292.9-292.9c85.5 22.8 180.5.7 247.6-66.4 84.4-84.5 97.7-213.1 39.7-311.3zM786 499.8c-58.1 58.1-145.3 69.3-214.6 33.6l-8.8 8.8-.1-.1-274 274.1-79.2-79.2 230.1-230.1s0 .1.1.1l52.8-52.8c-35.7-69.3-24.5-156.5 33.6-214.6a184.2 184.2 0 0 1 144-53.5L537 318.9a32.05 32.05 0 0 0 0 45.3l124.5 124.5a32.05 32.05 0 0 0 45.3 0l132.8-132.8c3.7 51.8-14.4 104.8-53.6 143.9z"
  ]);
});
var TrademarkCircleTwoTone = dist.TrademarkCircleTwoTone = getIcon$1("trademark-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm170.7 584.2c-1.1.5-2.3.8-3.5.8h-62c-3.1 0-5.9-1.8-7.2-4.6l-74.6-159.2h-88.7V717c0 4.4-3.6 8-8 8H384c-4.4 0-8-3.6-8-8V307c0-4.4 3.6-8 8-8h155.6c98.8 0 144.2 59.9 144.2 131.1 0 70.2-43.6 106.4-78.4 119.2l80.8 164.2c2.1 3.9.4 8.7-3.5 10.7z"
  ], [
    secondaryColor,
    "M529.9 357h-83.4v148H528c53 0 82.8-25.6 82.8-72.4 0-50.3-32.9-75.6-80.9-75.6z"
  ], [
    primaryColor,
    "M605.4 549.3c34.8-12.8 78.4-49 78.4-119.2 0-71.2-45.4-131.1-144.2-131.1H384c-4.4 0-8 3.6-8 8v410c0 4.4 3.6 8 8 8h54.7c4.4 0 8-3.6 8-8V561.2h88.7L610 720.4c1.3 2.8 4.1 4.6 7.2 4.6h62c1.2 0 2.4-.3 3.5-.8 3.9-2 5.6-6.8 3.5-10.7l-80.8-164.2zM528 505h-81.5V357h83.4c48 0 80.9 25.3 80.9 75.6 0 46.8-29.8 72.4-82.8 72.4z"
  ]);
});
var UnlockTwoTone = dist.UnlockTwoTone = getIcon$1("unlock", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M232 840h560V536H232v304zm280-226a48.01 48.01 0 0 1 28 87v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 0 1 28-87z"
  ], [
    primaryColor,
    "M484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 1 0-56 0z"
  ], [
    primaryColor,
    "M832 464H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v68c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-68c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zm-40 376H232V536h560v304z"
  ]);
});
var TrophyTwoTone = dist.TrophyTwoTone = getIcon$1("trophy", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M320 480c0 49.1 19.1 95.3 53.9 130.1 34.7 34.8 81 53.9 130.1 53.9h16c49.1 0 95.3-19.1 130.1-53.9 34.8-34.7 53.9-81 53.9-130.1V184H320v296zM184 352c0 41 26.9 75.8 64 87.6-37.1-11.9-64-46.7-64-87.6zm364 382.5C665 721.8 758.4 630.2 773.8 514 758.3 630.2 665 721.7 548 734.5zM250.2 514C265.6 630.2 359 721.8 476 734.5 359 721.7 265.7 630.2 250.2 514z"
  ], [
    primaryColor,
    "M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 0 0-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 0 0-44-44zM248 439.6a91.99 91.99 0 0 1-64-87.6V232h64v207.6zM704 480c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z"
  ]);
});
var UpCircleTwoTone = dist.UpCircleTwoTone = getIcon$1("up-circle", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm178 479h-46.9c-10.2 0-19.9-4.9-25.9-13.2L512 460.4 406.8 605.8c-6 8.3-15.6 13.2-25.9 13.2H334c-6.5 0-10.3-7.4-6.5-12.7l178-246c3.2-4.4 9.7-4.4 12.9 0l178 246c3.9 5.3.1 12.7-6.4 12.7z"
  ], [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    primaryColor,
    "M518.4 360.3a7.95 7.95 0 0 0-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7h46.9c10.3 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.7 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.4-12.7l-178-246z"
  ]);
});
var ThunderboltTwoTone = dist.ThunderboltTwoTone = getIcon$1("thunderbolt", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M695.4 164.1H470.8L281.2 491.5h157.4l-60.3 241 319.8-305.1h-211z"
  ], [
    primaryColor,
    "M848.1 359.3H627.8L825.9 109c4.1-5.3.4-13-6.3-13H436.1c-2.8 0-5.5 1.5-6.9 4L170.1 547.5c-3.1 5.3.7 12 6.9 12h174.4L262 917.1c-1.9 7.8 7.5 13.3 13.3 7.7L853.6 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.3 732.5l60.3-241H281.2l189.6-327.4h224.6L487.1 427.4h211L378.3 732.5z"
  ]);
});
var UpSquareTwoTone = dist.UpSquareTwoTone = getIcon$1("up-square", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z"
  ], [
    secondaryColor,
    "M184 840h656V184H184v656zm143.5-228.7l178-246c3.2-4.4 9.7-4.4 12.9 0l178 246c3.9 5.3.1 12.7-6.4 12.7h-46.9c-10.2 0-19.9-4.9-25.9-13.2L512 465.4 406.8 610.8c-6 8.3-15.6 13.2-25.9 13.2H334c-6.5 0-10.3-7.4-6.5-12.7z"
  ], [
    primaryColor,
    "M334 624h46.9c10.3 0 19.9-4.9 25.9-13.2L512 465.4l105.2 145.4c6 8.3 15.7 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.4-12.7l-178-246a7.95 7.95 0 0 0-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7z"
  ]);
});
var UsbTwoTone = dist.UsbTwoTone = getIcon$1("usb", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M759.9 504H264.1c-26.5 0-48.1 19.7-48.1 44v292h592V548c0-24.3-21.6-44-48.1-44z"
  ], [
    primaryColor,
    "M456 248h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm160 0h-48c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"
  ], [
    primaryColor,
    "M760 432V144c0-17.7-14.3-32-32-32H296c-17.7 0-32 14.3-32 32v288c-66.2 0-120 52.1-120 116v356c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8V548c0-63.9-53.8-116-120-116zM336 184h352v248H336V184zm472 656H216V548c0-24.3 21.6-44 48.1-44h495.8c26.5 0 48.1 19.7 48.1 44v292z"
  ]);
});
var VideoCameraTwoTone = dist.VideoCameraTwoTone = getIcon$1("video-camera", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M136 792h576V232H136v560zm64-488c0-4.4 3.6-8 8-8h112c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H208c-4.4 0-8-3.6-8-8v-48z"
  ], [
    primaryColor,
    "M912 302.3L784 376V224c0-35.3-28.7-64-64-64H128c-35.3 0-64 28.7-64 64v576c0 35.3 28.7 64 64 64h592c35.3 0 64-28.7 64-64V648l128 73.7c21.3 12.3 48-3.1 48-27.6V330c0-24.6-26.7-40-48-27.7zM712 792H136V232h576v560zm176-167l-104-59.8V458.9L888 399v226z"
  ], [
    primaryColor,
    "M208 360h112c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H208c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z"
  ]);
});
var WalletTwoTone = dist.WalletTwoTone = getIcon$1("wallet", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 464H528V448h312v128zm0-192H496c-17.7 0-32 14.3-32 32v192c0 17.7 14.3 32 32 32h344v200H184V184h656v200z"
  ], [
    secondaryColor,
    "M528 576h312V448H528v128zm92-104c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40z"
  ], [primaryColor, "M580 512a40 40 0 1 0 80 0 40 40 0 1 0-80 0z"], [
    secondaryColor,
    "M184 840h656V640H496c-17.7 0-32-14.3-32-32V416c0-17.7 14.3-32 32-32h344V184H184v656z"
  ]);
});
var WarningTwoTone = dist.WarningTwoTone = getIcon$1("warning", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z"
  ], [
    secondaryColor,
    "M172.2 828.1h679.6L512 239.9 172.2 828.1zM560 720a48.01 48.01 0 0 1-96 0 48.01 48.01 0 0 1 96 0zm-16-304v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8z"
  ], [
    primaryColor,
    "M464 720a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"
  ]);
});
var CiTwoTone = dist.CiTwoTone = getIcon$1("ci", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm-63.5 522.8c49.3 0 82.8-29.4 87-72.4.4-4.1 3.8-7.3 8-7.3h52.7c2.4 0 4.4 2 4.4 4.4 0 77.4-64.3 132.5-152.3 132.5C345.4 720 286 651.4 286 537.4v-49C286 373.5 345.4 304 448.3 304c88.3 0 152.3 56.9 152.3 138.1 0 2.4-2 4.4-4.4 4.4h-52.6c-4.2 0-7.6-3.2-8-7.4-3.9-46.1-37.5-77.6-87-77.6-61.1 0-95.6 45.4-95.7 126.8v49.3c0 80.3 34.5 125.2 95.6 125.2zM738 704.1c0 4.4-3.6 8-8 8h-50.4c-4.4 0-8-3.6-8-8V319.9c0-4.4 3.6-8 8-8H730c4.4 0 8 3.6 8 8v384.2z"
  ], [
    primaryColor,
    "M730 311.9h-50.4c-4.4 0-8 3.6-8 8v384.2c0 4.4 3.6 8 8 8H730c4.4 0 8-3.6 8-8V319.9c0-4.4-3.6-8-8-8zm-281.4 49.6c49.5 0 83.1 31.5 87 77.6.4 4.2 3.8 7.4 8 7.4h52.6c2.4 0 4.4-2 4.4-4.4 0-81.2-64-138.1-152.3-138.1C345.4 304 286 373.5 286 488.4v49c0 114 59.4 182.6 162.3 182.6 88 0 152.3-55.1 152.3-132.5 0-2.4-2-4.4-4.4-4.4h-52.7c-4.2 0-7.6 3.2-8 7.3-4.2 43-37.7 72.4-87 72.4-61.1 0-95.6-44.9-95.6-125.2v-49.3c.1-81.4 34.6-126.8 95.7-126.8z"
  ]);
});
var CopyrightTwoTone = dist.CopyrightTwoTone = getIcon$1("copyright", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm5.5 533c52.9 0 88.8-31.7 93-77.8.4-4.1 3.8-7.3 8-7.3h56.8c2.6 0 4.7 2.1 4.7 4.7 0 82.6-68.7 141.4-162.7 141.4C407.4 734 344 660.8 344 539.1v-52.3C344 364.2 407.4 290 517.3 290c94.3 0 162.7 60.7 162.7 147.4 0 2.6-2.1 4.7-4.7 4.7h-56.7c-4.2 0-7.7-3.2-8-7.4-4-49.6-40-83.4-93-83.4-65.2 0-102.1 48.5-102.2 135.5v52.6c0 85.7 36.8 133.6 102.1 133.6z"
  ], [
    primaryColor,
    "M517.6 351.3c53 0 89 33.8 93 83.4.3 4.2 3.8 7.4 8 7.4h56.7c2.6 0 4.7-2.1 4.7-4.7 0-86.7-68.4-147.4-162.7-147.4C407.4 290 344 364.2 344 486.8v52.3C344 660.8 407.4 734 517.3 734c94 0 162.7-58.8 162.7-141.4 0-2.6-2.1-4.7-4.7-4.7h-56.8c-4.2 0-7.6 3.2-8 7.3-4.2 46.1-40.1 77.8-93 77.8-65.3 0-102.1-47.9-102.1-133.6v-52.6c.1-87 37-135.5 102.2-135.5z"
  ]);
});
var DollarTwoTone = dist.DollarTwoTone = getIcon$1("dollar", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M426.6 410.3c0 25.4 15.7 45.1 49.5 57.3 4.7 1.9 9.4 3.4 15 5v-124c-37 4.7-64.5 25.4-64.5 61.7zm116.5 135.2c-2.9-.6-5.7-1.3-8.8-2.2V677c42.6-3.8 72-27.3 72-66.4 0-30.7-15.9-50.7-63.2-65.1z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm22.4 589.2l.2 31.7c0 4.5-3.6 8.1-8 8.1h-28.4c-4.4 0-8-3.6-8-8v-31.4c-89-6.5-130.7-57.1-135.2-112.1-.4-4.7 3.3-8.7 8-8.7h46.2c3.9 0 7.3 2.8 7.9 6.6 5.1 31.8 29.9 55.4 74.1 61.3V534l-24.7-6.3c-52.3-12.5-102.1-45.1-102.1-112.7 0-73 55.4-112.1 126.2-119v-33c0-4.4 3.6-8 8-8h28.1c4.4 0 8 3.6 8 8v32.7c68.5 6.9 119.8 46.9 125.9 109.2a8.1 8.1 0 0 1-8 8.8h-44.9c-4 0-7.4-2.9-7.9-6.9-4-29.2-27.5-53-65.5-58.2v134.3l25.4 5.9c64.8 16 108.9 47 109 116.4 0 75.2-56 117.1-134.3 124z"
  ], [
    primaryColor,
    "M559.7 488.8l-25.4-5.9V348.6c38 5.2 61.5 29 65.5 58.2.5 4 3.9 6.9 7.9 6.9h44.9c4.7 0 8.4-4.1 8-8.8-6.1-62.3-57.4-102.3-125.9-109.2V263c0-4.4-3.6-8-8-8h-28.1c-4.4 0-8 3.6-8 8v33c-70.8 6.9-126.2 46-126.2 119 0 67.6 49.8 100.2 102.1 112.7l24.7 6.3v142.7c-44.2-5.9-69-29.5-74.1-61.3-.6-3.8-4-6.6-7.9-6.6H363c-4.7 0-8.4 4-8 8.7 4.5 55 46.2 105.6 135.2 112.1V761c0 4.4 3.6 8 8 8h28.4c4.4 0 8-3.6 8-8.1l-.2-31.7c78.3-6.9 134.3-48.8 134.3-124-.1-69.4-44.2-100.4-109-116.4zm-68.6-16.2c-5.6-1.6-10.3-3.1-15-5-33.8-12.2-49.5-31.9-49.5-57.3 0-36.3 27.5-57 64.5-61.7v124zM534.3 677V543.3c3.1.9 5.9 1.6 8.8 2.2 47.3 14.4 63.2 34.4 63.2 65.1 0 39.1-29.4 62.6-72 66.4z"
  ]);
});
var EuroTwoTone = dist.EuroTwoTone = getIcon$1("euro", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
  ], [
    secondaryColor,
    "M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm117.1 581.1c0 3.8-2.7 7-6.4 7.8-15.9 3.4-34.4 5.1-55.3 5.1-109.8 0-183-58.8-200.2-158H337c-4.4 0-8-3.6-8-8v-27.2c0-4.4 3.6-8 8-8h26.1v-36.9c0-4.4 0-8.7.3-12.8H337c-4.4 0-8-3.6-8-8v-27.2c0-4.4 3.6-8 8-8h31.8C388.5 345.7 460.7 290 567.4 290c20.9 0 39.4 1.9 55.3 5.4 3.7.8 6.3 4 6.3 7.8V346a8 8 0 0 1-9.6 7.8c-14.6-2.9-31.8-4.4-51.7-4.4-65.3 0-110.4 33.5-127.6 90.4h128.3c4.4 0 8 3.6 8 8V475c0 4.4-3.6 8-8 8H432.5c-.3 4.4-.3 9.1-.3 13.8v36h136.4c4.4 0 8 3.6 8 8V568c0 4.4-3.6 8-8 8H438c15.3 62 61.3 98.6 129.8 98.6 19.9 0 37.1-1.3 51.8-4.1 4.9-1 9.5 2.8 9.5 7.8v42.8z"
  ], [
    primaryColor,
    "M619.6 670.5c-14.7 2.8-31.9 4.1-51.8 4.1-68.5 0-114.5-36.6-129.8-98.6h130.6c4.4 0 8-3.6 8-8v-27.2c0-4.4-3.6-8-8-8H432.2v-36c0-4.7 0-9.4.3-13.8h135.9c4.4 0 8-3.6 8-8v-27.2c0-4.4-3.6-8-8-8H440.1c17.2-56.9 62.3-90.4 127.6-90.4 19.9 0 37.1 1.5 51.7 4.4a8 8 0 0 0 9.6-7.8v-42.8c0-3.8-2.6-7-6.3-7.8-15.9-3.5-34.4-5.4-55.3-5.4-106.7 0-178.9 55.7-198.6 149.9H337c-4.4 0-8 3.6-8 8v27.2c0 4.4 3.6 8 8 8h26.4c-.3 4.1-.3 8.4-.3 12.8v36.9H337c-4.4 0-8 3.6-8 8V568c0 4.4 3.6 8 8 8h30.2c17.2 99.2 90.4 158 200.2 158 20.9 0 39.4-1.7 55.3-5.1 3.7-.8 6.4-4 6.4-7.8v-42.8c0-5-4.6-8.8-9.5-7.8z"
  ]);
});
var GoldTwoTone = dist.GoldTwoTone = getIcon$1("gold", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    primaryColor,
    "M435.7 558.7c-.6-3.9-4-6.7-7.9-6.7H166.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8h342c.4 0 .9 0 1.3-.1 4.4-.7 7.3-4.8 6.6-9.2l-40.2-248zM196.5 748l20.7-128h159.5l20.7 128H196.5zm709.4 58.7l-40.2-248c-.6-3.9-4-6.7-7.9-6.7H596.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8h342c.4 0 .9 0 1.3-.1 4.3-.7 7.3-4.8 6.6-9.2zM626.5 748l20.7-128h159.5l20.7 128H626.5zM342 472h342c.4 0 .9 0 1.3-.1 4.4-.7 7.3-4.8 6.6-9.2l-40.2-248c-.6-3.9-4-6.7-7.9-6.7H382.2c-3.9 0-7.3 2.8-7.9 6.7l-40.2 248c-.1.4-.1.9-.1 1.3 0 4.4 3.6 8 8 8zm91.2-196h159.5l20.7 128h-201l20.8-128z"
  ], [
    secondaryColor,
    "M592.7 276H433.2l-20.8 128h201zM217.2 620l-20.7 128h200.9l-20.7-128zm430 0l-20.7 128h200.9l-20.7-128z"
  ]);
});
var CanlendarTwoTone = dist.CanlendarTwoTone = getIcon$1("canlendar", twotone, function(primaryColor, secondaryColor) {
  return getNode(newViewBox, [
    secondaryColor,
    "M712 304c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H384v48c0 4.4-3.6 8-8 8h-56c-4.4 0-8-3.6-8-8v-48H184v136h656V256H712v48z"
  ], [
    primaryColor,
    "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zm0-448H184V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136z"
  ]);
});
var allIcons = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  AccountBookFill,
  AlertFill,
  AlipaySquareFill,
  AliwangwangFill,
  AlipayCircleFill,
  AmazonCircleFill,
  AndroidFill,
  AmazonSquareFill,
  ApiFill,
  AppstoreFill,
  AudioFill,
  AppleFill,
  BackwardFill,
  BankFill,
  BehanceCircleFill,
  BellFill,
  BehanceSquareFill,
  BookFill,
  BoxPlotFill,
  BugFill,
  CalculatorFill,
  BulbFill,
  BuildFill,
  CalendarFill,
  CameraFill,
  CarFill,
  CaretDownFill,
  CaretLeftFill,
  CaretRightFill,
  CarryOutFill,
  CaretUpFill,
  CheckCircleFill,
  CheckSquareFill,
  ChromeFill,
  CiCircleFill,
  ClockCircleFill,
  CloseCircleFill,
  CloudFill,
  CloseSquareFill,
  CodeSandboxSquareFill,
  CodeSandboxCircleFill,
  CodeFill,
  CompassFill,
  CodepenCircleFill,
  CodepenSquareFill,
  ContactsFill,
  ControlFill,
  ContainerFill,
  CopyFill,
  CopyrightCircleFill,
  CreditCardFill,
  CrownFill,
  CustomerServiceFill,
  DashboardFill,
  DeleteFill,
  DiffFill,
  DingtalkCircleFill,
  DatabaseFill,
  DingtalkSquareFill,
  DislikeFill,
  DollarCircleFill,
  DownCircleFill,
  DownSquareFill,
  DribbbleCircleFill,
  DribbbleSquareFill,
  DropboxCircleFill,
  DropboxSquareFill,
  EnvironmentFill,
  EditFill,
  ExclamationCircleFill,
  EuroCircleFill,
  ExperimentFill,
  EyeInvisibleFill,
  EyeFill,
  FacebookFill,
  FastBackwardFill,
  FastForwardFill,
  FileAddFill,
  FileExcelFill,
  FileExclamationFill,
  FileImageFill,
  FileMarkdownFill,
  FilePdfFill,
  FilePptFill,
  FileTextFill,
  FileWordFill,
  FileUnknownFill,
  FileZipFill,
  FileFill,
  FilterFill,
  FireFill,
  FlagFill,
  FolderAddFill,
  FolderFill,
  FolderOpenFill,
  ForwardFill,
  FrownFill,
  FundFill,
  FunnelPlotFill,
  GiftFill,
  GithubFill,
  GitlabFill,
  GoldenFill,
  GoogleCircleFill,
  GooglePlusCircleFill,
  GooglePlusSquareFill,
  GoogleSquareFill,
  HddFill,
  HeartFill,
  HighlightFill,
  HomeFill,
  HourglassFill,
  Html5Fill,
  IdcardFill,
  IeCircleFill,
  IeSquareFill,
  InfoCircleFill,
  InstagramFill,
  InsuranceFill,
  InteractionFill,
  InterationFill,
  LayoutFill,
  LeftCircleFill,
  LeftSquareFill,
  LikeFill,
  LockFill,
  LinkedinFill,
  MailFill,
  MedicineBoxFill,
  MediumCircleFill,
  MediumSquareFill,
  MehFill,
  MessageFill,
  MinusCircleFill,
  MinusSquareFill,
  MobileFill,
  MoneyCollectFill,
  PauseCircleFill,
  PayCircleFill,
  NotificationFill,
  PhoneFill,
  PictureFill,
  PieChartFill,
  PlayCircleFill,
  PlaySquareFill,
  PlusCircleFill,
  PlusSquareFill,
  PoundCircleFill,
  PrinterFill,
  ProfileFill,
  ProjectFill,
  PushpinFill,
  PropertySafetyFill,
  QqCircleFill,
  QqSquareFill,
  QuestionCircleFill,
  ReadFill,
  ReconciliationFill,
  RedEnvelopeFill,
  RedditCircleFill,
  RedditSquareFill,
  RestFill,
  RightCircleFill,
  RocketFill,
  RightSquareFill,
  SafetyCertificateFill,
  SaveFill,
  ScheduleFill,
  SecurityScanFill,
  SettingFill,
  ShopFill,
  ShoppingFill,
  SketchCircleFill,
  SketchSquareFill,
  SkinFill,
  SlackCircleFill,
  SlackSquareFill,
  SkypeFill,
  SlidersFill,
  SmileFill,
  SnippetsFill,
  SoundFill,
  StarFill,
  StepBackwardFill,
  StepForwardFill,
  StopFill,
  SwitcherFill,
  TabletFill,
  TagFill,
  TagsFill,
  TaobaoCircleFill,
  TaobaoSquareFill,
  ToolFill,
  ThunderboltFill,
  TrademarkCircleFill,
  TwitterCircleFill,
  TrophyFill,
  TwitterSquareFill,
  UnlockFill,
  UpCircleFill,
  UpSquareFill,
  UsbFill,
  WalletFill,
  VideoCameraFill,
  WarningFill,
  WeiboCircleFill,
  WechatFill,
  WindowsFill,
  YahooFill,
  WeiboSquareFill,
  YuqueFill,
  YoutubeFill,
  ZhihuSquareFill,
  ZhihuCircleFill,
  AccountBookOutline,
  AlertOutline,
  AlipayCircleOutline,
  AliwangwangOutline,
  AndroidOutline,
  ApiOutline,
  AppstoreOutline,
  AudioOutline,
  AppleOutline,
  BackwardOutline,
  BankOutline,
  BellOutline,
  BehanceSquareOutline,
  BookOutline,
  BoxPlotOutline,
  BulbOutline,
  BugOutline,
  CalculatorOutline,
  BuildOutline,
  CalendarOutline,
  CameraOutline,
  CarOutline,
  CaretDownOutline,
  CaretLeftOutline,
  CaretRightOutline,
  CarryOutOutline,
  CheckCircleOutline,
  CaretUpOutline,
  CheckSquareOutline,
  ChromeOutline,
  ClockCircleOutline,
  CloseCircleOutline,
  CloudOutline,
  CloseSquareOutline,
  CodeOutline,
  CodepenCircleOutline,
  CompassOutline,
  ContactsOutline,
  ContainerOutline,
  ControlOutline,
  CopyOutline,
  CreditCardOutline,
  CrownOutline,
  CustomerServiceOutline,
  DashboardOutline,
  DeleteOutline,
  DiffOutline,
  DatabaseOutline,
  DislikeOutline,
  DownCircleOutline,
  DownSquareOutline,
  DribbbleSquareOutline,
  EnvironmentOutline,
  EditOutline,
  ExclamationCircleOutline,
  ExperimentOutline,
  EyeInvisibleOutline,
  EyeOutline,
  FacebookOutline,
  FastBackwardOutline,
  FastForwardOutline,
  FileAddOutline,
  FileExcelOutline,
  FileExclamationOutline,
  FileImageOutline,
  FileMarkdownOutline,
  FilePptOutline,
  FileTextOutline,
  FilePdfOutline,
  FileZipOutline,
  FileOutline,
  FilterOutline,
  FileWordOutline,
  FireOutline,
  FileUnknownOutline,
  FlagOutline,
  FolderAddOutline,
  FolderOutline,
  FolderOpenOutline,
  ForwardOutline,
  FrownOutline,
  FundOutline,
  FunnelPlotOutline,
  GiftOutline,
  GithubOutline,
  GitlabOutline,
  HeartOutline,
  HddOutline,
  HighlightOutline,
  HomeOutline,
  HourglassOutline,
  Html5Outline,
  IdcardOutline,
  InfoCircleOutline,
  InstagramOutline,
  InsuranceOutline,
  InteractionOutline,
  InterationOutline,
  LayoutOutline,
  LeftCircleOutline,
  LeftSquareOutline,
  LikeOutline,
  LinkedinOutline,
  LockOutline,
  MedicineBoxOutline,
  MehOutline,
  MailOutline,
  MessageOutline,
  MinusCircleOutline,
  MinusSquareOutline,
  MobileOutline,
  MoneyCollectOutline,
  PauseCircleOutline,
  PayCircleOutline,
  NotificationOutline,
  PhoneOutline,
  PictureOutline,
  PieChartOutline,
  PlaySquareOutline,
  PlayCircleOutline,
  PlusCircleOutline,
  PrinterOutline,
  PlusSquareOutline,
  ProfileOutline,
  ProjectOutline,
  PushpinOutline,
  PropertySafetyOutline,
  QuestionCircleOutline,
  ReadOutline,
  ReconciliationOutline,
  RedEnvelopeOutline,
  RestOutline,
  RightCircleOutline,
  RocketOutline,
  RightSquareOutline,
  SafetyCertificateOutline,
  ScheduleOutline,
  SaveOutline,
  SecurityScanOutline,
  SettingOutline,
  ShoppingOutline,
  SkinOutline,
  SkypeOutline,
  SlackSquareOutline,
  SlidersOutline,
  SmileOutline,
  SnippetsOutline,
  SoundOutline,
  StarOutline,
  StepBackwardOutline,
  StepForwardOutline,
  StopOutline,
  SwitcherOutline,
  TagOutline,
  TabletOutline,
  ShopOutline,
  TagsOutline,
  TaobaoCircleOutline,
  ToolOutline,
  ThunderboltOutline,
  TrophyOutline,
  UnlockOutline,
  UpCircleOutline,
  UpSquareOutline,
  UsbOutline,
  VideoCameraOutline,
  WalletOutline,
  WarningOutline,
  WechatOutline,
  WeiboCircleOutline,
  WindowsOutline,
  YahooOutline,
  WeiboSquareOutline,
  YuqueOutline,
  YoutubeOutline,
  AlibabaOutline,
  AlignCenterOutline,
  AlignLeftOutline,
  AlignRightOutline,
  AlipayOutline,
  AliyunOutline,
  AmazonOutline,
  AntCloudOutline,
  ApartmentOutline,
  AntDesignOutline,
  AreaChartOutline,
  ArrowLeftOutline,
  ArrowDownOutline,
  ArrowUpOutline,
  ArrowsAltOutline,
  ArrowRightOutline,
  AuditOutline,
  BarChartOutline,
  BarcodeOutline,
  BarsOutline,
  BgColorsOutline,
  BehanceOutline,
  BlockOutline,
  BoldOutline,
  BorderBottomOutline,
  BorderLeftOutline,
  BorderOuterOutline,
  BorderInnerOutline,
  BorderRightOutline,
  BorderHorizontalOutline,
  BorderTopOutline,
  BorderVerticleOutline,
  BorderOutline,
  BranchesOutline,
  CheckOutline,
  CiOutline,
  CloseOutline,
  CloudDownloadOutline,
  CloudServerOutline,
  CloudSyncOutline,
  CloudUploadOutline,
  ClusterOutline,
  CodepenOutline,
  CodeSandboxOutline,
  ColumHeightOutline,
  ColumnWidthOutline,
  ColumnHeightOutline,
  CoffeeOutline,
  CopyrightOutline,
  DashOutline,
  DeploymentUnitOutline,
  DesktopOutline,
  DingdingOutline,
  DisconnectOutline,
  DollarOutline,
  DoubleRightOutline,
  DotChartOutline,
  DoubleLeftOutline,
  DownloadOutline,
  DribbbleOutline,
  DropboxOutline,
  EllipsisOutline,
  EnterOutline,
  EuroOutline,
  ExceptionOutline,
  ExclamationOutline,
  ExportOutline,
  FallOutline,
  FileDoneOutline,
  FileSyncOutline,
  FileProtectOutline,
  FileSearchOutline,
  FileJpgOutline,
  FontColorsOutline,
  FontSizeOutline,
  ForkOutline,
  FormOutline,
  FullscreenExitOutline,
  FullscreenOutline,
  GatewayOutline,
  DownOutline,
  DragOutline,
  GlobalOutline,
  GooglePlusOutline,
  GoogleOutline,
  HeatMapOutline,
  GoldOutline,
  HistoryOutline,
  IeOutline,
  InboxOutline,
  ImportOutline,
  InfoOutline,
  ItalicOutline,
  IssuesCloseOutline,
  KeyOutline,
  LaptopOutline,
  LeftOutline,
  LinkOutline,
  LineChartOutline,
  LineHeightOutline,
  LineOutline,
  Loading3QuartersOutline,
  LoadingOutline,
  LoginOutline,
  LogoutOutline,
  ManOutline,
  MediumOutline,
  MediumWorkmarkOutline,
  MenuUnfoldOutline,
  MenuFoldOutline,
  MenuOutline,
  MinusOutline,
  MonitorOutline,
  MoreOutline,
  OrderedListOutline,
  NumberOutline,
  PauseOutline,
  PercentageOutline,
  PaperClipOutline,
  PicCenterOutline,
  PicLeftOutline,
  PlusOutline,
  PicRightOutline,
  PoundOutline,
  PoweroffOutline,
  PullRequestOutline,
  QqOutline,
  QuestionOutline,
  RadarChartOutline,
  QrcodeOutline,
  RadiusBottomleftOutline,
  RadiusBottomrightOutline,
  RadiusUpleftOutline,
  RadiusUprightOutline,
  RadiusSettingOutline,
  RedditOutline,
  RedoOutline,
  ReloadOutline,
  RetweetOutline,
  RightOutline,
  RiseOutline,
  RollbackOutline,
  SafetyOutline,
  RobotOutline,
  SearchOutline,
  ScanOutline,
  ScissorOutline,
  SelectOutline,
  ShakeOutline,
  ShareAltOutline,
  ShoppingCartOutline,
  ShrinkOutline,
  SlackOutline,
  SmallDashOutline,
  SolutionOutline,
  SketchOutline,
  SortDescendingOutline,
  SortAscendingOutline,
  StockOutline,
  SwapLeftOutline,
  SwapRightOutline,
  StrikethroughOutline,
  SwapOutline,
  SyncOutline,
  TableOutline,
  TeamOutline,
  TaobaoOutline,
  ToTopOutline,
  TrademarkOutline,
  TransactionOutline,
  TwitterOutline,
  UnderlineOutline,
  UndoOutline,
  UnorderedListOutline,
  UpOutline,
  UploadOutline,
  UserAddOutline,
  UsergroupAddOutline,
  UserOutline,
  UserDeleteOutline,
  UsergroupDeleteOutline,
  VerticalAlignBottomOutline,
  VerticalAlignMiddleOutline,
  VerticalAlignTopOutline,
  VerticalRightOutline,
  VerticalLeftOutline,
  WifiOutline,
  ZhihuOutline,
  WeiboOutline,
  WomanOutline,
  ZoomInOutline,
  AccountBookTwoTone,
  ZoomOutOutline,
  AlertTwoTone,
  ApiTwoTone,
  AppstoreTwoTone,
  BankTwoTone,
  AudioTwoTone,
  BellTwoTone,
  BookTwoTone,
  BoxPlotTwoTone,
  BugTwoTone,
  BulbTwoTone,
  CalculatorTwoTone,
  BuildTwoTone,
  CalendarTwoTone,
  CameraTwoTone,
  CarTwoTone,
  CarryOutTwoTone,
  CheckCircleTwoTone,
  CheckSquareTwoTone,
  ClockCircleTwoTone,
  CloseCircleTwoTone,
  CloudTwoTone,
  CloseSquareTwoTone,
  CodeTwoTone,
  CompassTwoTone,
  ContactsTwoTone,
  ContainerTwoTone,
  ControlTwoTone,
  CopyTwoTone,
  CreditCardTwoTone,
  CrownTwoTone,
  CustomerServiceTwoTone,
  DashboardTwoTone,
  DeleteTwoTone,
  DiffTwoTone,
  DatabaseTwoTone,
  DislikeTwoTone,
  DownCircleTwoTone,
  DownSquareTwoTone,
  EnvironmentTwoTone,
  EditTwoTone,
  ExclamationCircleTwoTone,
  ExperimentTwoTone,
  EyeInvisibleTwoTone,
  EyeTwoTone,
  FileAddTwoTone,
  FileExclamationTwoTone,
  FileImageTwoTone,
  FileExcelTwoTone,
  FileMarkdownTwoTone,
  FilePdfTwoTone,
  FilePptTwoTone,
  FileTextTwoTone,
  FileUnknownTwoTone,
  FileZipTwoTone,
  FileWordTwoTone,
  FileTwoTone,
  FilterTwoTone,
  FireTwoTone,
  FolderAddTwoTone,
  FlagTwoTone,
  FolderTwoTone,
  FolderOpenTwoTone,
  FrownTwoTone,
  FundTwoTone,
  FunnelPlotTwoTone,
  GiftTwoTone,
  HddTwoTone,
  HeartTwoTone,
  HighlightTwoTone,
  HomeTwoTone,
  HourglassTwoTone,
  Html5TwoTone,
  IdcardTwoTone,
  InfoCircleTwoTone,
  InsuranceTwoTone,
  InteractionTwoTone,
  InterationTwoTone,
  LayoutTwoTone,
  LeftCircleTwoTone,
  LeftSquareTwoTone,
  LikeTwoTone,
  LockTwoTone,
  MailTwoTone,
  MedicineBoxTwoTone,
  MehTwoTone,
  MessageTwoTone,
  MinusCircleTwoTone,
  MinusSquareTwoTone,
  MobileTwoTone,
  PauseCircleTwoTone,
  MoneyCollectTwoTone,
  NotificationTwoTone,
  PhoneTwoTone,
  PictureTwoTone,
  PlayCircleTwoTone,
  PlaySquareTwoTone,
  PieChartTwoTone,
  PlusCircleTwoTone,
  PlusSquareTwoTone,
  PoundCircleTwoTone,
  PrinterTwoTone,
  ProfileTwoTone,
  ProjectTwoTone,
  PushpinTwoTone,
  PropertySafetyTwoTone,
  QuestionCircleTwoTone,
  ReconciliationTwoTone,
  RedEnvelopeTwoTone,
  RestTwoTone,
  RightCircleTwoTone,
  RocketTwoTone,
  RightSquareTwoTone,
  SafetyCertificateTwoTone,
  SaveTwoTone,
  ScheduleTwoTone,
  SecurityScanTwoTone,
  SettingTwoTone,
  ShopTwoTone,
  ShoppingTwoTone,
  SkinTwoTone,
  SlidersTwoTone,
  SmileTwoTone,
  SnippetsTwoTone,
  SoundTwoTone,
  StarTwoTone,
  StopTwoTone,
  SwitcherTwoTone,
  TabletTwoTone,
  TagTwoTone,
  TagsTwoTone,
  ToolTwoTone,
  TrademarkCircleTwoTone,
  UnlockTwoTone,
  TrophyTwoTone,
  UpCircleTwoTone,
  ThunderboltTwoTone,
  UpSquareTwoTone,
  UsbTwoTone,
  VideoCameraTwoTone,
  WalletTwoTone,
  WarningTwoTone,
  CiTwoTone,
  CopyrightTwoTone,
  DollarTwoTone,
  EuroTwoTone,
  GoldTwoTone,
  CanlendarTwoTone,
  "default": dist
}, [dist]);
var _default$1 = function(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var _defineProperty = defineProperty$5.exports;
var _defineProperty2 = _interopRequireDefault(_defineProperty);
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var _default12 = function() {
  function defineProperties3(target2, props2) {
    for (var i = 0; i < props2.length; i++) {
      var descriptor2 = props2[i];
      descriptor2.enumerable = descriptor2.enumerable || false;
      descriptor2.configurable = true;
      if ("value" in descriptor2)
        descriptor2.writable = true;
      (0, _defineProperty2.default)(target2, descriptor2.key, descriptor2);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties3(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties3(Constructor, staticProps);
    return Constructor;
  };
}();
var lib$1 = {};
var generate$3 = {};
var tinycolor = { exports: {} };
(function(module2) {
  (function(Math2) {
    var trimLeft = /^\s+/, trimRight = /\s+$/, tinyCounter = 0, mathRound = Math2.round, mathMin = Math2.min, mathMax = Math2.max, mathRandom = Math2.random;
    function tinycolor2(color, opts) {
      color = color ? color : "";
      opts = opts || {};
      if (color instanceof tinycolor2) {
        return color;
      }
      if (!(this instanceof tinycolor2)) {
        return new tinycolor2(color, opts);
      }
      var rgb = inputToRGB(color);
      this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;
      this._gradientType = opts.gradientType;
      if (this._r < 1) {
        this._r = mathRound(this._r);
      }
      if (this._g < 1) {
        this._g = mathRound(this._g);
      }
      if (this._b < 1) {
        this._b = mathRound(this._b);
      }
      this._ok = rgb.ok;
      this._tc_id = tinyCounter++;
    }
    tinycolor2.prototype = {
      isDark: function() {
        return this.getBrightness() < 128;
      },
      isLight: function() {
        return !this.isDark();
      },
      isValid: function() {
        return this._ok;
      },
      getOriginalInput: function() {
        return this._originalInput;
      },
      getFormat: function() {
        return this._format;
      },
      getAlpha: function() {
        return this._a;
      },
      getBrightness: function() {
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
      },
      getLuminance: function() {
        var rgb = this.toRgb();
        var RsRGB, GsRGB, BsRGB, R, G, B;
        RsRGB = rgb.r / 255;
        GsRGB = rgb.g / 255;
        BsRGB = rgb.b / 255;
        if (RsRGB <= 0.03928) {
          R = RsRGB / 12.92;
        } else {
          R = Math2.pow((RsRGB + 0.055) / 1.055, 2.4);
        }
        if (GsRGB <= 0.03928) {
          G = GsRGB / 12.92;
        } else {
          G = Math2.pow((GsRGB + 0.055) / 1.055, 2.4);
        }
        if (BsRGB <= 0.03928) {
          B = BsRGB / 12.92;
        } else {
          B = Math2.pow((BsRGB + 0.055) / 1.055, 2.4);
        }
        return 0.2126 * R + 0.7152 * G + 0.0722 * B;
      },
      setAlpha: function(value27) {
        this._a = boundAlpha(value27);
        this._roundA = mathRound(100 * this._a) / 100;
        return this;
      },
      toHsv: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
      },
      toHsvString: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
        return this._a == 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
      },
      toHsl: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
      },
      toHslString: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
        return this._a == 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
      },
      toHex: function(allow3Char) {
        return rgbToHex(this._r, this._g, this._b, allow3Char);
      },
      toHexString: function(allow3Char) {
        return "#" + this.toHex(allow3Char);
      },
      toHex8: function(allow4Char) {
        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
      },
      toHex8String: function(allow4Char) {
        return "#" + this.toHex8(allow4Char);
      },
      toRgb: function() {
        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
      },
      toRgbString: function() {
        return this._a == 1 ? "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" : "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
      },
      toPercentageRgb: function() {
        return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
      },
      toPercentageRgbString: function() {
        return this._a == 1 ? "rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" : "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
      },
      toName: function() {
        if (this._a === 0) {
          return "transparent";
        }
        if (this._a < 1) {
          return false;
        }
        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
      },
      toFilter: function(secondColor) {
        var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
        var secondHex8String = hex8String;
        var gradientType = this._gradientType ? "GradientType = 1, " : "";
        if (secondColor) {
          var s = tinycolor2(secondColor);
          secondHex8String = "#" + rgbaToArgbHex(s._r, s._g, s._b, s._a);
        }
        return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
      },
      toString: function(format3) {
        var formatSet = !!format3;
        format3 = format3 || this._format;
        var formattedString = false;
        var hasAlpha = this._a < 1 && this._a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format3 === "hex" || format3 === "hex6" || format3 === "hex3" || format3 === "hex4" || format3 === "hex8" || format3 === "name");
        if (needsAlphaFormat) {
          if (format3 === "name" && this._a === 0) {
            return this.toName();
          }
          return this.toRgbString();
        }
        if (format3 === "rgb") {
          formattedString = this.toRgbString();
        }
        if (format3 === "prgb") {
          formattedString = this.toPercentageRgbString();
        }
        if (format3 === "hex" || format3 === "hex6") {
          formattedString = this.toHexString();
        }
        if (format3 === "hex3") {
          formattedString = this.toHexString(true);
        }
        if (format3 === "hex4") {
          formattedString = this.toHex8String(true);
        }
        if (format3 === "hex8") {
          formattedString = this.toHex8String();
        }
        if (format3 === "name") {
          formattedString = this.toName();
        }
        if (format3 === "hsl") {
          formattedString = this.toHslString();
        }
        if (format3 === "hsv") {
          formattedString = this.toHsvString();
        }
        return formattedString || this.toHexString();
      },
      clone: function() {
        return tinycolor2(this.toString());
      },
      _applyModification: function(fn, args) {
        var color = fn.apply(null, [this].concat([].slice.call(args)));
        this._r = color._r;
        this._g = color._g;
        this._b = color._b;
        this.setAlpha(color._a);
        return this;
      },
      lighten: function() {
        return this._applyModification(lighten, arguments);
      },
      brighten: function() {
        return this._applyModification(brighten, arguments);
      },
      darken: function() {
        return this._applyModification(darken, arguments);
      },
      desaturate: function() {
        return this._applyModification(desaturate, arguments);
      },
      saturate: function() {
        return this._applyModification(saturate, arguments);
      },
      greyscale: function() {
        return this._applyModification(greyscale, arguments);
      },
      spin: function() {
        return this._applyModification(spin, arguments);
      },
      _applyCombination: function(fn, args) {
        return fn.apply(null, [this].concat([].slice.call(args)));
      },
      analogous: function() {
        return this._applyCombination(analogous, arguments);
      },
      complement: function() {
        return this._applyCombination(complement, arguments);
      },
      monochromatic: function() {
        return this._applyCombination(monochromatic, arguments);
      },
      splitcomplement: function() {
        return this._applyCombination(splitcomplement, arguments);
      },
      triad: function() {
        return this._applyCombination(triad, arguments);
      },
      tetrad: function() {
        return this._applyCombination(tetrad, arguments);
      }
    };
    tinycolor2.fromRatio = function(color, opts) {
      if (typeof color == "object") {
        var newColor = {};
        for (var i in color) {
          if (color.hasOwnProperty(i)) {
            if (i === "a") {
              newColor[i] = color[i];
            } else {
              newColor[i] = convertToPercentage(color[i]);
            }
          }
        }
        color = newColor;
      }
      return tinycolor2(color, opts);
    };
    function inputToRGB(color) {
      var rgb = { r: 0, g: 0, b: 0 };
      var a = 1;
      var s = null;
      var v = null;
      var l = null;
      var ok = false;
      var format3 = false;
      if (typeof color == "string") {
        color = stringInputToObject(color);
      }
      if (typeof color == "object") {
        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
          rgb = rgbToRgb(color.r, color.g, color.b);
          ok = true;
          format3 = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
        } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
          s = convertToPercentage(color.s);
          v = convertToPercentage(color.v);
          rgb = hsvToRgb(color.h, s, v);
          ok = true;
          format3 = "hsv";
        } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
          s = convertToPercentage(color.s);
          l = convertToPercentage(color.l);
          rgb = hslToRgb(color.h, s, l);
          ok = true;
          format3 = "hsl";
        }
        if (color.hasOwnProperty("a")) {
          a = color.a;
        }
      }
      a = boundAlpha(a);
      return {
        ok,
        format: color.format || format3,
        r: mathMin(255, mathMax(rgb.r, 0)),
        g: mathMin(255, mathMax(rgb.g, 0)),
        b: mathMin(255, mathMax(rgb.b, 0)),
        a
      };
    }
    function rgbToRgb(r, g, b) {
      return {
        r: bound01(r, 255) * 255,
        g: bound01(g, 255) * 255,
        b: bound01(b, 255) * 255
      };
    }
    function rgbToHsl(r, g, b) {
      r = bound01(r, 255);
      g = bound01(g, 255);
      b = bound01(b, 255);
      var max4 = mathMax(r, g, b), min4 = mathMin(r, g, b);
      var h, s, l = (max4 + min4) / 2;
      if (max4 == min4) {
        h = s = 0;
      } else {
        var d = max4 - min4;
        s = l > 0.5 ? d / (2 - max4 - min4) : d / (max4 + min4);
        switch (max4) {
          case r:
            h = (g - b) / d + (g < b ? 6 : 0);
            break;
          case g:
            h = (b - r) / d + 2;
            break;
          case b:
            h = (r - g) / d + 4;
            break;
        }
        h /= 6;
      }
      return { h, s, l };
    }
    function hslToRgb(h, s, l) {
      var r, g, b;
      h = bound01(h, 360);
      s = bound01(s, 100);
      l = bound01(l, 100);
      function hue2rgb(p2, q2, t) {
        if (t < 0)
          t += 1;
        if (t > 1)
          t -= 1;
        if (t < 1 / 6)
          return p2 + (q2 - p2) * 6 * t;
        if (t < 1 / 2)
          return q2;
        if (t < 2 / 3)
          return p2 + (q2 - p2) * (2 / 3 - t) * 6;
        return p2;
      }
      if (s === 0) {
        r = g = b = l;
      } else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1 / 3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1 / 3);
      }
      return { r: r * 255, g: g * 255, b: b * 255 };
    }
    function rgbToHsv(r, g, b) {
      r = bound01(r, 255);
      g = bound01(g, 255);
      b = bound01(b, 255);
      var max4 = mathMax(r, g, b), min4 = mathMin(r, g, b);
      var h, s, v = max4;
      var d = max4 - min4;
      s = max4 === 0 ? 0 : d / max4;
      if (max4 == min4) {
        h = 0;
      } else {
        switch (max4) {
          case r:
            h = (g - b) / d + (g < b ? 6 : 0);
            break;
          case g:
            h = (b - r) / d + 2;
            break;
          case b:
            h = (r - g) / d + 4;
            break;
        }
        h /= 6;
      }
      return { h, s, v };
    }
    function hsvToRgb(h, s, v) {
      h = bound01(h, 360) * 6;
      s = bound01(s, 100);
      v = bound01(v, 100);
      var i = Math2.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod2 = i % 6, r = [v, q, p, p, t, v][mod2], g = [t, v, v, q, p, p][mod2], b = [p, p, t, v, v, q][mod2];
      return { r: r * 255, g: g * 255, b: b * 255 };
    }
    function rgbToHex(r, g, b, allow3Char) {
      var hex2 = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
      ];
      if (allow3Char && hex2[0].charAt(0) == hex2[0].charAt(1) && hex2[1].charAt(0) == hex2[1].charAt(1) && hex2[2].charAt(0) == hex2[2].charAt(1)) {
        return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0);
      }
      return hex2.join("");
    }
    function rgbaToHex(r, g, b, a, allow4Char) {
      var hex2 = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16)),
        pad2(convertDecimalToHex(a))
      ];
      if (allow4Char && hex2[0].charAt(0) == hex2[0].charAt(1) && hex2[1].charAt(0) == hex2[1].charAt(1) && hex2[2].charAt(0) == hex2[2].charAt(1) && hex2[3].charAt(0) == hex2[3].charAt(1)) {
        return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0) + hex2[3].charAt(0);
      }
      return hex2.join("");
    }
    function rgbaToArgbHex(r, g, b, a) {
      var hex2 = [
        pad2(convertDecimalToHex(a)),
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
      ];
      return hex2.join("");
    }
    tinycolor2.equals = function(color1, color2) {
      if (!color1 || !color2) {
        return false;
      }
      return tinycolor2(color1).toRgbString() == tinycolor2(color2).toRgbString();
    };
    tinycolor2.random = function() {
      return tinycolor2.fromRatio({
        r: mathRandom(),
        g: mathRandom(),
        b: mathRandom()
      });
    };
    function desaturate(color, amount) {
      amount = amount === 0 ? 0 : amount || 10;
      var hsl = tinycolor2(color).toHsl();
      hsl.s -= amount / 100;
      hsl.s = clamp01(hsl.s);
      return tinycolor2(hsl);
    }
    function saturate(color, amount) {
      amount = amount === 0 ? 0 : amount || 10;
      var hsl = tinycolor2(color).toHsl();
      hsl.s += amount / 100;
      hsl.s = clamp01(hsl.s);
      return tinycolor2(hsl);
    }
    function greyscale(color) {
      return tinycolor2(color).desaturate(100);
    }
    function lighten(color, amount) {
      amount = amount === 0 ? 0 : amount || 10;
      var hsl = tinycolor2(color).toHsl();
      hsl.l += amount / 100;
      hsl.l = clamp01(hsl.l);
      return tinycolor2(hsl);
    }
    function brighten(color, amount) {
      amount = amount === 0 ? 0 : amount || 10;
      var rgb = tinycolor2(color).toRgb();
      rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));
      rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));
      rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));
      return tinycolor2(rgb);
    }
    function darken(color, amount) {
      amount = amount === 0 ? 0 : amount || 10;
      var hsl = tinycolor2(color).toHsl();
      hsl.l -= amount / 100;
      hsl.l = clamp01(hsl.l);
      return tinycolor2(hsl);
    }
    function spin(color, amount) {
      var hsl = tinycolor2(color).toHsl();
      var hue = (hsl.h + amount) % 360;
      hsl.h = hue < 0 ? 360 + hue : hue;
      return tinycolor2(hsl);
    }
    function complement(color) {
      var hsl = tinycolor2(color).toHsl();
      hsl.h = (hsl.h + 180) % 360;
      return tinycolor2(hsl);
    }
    function triad(color) {
      var hsl = tinycolor2(color).toHsl();
      var h = hsl.h;
      return [
        tinycolor2(color),
        tinycolor2({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
        tinycolor2({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
      ];
    }
    function tetrad(color) {
      var hsl = tinycolor2(color).toHsl();
      var h = hsl.h;
      return [
        tinycolor2(color),
        tinycolor2({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
        tinycolor2({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
        tinycolor2({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
      ];
    }
    function splitcomplement(color) {
      var hsl = tinycolor2(color).toHsl();
      var h = hsl.h;
      return [
        tinycolor2(color),
        tinycolor2({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),
        tinycolor2({ h: (h + 216) % 360, s: hsl.s, l: hsl.l })
      ];
    }
    function analogous(color, results, slices) {
      results = results || 6;
      slices = slices || 30;
      var hsl = tinycolor2(color).toHsl();
      var part = 360 / slices;
      var ret = [tinycolor2(color)];
      for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(tinycolor2(hsl));
      }
      return ret;
    }
    function monochromatic(color, results) {
      results = results || 6;
      var hsv = tinycolor2(color).toHsv();
      var h = hsv.h, s = hsv.s, v = hsv.v;
      var ret = [];
      var modification = 1 / results;
      while (results--) {
        ret.push(tinycolor2({ h, s, v }));
        v = (v + modification) % 1;
      }
      return ret;
    }
    tinycolor2.mix = function(color1, color2, amount) {
      amount = amount === 0 ? 0 : amount || 50;
      var rgb1 = tinycolor2(color1).toRgb();
      var rgb2 = tinycolor2(color2).toRgb();
      var p = amount / 100;
      var rgba = {
        r: (rgb2.r - rgb1.r) * p + rgb1.r,
        g: (rgb2.g - rgb1.g) * p + rgb1.g,
        b: (rgb2.b - rgb1.b) * p + rgb1.b,
        a: (rgb2.a - rgb1.a) * p + rgb1.a
      };
      return tinycolor2(rgba);
    };
    tinycolor2.readability = function(color1, color2) {
      var c1 = tinycolor2(color1);
      var c2 = tinycolor2(color2);
      return (Math2.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math2.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
    };
    tinycolor2.isReadable = function(color1, color2, wcag2) {
      var readability = tinycolor2.readability(color1, color2);
      var wcag2Parms, out;
      out = false;
      wcag2Parms = validateWCAG2Parms(wcag2);
      switch (wcag2Parms.level + wcag2Parms.size) {
        case "AAsmall":
        case "AAAlarge":
          out = readability >= 4.5;
          break;
        case "AAlarge":
          out = readability >= 3;
          break;
        case "AAAsmall":
          out = readability >= 7;
          break;
      }
      return out;
    };
    tinycolor2.mostReadable = function(baseColor, colorList, args) {
      var bestColor = null;
      var bestScore = 0;
      var readability;
      var includeFallbackColors, level2, size;
      args = args || {};
      includeFallbackColors = args.includeFallbackColors;
      level2 = args.level;
      size = args.size;
      for (var i = 0; i < colorList.length; i++) {
        readability = tinycolor2.readability(baseColor, colorList[i]);
        if (readability > bestScore) {
          bestScore = readability;
          bestColor = tinycolor2(colorList[i]);
        }
      }
      if (tinycolor2.isReadable(baseColor, bestColor, { "level": level2, "size": size }) || !includeFallbackColors) {
        return bestColor;
      } else {
        args.includeFallbackColors = false;
        return tinycolor2.mostReadable(baseColor, ["#fff", "#000"], args);
      }
    };
    var names = tinycolor2.names = {
      aliceblue: "f0f8ff",
      antiquewhite: "faebd7",
      aqua: "0ff",
      aquamarine: "7fffd4",
      azure: "f0ffff",
      beige: "f5f5dc",
      bisque: "ffe4c4",
      black: "000",
      blanchedalmond: "ffebcd",
      blue: "00f",
      blueviolet: "8a2be2",
      brown: "a52a2a",
      burlywood: "deb887",
      burntsienna: "ea7e5d",
      cadetblue: "5f9ea0",
      chartreuse: "7fff00",
      chocolate: "d2691e",
      coral: "ff7f50",
      cornflowerblue: "6495ed",
      cornsilk: "fff8dc",
      crimson: "dc143c",
      cyan: "0ff",
      darkblue: "00008b",
      darkcyan: "008b8b",
      darkgoldenrod: "b8860b",
      darkgray: "a9a9a9",
      darkgreen: "006400",
      darkgrey: "a9a9a9",
      darkkhaki: "bdb76b",
      darkmagenta: "8b008b",
      darkolivegreen: "556b2f",
      darkorange: "ff8c00",
      darkorchid: "9932cc",
      darkred: "8b0000",
      darksalmon: "e9967a",
      darkseagreen: "8fbc8f",
      darkslateblue: "483d8b",
      darkslategray: "2f4f4f",
      darkslategrey: "2f4f4f",
      darkturquoise: "00ced1",
      darkviolet: "9400d3",
      deeppink: "ff1493",
      deepskyblue: "00bfff",
      dimgray: "696969",
      dimgrey: "696969",
      dodgerblue: "1e90ff",
      firebrick: "b22222",
      floralwhite: "fffaf0",
      forestgreen: "228b22",
      fuchsia: "f0f",
      gainsboro: "dcdcdc",
      ghostwhite: "f8f8ff",
      gold: "ffd700",
      goldenrod: "daa520",
      gray: "808080",
      green: "008000",
      greenyellow: "adff2f",
      grey: "808080",
      honeydew: "f0fff0",
      hotpink: "ff69b4",
      indianred: "cd5c5c",
      indigo: "4b0082",
      ivory: "fffff0",
      khaki: "f0e68c",
      lavender: "e6e6fa",
      lavenderblush: "fff0f5",
      lawngreen: "7cfc00",
      lemonchiffon: "fffacd",
      lightblue: "add8e6",
      lightcoral: "f08080",
      lightcyan: "e0ffff",
      lightgoldenrodyellow: "fafad2",
      lightgray: "d3d3d3",
      lightgreen: "90ee90",
      lightgrey: "d3d3d3",
      lightpink: "ffb6c1",
      lightsalmon: "ffa07a",
      lightseagreen: "20b2aa",
      lightskyblue: "87cefa",
      lightslategray: "789",
      lightslategrey: "789",
      lightsteelblue: "b0c4de",
      lightyellow: "ffffe0",
      lime: "0f0",
      limegreen: "32cd32",
      linen: "faf0e6",
      magenta: "f0f",
      maroon: "800000",
      mediumaquamarine: "66cdaa",
      mediumblue: "0000cd",
      mediumorchid: "ba55d3",
      mediumpurple: "9370db",
      mediumseagreen: "3cb371",
      mediumslateblue: "7b68ee",
      mediumspringgreen: "00fa9a",
      mediumturquoise: "48d1cc",
      mediumvioletred: "c71585",
      midnightblue: "191970",
      mintcream: "f5fffa",
      mistyrose: "ffe4e1",
      moccasin: "ffe4b5",
      navajowhite: "ffdead",
      navy: "000080",
      oldlace: "fdf5e6",
      olive: "808000",
      olivedrab: "6b8e23",
      orange: "ffa500",
      orangered: "ff4500",
      orchid: "da70d6",
      palegoldenrod: "eee8aa",
      palegreen: "98fb98",
      paleturquoise: "afeeee",
      palevioletred: "db7093",
      papayawhip: "ffefd5",
      peachpuff: "ffdab9",
      peru: "cd853f",
      pink: "ffc0cb",
      plum: "dda0dd",
      powderblue: "b0e0e6",
      purple: "800080",
      rebeccapurple: "663399",
      red: "f00",
      rosybrown: "bc8f8f",
      royalblue: "4169e1",
      saddlebrown: "8b4513",
      salmon: "fa8072",
      sandybrown: "f4a460",
      seagreen: "2e8b57",
      seashell: "fff5ee",
      sienna: "a0522d",
      silver: "c0c0c0",
      skyblue: "87ceeb",
      slateblue: "6a5acd",
      slategray: "708090",
      slategrey: "708090",
      snow: "fffafa",
      springgreen: "00ff7f",
      steelblue: "4682b4",
      tan: "d2b48c",
      teal: "008080",
      thistle: "d8bfd8",
      tomato: "ff6347",
      turquoise: "40e0d0",
      violet: "ee82ee",
      wheat: "f5deb3",
      white: "fff",
      whitesmoke: "f5f5f5",
      yellow: "ff0",
      yellowgreen: "9acd32"
    };
    var hexNames = tinycolor2.hexNames = flip2(names);
    function flip2(o) {
      var flipped = {};
      for (var i in o) {
        if (o.hasOwnProperty(i)) {
          flipped[o[i]] = i;
        }
      }
      return flipped;
    }
    function boundAlpha(a) {
      a = parseFloat(a);
      if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
      }
      return a;
    }
    function bound01(n, max4) {
      if (isOnePointZero(n)) {
        n = "100%";
      }
      var processPercent = isPercentage(n);
      n = mathMin(max4, mathMax(0, parseFloat(n)));
      if (processPercent) {
        n = parseInt(n * max4, 10) / 100;
      }
      if (Math2.abs(n - max4) < 1e-6) {
        return 1;
      }
      return n % max4 / parseFloat(max4);
    }
    function clamp01(val) {
      return mathMin(1, mathMax(0, val));
    }
    function parseIntFromHex(val) {
      return parseInt(val, 16);
    }
    function isOnePointZero(n) {
      return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
    }
    function isPercentage(n) {
      return typeof n === "string" && n.indexOf("%") != -1;
    }
    function pad2(c) {
      return c.length == 1 ? "0" + c : "" + c;
    }
    function convertToPercentage(n) {
      if (n <= 1) {
        n = n * 100 + "%";
      }
      return n;
    }
    function convertDecimalToHex(d) {
      return Math2.round(parseFloat(d) * 255).toString(16);
    }
    function convertHexToDecimal(h) {
      return parseIntFromHex(h) / 255;
    }
    var matchers = function() {
      var CSS_INTEGER = "[-\\+]?\\d+%?";
      var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
      var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
      var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
      var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
      return {
        CSS_UNIT: new RegExp(CSS_UNIT),
        rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
        rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
        hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
        hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
        hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
        hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
      };
    }();
    function isValidCSSUnit(color) {
      return !!matchers.CSS_UNIT.exec(color);
    }
    function stringInputToObject(color) {
      color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
      var named = false;
      if (names[color]) {
        color = names[color];
        named = true;
      } else if (color == "transparent") {
        return { r: 0, g: 0, b: 0, a: 0, format: "name" };
      }
      var match5;
      if (match5 = matchers.rgb.exec(color)) {
        return { r: match5[1], g: match5[2], b: match5[3] };
      }
      if (match5 = matchers.rgba.exec(color)) {
        return { r: match5[1], g: match5[2], b: match5[3], a: match5[4] };
      }
      if (match5 = matchers.hsl.exec(color)) {
        return { h: match5[1], s: match5[2], l: match5[3] };
      }
      if (match5 = matchers.hsla.exec(color)) {
        return { h: match5[1], s: match5[2], l: match5[3], a: match5[4] };
      }
      if (match5 = matchers.hsv.exec(color)) {
        return { h: match5[1], s: match5[2], v: match5[3] };
      }
      if (match5 = matchers.hsva.exec(color)) {
        return { h: match5[1], s: match5[2], v: match5[3], a: match5[4] };
      }
      if (match5 = matchers.hex8.exec(color)) {
        return {
          r: parseIntFromHex(match5[1]),
          g: parseIntFromHex(match5[2]),
          b: parseIntFromHex(match5[3]),
          a: convertHexToDecimal(match5[4]),
          format: named ? "name" : "hex8"
        };
      }
      if (match5 = matchers.hex6.exec(color)) {
        return {
          r: parseIntFromHex(match5[1]),
          g: parseIntFromHex(match5[2]),
          b: parseIntFromHex(match5[3]),
          format: named ? "name" : "hex"
        };
      }
      if (match5 = matchers.hex4.exec(color)) {
        return {
          r: parseIntFromHex(match5[1] + "" + match5[1]),
          g: parseIntFromHex(match5[2] + "" + match5[2]),
          b: parseIntFromHex(match5[3] + "" + match5[3]),
          a: convertHexToDecimal(match5[4] + "" + match5[4]),
          format: named ? "name" : "hex8"
        };
      }
      if (match5 = matchers.hex3.exec(color)) {
        return {
          r: parseIntFromHex(match5[1] + "" + match5[1]),
          g: parseIntFromHex(match5[2] + "" + match5[2]),
          b: parseIntFromHex(match5[3] + "" + match5[3]),
          format: named ? "name" : "hex"
        };
      }
      return false;
    }
    function validateWCAG2Parms(parms) {
      var level2, size;
      parms = parms || { "level": "AA", "size": "small" };
      level2 = (parms.level || "AA").toUpperCase();
      size = (parms.size || "small").toLowerCase();
      if (level2 !== "AA" && level2 !== "AAA") {
        level2 = "AA";
      }
      if (size !== "small" && size !== "large") {
        size = "small";
      }
      return { "level": level2, "size": size };
    }
    if (module2.exports) {
      module2.exports = tinycolor2;
    } else {
      window.tinycolor = tinycolor2;
    }
  })(Math);
})(tinycolor);
var __importDefault$1 = commonjsGlobal && commonjsGlobal.__importDefault || function(mod2) {
  return mod2 && mod2.__esModule ? mod2 : { "default": mod2 };
};
Object.defineProperty(generate$3, "__esModule", { value: true });
var tinycolor2_1 = __importDefault$1(tinycolor.exports);
var hueStep = 2;
var saturationStep = 16;
var saturationStep2 = 5;
var brightnessStep1 = 5;
var brightnessStep2 = 15;
var lightColorCount = 5;
var darkColorCount = 4;
function getHue(hsv, i, light) {
  var hue;
  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {
    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
  } else {
    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
  }
  if (hue < 0) {
    hue += 360;
  } else if (hue >= 360) {
    hue -= 360;
  }
  return hue;
}
function getSaturation(hsv, i, light) {
  if (hsv.h === 0 && hsv.s === 0) {
    return hsv.s;
  }
  var saturation;
  if (light) {
    saturation = Math.round(hsv.s * 100) - saturationStep * i;
  } else if (i === darkColorCount) {
    saturation = Math.round(hsv.s * 100) + saturationStep;
  } else {
    saturation = Math.round(hsv.s * 100) + saturationStep2 * i;
  }
  if (saturation > 100) {
    saturation = 100;
  }
  if (light && i === lightColorCount && saturation > 10) {
    saturation = 10;
  }
  if (saturation < 6) {
    saturation = 6;
  }
  return saturation;
}
function getValue(hsv, i, light) {
  if (light) {
    return Math.round(hsv.v * 100) + brightnessStep1 * i;
  }
  return Math.round(hsv.v * 100) - brightnessStep2 * i;
}
function generate$2(color) {
  var patterns = [];
  var pColor = tinycolor2_1.default(color);
  for (var i = lightColorCount; i > 0; i -= 1) {
    var hsv = pColor.toHsv();
    var colorString = tinycolor2_1.default({
      h: getHue(hsv, i, true),
      s: getSaturation(hsv, i, true),
      v: getValue(hsv, i, true)
    }).toHexString();
    patterns.push(colorString);
  }
  patterns.push(pColor.toHexString());
  for (var i = 1; i <= darkColorCount; i += 1) {
    var hsv = pColor.toHsv();
    var colorString = tinycolor2_1.default({
      h: getHue(hsv, i),
      s: getSaturation(hsv, i),
      v: getValue(hsv, i)
    }).toHexString();
    patterns.push(colorString);
  }
  return patterns;
}
generate$3.default = generate$2;
var __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function(mod2) {
  return mod2 && mod2.__esModule ? mod2 : { "default": mod2 };
};
Object.defineProperty(lib$1, "__esModule", { value: true });
var generate_1 = __importDefault(generate$3);
var generate$1 = lib$1.generate = generate_1.default;
var presetPrimaryColors = {
  red: "#F5222D",
  volcano: "#FA541C",
  orange: "#FA8C16",
  gold: "#FAAD14",
  yellow: "#FADB14",
  lime: "#A0D911",
  green: "#52C41A",
  cyan: "#13C2C2",
  blue: "#1890FF",
  geekblue: "#2F54EB",
  purple: "#722ED1",
  magenta: "#EB2F96",
  grey: "#666666"
};
lib$1.presetPrimaryColors = presetPrimaryColors;
var presetPalettes = {};
lib$1.presetPalettes = presetPalettes;
Object.keys(presetPrimaryColors).forEach(function(key2) {
  presetPalettes[key2] = generate_1.default(presetPrimaryColors[key2]);
  presetPalettes[key2].primary = presetPalettes[key2][5];
});
var red = presetPalettes.red;
lib$1.red = red;
var volcano = presetPalettes.volcano;
lib$1.volcano = volcano;
var gold = presetPalettes.gold;
lib$1.gold = gold;
var orange = presetPalettes.orange;
lib$1.orange = orange;
var yellow = presetPalettes.yellow;
lib$1.yellow = yellow;
var lime = presetPalettes.lime;
lib$1.lime = lime;
var green = presetPalettes.green;
lib$1.green = green;
var cyan = presetPalettes.cyan;
lib$1.cyan = cyan;
var blue = presetPalettes.blue;
lib$1.blue = blue;
var geekblue = presetPalettes.geekblue;
lib$1.geekblue = geekblue;
var purple = presetPalettes.purple;
lib$1.purple = purple;
var magenta = presetPalettes.magenta;
lib$1.magenta = magenta;
var grey = presetPalettes.grey;
lib$1.grey = grey;
function log(message2) {
  if (!(process && process.env && true)) {
    console.error("[@ant-design/icons-vue]: " + message2 + ".");
  }
}
function isIconDefinition(target2) {
  return typeof target2 === "object" && typeof target2.name === "string" && typeof target2.theme === "string" && (typeof target2.icon === "object" || typeof target2.icon === "function");
}
function normalizeAttrs() {
  var attrs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.keys(attrs).reduce(function(acc, key2) {
    var val = attrs[key2];
    switch (key2) {
      case "class":
        acc.className = val;
        delete acc["class"];
        break;
      default:
        acc[key2] = val;
    }
    return acc;
  }, {});
}
var MiniMap = function() {
  function MiniMap2() {
    _default$1(this, MiniMap2);
    this.collection = {};
  }
  _default12(MiniMap2, [{
    key: "clear",
    value: function clear3() {
      this.collection = {};
    }
  }, {
    key: "delete",
    value: function _delete(key2) {
      return delete this.collection[key2];
    }
  }, {
    key: "get",
    value: function get4(key2) {
      return this.collection[key2];
    }
  }, {
    key: "has",
    value: function has2(key2) {
      return Boolean(this.collection[key2]);
    }
  }, {
    key: "set",
    value: function set3(key2, value27) {
      this.collection[key2] = value27;
      return this;
    }
  }, {
    key: "size",
    get: function get4() {
      return Object.keys(this.collection).length;
    }
  }]);
  return MiniMap2;
}();
function generate(h, node, key2, rootProps) {
  if (!rootProps) {
    return h(node.tag, { key: key2, attrs: _default$6({}, normalizeAttrs(node.attrs)) }, (node.children || []).map(function(child, index2) {
      return generate(h, child, key2 + "-" + node.tag + "-" + index2);
    }));
  }
  return h(node.tag, _default$6({
    key: key2
  }, rootProps, {
    attrs: _default$6({}, normalizeAttrs(node.attrs), rootProps.attrs)
  }), (node.children || []).map(function(child, index2) {
    return generate(h, child, key2 + "-" + node.tag + "-" + index2);
  }));
}
function getSecondaryColor(primaryColor) {
  return generate$1(primaryColor)[0];
}
function withSuffix(name, theme) {
  switch (theme) {
    case "fill":
      return name + "-fill";
    case "outline":
      return name + "-o";
    case "twotone":
      return name + "-twotone";
    default:
      throw new TypeError("Unknown theme type: " + theme + ", name: " + name);
  }
}
var twoToneColorPalette = {
  primaryColor: "#333",
  secondaryColor: "#E6E6E6"
};
var Icon$2 = {
  name: "AntdIcon",
  props: ["type", "primaryColor", "secondaryColor"],
  displayName: "IconVue",
  definitions: new MiniMap(),
  data: function data12() {
    return {
      twoToneColorPalette
    };
  },
  add: function add() {
    for (var _len = arguments.length, icons = Array(_len), _key = 0; _key < _len; _key++) {
      icons[_key] = arguments[_key];
    }
    icons.forEach(function(icon) {
      Icon$2.definitions.set(withSuffix(icon.name, icon.theme), icon);
    });
  },
  clear: function clear() {
    Icon$2.definitions.clear();
  },
  get: function get2(key2) {
    var colors = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : twoToneColorPalette;
    if (key2) {
      var target2 = Icon$2.definitions.get(key2);
      if (target2 && typeof target2.icon === "function") {
        target2 = _default$6({}, target2, {
          icon: target2.icon(colors.primaryColor, colors.secondaryColor)
        });
      }
      return target2;
    }
  },
  setTwoToneColors: function setTwoToneColors(_ref) {
    var primaryColor = _ref.primaryColor, secondaryColor = _ref.secondaryColor;
    twoToneColorPalette.primaryColor = primaryColor;
    twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);
  },
  getTwoToneColors: function getTwoToneColors() {
    return _default$6({}, twoToneColorPalette);
  },
  render: function render27(h) {
    var _$props = this.$props, type3 = _$props.type, primaryColor = _$props.primaryColor, secondaryColor = _$props.secondaryColor;
    var target2 = void 0;
    var colors = twoToneColorPalette;
    if (primaryColor) {
      colors = {
        primaryColor,
        secondaryColor: secondaryColor || getSecondaryColor(primaryColor)
      };
    }
    if (isIconDefinition(type3)) {
      target2 = type3;
    } else if (typeof type3 === "string") {
      target2 = Icon$2.get(type3, colors);
      if (!target2) {
        return null;
      }
    }
    if (!target2) {
      log("type should be string or icon definiton, but got " + type3);
      return null;
    }
    if (target2 && typeof target2.icon === "function") {
      target2 = _default$6({}, target2, {
        icon: target2.icon(colors.primaryColor, colors.secondaryColor)
      });
    }
    return generate(h, target2.icon, "svg-" + target2.name, {
      attrs: {
        "data-icon": target2.name,
        width: "1em",
        height: "1em",
        fill: "currentColor",
        "aria-hidden": "true"
      },
      on: this.$listeners
    });
  }
};
Icon$2.install = function(Vue2) {
  Vue2.component(Icon$2.name, Icon$2);
};
var Icon$3 = Icon$2;
var customCache = /* @__PURE__ */ new Set();
function create3(options2) {
  var scriptUrl = options2.scriptUrl, _options$extraCommonP = options2.extraCommonProps, extraCommonProps = _options$extraCommonP === void 0 ? {} : _options$extraCommonP;
  if (typeof document !== "undefined" && typeof window !== "undefined" && typeof document.createElement === "function" && typeof scriptUrl === "string" && scriptUrl.length && !customCache.has(scriptUrl)) {
    var script = document.createElement("script");
    script.setAttribute("src", scriptUrl);
    script.setAttribute("data-namespace", scriptUrl);
    customCache.add(scriptUrl);
    document.body.appendChild(script);
  }
  var Iconfont = {
    functional: true,
    name: "AIconfont",
    props: Icon$1.props,
    render: function render249(h, context) {
      var props2 = context.props, slots = context.slots, listeners = context.listeners, data109 = context.data;
      var type3 = props2.type, restProps = _default$2(props2, ["type"]);
      var slotsMap = slots();
      var children = slotsMap["default"];
      var content = null;
      if (type3) {
        content = h("use", { attrs: { "xlink:href": "#" + type3 } });
      }
      if (children) {
        content = children;
      }
      var iconProps = mergeProps(extraCommonProps, data109, { props: restProps, on: listeners });
      return h(
        Icon$1,
        iconProps,
        [content]
      );
    }
  };
  return Iconfont;
}
var svgBaseProps = {
  width: "1em",
  height: "1em",
  fill: "currentColor",
  "aria-hidden": "true",
  focusable: "false"
};
var fillTester = /-fill$/;
var outlineTester = /-o$/;
var twoToneTester = /-twotone$/;
function getThemeFromTypeName(type3) {
  var result = null;
  if (fillTester.test(type3)) {
    result = "filled";
  } else if (outlineTester.test(type3)) {
    result = "outlined";
  } else if (twoToneTester.test(type3)) {
    result = "twoTone";
  }
  return result;
}
function removeTypeTheme(type3) {
  return type3.replace(fillTester, "").replace(outlineTester, "").replace(twoToneTester, "");
}
function withThemeSuffix(type3, theme) {
  var result = type3;
  if (theme === "filled") {
    result += "-fill";
  } else if (theme === "outlined") {
    result += "-o";
  } else if (theme === "twoTone") {
    result += "-twotone";
  } else {
    warning$4(false, "Icon", "This icon '" + type3 + "' has unknown theme '" + theme + "'");
  }
  return result;
}
function alias(type3) {
  var newType = type3;
  switch (type3) {
    case "cross":
      newType = "close";
      break;
    case "interation":
      newType = "interaction";
      break;
    case "canlendar":
      newType = "calendar";
      break;
    case "colum-height":
      newType = "column-height";
      break;
  }
  warning$4(newType === type3, "Icon", "Icon '" + type3 + "' was a typo and is now deprecated, please use '" + newType + "' instead.");
  return newType;
}
function setTwoToneColor(primaryColor) {
  return Icon$3.setTwoToneColors({
    primaryColor
  });
}
function getTwoToneColor() {
  var colors = Icon$3.getTwoToneColors();
  return colors.primaryColor;
}
Icon$3.add.apply(Icon$3, _default$5(Object.keys(allIcons).filter(function(key2) {
  return key2 !== "default";
}).map(function(key2) {
  return allIcons[key2];
})));
setTwoToneColor("#1890ff");
var defaultTheme = "outlined";
function renderIcon$1(h, locale3, context) {
  var _classNames;
  var props2 = context.$props, $slots = context.$slots;
  var listeners = getListeners(context);
  var type3 = props2.type, Component = props2.component, viewBox = props2.viewBox, spin = props2.spin, theme = props2.theme, twoToneColor = props2.twoToneColor, rotate = props2.rotate, tabIndex = props2.tabIndex;
  var children = filterEmpty($slots["default"]);
  children = children.length === 0 ? void 0 : children;
  warning$4(Boolean(type3 || Component || children), "Icon", "Icon should have `type` prop or `component` prop or `children`.");
  var classString = classNames((_classNames = {}, _default$8(_classNames, "anticon", true), _default$8(_classNames, "anticon-" + type3, !!type3), _classNames));
  var svgClassString = classNames(_default$8({}, "anticon-spin", !!spin || type3 === "loading"));
  var svgStyle = rotate ? {
    msTransform: "rotate(" + rotate + "deg)",
    transform: "rotate(" + rotate + "deg)"
  } : void 0;
  var innerSvgProps = {
    attrs: _default$6({}, svgBaseProps, {
      viewBox
    }),
    "class": svgClassString,
    style: svgStyle
  };
  if (!viewBox) {
    delete innerSvgProps.attrs.viewBox;
  }
  var renderInnerNode = function renderInnerNode2() {
    if (Component) {
      return h(
        Component,
        innerSvgProps,
        [children]
      );
    }
    if (children) {
      warning$4(Boolean(viewBox) || children.length === 1 && children[0].tag === "use", "Icon", "Make sure that you provide correct `viewBox` prop (default `0 0 1024 1024`) to the icon.");
      var _innerSvgProps = {
        attrs: _default$6({}, svgBaseProps),
        "class": svgClassString,
        style: svgStyle
      };
      return h(
        "svg",
        _mergeJSXProps([_innerSvgProps, {
          attrs: { viewBox }
        }]),
        [children]
      );
    }
    if (typeof type3 === "string") {
      var computedType = type3;
      if (theme) {
        var themeInName = getThemeFromTypeName(type3);
        warning$4(!themeInName || theme === themeInName, "Icon", "The icon name '" + type3 + "' already specify a theme '" + themeInName + "'," + (" the 'theme' prop '" + theme + "' will be ignored."));
      }
      computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), theme || defaultTheme);
      return h(Icon$3, {
        attrs: {
          focusable: "false",
          type: computedType,
          primaryColor: twoToneColor
        },
        "class": svgClassString,
        style: svgStyle
      });
    }
  };
  var iconTabIndex = tabIndex;
  if (iconTabIndex === void 0 && "click" in listeners) {
    iconTabIndex = -1;
  }
  var iProps = {
    attrs: {
      "aria-label": type3 && locale3.icon + ": " + type3,
      tabIndex: iconTabIndex
    },
    on: listeners,
    "class": classString,
    staticClass: ""
  };
  return h(
    "i",
    iProps,
    [renderInnerNode()]
  );
}
var Icon = {
  name: "AIcon",
  props: {
    tabIndex: PropTypes.number,
    type: PropTypes.string,
    component: PropTypes.any,
    viewBox: PropTypes.any,
    spin: PropTypes.bool.def(false),
    rotate: PropTypes.number,
    theme: PropTypes.oneOf(["filled", "outlined", "twoTone"]),
    twoToneColor: PropTypes.string,
    role: PropTypes.string
  },
  render: function render28(h) {
    var _this = this;
    return h(LocaleReceiver, {
      attrs: {
        componentName: "Icon"
      },
      scopedSlots: { "default": function _default130(locale3) {
        return renderIcon$1(h, locale3, _this);
      } }
    });
  }
};
Icon.createFromIconfontCN = create3;
Icon.getTwoToneColor = getTwoToneColor;
Icon.setTwoToneColor = setTwoToneColor;
Icon.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Icon.name, Icon);
};
var Icon$1 = Icon;
var AbstractSelectProps = function AbstractSelectProps2() {
  return {
    prefixCls: PropTypes.string,
    size: PropTypes.oneOf(["small", "large", "default"]),
    showAction: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(String)]),
    notFoundContent: PropTypes.any,
    transitionName: PropTypes.string,
    choiceTransitionName: PropTypes.string,
    showSearch: PropTypes.bool,
    allowClear: PropTypes.bool,
    disabled: PropTypes.bool,
    tabIndex: PropTypes.number,
    placeholder: PropTypes.any,
    defaultActiveFirstOption: PropTypes.bool,
    dropdownClassName: PropTypes.string,
    dropdownStyle: PropTypes.any,
    dropdownMenuStyle: PropTypes.any,
    dropdownMatchSelectWidth: PropTypes.bool,
    filterOption: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),
    autoFocus: PropTypes.bool,
    backfill: PropTypes.bool,
    showArrow: PropTypes.bool,
    getPopupContainer: PropTypes.func,
    open: PropTypes.bool,
    defaultOpen: PropTypes.bool,
    autoClearSearchValue: PropTypes.bool,
    dropdownRender: PropTypes.func,
    loading: PropTypes.bool
  };
};
var Value = PropTypes.shape({
  key: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
}).loose;
var SelectValue = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([Value, PropTypes.string, PropTypes.number])), Value]);
var SelectProps = _default$6({}, AbstractSelectProps(), {
  value: SelectValue,
  defaultValue: SelectValue,
  mode: PropTypes.string,
  optionLabelProp: PropTypes.string,
  firstActiveValue: PropTypes.oneOfType([String, PropTypes.arrayOf(String)]),
  maxTagCount: PropTypes.number,
  maxTagPlaceholder: PropTypes.any,
  maxTagTextLength: PropTypes.number,
  dropdownMatchSelectWidth: PropTypes.bool,
  optionFilterProp: PropTypes.string,
  labelInValue: PropTypes.boolean,
  getPopupContainer: PropTypes.func,
  tokenSeparators: PropTypes.arrayOf(PropTypes.string),
  getInputElement: PropTypes.func,
  options: PropTypes.array,
  suffixIcon: PropTypes.any,
  removeIcon: PropTypes.any,
  clearIcon: PropTypes.any,
  menuItemSelectedIcon: PropTypes.any
});
var SelectPropTypes = {
  prefixCls: PropTypes.string,
  size: PropTypes.oneOf(["default", "large", "small"]),
  notFoundContent: PropTypes.any,
  showSearch: PropTypes.bool,
  optionLabelProp: PropTypes.string,
  transitionName: PropTypes.string,
  choiceTransitionName: PropTypes.string
};
var SECRET_COMBOBOX_MODE_DO_NOT_USE = "SECRET_COMBOBOX_MODE_DO_NOT_USE";
var Select$4 = {
  SECRET_COMBOBOX_MODE_DO_NOT_USE,
  Option: _default$6({}, Option$3, { name: "ASelectOption" }),
  OptGroup: _default$6({}, OptGroup, { name: "ASelectOptGroup" }),
  name: "ASelect",
  props: _default$6({}, SelectProps, {
    showSearch: PropTypes.bool.def(false),
    transitionName: PropTypes.string.def("slide-up"),
    choiceTransitionName: PropTypes.string.def("zoom")
  }),
  propTypes: SelectPropTypes,
  model: {
    prop: "value",
    event: "change"
  },
  provide: function provide4() {
    return {
      savePopupRef: this.savePopupRef
    };
  },
  inject: {
    configProvider: { "default": function _default13() {
      return ConfigConsumerProps;
    } }
  },
  created: function created6() {
    warning$4(this.$props.mode !== "combobox", "Select", "The combobox mode of Select is deprecated,it will be removed in next major version,please use AutoComplete instead");
  },
  methods: {
    getNotFoundContent: function getNotFoundContent(renderEmpty4) {
      var h = this.$createElement;
      var notFoundContent = getComponentFromProp(this, "notFoundContent");
      if (notFoundContent !== void 0) {
        return notFoundContent;
      }
      if (this.isCombobox()) {
        return null;
      }
      return renderEmpty4(h, "Select");
    },
    savePopupRef: function savePopupRef(ref) {
      this.popupRef = ref;
    },
    focus: function focus2() {
      this.$refs.vcSelect.focus();
    },
    blur: function blur2() {
      this.$refs.vcSelect.blur();
    },
    isCombobox: function isCombobox2() {
      var mode5 = this.mode;
      return mode5 === "combobox" || mode5 === SECRET_COMBOBOX_MODE_DO_NOT_USE;
    },
    renderSuffixIcon: function renderSuffixIcon(prefixCls2) {
      var h = this.$createElement;
      var loading2 = this.$props.loading;
      var suffixIcon = getComponentFromProp(this, "suffixIcon");
      suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
      if (suffixIcon) {
        return isValidElement(suffixIcon) ? cloneElement(suffixIcon, { "class": prefixCls2 + "-arrow-icon" }) : suffixIcon;
      }
      if (loading2) {
        return h(Icon$1, {
          attrs: { type: "loading" }
        });
      }
      return h(Icon$1, {
        attrs: { type: "down" },
        "class": prefixCls2 + "-arrow-icon"
      });
    }
  },
  render: function render29() {
    var _cls;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, size = _getOptionProps.size, mode5 = _getOptionProps.mode, options2 = _getOptionProps.options, getPopupContainer = _getOptionProps.getPopupContainer, showArrow = _getOptionProps.showArrow, restProps = _default$2(_getOptionProps, ["prefixCls", "size", "mode", "options", "getPopupContainer", "showArrow"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var renderEmpty4 = this.configProvider.renderEmpty;
    var prefixCls2 = getPrefixCls5("select", customizePrefixCls);
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var removeIcon = getComponentFromProp(this, "removeIcon");
    removeIcon = Array.isArray(removeIcon) ? removeIcon[0] : removeIcon;
    var clearIcon = getComponentFromProp(this, "clearIcon");
    clearIcon = Array.isArray(clearIcon) ? clearIcon[0] : clearIcon;
    var menuItemSelectedIcon = getComponentFromProp(this, "menuItemSelectedIcon");
    menuItemSelectedIcon = Array.isArray(menuItemSelectedIcon) ? menuItemSelectedIcon[0] : menuItemSelectedIcon;
    var rest = omit$2(restProps, ["inputIcon", "removeIcon", "clearIcon", "suffixIcon", "menuItemSelectedIcon"]);
    var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-lg", size === "large"), _default$8(_cls, prefixCls2 + "-sm", size === "small"), _default$8(_cls, prefixCls2 + "-show-arrow", showArrow), _cls);
    var optionLabelProp = this.$props.optionLabelProp;
    if (this.isCombobox()) {
      optionLabelProp = optionLabelProp || "value";
    }
    var modeConfig = {
      multiple: mode5 === "multiple",
      tags: mode5 === "tags",
      combobox: this.isCombobox()
    };
    var finalRemoveIcon = removeIcon && (isValidElement(removeIcon) ? cloneElement(removeIcon, { "class": prefixCls2 + "-remove-icon" }) : removeIcon) || h(Icon$1, {
      attrs: { type: "close" },
      "class": prefixCls2 + "-remove-icon"
    });
    var finalClearIcon = clearIcon && (isValidElement(clearIcon) ? cloneElement(clearIcon, { "class": prefixCls2 + "-clear-icon" }) : clearIcon) || h(Icon$1, {
      attrs: { type: "close-circle", theme: "filled" },
      "class": prefixCls2 + "-clear-icon"
    });
    var finalMenuItemSelectedIcon = menuItemSelectedIcon && (isValidElement(menuItemSelectedIcon) ? cloneElement(menuItemSelectedIcon, { "class": prefixCls2 + "-selected-icon" }) : menuItemSelectedIcon) || h(Icon$1, {
      attrs: { type: "check" },
      "class": prefixCls2 + "-selected-icon"
    });
    var selectProps = {
      props: _default$6({
        inputIcon: this.renderSuffixIcon(prefixCls2),
        removeIcon: finalRemoveIcon,
        clearIcon: finalClearIcon,
        menuItemSelectedIcon: finalMenuItemSelectedIcon,
        showArrow
      }, rest, modeConfig, {
        prefixCls: prefixCls2,
        optionLabelProp: optionLabelProp || "children",
        notFoundContent: this.getNotFoundContent(renderEmpty4),
        maxTagPlaceholder: getComponentFromProp(this, "maxTagPlaceholder"),
        placeholder: getComponentFromProp(this, "placeholder"),
        children: options2 ? options2.map(function(option) {
          var key2 = option.key, _option$label = option.label, label = _option$label === void 0 ? option.title : _option$label, on = option.on, cls2 = option["class"], style3 = option.style, restOption = _default$2(option, ["key", "label", "on", "class", "style"]);
          return h(
            Option$3,
            _mergeJSXProps([{ key: key2 }, { props: restOption, on, "class": cls2, style: style3 }]),
            [label]
          );
        }) : filterEmpty(this.$slots["default"]),
        __propsSymbol__: Symbol(),
        dropdownRender: getComponentFromProp(this, "dropdownRender", {}, false),
        getPopupContainer: getPopupContainer || getContextPopupContainer
      }),
      on: getListeners(this),
      "class": cls,
      ref: "vcSelect"
    };
    return h(Select$6, selectProps);
  }
};
Select$4.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Select$4.name, Select$4);
  Vue2.component(Select$4.Option.name, Select$4.Option);
  Vue2.component(Select$4.OptGroup.name, Select$4.OptGroup);
};
var Select$5 = Select$4;
function hasPrefixSuffix(instance) {
  return !!(getComponentFromProp(instance, "prefix") || getComponentFromProp(instance, "suffix") || instance.$props.allowClear);
}
var ClearableInputType = ["text", "input"];
var ClearableLabeledInput = {
  props: {
    prefixCls: PropTypes.string,
    inputType: PropTypes.oneOf(ClearableInputType),
    value: PropTypes.any,
    defaultValue: PropTypes.any,
    allowClear: PropTypes.bool,
    element: PropTypes.any,
    handleReset: PropTypes.func,
    disabled: PropTypes.bool,
    size: PropTypes.oneOf(["small", "large", "default"]),
    suffix: PropTypes.any,
    prefix: PropTypes.any,
    addonBefore: PropTypes.any,
    addonAfter: PropTypes.any,
    className: PropTypes.string,
    readOnly: PropTypes.bool
  },
  methods: {
    renderClearIcon: function renderClearIcon(prefixCls2) {
      var h = this.$createElement;
      var _$props = this.$props, allowClear = _$props.allowClear, value27 = _$props.value, disabled = _$props.disabled, readOnly = _$props.readOnly, inputType = _$props.inputType, handleReset3 = _$props.handleReset;
      if (!allowClear || disabled || readOnly || value27 === void 0 || value27 === null || value27 === "") {
        return null;
      }
      var className = inputType === ClearableInputType[0] ? prefixCls2 + "-textarea-clear-icon" : prefixCls2 + "-clear-icon";
      return h(Icon$1, {
        attrs: {
          type: "close-circle",
          theme: "filled",
          role: "button"
        },
        on: {
          "click": handleReset3
        },
        "class": className
      });
    },
    renderSuffix: function renderSuffix(prefixCls2) {
      var h = this.$createElement;
      var _$props2 = this.$props, suffix2 = _$props2.suffix, allowClear = _$props2.allowClear;
      if (suffix2 || allowClear) {
        return h(
          "span",
          { "class": prefixCls2 + "-suffix" },
          [this.renderClearIcon(prefixCls2), suffix2]
        );
      }
      return null;
    },
    renderLabeledIcon: function renderLabeledIcon(prefixCls2, element) {
      var _classNames;
      var h = this.$createElement;
      var props2 = this.$props;
      var suffix2 = this.renderSuffix(prefixCls2);
      if (!hasPrefixSuffix(this)) {
        return cloneElement(element, {
          props: { value: props2.value }
        });
      }
      var prefix = props2.prefix ? h(
        "span",
        { "class": prefixCls2 + "-prefix" },
        [props2.prefix]
      ) : null;
      var affixWrapperCls = classNames(props2.className, prefixCls2 + "-affix-wrapper", (_classNames = {}, _default$8(_classNames, prefixCls2 + "-affix-wrapper-sm", props2.size === "small"), _default$8(_classNames, prefixCls2 + "-affix-wrapper-lg", props2.size === "large"), _default$8(_classNames, prefixCls2 + "-affix-wrapper-input-with-clear-btn", props2.suffix && props2.allowClear && this.$props.value), _classNames));
      return h(
        "span",
        { "class": affixWrapperCls, style: props2.style },
        [prefix, cloneElement(element, {
          style: null,
          props: { value: props2.value },
          "class": getInputClassName(prefixCls2, props2.size, props2.disabled)
        }), suffix2]
      );
    },
    renderInputWithLabel: function renderInputWithLabel(prefixCls2, labeledElement) {
      var _classNames3;
      var h = this.$createElement;
      var _$props3 = this.$props, addonBefore = _$props3.addonBefore, addonAfter = _$props3.addonAfter, style3 = _$props3.style, size = _$props3.size, className = _$props3.className;
      if (!addonBefore && !addonAfter) {
        return labeledElement;
      }
      var wrapperClassName = prefixCls2 + "-group";
      var addonClassName = wrapperClassName + "-addon";
      var addonBeforeNode = addonBefore ? h(
        "span",
        { "class": addonClassName },
        [addonBefore]
      ) : null;
      var addonAfterNode = addonAfter ? h(
        "span",
        { "class": addonClassName },
        [addonAfter]
      ) : null;
      var mergedWrapperClassName = classNames(prefixCls2 + "-wrapper", _default$8({}, wrapperClassName, addonBefore || addonAfter));
      var mergedGroupClassName = classNames(className, prefixCls2 + "-group-wrapper", (_classNames3 = {}, _default$8(_classNames3, prefixCls2 + "-group-wrapper-sm", size === "small"), _default$8(_classNames3, prefixCls2 + "-group-wrapper-lg", size === "large"), _classNames3));
      return h(
        "span",
        { "class": mergedGroupClassName, style: style3 },
        [h(
          "span",
          { "class": mergedWrapperClassName },
          [addonBeforeNode, cloneElement(labeledElement, { style: null }), addonAfterNode]
        )]
      );
    },
    renderTextAreaWithClearIcon: function renderTextAreaWithClearIcon(prefixCls2, element) {
      var h = this.$createElement;
      var _$props4 = this.$props, value27 = _$props4.value, allowClear = _$props4.allowClear, className = _$props4.className, style3 = _$props4.style;
      if (!allowClear) {
        return cloneElement(element, {
          props: { value: value27 }
        });
      }
      var affixWrapperCls = classNames(className, prefixCls2 + "-affix-wrapper", prefixCls2 + "-affix-wrapper-textarea-with-clear-btn");
      return h(
        "span",
        { "class": affixWrapperCls, style: style3 },
        [cloneElement(element, {
          style: null,
          props: { value: value27 }
        }), this.renderClearIcon(prefixCls2)]
      );
    },
    renderClearableLabeledInput: function renderClearableLabeledInput() {
      var _$props5 = this.$props, prefixCls2 = _$props5.prefixCls, inputType = _$props5.inputType, element = _$props5.element;
      if (inputType === ClearableInputType[0]) {
        return this.renderTextAreaWithClearIcon(prefixCls2, element);
      }
      return this.renderInputWithLabel(prefixCls2, this.renderLabeledIcon(prefixCls2, element));
    }
  },
  render: function render30() {
    return this.renderClearableLabeledInput();
  }
};
var ClearableLabeledInput$1 = ClearableLabeledInput;
var HIDDEN_TEXTAREA_STYLE = "\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n";
var SIZING_STYLE = ["letter-spacing", "line-height", "padding-top", "padding-bottom", "font-family", "font-weight", "font-size", "font-variant", "text-rendering", "text-transform", "width", "text-indent", "padding-left", "padding-right", "border-width", "box-sizing"];
var computedStyleCache = {};
var hiddenTextarea = void 0;
function calculateNodeStyling(node) {
  var useCache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var nodeRef = node.getAttribute("id") || node.getAttribute("data-reactid") || node.getAttribute("name");
  if (useCache && computedStyleCache[nodeRef]) {
    return computedStyleCache[nodeRef];
  }
  var style3 = window.getComputedStyle(node);
  var boxSizing = style3.getPropertyValue("box-sizing") || style3.getPropertyValue("-moz-box-sizing") || style3.getPropertyValue("-webkit-box-sizing");
  var paddingSize = parseFloat(style3.getPropertyValue("padding-bottom")) + parseFloat(style3.getPropertyValue("padding-top"));
  var borderSize = parseFloat(style3.getPropertyValue("border-bottom-width")) + parseFloat(style3.getPropertyValue("border-top-width"));
  var sizingStyle = SIZING_STYLE.map(function(name) {
    return name + ":" + style3.getPropertyValue(name);
  }).join(";");
  var nodeInfo = {
    sizingStyle,
    paddingSize,
    borderSize,
    boxSizing
  };
  if (useCache && nodeRef) {
    computedStyleCache[nodeRef] = nodeInfo;
  }
  return nodeInfo;
}
function calculateNodeHeight(uiTextNode) {
  var useCache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var minRows = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
  var maxRows = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement("textarea");
    document.body.appendChild(hiddenTextarea);
  }
  if (uiTextNode.getAttribute("wrap")) {
    hiddenTextarea.setAttribute("wrap", uiTextNode.getAttribute("wrap"));
  } else {
    hiddenTextarea.removeAttribute("wrap");
  }
  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache), paddingSize = _calculateNodeStyling.paddingSize, borderSize = _calculateNodeStyling.borderSize, boxSizing = _calculateNodeStyling.boxSizing, sizingStyle = _calculateNodeStyling.sizingStyle;
  hiddenTextarea.setAttribute("style", sizingStyle + ";" + HIDDEN_TEXTAREA_STYLE);
  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || "";
  var minHeight = Number.MIN_SAFE_INTEGER;
  var maxHeight = Number.MAX_SAFE_INTEGER;
  var height3 = hiddenTextarea.scrollHeight;
  var overflowY = void 0;
  if (boxSizing === "border-box") {
    height3 += borderSize;
  } else if (boxSizing === "content-box") {
    height3 -= paddingSize;
  }
  if (minRows !== null || maxRows !== null) {
    hiddenTextarea.value = " ";
    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;
    if (minRows !== null) {
      minHeight = singleRowHeight * minRows;
      if (boxSizing === "border-box") {
        minHeight = minHeight + paddingSize + borderSize;
      }
      height3 = Math.max(minHeight, height3);
    }
    if (maxRows !== null) {
      maxHeight = singleRowHeight * maxRows;
      if (boxSizing === "border-box") {
        maxHeight = maxHeight + paddingSize + borderSize;
      }
      overflowY = height3 > maxHeight ? "" : "hidden";
      height3 = Math.min(maxHeight, height3);
    }
  }
  return {
    height: height3 + "px",
    minHeight: minHeight + "px",
    maxHeight: maxHeight + "px",
    overflowY
  };
}
var id = 0;
var ids = {};
function wrapperRaf(callback) {
  var delayFrames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var myId = id++;
  var restFrames = delayFrames;
  function internalCallback() {
    restFrames -= 1;
    if (restFrames <= 0) {
      callback();
      delete ids[myId];
    } else {
      ids[myId] = raf$2(internalCallback);
    }
  }
  ids[myId] = raf$2(internalCallback);
  return myId;
}
wrapperRaf.cancel = function(pid) {
  if (pid === void 0)
    return;
  raf$2.cancel(ids[pid]);
  delete ids[pid];
};
wrapperRaf.ids = ids;
var inputProps = {
  prefixCls: PropTypes.string,
  inputPrefixCls: PropTypes.string,
  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  placeholder: [String, Number],
  type: {
    "default": "text",
    type: String
  },
  name: String,
  size: PropTypes.oneOf(["small", "large", "default"]),
  disabled: PropTypes.bool,
  readOnly: PropTypes.bool,
  addonBefore: PropTypes.any,
  addonAfter: PropTypes.any,
  prefix: PropTypes.any,
  suffix: PropTypes.any,
  autoFocus: Boolean,
  allowClear: Boolean,
  lazy: {
    "default": true,
    type: Boolean
  },
  maxLength: PropTypes.number,
  loading: PropTypes.bool,
  className: PropTypes.string
};
var RESIZE_STATUS_NONE = 0;
var RESIZE_STATUS_RESIZING = 1;
var RESIZE_STATUS_RESIZED = 2;
var TextAreaProps$1 = _default$6({}, inputProps, {
  autosize: PropTypes.oneOfType([Object, Boolean]),
  autoSize: PropTypes.oneOfType([Object, Boolean])
});
var ResizableTextArea = {
  name: "ResizableTextArea",
  props: TextAreaProps$1,
  data: function data13() {
    return {
      textareaStyles: {},
      resizeStatus: RESIZE_STATUS_NONE
    };
  },
  mixins: [BaseMixin],
  mounted: function mounted16() {
    var _this = this;
    this.$nextTick(function() {
      _this.resizeTextarea();
    });
  },
  beforeDestroy: function beforeDestroy15() {
    wrapperRaf.cancel(this.nextFrameActionId);
    wrapperRaf.cancel(this.resizeFrameId);
  },
  watch: {
    value: function value() {
      var _this2 = this;
      this.$nextTick(function() {
        _this2.resizeTextarea();
      });
    }
  },
  methods: {
    handleResize: function handleResize2(size) {
      var resizeStatus = this.$data.resizeStatus;
      var autoSize = this.$props.autoSize;
      if (resizeStatus !== RESIZE_STATUS_NONE) {
        return;
      }
      this.$emit("resize", size);
      if (autoSize) {
        this.resizeOnNextFrame();
      }
    },
    resizeOnNextFrame: function resizeOnNextFrame() {
      wrapperRaf.cancel(this.nextFrameActionId);
      this.nextFrameActionId = wrapperRaf(this.resizeTextarea);
    },
    resizeTextarea: function resizeTextarea() {
      var _this3 = this;
      var autoSize = this.$props.autoSize || this.$props.autosize;
      if (!autoSize || !this.$refs.textArea) {
        return;
      }
      var minRows = autoSize.minRows, maxRows = autoSize.maxRows;
      var textareaStyles = calculateNodeHeight(this.$refs.textArea, false, minRows, maxRows);
      this.setState({ textareaStyles, resizeStatus: RESIZE_STATUS_RESIZING }, function() {
        wrapperRaf.cancel(_this3.resizeFrameId);
        _this3.resizeFrameId = wrapperRaf(function() {
          _this3.setState({ resizeStatus: RESIZE_STATUS_RESIZED }, function() {
            _this3.resizeFrameId = wrapperRaf(function() {
              _this3.setState({ resizeStatus: RESIZE_STATUS_NONE });
              _this3.fixFirefoxAutoScroll();
            });
          });
        });
      });
    },
    fixFirefoxAutoScroll: function fixFirefoxAutoScroll() {
      try {
        if (document.activeElement === this.$refs.textArea) {
          var currentStart = this.$refs.textArea.selectionStart;
          var currentEnd = this.$refs.textArea.selectionEnd;
          this.$refs.textArea.setSelectionRange(currentStart, currentEnd);
        }
      } catch (e) {
      }
    },
    renderTextArea: function renderTextArea() {
      var h = this.$createElement;
      var props2 = getOptionProps(this);
      var prefixCls2 = props2.prefixCls, autoSize = props2.autoSize, autosize = props2.autosize, disabled = props2.disabled;
      var _$data = this.$data, textareaStyles = _$data.textareaStyles, resizeStatus = _$data.resizeStatus;
      warning$4(autosize === void 0, "Input.TextArea", "autosize is deprecated, please use autoSize instead.");
      var otherProps = omit$2(props2, ["prefixCls", "autoSize", "autosize", "defaultValue", "allowClear", "type", "lazy", "value"]);
      var cls = classNames(prefixCls2, _default$8({}, prefixCls2 + "-disabled", disabled));
      var domProps = {};
      if ("value" in props2) {
        domProps.value = props2.value || "";
      }
      var style3 = _default$6({}, textareaStyles, resizeStatus === RESIZE_STATUS_RESIZING ? { overflowX: "hidden", overflowY: "hidden" } : null);
      var textareaProps = {
        attrs: otherProps,
        domProps,
        style: style3,
        "class": cls,
        on: omit$2(getListeners(this), "pressEnter"),
        directives: [{
          name: "ant-input"
        }]
      };
      return h(
        ResizeObserver,
        {
          on: {
            "resize": this.handleResize
          },
          attrs: { disabled: !(autoSize || autosize) }
        },
        [h("textarea", _mergeJSXProps([textareaProps, { ref: "textArea" }]))]
      );
    }
  },
  render: function render31() {
    return this.renderTextArea();
  }
};
var ResizableTextArea$1 = ResizableTextArea;
var TextAreaProps = _default$6({}, inputProps, {
  autosize: PropTypes.oneOfType([Object, Boolean]),
  autoSize: PropTypes.oneOfType([Object, Boolean])
});
var TextArea = {
  name: "ATextarea",
  inheritAttrs: false,
  model: {
    prop: "value",
    event: "change.value"
  },
  props: _default$6({}, TextAreaProps),
  inject: {
    configProvider: { "default": function _default14() {
      return ConfigConsumerProps;
    } }
  },
  data: function data14() {
    var value27 = typeof this.value === "undefined" ? this.defaultValue : this.value;
    return {
      stateValue: typeof value27 === "undefined" ? "" : value27
    };
  },
  computed: {},
  watch: {
    value: function value2(val) {
      this.stateValue = val;
    }
  },
  mounted: function mounted17() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus) {
        _this.focus();
      }
    });
  },
  methods: {
    setValue: function setValue(value27, callback) {
      if (!hasProp(this, "value")) {
        this.stateValue = value27;
        this.$nextTick(function() {
          callback && callback();
        });
      }
    },
    handleKeyDown: function handleKeyDown(e) {
      if (e.keyCode === 13) {
        this.$emit("pressEnter", e);
      }
      this.$emit("keydown", e);
    },
    onChange: function onChange(e) {
      this.$emit("change.value", e.target.value);
      this.$emit("change", e);
      this.$emit("input", e);
    },
    handleChange: function handleChange(e) {
      var _this2 = this;
      var _e$target = e.target, value27 = _e$target.value, composing = _e$target.composing;
      if ((e.isComposing || composing) && this.lazy || this.stateValue === value27)
        return;
      this.setValue(e.target.value, function() {
        _this2.$refs.resizableTextArea.resizeTextarea();
      });
      resolveOnChange(this.$refs.resizableTextArea.$refs.textArea, e, this.onChange);
    },
    focus: function focus3() {
      this.$refs.resizableTextArea.$refs.textArea.focus();
    },
    blur: function blur3() {
      this.$refs.resizableTextArea.$refs.textArea.blur();
    },
    handleReset: function handleReset(e) {
      var _this3 = this;
      this.setValue("", function() {
        _this3.$refs.resizableTextArea.renderTextArea();
        _this3.focus();
      });
      resolveOnChange(this.$refs.resizableTextArea.$refs.textArea, e, this.onChange);
    },
    renderTextArea: function renderTextArea2(prefixCls2) {
      var h = this.$createElement;
      var props2 = getOptionProps(this);
      var resizeProps = {
        props: _default$6({}, props2, {
          prefixCls: prefixCls2
        }),
        on: _default$6({}, getListeners(this), {
          input: this.handleChange,
          keydown: this.handleKeyDown
        }),
        attrs: this.$attrs
      };
      return h(ResizableTextArea$1, _mergeJSXProps([resizeProps, { ref: "resizableTextArea" }]));
    }
  },
  render: function render32() {
    var h = arguments[0];
    var stateValue = this.stateValue, customizePrefixCls = this.prefixCls;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("input", customizePrefixCls);
    var props2 = {
      props: _default$6({}, getOptionProps(this), {
        prefixCls: prefixCls2,
        inputType: "text",
        value: fixControlledValue(stateValue),
        element: this.renderTextArea(prefixCls2),
        handleReset: this.handleReset
      }),
      on: getListeners(this)
    };
    return h(ClearableLabeledInput$1, props2);
  }
};
function noop$T() {
}
function fixControlledValue(value27) {
  if (typeof value27 === "undefined" || value27 === null) {
    return "";
  }
  return value27;
}
function resolveOnChange(target2, e, onChange15) {
  if (onChange15) {
    var event = e;
    if (e.type === "click") {
      Object.defineProperty(event, "target", {
        writable: true
      });
      Object.defineProperty(event, "currentTarget", {
        writable: true
      });
      event.target = target2;
      event.currentTarget = target2;
      var originalInputValue = target2.value;
      target2.value = "";
      onChange15(event);
      target2.value = originalInputValue;
      return;
    }
    onChange15(event);
  }
}
function getInputClassName(prefixCls2, size, disabled) {
  var _classNames;
  return classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-sm", size === "small"), _default$8(_classNames, prefixCls2 + "-lg", size === "large"), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _classNames));
}
var Input = {
  name: "AInput",
  inheritAttrs: false,
  model: {
    prop: "value",
    event: "change.value"
  },
  props: _default$6({}, inputProps),
  inject: {
    configProvider: { "default": function _default15() {
      return ConfigConsumerProps;
    } }
  },
  data: function data15() {
    var props2 = this.$props;
    var value27 = typeof props2.value === "undefined" ? props2.defaultValue : props2.value;
    return {
      stateValue: typeof value27 === "undefined" ? "" : value27
    };
  },
  watch: {
    value: function value3(val) {
      this.stateValue = val;
    }
  },
  mounted: function mounted18() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus) {
        _this.focus();
      }
      _this.clearPasswordValueAttribute();
    });
  },
  beforeDestroy: function beforeDestroy16() {
    if (this.removePasswordTimeout) {
      clearTimeout(this.removePasswordTimeout);
    }
  },
  methods: {
    onBlur: function onBlur2(e) {
      this.$forceUpdate();
      var _getListeners = getListeners(this), blur32 = _getListeners.blur;
      blur32 && blur32(e);
    },
    focus: function focus4() {
      this.$refs.input.focus();
    },
    blur: function blur4() {
      this.$refs.input.blur();
    },
    select: function select() {
      this.$refs.input.select();
    },
    setValue: function setValue2(value27, callback) {
      if (this.stateValue === value27) {
        return;
      }
      if (!hasProp(this, "value")) {
        this.stateValue = value27;
        this.$nextTick(function() {
          callback && callback();
        });
      }
    },
    onChange: function onChange2(e) {
      this.$emit("change.value", e.target.value);
      this.$emit("change", e);
      this.$emit("input", e);
    },
    handleReset: function handleReset2(e) {
      var _this2 = this;
      this.setValue("", function() {
        _this2.focus();
      });
      resolveOnChange(this.$refs.input, e, this.onChange);
    },
    renderInput: function renderInput(prefixCls2) {
      var h = this.$createElement;
      var otherProps = omit$2(this.$props, ["prefixCls", "addonBefore", "addonAfter", "prefix", "suffix", "allowClear", "value", "defaultValue", "lazy", "size", "inputType", "className"]);
      var stateValue = this.stateValue, handleKeyDown8 = this.handleKeyDown, handleChange15 = this.handleChange, size = this.size, disabled = this.disabled;
      var inputProps2 = {
        directives: [{ name: "ant-input" }],
        domProps: {
          value: fixControlledValue(stateValue)
        },
        attrs: _default$6({}, otherProps, this.$attrs),
        on: _default$6({}, getListeners(this), {
          keydown: handleKeyDown8,
          input: handleChange15,
          change: noop$T,
          blur: this.onBlur
        }),
        "class": getInputClassName(prefixCls2, size, disabled),
        ref: "input",
        key: "ant-input"
      };
      return h("input", inputProps2);
    },
    clearPasswordValueAttribute: function clearPasswordValueAttribute() {
      var _this3 = this;
      this.removePasswordTimeout = setTimeout(function() {
        if (_this3.$refs.input && _this3.$refs.input.getAttribute && _this3.$refs.input.getAttribute("type") === "password" && _this3.$refs.input.hasAttribute("value")) {
          _this3.$refs.input.removeAttribute("value");
        }
      });
    },
    handleChange: function handleChange2(e) {
      var _e$target = e.target, value27 = _e$target.value, composing = _e$target.composing;
      if ((e.isComposing || composing) && this.lazy || this.stateValue === value27)
        return;
      this.setValue(value27, this.clearPasswordValueAttribute);
      resolveOnChange(this.$refs.input, e, this.onChange);
    },
    handleKeyDown: function handleKeyDown2(e) {
      if (e.keyCode === 13) {
        this.$emit("pressEnter", e);
      }
      this.$emit("keydown", e);
    }
  },
  render: function render33() {
    var h = arguments[0];
    if (this.$props.type === "textarea") {
      var textareaProps = {
        props: this.$props,
        attrs: this.$attrs,
        on: _default$6({}, getListeners(this), {
          input: this.handleChange,
          keydown: this.handleKeyDown,
          change: noop$T,
          blur: this.onBlur
        })
      };
      return h(TextArea, _mergeJSXProps([textareaProps, { ref: "input" }]));
    }
    var customizePrefixCls = this.$props.prefixCls;
    var stateValue = this.$data.stateValue;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("input", customizePrefixCls);
    var addonAfter = getComponentFromProp(this, "addonAfter");
    var addonBefore = getComponentFromProp(this, "addonBefore");
    var suffix2 = getComponentFromProp(this, "suffix");
    var prefix = getComponentFromProp(this, "prefix");
    var props2 = {
      props: _default$6({}, getOptionProps(this), {
        prefixCls: prefixCls2,
        inputType: "input",
        value: fixControlledValue(stateValue),
        element: this.renderInput(prefixCls2),
        handleReset: this.handleReset,
        addonAfter,
        addonBefore,
        suffix: suffix2,
        prefix
      }),
      on: getListeners(this)
    };
    return h(ClearableLabeledInput$1, props2);
  }
};
var Group$1 = {
  name: "AInputGroup",
  props: {
    prefixCls: PropTypes.string,
    size: {
      validator: function validator(value27) {
        return ["small", "large", "default"].includes(value27);
      }
    },
    compact: Boolean
  },
  inject: {
    configProvider: { "default": function _default16() {
      return ConfigConsumerProps;
    } }
  },
  computed: {
    classes: function classes() {
      var _ref;
      var customizePrefixCls = this.prefixCls, size = this.size, _compact = this.compact, compact = _compact === void 0 ? false : _compact;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("input-group", customizePrefixCls);
      return _ref = {}, _default$8(_ref, "" + prefixCls2, true), _default$8(_ref, prefixCls2 + "-lg", size === "large"), _default$8(_ref, prefixCls2 + "-sm", size === "small"), _default$8(_ref, prefixCls2 + "-compact", compact), _ref;
    }
  },
  methods: {},
  render: function render34() {
    var h = arguments[0];
    return h(
      "span",
      _mergeJSXProps([{ "class": this.classes }, { on: getListeners(this) }]),
      [filterEmpty(this.$slots["default"])]
    );
  }
};
var isMobile$1 = { exports: {} };
isMobile$1.exports = isMobile;
var isMobile_2 = isMobile$1.exports.isMobile = isMobile;
isMobile$1.exports.default = isMobile;
var mobileRE = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series[46]0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i;
var tabletRE = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series[46]0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i;
function isMobile(opts) {
  if (!opts)
    opts = {};
  var ua = opts.ua;
  if (!ua && typeof navigator !== "undefined")
    ua = navigator.userAgent;
  if (ua && ua.headers && typeof ua.headers["user-agent"] === "string") {
    ua = ua.headers["user-agent"];
  }
  if (typeof ua !== "string")
    return false;
  var result = opts.tablet ? tabletRE.test(ua) : mobileRE.test(ua);
  if (!result && opts.tablet && opts.featureDetect && navigator && navigator.maxTouchPoints > 1 && ua.indexOf("Macintosh") !== -1 && ua.indexOf("Safari") !== -1) {
    result = true;
  }
  return result;
}
var styleForPesudo = void 0;
function isHidden$1(element) {
  return !element || element.offsetParent === null;
}
function isNotGrey(color) {
  var match5 = (color || "").match(/rgba?\((\d*), (\d*), (\d*)(, [\.\d]*)?\)/);
  if (match5 && match5[1] && match5[2] && match5[3]) {
    return !(match5[1] === match5[2] && match5[2] === match5[3]);
  }
  return true;
}
var Wave = {
  name: "Wave",
  props: ["insertExtraNode"],
  mounted: function mounted19() {
    var _this = this;
    this.$nextTick(function() {
      var node = _this.$el;
      if (node.nodeType !== 1) {
        return;
      }
      _this.instance = _this.bindAnimationEvent(node);
    });
  },
  inject: {
    configProvider: { "default": function _default17() {
      return ConfigConsumerProps;
    } }
  },
  beforeDestroy: function beforeDestroy17() {
    if (this.instance) {
      this.instance.cancel();
    }
    if (this.clickWaveTimeoutId) {
      clearTimeout(this.clickWaveTimeoutId);
    }
    this.destroy = true;
  },
  methods: {
    onClick: function onClick5(node, waveColor) {
      if (!node || isHidden$1(node) || node.className.indexOf("-leave") >= 0) {
        return;
      }
      var insertExtraNode = this.$props.insertExtraNode;
      this.extraNode = document.createElement("div");
      var extraNode = this.extraNode;
      extraNode.className = "ant-click-animating-node";
      var attributeName = this.getAttributeName();
      node.removeAttribute(attributeName);
      node.setAttribute(attributeName, "true");
      styleForPesudo = styleForPesudo || document.createElement("style");
      if (waveColor && waveColor !== "#ffffff" && waveColor !== "rgb(255, 255, 255)" && isNotGrey(waveColor) && !/rgba\(\d*, \d*, \d*, 0\)/.test(waveColor) && waveColor !== "transparent") {
        if (this.csp && this.csp.nonce) {
          styleForPesudo.nonce = this.csp.nonce;
        }
        extraNode.style.borderColor = waveColor;
        styleForPesudo.innerHTML = "\n        [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n          --antd-wave-shadow-color: " + waveColor + ";\n        }";
        if (!document.body.contains(styleForPesudo)) {
          document.body.appendChild(styleForPesudo);
        }
      }
      if (insertExtraNode) {
        node.appendChild(extraNode);
      }
      TransitionEvents$1.addStartEventListener(node, this.onTransitionStart);
      TransitionEvents$1.addEndEventListener(node, this.onTransitionEnd);
    },
    onTransitionStart: function onTransitionStart(e) {
      if (this.destroy)
        return;
      var node = this.$el;
      if (!e || e.target !== node) {
        return;
      }
      if (!this.animationStart) {
        this.resetEffect(node);
      }
    },
    onTransitionEnd: function onTransitionEnd(e) {
      if (!e || e.animationName !== "fadeEffect") {
        return;
      }
      this.resetEffect(e.target);
    },
    getAttributeName: function getAttributeName() {
      var insertExtraNode = this.$props.insertExtraNode;
      return insertExtraNode ? "ant-click-animating" : "ant-click-animating-without-extra-node";
    },
    bindAnimationEvent: function bindAnimationEvent(node) {
      var _this2 = this;
      if (!node || !node.getAttribute || node.getAttribute("disabled") || node.className.indexOf("disabled") >= 0) {
        return;
      }
      var onClick15 = function onClick16(e) {
        if (e.target.tagName === "INPUT" || isHidden$1(e.target)) {
          return;
        }
        _this2.resetEffect(node);
        var waveColor = getComputedStyle(node).getPropertyValue("border-top-color") || getComputedStyle(node).getPropertyValue("border-color") || getComputedStyle(node).getPropertyValue("background-color");
        _this2.clickWaveTimeoutId = window.setTimeout(function() {
          return _this2.onClick(node, waveColor);
        }, 0);
        wrapperRaf.cancel(_this2.animationStartId);
        _this2.animationStart = true;
        _this2.animationStartId = wrapperRaf(function() {
          _this2.animationStart = false;
        }, 10);
      };
      node.addEventListener("click", onClick15, true);
      return {
        cancel: function cancel() {
          node.removeEventListener("click", onClick15, true);
        }
      };
    },
    resetEffect: function resetEffect(node) {
      if (!node || node === this.extraNode || !(node instanceof Element)) {
        return;
      }
      var insertExtraNode = this.$props.insertExtraNode;
      var attributeName = this.getAttributeName();
      node.setAttribute(attributeName, "false");
      if (styleForPesudo) {
        styleForPesudo.innerHTML = "";
      }
      if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {
        node.removeChild(this.extraNode);
      }
      TransitionEvents$1.removeStartEventListener(node, this.onTransitionStart);
      TransitionEvents$1.removeEndEventListener(node, this.onTransitionEnd);
    }
  },
  render: function render35() {
    if (this.configProvider.csp) {
      this.csp = this.configProvider.csp;
    }
    return this.$slots["default"] && this.$slots["default"][0];
  }
};
var buttonTypes = function() {
  return {
    prefixCls: PropTypes.string,
    type: PropTypes.string,
    htmlType: PropTypes.oneOf(["button", "submit", "reset"]).def("button"),
    icon: PropTypes.any,
    shape: PropTypes.oneOf(["circle", "circle-outline", "round"]),
    size: PropTypes.oneOf(["small", "large", "default"]).def("default"),
    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    disabled: PropTypes.bool,
    ghost: PropTypes.bool,
    block: PropTypes.bool
  };
};
var rxTwoCNChar = /^[\u4e00-\u9fa5]{2}$/;
var isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);
var props$2 = buttonTypes();
var Button$1 = {
  name: "AButton",
  inheritAttrs: false,
  __ANT_BUTTON: true,
  props: props$2,
  inject: {
    configProvider: { "default": function _default18() {
      return ConfigConsumerProps;
    } }
  },
  data: function data16() {
    return {
      sizeMap: {
        large: "lg",
        small: "sm"
      },
      sLoading: !!this.loading,
      hasTwoCNChar: false
    };
  },
  computed: {
    classes: function classes2() {
      var _ref;
      var customizePrefixCls = this.prefixCls, type3 = this.type, shape2 = this.shape, size = this.size, hasTwoCNChar = this.hasTwoCNChar, sLoading = this.sLoading, ghost = this.ghost, block = this.block, icon = this.icon, $slots = this.$slots;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("btn", customizePrefixCls);
      var autoInsertSpace = this.configProvider.autoInsertSpaceInButton !== false;
      var sizeCls = "";
      switch (size) {
        case "large":
          sizeCls = "lg";
          break;
        case "small":
          sizeCls = "sm";
          break;
      }
      var iconType = sLoading ? "loading" : icon;
      var children = filterEmpty($slots["default"]);
      return _ref = {}, _default$8(_ref, "" + prefixCls2, true), _default$8(_ref, prefixCls2 + "-" + type3, type3), _default$8(_ref, prefixCls2 + "-" + shape2, shape2), _default$8(_ref, prefixCls2 + "-" + sizeCls, sizeCls), _default$8(_ref, prefixCls2 + "-icon-only", children.length === 0 && iconType), _default$8(_ref, prefixCls2 + "-loading", sLoading), _default$8(_ref, prefixCls2 + "-background-ghost", ghost || type3 === "ghost"), _default$8(_ref, prefixCls2 + "-two-chinese-chars", hasTwoCNChar && autoInsertSpace), _default$8(_ref, prefixCls2 + "-block", block), _ref;
    }
  },
  watch: {
    loading: function loading(val, preVal) {
      var _this = this;
      if (preVal && typeof preVal !== "boolean") {
        clearTimeout(this.delayTimeout);
      }
      if (val && typeof val !== "boolean" && val.delay) {
        this.delayTimeout = setTimeout(function() {
          _this.sLoading = !!val;
        }, val.delay);
      } else {
        this.sLoading = !!val;
      }
    }
  },
  mounted: function mounted20() {
    this.fixTwoCNChar();
  },
  updated: function updated15() {
    this.fixTwoCNChar();
  },
  beforeDestroy: function beforeDestroy18() {
    if (this.delayTimeout) {
      clearTimeout(this.delayTimeout);
    }
  },
  methods: {
    fixTwoCNChar: function fixTwoCNChar() {
      var node = this.$refs.buttonNode;
      if (!node) {
        return;
      }
      var buttonText = node.textContent;
      if (this.isNeedInserted() && isTwoCNChar(buttonText)) {
        if (!this.hasTwoCNChar) {
          this.hasTwoCNChar = true;
        }
      } else if (this.hasTwoCNChar) {
        this.hasTwoCNChar = false;
      }
    },
    handleClick: function handleClick2(event) {
      var sLoading = this.$data.sLoading;
      if (sLoading) {
        return;
      }
      this.$emit("click", event);
    },
    insertSpace: function insertSpace(child, needInserted) {
      var h = this.$createElement;
      var SPACE = needInserted ? " " : "";
      if (typeof child.text === "string") {
        var text = child.text.trim();
        if (isTwoCNChar(text)) {
          text = text.split("").join(SPACE);
        }
        return h("span", [text]);
      }
      return child;
    },
    isNeedInserted: function isNeedInserted() {
      var $slots = this.$slots, type3 = this.type;
      var icon = getComponentFromProp(this, "icon");
      return $slots["default"] && $slots["default"].length === 1 && !icon && type3 !== "link";
    }
  },
  render: function render36() {
    var _this2 = this;
    var h = arguments[0];
    var type3 = this.type, htmlType = this.htmlType, classes6 = this.classes, disabled = this.disabled, handleClick8 = this.handleClick, sLoading = this.sLoading, $slots = this.$slots, $attrs = this.$attrs;
    var icon = getComponentFromProp(this, "icon");
    var buttonProps = {
      attrs: _default$6({}, $attrs, {
        disabled
      }),
      "class": classes6,
      on: _default$6({}, getListeners(this), {
        click: handleClick8
      })
    };
    var iconType = sLoading ? "loading" : icon;
    var iconNode = iconType ? h(Icon$1, {
      attrs: { type: iconType }
    }) : null;
    var children = filterEmpty($slots["default"]);
    var autoInsertSpace = this.configProvider.autoInsertSpaceInButton !== false;
    var kids = children.map(function(child) {
      return _this2.insertSpace(child, _this2.isNeedInserted() && autoInsertSpace);
    });
    if ($attrs.href !== void 0) {
      return h(
        "a",
        _mergeJSXProps([buttonProps, { ref: "buttonNode" }]),
        [iconNode, kids]
      );
    }
    var buttonNode = h(
      "button",
      _mergeJSXProps([buttonProps, {
        ref: "buttonNode",
        attrs: { type: htmlType || "button" }
      }]),
      [iconNode, kids]
    );
    if (type3 === "link") {
      return buttonNode;
    }
    return h(Wave, [buttonNode]);
  }
};
var ButtonGroupProps = {
  prefixCls: PropTypes.string,
  size: {
    validator: function validator2(value27) {
      return ["small", "large", "default"].includes(value27);
    }
  }
};
var ButtonGroup$1 = {
  name: "AButtonGroup",
  props: ButtonGroupProps,
  inject: {
    configProvider: { "default": function _default19() {
      return ConfigConsumerProps;
    } }
  },
  data: function data17() {
    return {
      sizeMap: {
        large: "lg",
        small: "sm"
      }
    };
  },
  render: function render37() {
    var _classes;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, size = this.size, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("btn-group", customizePrefixCls);
    var sizeCls = "";
    switch (size) {
      case "large":
        sizeCls = "lg";
        break;
      case "small":
        sizeCls = "sm";
        break;
    }
    var classes6 = (_classes = {}, _default$8(_classes, "" + prefixCls2, true), _default$8(_classes, prefixCls2 + "-" + sizeCls, sizeCls), _classes);
    return h(
      "div",
      { "class": classes6 },
      [filterEmpty($slots["default"])]
    );
  }
};
Button$1.Group = ButtonGroup$1;
Button$1.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Button$1.name, Button$1);
  Vue2.component(ButtonGroup$1.name, ButtonGroup$1);
};
var Search$1 = {
  name: "AInputSearch",
  inheritAttrs: false,
  model: {
    prop: "value",
    event: "change.value"
  },
  props: _default$6({}, inputProps, {
    enterButton: PropTypes.any
  }),
  inject: {
    configProvider: { "default": function _default20() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    onChange: function onChange3(e) {
      if (e && e.target && e.type === "click") {
        this.$emit("search", e.target.value, e);
      }
      this.$emit("change", e);
    },
    onSearch: function onSearch(e) {
      if (this.loading || this.disabled) {
        return;
      }
      this.$emit("search", this.$refs.input.stateValue, e);
      if (!isMobile_2({ tablet: true })) {
        this.$refs.input.focus();
      }
    },
    focus: function focus5() {
      this.$refs.input.focus();
    },
    blur: function blur5() {
      this.$refs.input.blur();
    },
    renderLoading: function renderLoading(prefixCls2) {
      var h = this.$createElement;
      var size = this.$props.size;
      var enterButton = getComponentFromProp(this, "enterButton");
      enterButton = enterButton || enterButton === "";
      if (enterButton) {
        return h(
          Button$1,
          {
            "class": prefixCls2 + "-button",
            attrs: { type: "primary", size },
            key: "enterButton"
          },
          [h(Icon$1, {
            attrs: { type: "loading" }
          })]
        );
      }
      return h(Icon$1, {
        "class": prefixCls2 + "-icon",
        attrs: { type: "loading" },
        key: "loadingIcon"
      });
    },
    renderSuffix: function renderSuffix2(prefixCls2) {
      var h = this.$createElement;
      var loading2 = this.loading;
      var suffix2 = getComponentFromProp(this, "suffix");
      var enterButton = getComponentFromProp(this, "enterButton");
      enterButton = enterButton || enterButton === "";
      if (loading2 && !enterButton) {
        return [suffix2, this.renderLoading(prefixCls2)];
      }
      if (enterButton)
        return suffix2;
      var icon = h(Icon$1, {
        "class": prefixCls2 + "-icon",
        attrs: { type: "search" },
        key: "searchIcon",
        on: {
          "click": this.onSearch
        }
      });
      if (suffix2) {
        return [suffix2, icon];
      }
      return icon;
    },
    renderAddonAfter: function renderAddonAfter(prefixCls2) {
      var h = this.$createElement;
      var size = this.size, disabled = this.disabled, loading2 = this.loading;
      var btnClassName = prefixCls2 + "-button";
      var enterButton = getComponentFromProp(this, "enterButton");
      enterButton = enterButton || enterButton === "";
      var addonAfter = getComponentFromProp(this, "addonAfter");
      if (loading2 && enterButton) {
        return [this.renderLoading(prefixCls2), addonAfter];
      }
      if (!enterButton)
        return addonAfter;
      var enterButtonAsElement = Array.isArray(enterButton) ? enterButton[0] : enterButton;
      var button = void 0;
      var isAntdButton = enterButtonAsElement.componentOptions && enterButtonAsElement.componentOptions.Ctor.extendOptions.__ANT_BUTTON;
      if (enterButtonAsElement.tag === "button" || isAntdButton) {
        button = cloneElement(enterButtonAsElement, {
          key: "enterButton",
          "class": isAntdButton ? btnClassName : "",
          props: isAntdButton ? { size } : {},
          on: {
            click: this.onSearch
          }
        });
      } else {
        button = h(
          Button$1,
          {
            "class": btnClassName,
            attrs: {
              type: "primary",
              size,
              disabled
            },
            key: "enterButton",
            on: {
              "click": this.onSearch
            }
          },
          [enterButton === true || enterButton === "" ? h(Icon$1, {
            attrs: { type: "search" }
          }) : enterButton]
        );
      }
      if (addonAfter) {
        return [button, addonAfter];
      }
      return button;
    }
  },
  render: function render38() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, customizeInputPrefixCls = _getOptionProps.inputPrefixCls, size = _getOptionProps.size;
    _getOptionProps.loading;
    var others = _default$2(_getOptionProps, ["prefixCls", "inputPrefixCls", "size", "loading"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("input-search", customizePrefixCls);
    var inputPrefixCls = getPrefixCls5("input", customizeInputPrefixCls);
    var enterButton = getComponentFromProp(this, "enterButton");
    var addonBefore = getComponentFromProp(this, "addonBefore");
    enterButton = enterButton || enterButton === "";
    var inputClassName = void 0;
    if (enterButton) {
      var _classNames;
      inputClassName = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-enter-button", !!enterButton), _default$8(_classNames, prefixCls2 + "-" + size, !!size), _classNames));
    } else {
      inputClassName = prefixCls2;
    }
    var on = _default$6({}, getListeners(this));
    delete on.search;
    var inputProps2 = {
      props: _default$6({}, others, {
        prefixCls: inputPrefixCls,
        size,
        suffix: this.renderSuffix(prefixCls2),
        prefix: getComponentFromProp(this, "prefix"),
        addonAfter: this.renderAddonAfter(prefixCls2),
        addonBefore,
        className: inputClassName
      }),
      attrs: this.$attrs,
      ref: "input",
      on: _default$6({
        pressEnter: this.onSearch
      }, on, {
        change: this.onChange
      })
    };
    return h(Input, inputProps2);
  }
};
var ActionMap = {
  click: "click",
  hover: "mouseover"
};
var Password = {
  name: "AInputPassword",
  mixins: [BaseMixin],
  inheritAttrs: false,
  model: {
    prop: "value",
    event: "change.value"
  },
  props: _default$6({}, inputProps, {
    prefixCls: PropTypes.string,
    inputPrefixCls: PropTypes.string,
    action: PropTypes.string.def("click"),
    visibilityToggle: PropTypes.bool.def(true)
  }),
  inject: {
    configProvider: { "default": function _default21() {
      return ConfigConsumerProps;
    } }
  },
  data: function data18() {
    return {
      visible: false
    };
  },
  methods: {
    focus: function focus6() {
      this.$refs.input.focus();
    },
    blur: function blur6() {
      this.$refs.input.blur();
    },
    onVisibleChange: function onVisibleChange() {
      if (this.disabled) {
        return;
      }
      this.setState({
        visible: !this.visible
      });
    },
    getIcon: function getIcon2(prefixCls2) {
      var _on;
      var h = this.$createElement;
      var action = this.$props.action;
      var iconTrigger = ActionMap[action] || "";
      var iconProps = {
        props: {
          type: this.visible ? "eye" : "eye-invisible"
        },
        on: (_on = {}, _default$8(_on, iconTrigger, this.onVisibleChange), _default$8(_on, "mousedown", function mousedown(e) {
          e.preventDefault();
        }), _default$8(_on, "mouseup", function mouseup(e) {
          e.preventDefault();
        }), _on),
        "class": prefixCls2 + "-icon",
        key: "passwordIcon"
      };
      return h(Icon$1, iconProps);
    }
  },
  render: function render39() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, customizeInputPrefixCls = _getOptionProps.inputPrefixCls, size = _getOptionProps.size;
    _getOptionProps.suffix;
    var visibilityToggle = _getOptionProps.visibilityToggle, restProps = _default$2(_getOptionProps, ["prefixCls", "inputPrefixCls", "size", "suffix", "visibilityToggle"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var inputPrefixCls = getPrefixCls5("input", customizeInputPrefixCls);
    var prefixCls2 = getPrefixCls5("input-password", customizePrefixCls);
    var suffixIcon = visibilityToggle && this.getIcon(prefixCls2);
    var inputClassName = classNames(prefixCls2, _default$8({}, prefixCls2 + "-" + size, !!size));
    var inputProps2 = {
      props: _default$6({}, restProps, {
        prefixCls: inputPrefixCls,
        size,
        suffix: suffixIcon,
        prefix: getComponentFromProp(this, "prefix"),
        addonAfter: getComponentFromProp(this, "addonAfter"),
        addonBefore: getComponentFromProp(this, "addonBefore")
      }),
      attrs: _default$6({}, this.$attrs, {
        type: this.visible ? "text" : "password"
      }),
      "class": inputClassName,
      ref: "input",
      on: getListeners(this)
    };
    return h(Input, inputProps2);
  }
};
Vue.use(antInputDirective);
Input.Group = Group$1;
Input.Search = Search$1;
Input.TextArea = TextArea;
Input.Password = Password;
Input.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Input.name, Input);
  Vue2.component(Input.Group.name, Input.Group);
  Vue2.component(Input.Search.name, Input.Search);
  Vue2.component(Input.TextArea.name, Input.TextArea);
  Vue2.component(Input.Password.name, Input.Password);
};
function chaining() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    for (var i = 0; i < fns.length; i++) {
      if (fns[i] && typeof fns[i] === "function") {
        fns[i].apply(this, args);
      }
    }
  };
}
var InputElement = {
  name: "InputElement",
  inheritAttrs: false,
  props: {
    value: PropTypes.any,
    disabled: PropTypes.bool,
    placeholder: PropTypes.string
  },
  render: function render40() {
    var _$slots = this.$slots, $slots = _$slots === void 0 ? {} : _$slots, _$attrs = this.$attrs, $attrs = _$attrs === void 0 ? {} : _$attrs, placeholder = this.placeholder;
    var listeners = getListeners(this);
    var props2 = getOptionProps(this);
    var value27 = props2.value === void 0 ? "" : props2.value;
    var children = $slots["default"][0];
    var _$slots$default$0$com = $slots["default"][0].componentOptions, componentOptions = _$slots$default$0$com === void 0 ? {} : _$slots$default$0$com;
    var _componentOptions$lis = componentOptions.listeners, events = _componentOptions$lis === void 0 ? {} : _componentOptions$lis;
    var newEvent = _default$6({}, events);
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = void 0;
    try {
      for (var _iterator3 = Object.entries(listeners)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator3.next()).done); _iteratorNormalCompletion = true) {
        var _ref = _step.value;
        var _ref2 = _default$4(_ref, 2);
        var eventName = _ref2[0];
        var event = _ref2[1];
        newEvent[eventName] = chaining(event, events[eventName]);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator3["return"]) {
          _iterator3["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var attrs = _default$6({}, $attrs, { value: value27 });
    delete props2.placeholder;
    if (placeholder) {
      props2.placeholder = placeholder;
      attrs.placeholder = placeholder;
    }
    return cloneElement(children, {
      domProps: {
        value: value27
      },
      props: props2,
      on: newEvent,
      attrs,
      ref: "ele"
    });
  }
};
var AutoCompleteProps = _default$6({}, AbstractSelectProps(), {
  value: SelectValue,
  defaultValue: SelectValue,
  dataSource: PropTypes.array,
  dropdownMenuStyle: PropTypes.object,
  optionLabelProp: String,
  dropdownMatchSelectWidth: PropTypes.bool
});
var AutoComplete = {
  name: "AAutoComplete",
  props: _default$6({}, AutoCompleteProps, {
    prefixCls: PropTypes.string,
    showSearch: PropTypes.bool.def(false),
    transitionName: PropTypes.string.def("slide-up"),
    choiceTransitionName: PropTypes.string.def("zoom"),
    autoFocus: PropTypes.bool,
    backfill: PropTypes.bool,
    optionLabelProp: PropTypes.string.def("children"),
    filterOption: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]).def(false),
    defaultActiveFirstOption: PropTypes.bool.def(true)
  }),
  Option: _default$6({}, Option$3, { name: "AAutoCompleteOption" }),
  OptGroup: _default$6({}, OptGroup, { name: "AAutoCompleteOptGroup" }),
  model: {
    prop: "value",
    event: "change"
  },
  inject: {
    configProvider: { "default": function _default22() {
      return ConfigConsumerProps;
    } }
  },
  provide: function provide5() {
    return {
      savePopupRef: this.savePopupRef
    };
  },
  methods: {
    savePopupRef: function savePopupRef2(ref) {
      this.popupRef = ref;
    },
    getInputElement: function getInputElement() {
      var h = this.$createElement;
      var $slots = this.$slots, placeholder = this.placeholder;
      var children = filterEmpty($slots["default"]);
      var element = children.length ? children[0] : h(Input, {
        attrs: { lazy: false }
      });
      return h(
        InputElement,
        {
          attrs: { placeholder }
        },
        [element]
      );
    },
    focus: function focus7() {
      if (this.$refs.select) {
        this.$refs.select.focus();
      }
    },
    blur: function blur7() {
      if (this.$refs.select) {
        this.$refs.select.blur();
      }
    }
  },
  render: function render41() {
    var _cls;
    var h = arguments[0];
    var size = this.size, customizePrefixCls = this.prefixCls, optionLabelProp = this.optionLabelProp, dataSource3 = this.dataSource, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("select", customizePrefixCls);
    var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-lg", size === "large"), _default$8(_cls, prefixCls2 + "-sm", size === "small"), _default$8(_cls, prefixCls2 + "-show-search", true), _default$8(_cls, prefixCls2 + "-auto-complete", true), _cls);
    var options2 = void 0;
    var childArray = filterEmpty($slots.dataSource);
    if (childArray.length) {
      options2 = childArray;
    } else {
      options2 = dataSource3 ? dataSource3.map(function(item) {
        if (isValidElement(item)) {
          return item;
        }
        switch (typeof item === "undefined" ? "undefined" : _default$7(item)) {
          case "string":
            return h(
              Option$3,
              { key: item },
              [item]
            );
          case "object":
            return h(
              Option$3,
              { key: item.value },
              [item.text]
            );
          default:
            throw new Error("AutoComplete[dataSource] only supports type `string[] | Object[]`.");
        }
      }) : [];
    }
    var selectProps = {
      props: _default$6({}, getOptionProps(this), {
        mode: Select$5.SECRET_COMBOBOX_MODE_DO_NOT_USE,
        optionLabelProp,
        getInputElement: this.getInputElement,
        notFoundContent: getComponentFromProp(this, "notFoundContent"),
        placeholder: ""
      }),
      "class": cls,
      ref: "select",
      on: getListeners(this)
    };
    return h(
      Select$5,
      selectProps,
      [options2]
    );
  }
};
AutoComplete.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(AutoComplete.name, AutoComplete);
  Vue2.component(AutoComplete.Option.name, AutoComplete.Option);
  Vue2.component(AutoComplete.OptGroup.name, AutoComplete.OptGroup);
};
var AutoComplete$1 = AutoComplete;
function noop$S() {
}
var AlertProps = {
  type: PropTypes.oneOf(["success", "info", "warning", "error"]),
  closable: PropTypes.bool,
  closeText: PropTypes.any,
  message: PropTypes.any,
  description: PropTypes.any,
  afterClose: PropTypes.func.def(noop$S),
  showIcon: PropTypes.bool,
  iconType: PropTypes.string,
  prefixCls: PropTypes.string,
  banner: PropTypes.bool,
  icon: PropTypes.any
};
var Alert = {
  name: "AAlert",
  props: AlertProps,
  mixins: [BaseMixin],
  inject: {
    configProvider: { "default": function _default23() {
      return ConfigConsumerProps;
    } }
  },
  data: function data19() {
    return {
      closing: false,
      closed: false
    };
  },
  methods: {
    handleClose: function handleClose(e) {
      e.preventDefault();
      var dom = this.$el;
      dom.style.height = dom.offsetHeight + "px";
      dom.style.height = dom.offsetHeight + "px";
      this.setState({
        closing: true
      });
      this.$emit("close", e);
    },
    animationEnd: function animationEnd() {
      this.setState({
        closing: false,
        closed: true
      });
      this.afterClose();
    }
  },
  render: function render42() {
    var _classNames;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, banner = this.banner, closing = this.closing, closed = this.closed;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("alert", customizePrefixCls);
    var closable = this.closable, type3 = this.type, showIcon = this.showIcon, iconType = this.iconType;
    var closeText = getComponentFromProp(this, "closeText");
    var description = getComponentFromProp(this, "description");
    var message2 = getComponentFromProp(this, "message");
    var icon = getComponentFromProp(this, "icon");
    showIcon = banner && showIcon === void 0 ? true : showIcon;
    type3 = banner && type3 === void 0 ? "warning" : type3 || "info";
    var iconTheme = "filled";
    if (!iconType) {
      switch (type3) {
        case "success":
          iconType = "check-circle";
          break;
        case "info":
          iconType = "info-circle";
          break;
        case "error":
          iconType = "close-circle";
          break;
        case "warning":
          iconType = "exclamation-circle";
          break;
        default:
          iconType = "default";
      }
      if (description) {
        iconTheme = "outlined";
      }
    }
    if (closeText) {
      closable = true;
    }
    var alertCls = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-" + type3, true), _default$8(_classNames, prefixCls2 + "-closing", closing), _default$8(_classNames, prefixCls2 + "-with-description", !!description), _default$8(_classNames, prefixCls2 + "-no-icon", !showIcon), _default$8(_classNames, prefixCls2 + "-banner", !!banner), _default$8(_classNames, prefixCls2 + "-closable", closable), _classNames));
    var closeIcon = closable ? h(
      "button",
      {
        attrs: {
          type: "button",
          tabIndex: 0
        },
        on: {
          "click": this.handleClose
        },
        "class": prefixCls2 + "-close-icon"
      },
      [closeText ? h(
        "span",
        { "class": prefixCls2 + "-close-text" },
        [closeText]
      ) : h(Icon$1, {
        attrs: { type: "close" }
      })]
    ) : null;
    var iconNode = icon && (isValidElement(icon) ? cloneElement(icon, {
      "class": prefixCls2 + "-icon"
    }) : h(
      "span",
      { "class": prefixCls2 + "-icon" },
      [icon]
    )) || h(Icon$1, {
      "class": prefixCls2 + "-icon",
      attrs: { type: iconType, theme: iconTheme }
    });
    var transitionProps = getTransitionProps$1(prefixCls2 + "-slide-up", {
      appear: false,
      afterLeave: this.animationEnd
    });
    return closed ? null : h(
      "transition",
      transitionProps,
      [h(
        "div",
        {
          directives: [{
            name: "show",
            value: !closing
          }],
          "class": alertCls,
          attrs: { "data-show": !closing }
        },
        [showIcon ? iconNode : null, h(
          "span",
          { "class": prefixCls2 + "-message" },
          [message2]
        ), h(
          "span",
          { "class": prefixCls2 + "-description" },
          [description]
        ), closeIcon]
      )]
    );
  }
};
Alert.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Alert.name, Alert);
};
var Alert$1 = Alert;
var Avatar$2 = {
  name: "AAvatar",
  props: {
    prefixCls: {
      type: String,
      "default": void 0
    },
    shape: {
      validator: function validator3(val) {
        return ["circle", "square"].includes(val);
      },
      "default": "circle"
    },
    size: {
      validator: function validator4(val) {
        return typeof val === "number" || ["small", "large", "default"].includes(val);
      },
      "default": "default"
    },
    src: String,
    srcSet: String,
    icon: PropTypes.any,
    alt: String,
    loadError: Function
  },
  inject: {
    configProvider: { "default": function _default24() {
      return ConfigConsumerProps;
    } }
  },
  data: function data20() {
    return {
      isImgExist: true,
      isMounted: false,
      scale: 1
    };
  },
  watch: {
    src: function src() {
      var _this = this;
      this.$nextTick(function() {
        _this.isImgExist = true;
        _this.scale = 1;
        _this.$forceUpdate();
      });
    }
  },
  mounted: function mounted21() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.setScale();
      _this2.isMounted = true;
    });
  },
  updated: function updated16() {
    var _this3 = this;
    this.$nextTick(function() {
      _this3.setScale();
    });
  },
  methods: {
    setScale: function setScale() {
      if (!this.$refs.avatarChildren || !this.$refs.avatarNode) {
        return;
      }
      var childrenWidth = this.$refs.avatarChildren.offsetWidth;
      var nodeWidth = this.$refs.avatarNode.offsetWidth;
      if (childrenWidth === 0 || nodeWidth === 0 || this.lastChildrenWidth === childrenWidth && this.lastNodeWidth === nodeWidth) {
        return;
      }
      this.lastChildrenWidth = childrenWidth;
      this.lastNodeWidth = nodeWidth;
      this.scale = nodeWidth - 8 < childrenWidth ? (nodeWidth - 8) / childrenWidth : 1;
    },
    handleImgLoadError: function handleImgLoadError() {
      var loadError = this.$props.loadError;
      var errorFlag = loadError ? loadError() : void 0;
      if (errorFlag !== false) {
        this.isImgExist = false;
      }
    }
  },
  render: function render43() {
    var _sizeCls, _extends3;
    var h = arguments[0];
    var _$props = this.$props, customizePrefixCls = _$props.prefixCls, shape2 = _$props.shape, size = _$props.size, src3 = _$props.src, alt = _$props.alt, srcSet = _$props.srcSet;
    var icon = getComponentFromProp(this, "icon");
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("avatar", customizePrefixCls);
    var _$data = this.$data, isImgExist = _$data.isImgExist, scale = _$data.scale, isMounted = _$data.isMounted;
    var sizeCls = (_sizeCls = {}, _default$8(_sizeCls, prefixCls2 + "-lg", size === "large"), _default$8(_sizeCls, prefixCls2 + "-sm", size === "small"), _sizeCls);
    var classString = _default$6(_default$8({}, prefixCls2, true), sizeCls, (_extends3 = {}, _default$8(_extends3, prefixCls2 + "-" + shape2, shape2), _default$8(_extends3, prefixCls2 + "-image", src3 && isImgExist), _default$8(_extends3, prefixCls2 + "-icon", icon), _extends3));
    var sizeStyle = typeof size === "number" ? {
      width: size + "px",
      height: size + "px",
      lineHeight: size + "px",
      fontSize: icon ? size / 2 + "px" : "18px"
    } : {};
    var children = this.$slots["default"];
    if (src3 && isImgExist) {
      children = h("img", {
        attrs: { src: src3, srcSet, alt },
        on: {
          "error": this.handleImgLoadError
        }
      });
    } else if (icon) {
      if (typeof icon === "string") {
        children = h(Icon$1, {
          attrs: { type: icon }
        });
      } else {
        children = icon;
      }
    } else {
      var childrenNode = this.$refs.avatarChildren;
      if (childrenNode || scale !== 1) {
        var transformString = "scale(" + scale + ") translateX(-50%)";
        var childrenStyle = {
          msTransform: transformString,
          WebkitTransform: transformString,
          transform: transformString
        };
        var sizeChildrenStyle = typeof size === "number" ? {
          lineHeight: size + "px"
        } : {};
        children = h(
          "span",
          {
            "class": prefixCls2 + "-string",
            ref: "avatarChildren",
            style: _default$6({}, sizeChildrenStyle, childrenStyle)
          },
          [children]
        );
      } else {
        var _childrenStyle = {};
        if (!isMounted) {
          _childrenStyle.opacity = 0;
        }
        children = h(
          "span",
          { "class": prefixCls2 + "-string", ref: "avatarChildren", style: { opacity: 0 } },
          [children]
        );
      }
    }
    return h(
      "span",
      _mergeJSXProps([{ ref: "avatarNode" }, { on: getListeners(this), "class": classString, style: sizeStyle }]),
      [children]
    );
  }
};
Avatar$2.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Avatar$2.name, Avatar$2);
};
function getDefaultTarget() {
  return window;
}
var BackTopProps = {
  visibilityHeight: PropTypes.number,
  target: PropTypes.func,
  prefixCls: PropTypes.string
};
var BackTop = {
  name: "ABackTop",
  mixins: [BaseMixin],
  props: _default$6({}, BackTopProps, {
    visibilityHeight: PropTypes.number.def(400)
  }),
  inject: {
    configProvider: { "default": function _default25() {
      return ConfigConsumerProps;
    } }
  },
  data: function data21() {
    this.scrollEvent = null;
    return {
      visible: false
    };
  },
  mounted: function mounted22() {
    var _this = this;
    this.$nextTick(function() {
      var getTarget = _this.target || getDefaultTarget;
      _this.scrollEvent = addEventListenerWrap(getTarget(), "scroll", _this.handleScroll);
      _this.handleScroll();
    });
  },
  activated: function activated() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.handleScroll();
    });
  },
  beforeDestroy: function beforeDestroy19() {
    if (this.scrollEvent) {
      this.scrollEvent.remove();
    }
  },
  methods: {
    getCurrentScrollTop: function getCurrentScrollTop() {
      var getTarget = this.target || getDefaultTarget;
      var targetNode = getTarget();
      if (targetNode === window) {
        return window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;
      }
      return targetNode.scrollTop;
    },
    scrollToTop: function scrollToTop(e) {
      var _target = this.target, target2 = _target === void 0 ? getDefaultTarget : _target;
      scrollTo$1(0, {
        getContainer: target2
      });
      this.$emit("click", e);
    },
    handleScroll: function handleScroll2() {
      var visibilityHeight = this.visibilityHeight, _target2 = this.target, target2 = _target2 === void 0 ? getDefaultTarget : _target2;
      var scrollTop2 = getScroll$4(target2(), true);
      this.setState({
        visible: scrollTop2 > visibilityHeight
      });
    }
  },
  render: function render44() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("back-top", customizePrefixCls);
    var defaultElement = h(
      "div",
      { "class": prefixCls2 + "-content" },
      [h("div", { "class": prefixCls2 + "-icon" })]
    );
    var divProps = {
      on: _default$6({}, getListeners(this), {
        click: this.scrollToTop
      }),
      "class": prefixCls2
    };
    var backTopBtn = this.visible ? h(
      "div",
      divProps,
      [$slots["default"] || defaultElement]
    ) : null;
    var transitionProps = getTransitionProps$1("fade");
    return h(
      "transition",
      transitionProps,
      [backTopBtn]
    );
  }
};
BackTop.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(BackTop.name, BackTop);
};
var BackTop$1 = BackTop;
function getNumberArray(num) {
  return num ? num.toString().split("").reverse().map(function(i) {
    var current2 = Number(i);
    return isNaN(current2) ? i : current2;
  }) : [];
}
var ScrollNumberProps = {
  prefixCls: PropTypes.string,
  count: PropTypes.any,
  component: PropTypes.string,
  title: PropTypes.oneOfType([PropTypes.number, PropTypes.string, null]),
  displayComponent: PropTypes.any,
  className: PropTypes.object
};
var ScrollNumber = {
  mixins: [BaseMixin],
  props: ScrollNumberProps,
  inject: {
    configProvider: { "default": function _default26() {
      return ConfigConsumerProps;
    } }
  },
  data: function data22() {
    return {
      animateStarted: true,
      sCount: this.count
    };
  },
  watch: {
    count: function count() {
      this.lastCount = this.sCount;
      this.setState({
        animateStarted: true
      });
    }
  },
  updated: function updated17() {
    var _this = this;
    var animateStarted = this.animateStarted, count2 = this.count;
    if (animateStarted) {
      this.clearTimeout();
      this.timeout = setTimeout(function() {
        _this.setState({
          animateStarted: false,
          sCount: count2
        }, _this.onAnimated);
      });
    }
  },
  beforeDestroy: function beforeDestroy20() {
    this.clearTimeout();
  },
  methods: {
    clearTimeout: function(_clearTimeout) {
      function clearTimeout2() {
        return _clearTimeout.apply(this, arguments);
      }
      clearTimeout2.toString = function() {
        return _clearTimeout.toString();
      };
      return clearTimeout2;
    }(function() {
      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = void 0;
      }
    }),
    getPositionByNum: function getPositionByNum(num, i) {
      var sCount = this.sCount;
      var currentCount = Math.abs(Number(sCount));
      var lastCount = Math.abs(Number(this.lastCount));
      var currentDigit = Math.abs(getNumberArray(sCount)[i]);
      var lastDigit = Math.abs(getNumberArray(this.lastCount)[i]);
      if (this.animateStarted) {
        return 10 + num;
      }
      if (currentCount > lastCount) {
        if (currentDigit >= lastDigit) {
          return 10 + num;
        }
        return 20 + num;
      }
      if (currentDigit <= lastDigit) {
        return 10 + num;
      }
      return num;
    },
    onAnimated: function onAnimated() {
      this.$emit("animated");
    },
    renderNumberList: function renderNumberList(position, className) {
      var h = this.$createElement;
      var childrenToReturn = [];
      for (var i = 0; i < 30; i++) {
        childrenToReturn.push(h(
          "p",
          {
            key: i.toString(),
            "class": classNames(className, {
              current: position === i
            })
          },
          [i % 10]
        ));
      }
      return childrenToReturn;
    },
    renderCurrentNumber: function renderCurrentNumber(prefixCls2, num, i) {
      var h = this.$createElement;
      if (typeof num === "number") {
        var position = this.getPositionByNum(num, i);
        var removeTransition = this.animateStarted || getNumberArray(this.lastCount)[i] === void 0;
        var style3 = {
          transition: removeTransition ? "none" : void 0,
          msTransform: "translateY(" + -position * 100 + "%)",
          WebkitTransform: "translateY(" + -position * 100 + "%)",
          transform: "translateY(" + -position * 100 + "%)"
        };
        return h(
          "span",
          { "class": prefixCls2 + "-only", style: style3, key: i },
          [this.renderNumberList(position, prefixCls2 + "-only-unit")]
        );
      }
      return h(
        "span",
        { key: "symbol", "class": prefixCls2 + "-symbol" },
        [num]
      );
    },
    renderNumberElement: function renderNumberElement(prefixCls2) {
      var _this2 = this;
      var sCount = this.sCount;
      if (sCount && Number(sCount) % 1 === 0) {
        return getNumberArray(sCount).map(function(num, i) {
          return _this2.renderCurrentNumber(prefixCls2, num, i);
        }).reverse();
      }
      return sCount;
    }
  },
  render: function render45() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, title = this.title, _component = this.component, Tag2 = _component === void 0 ? "sup" : _component, displayComponent = this.displayComponent, className = this.className;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("scroll-number", customizePrefixCls);
    if (displayComponent) {
      return cloneElement(displayComponent, {
        "class": prefixCls2 + "-custom-component"
      });
    }
    var style3 = getStyle$1(this, true);
    var restProps = omit$2(this.$props, ["count", "component", "prefixCls", "displayComponent"]);
    var newProps = {
      props: _default$6({}, restProps),
      attrs: {
        title
      },
      style: style3,
      "class": classNames(prefixCls2, className)
    };
    if (style3 && style3.borderColor) {
      newProps.style.boxShadow = "0 0 0 1px " + style3.borderColor + " inset";
    }
    return h(
      Tag2,
      newProps,
      [this.renderNumberElement(prefixCls2)]
    );
  }
};
var tuple = function tuple2() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return args;
};
var PresetColorTypes$1 = tuple("pink", "red", "yellow", "orange", "cyan", "green", "blue", "purple", "geekblue", "magenta", "volcano", "gold", "lime");
var isNumeric$1 = function isNumeric(value27) {
  return !isNaN(parseFloat(value27)) && isFinite(value27);
};
var isNumeric$2 = isNumeric$1;
var BadgeProps = {
  count: PropTypes.any,
  showZero: PropTypes.bool,
  overflowCount: PropTypes.number,
  dot: PropTypes.bool,
  prefixCls: PropTypes.string,
  scrollNumberPrefixCls: PropTypes.string,
  status: PropTypes.oneOf(["success", "processing", "default", "error", "warning"]),
  color: PropTypes.string,
  text: PropTypes.string,
  offset: PropTypes.array,
  numberStyle: PropTypes.object.def(function() {
    return {};
  }),
  title: PropTypes.string
};
function isPresetColor(color) {
  return PresetColorTypes$1.indexOf(color) !== -1;
}
var Badge = {
  name: "ABadge",
  props: initDefaultProps(BadgeProps, {
    showZero: false,
    dot: false,
    overflowCount: 99
  }),
  inject: {
    configProvider: { "default": function _default27() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    getNumberedDispayCount: function getNumberedDispayCount() {
      var overflowCount = this.$props.overflowCount;
      var count2 = this.badgeCount;
      var displayCount = count2 > overflowCount ? overflowCount + "+" : count2;
      return displayCount;
    },
    getDispayCount: function getDispayCount() {
      var isDot2 = this.isDot();
      if (isDot2) {
        return "";
      }
      return this.getNumberedDispayCount();
    },
    getScrollNumberTitle: function getScrollNumberTitle() {
      var title = this.$props.title;
      var count2 = this.badgeCount;
      if (title) {
        return title;
      }
      return typeof count2 === "string" || typeof count2 === "number" ? count2 : void 0;
    },
    getStyleWithOffset: function getStyleWithOffset() {
      var _$props = this.$props, offset4 = _$props.offset, numberStyle = _$props.numberStyle;
      return offset4 ? _default$6({
        right: -parseInt(offset4[0], 10) + "px",
        marginTop: isNumeric$2(offset4[1]) ? offset4[1] + "px" : offset4[1]
      }, numberStyle) : _default$6({}, numberStyle);
    },
    getBadgeClassName: function getBadgeClassName(prefixCls2) {
      var _classNames;
      var children = filterEmpty(this.$slots["default"]);
      var hasStatus2 = this.hasStatus();
      return classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-status", hasStatus2), _default$8(_classNames, prefixCls2 + "-dot-status", hasStatus2 && this.dot && !this.isZero()), _default$8(_classNames, prefixCls2 + "-not-a-wrapper", !children.length), _classNames));
    },
    hasStatus: function hasStatus() {
      var _$props2 = this.$props, status = _$props2.status, color = _$props2.color;
      return !!status || !!color;
    },
    isZero: function isZero() {
      var numberedDispayCount = this.getNumberedDispayCount();
      return numberedDispayCount === "0" || numberedDispayCount === 0;
    },
    isDot: function isDot() {
      var dot = this.$props.dot;
      var isZero2 = this.isZero();
      return dot && !isZero2 || this.hasStatus();
    },
    isHidden: function isHidden() {
      var showZero = this.$props.showZero;
      var displayCount = this.getDispayCount();
      var isZero2 = this.isZero();
      var isDot2 = this.isDot();
      var isEmpty = displayCount === null || displayCount === void 0 || displayCount === "";
      return (isEmpty || isZero2 && !showZero) && !isDot2;
    },
    renderStatusText: function renderStatusText(prefixCls2) {
      var h = this.$createElement;
      var text = this.$props.text;
      var hidden = this.isHidden();
      return hidden || !text ? null : h(
        "span",
        { "class": prefixCls2 + "-status-text" },
        [text]
      );
    },
    renderDispayComponent: function renderDispayComponent() {
      var count2 = this.badgeCount;
      var customNode = count2;
      if (!customNode || (typeof customNode === "undefined" ? "undefined" : _default$7(customNode)) !== "object") {
        return void 0;
      }
      return cloneElement(customNode, {
        style: this.getStyleWithOffset()
      });
    },
    renderBadgeNumber: function renderBadgeNumber(prefixCls2, scrollNumberPrefixCls) {
      var _scrollNumberCls;
      var h = this.$createElement;
      var _$props3 = this.$props, status = _$props3.status, color = _$props3.color;
      var count2 = this.badgeCount;
      var displayCount = this.getDispayCount();
      var isDot2 = this.isDot();
      var hidden = this.isHidden();
      var scrollNumberCls = (_scrollNumberCls = {}, _default$8(_scrollNumberCls, prefixCls2 + "-dot", isDot2), _default$8(_scrollNumberCls, prefixCls2 + "-count", !isDot2), _default$8(_scrollNumberCls, prefixCls2 + "-multiple-words", !isDot2 && count2 && count2.toString && count2.toString().length > 1), _default$8(_scrollNumberCls, prefixCls2 + "-status-" + status, !!status), _default$8(_scrollNumberCls, prefixCls2 + "-status-" + color, isPresetColor(color)), _scrollNumberCls);
      var statusStyle = this.getStyleWithOffset();
      if (color && !isPresetColor(color)) {
        statusStyle = statusStyle || {};
        statusStyle.background = color;
      }
      return hidden ? null : h(ScrollNumber, {
        attrs: {
          prefixCls: scrollNumberPrefixCls,
          "data-show": !hidden,
          className: scrollNumberCls,
          count: displayCount,
          displayComponent: this.renderDispayComponent(),
          title: this.getScrollNumberTitle()
        },
        directives: [{
          name: "show",
          value: !hidden
        }],
        style: statusStyle,
        key: "scrollNumber"
      });
    }
  },
  render: function render46() {
    var _classNames2;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, customizeScrollNumberPrefixCls = this.scrollNumberPrefixCls, status = this.status, text = this.text, color = this.color, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("badge", customizePrefixCls);
    var scrollNumberPrefixCls = getPrefixCls5("scroll-number", customizeScrollNumberPrefixCls);
    var children = filterEmpty($slots["default"]);
    var count2 = getComponentFromProp(this, "count");
    if (Array.isArray(count2)) {
      count2 = count2[0];
    }
    this.badgeCount = count2;
    var scrollNumber = this.renderBadgeNumber(prefixCls2, scrollNumberPrefixCls);
    var statusText = this.renderStatusText(prefixCls2);
    var statusCls = classNames((_classNames2 = {}, _default$8(_classNames2, prefixCls2 + "-status-dot", this.hasStatus()), _default$8(_classNames2, prefixCls2 + "-status-" + status, !!status), _default$8(_classNames2, prefixCls2 + "-status-" + color, isPresetColor(color)), _classNames2));
    var statusStyle = {};
    if (color && !isPresetColor(color)) {
      statusStyle.background = color;
    }
    if (!children.length && this.hasStatus()) {
      var styleWithOffset = this.getStyleWithOffset();
      var statusTextColor = styleWithOffset && styleWithOffset.color;
      return h(
        "span",
        _mergeJSXProps([{ on: getListeners(this) }, {
          "class": this.getBadgeClassName(prefixCls2),
          style: styleWithOffset
        }]),
        [h("span", { "class": statusCls, style: statusStyle }), h(
          "span",
          { style: { color: statusTextColor }, "class": prefixCls2 + "-status-text" },
          [text]
        )]
      );
    }
    var transitionProps = getTransitionProps$1(children.length ? prefixCls2 + "-zoom" : "");
    return h(
      "span",
      _mergeJSXProps([{ on: getListeners(this) }, { "class": this.getBadgeClassName(prefixCls2) }]),
      [children, h(
        "transition",
        transitionProps,
        [scrollNumber]
      ), statusText]
    );
  }
};
Badge.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Badge.name, Badge);
};
var autoAdjustOverflow$3 = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset$4 = [0, 0];
var placements$5 = {
  topLeft: {
    points: ["bl", "tl"],
    overflow: autoAdjustOverflow$3,
    offset: [0, -4],
    targetOffset: targetOffset$4
  },
  topCenter: {
    points: ["bc", "tc"],
    overflow: autoAdjustOverflow$3,
    offset: [0, -4],
    targetOffset: targetOffset$4
  },
  topRight: {
    points: ["br", "tr"],
    overflow: autoAdjustOverflow$3,
    offset: [0, -4],
    targetOffset: targetOffset$4
  },
  bottomLeft: {
    points: ["tl", "bl"],
    overflow: autoAdjustOverflow$3,
    offset: [0, 4],
    targetOffset: targetOffset$4
  },
  bottomCenter: {
    points: ["tc", "bc"],
    overflow: autoAdjustOverflow$3,
    offset: [0, 4],
    targetOffset: targetOffset$4
  },
  bottomRight: {
    points: ["tr", "br"],
    overflow: autoAdjustOverflow$3,
    offset: [0, 4],
    targetOffset: targetOffset$4
  }
};
var placements$6 = placements$5;
var Dropdown$2 = {
  mixins: [BaseMixin],
  props: {
    minOverlayWidthMatchTrigger: PropTypes.bool,
    prefixCls: PropTypes.string.def("rc-dropdown"),
    transitionName: PropTypes.string,
    overlayClassName: PropTypes.string.def(""),
    openClassName: PropTypes.string,
    animation: PropTypes.any,
    align: PropTypes.object,
    overlayStyle: PropTypes.object.def(function() {
      return {};
    }),
    placement: PropTypes.string.def("bottomLeft"),
    overlay: PropTypes.any,
    trigger: PropTypes.array.def(["hover"]),
    alignPoint: PropTypes.bool,
    showAction: PropTypes.array.def([]),
    hideAction: PropTypes.array.def([]),
    getPopupContainer: PropTypes.func,
    visible: PropTypes.bool,
    defaultVisible: PropTypes.bool.def(false),
    mouseEnterDelay: PropTypes.number.def(0.15),
    mouseLeaveDelay: PropTypes.number.def(0.1)
  },
  data: function data23() {
    var sVisible = this.defaultVisible;
    if (hasProp(this, "visible")) {
      sVisible = this.visible;
    }
    return {
      sVisible
    };
  },
  watch: {
    visible: function visible2(val) {
      if (val !== void 0) {
        this.setState({
          sVisible: val
        });
      }
    }
  },
  methods: {
    onClick: function onClick6(e) {
      if (!hasProp(this, "visible")) {
        this.setState({
          sVisible: false
        });
      }
      this.$emit("overlayClick", e);
      if (this.childOriginEvents.click) {
        this.childOriginEvents.click(e);
      }
    },
    onVisibleChange: function onVisibleChange2(visible11) {
      if (!hasProp(this, "visible")) {
        this.setState({
          sVisible: visible11
        });
      }
      this.__emit("visibleChange", visible11);
    },
    getMinOverlayWidthMatchTrigger: function getMinOverlayWidthMatchTrigger() {
      var props2 = getOptionProps(this);
      var minOverlayWidthMatchTrigger = props2.minOverlayWidthMatchTrigger, alignPoint2 = props2.alignPoint;
      if ("minOverlayWidthMatchTrigger" in props2) {
        return minOverlayWidthMatchTrigger;
      }
      return !alignPoint2;
    },
    getOverlayElement: function getOverlayElement() {
      var overlay = this.overlay || this.$slots.overlay || this.$scopedSlots.overlay;
      var overlayElement = void 0;
      if (typeof overlay === "function") {
        overlayElement = overlay();
      } else {
        overlayElement = overlay;
      }
      return overlayElement;
    },
    getMenuElement: function getMenuElement() {
      var _this = this;
      var onClick15 = this.onClick, prefixCls2 = this.prefixCls, $slots = this.$slots;
      this.childOriginEvents = getEvents($slots.overlay[0]);
      var overlayElement = this.getOverlayElement();
      var extraOverlayProps = {
        props: {
          prefixCls: prefixCls2 + "-menu",
          getPopupContainer: function getPopupContainer() {
            return _this.getPopupDomNode();
          }
        },
        on: {
          click: onClick15
        }
      };
      if (typeof overlayElement.type === "string") {
        delete extraOverlayProps.props.prefixCls;
      }
      return cloneElement($slots.overlay[0], extraOverlayProps);
    },
    getMenuElementOrLambda: function getMenuElementOrLambda() {
      var overlay = this.overlay || this.$slots.overlay || this.$scopedSlots.overlay;
      if (typeof overlay === "function") {
        return this.getMenuElement;
      }
      return this.getMenuElement();
    },
    getPopupDomNode: function getPopupDomNode3() {
      return this.$refs.trigger.getPopupDomNode();
    },
    getOpenClassName: function getOpenClassName2() {
      var _$props = this.$props, openClassName = _$props.openClassName, prefixCls2 = _$props.prefixCls;
      if (openClassName !== void 0) {
        return openClassName;
      }
      return prefixCls2 + "-open";
    },
    afterVisibleChange: function afterVisibleChange(visible11) {
      if (visible11 && this.getMinOverlayWidthMatchTrigger()) {
        var overlayNode = this.getPopupDomNode();
        var rootNode = this.$el;
        if (rootNode && overlayNode && rootNode.offsetWidth > overlayNode.offsetWidth) {
          overlayNode.style.minWidth = rootNode.offsetWidth + "px";
          if (this.$refs.trigger && this.$refs.trigger._component && this.$refs.trigger._component.$refs && this.$refs.trigger._component.$refs.alignInstance) {
            this.$refs.trigger._component.$refs.alignInstance.forceAlign();
          }
        }
      }
    },
    renderChildren: function renderChildren3() {
      var children = this.$slots["default"] && this.$slots["default"][0];
      var sVisible = this.sVisible;
      return sVisible && children ? cloneElement(children, { "class": this.getOpenClassName() }) : children;
    }
  },
  render: function render47() {
    var h = arguments[0];
    var _$props2 = this.$props, prefixCls2 = _$props2.prefixCls, transitionName2 = _$props2.transitionName, animation2 = _$props2.animation, align = _$props2.align, placement2 = _$props2.placement, getPopupContainer = _$props2.getPopupContainer, showAction = _$props2.showAction, hideAction = _$props2.hideAction, overlayClassName = _$props2.overlayClassName, overlayStyle = _$props2.overlayStyle, trigger2 = _$props2.trigger, otherProps = _default$2(_$props2, ["prefixCls", "transitionName", "animation", "align", "placement", "getPopupContainer", "showAction", "hideAction", "overlayClassName", "overlayStyle", "trigger"]);
    var triggerHideAction = hideAction;
    if (!triggerHideAction && trigger2.indexOf("contextmenu") !== -1) {
      triggerHideAction = ["click"];
    }
    var triggerProps = {
      props: _default$6({}, otherProps, {
        prefixCls: prefixCls2,
        popupClassName: overlayClassName,
        popupStyle: overlayStyle,
        builtinPlacements: placements$6,
        action: trigger2,
        showAction,
        hideAction: triggerHideAction || [],
        popupPlacement: placement2,
        popupAlign: align,
        popupTransitionName: transitionName2,
        popupAnimation: animation2,
        popupVisible: this.sVisible,
        afterPopupVisibleChange: this.afterVisibleChange,
        getPopupContainer
      }),
      on: {
        popupVisibleChange: this.onVisibleChange
      },
      ref: "trigger"
    };
    return h(
      Trigger,
      triggerProps,
      [this.renderChildren(), h(
        "template",
        { slot: "popup" },
        [this.$slots.overlay && this.getMenuElement()]
      )]
    );
  }
};
var getDropdownProps = function() {
  return {
    trigger: PropTypes.array.def(["hover"]),
    overlay: PropTypes.any,
    visible: PropTypes.bool,
    disabled: PropTypes.bool,
    align: PropTypes.object,
    getPopupContainer: PropTypes.func,
    prefixCls: PropTypes.string,
    transitionName: PropTypes.string,
    placement: PropTypes.oneOf(["topLeft", "topCenter", "topRight", "bottomLeft", "bottomCenter", "bottomRight"]),
    overlayClassName: PropTypes.string,
    overlayStyle: PropTypes.object,
    forceRender: PropTypes.bool,
    mouseEnterDelay: PropTypes.number,
    mouseLeaveDelay: PropTypes.number,
    openClassName: PropTypes.string,
    minOverlayWidthMatchTrigger: PropTypes.bool
  };
};
var ButtonTypesProps = buttonTypes();
var DropdownProps$1 = getDropdownProps();
var ButtonGroup = Button$1.Group;
var DropdownButtonProps = _default$6({}, ButtonGroupProps, DropdownProps$1, {
  type: PropTypes.oneOf(["primary", "ghost", "dashed", "danger", "default"]).def("default"),
  size: PropTypes.oneOf(["small", "large", "default"]).def("default"),
  htmlType: ButtonTypesProps.htmlType,
  href: PropTypes.string,
  disabled: PropTypes.bool,
  prefixCls: PropTypes.string,
  placement: DropdownProps$1.placement.def("bottomRight"),
  icon: PropTypes.any,
  title: PropTypes.string
});
var DropdownButton = {
  name: "ADropdownButton",
  model: {
    prop: "visible",
    event: "visibleChange"
  },
  props: DropdownButtonProps,
  provide: function provide6() {
    return {
      savePopupRef: this.savePopupRef
    };
  },
  inject: {
    configProvider: { "default": function _default28() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    savePopupRef: function savePopupRef3(ref) {
      this.popupRef = ref;
    },
    onClick: function onClick7(e) {
      this.$emit("click", e);
    },
    onVisibleChange: function onVisibleChange3(val) {
      this.$emit("visibleChange", val);
    }
  },
  render: function render48() {
    var h = arguments[0];
    var _$props = this.$props, type3 = _$props.type, disabled = _$props.disabled, htmlType = _$props.htmlType, customizePrefixCls = _$props.prefixCls, trigger2 = _$props.trigger, align = _$props.align, visible11 = _$props.visible, placement2 = _$props.placement, getPopupContainer = _$props.getPopupContainer, href2 = _$props.href, title = _$props.title, restProps = _default$2(_$props, ["type", "disabled", "htmlType", "prefixCls", "trigger", "align", "visible", "placement", "getPopupContainer", "href", "title"]);
    var icon = getComponentFromProp(this, "icon") || h(Icon$1, {
      attrs: { type: "ellipsis" }
    });
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("dropdown-button", customizePrefixCls);
    var dropdownProps = {
      props: {
        align,
        disabled,
        trigger: disabled ? [] : trigger2,
        placement: placement2,
        getPopupContainer: getPopupContainer || getContextPopupContainer
      },
      on: {
        visibleChange: this.onVisibleChange
      }
    };
    if (hasProp(this, "visible")) {
      dropdownProps.props.visible = visible11;
    }
    var buttonGroupProps = {
      props: _default$6({}, restProps),
      "class": prefixCls2
    };
    return h(
      ButtonGroup,
      buttonGroupProps,
      [h(
        Button$1,
        {
          attrs: {
            type: type3,
            disabled,
            htmlType,
            href: href2,
            title
          },
          on: {
            "click": this.onClick
          }
        },
        [this.$slots["default"]]
      ), h(
        Dropdown$1,
        dropdownProps,
        [h(
          "template",
          { slot: "overlay" },
          [getComponentFromProp(this, "overlay")]
        ), h(
          Button$1,
          {
            attrs: { type: type3 }
          },
          [icon]
        )]
      )]
    );
  }
};
var DropdownProps = getDropdownProps();
var Dropdown = {
  name: "ADropdown",
  props: _default$6({}, DropdownProps, {
    prefixCls: PropTypes.string,
    mouseEnterDelay: PropTypes.number.def(0.15),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    placement: DropdownProps.placement.def("bottomLeft")
  }),
  model: {
    prop: "visible",
    event: "visibleChange"
  },
  provide: function provide7() {
    return {
      savePopupRef: this.savePopupRef
    };
  },
  inject: {
    configProvider: { "default": function _default29() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    savePopupRef: function savePopupRef4(ref) {
      this.popupRef = ref;
    },
    getTransitionName: function getTransitionName3() {
      var _$props = this.$props, _$props$placement = _$props.placement, placement2 = _$props$placement === void 0 ? "" : _$props$placement, transitionName2 = _$props.transitionName;
      if (transitionName2 !== void 0) {
        return transitionName2;
      }
      if (placement2.indexOf("top") >= 0) {
        return "slide-down";
      }
      return "slide-up";
    },
    renderOverlay: function renderOverlay(prefixCls2) {
      var h = this.$createElement;
      var overlay = getComponentFromProp(this, "overlay");
      var overlayNode = Array.isArray(overlay) ? overlay[0] : overlay;
      var overlayProps = overlayNode && getPropsData(overlayNode);
      var _ref = overlayProps || {}, _ref$selectable = _ref.selectable, selectable = _ref$selectable === void 0 ? false : _ref$selectable, _ref$focusable = _ref.focusable, focusable = _ref$focusable === void 0 ? true : _ref$focusable;
      var expandIcon = h(
        "span",
        { "class": prefixCls2 + "-menu-submenu-arrow" },
        [h(Icon$1, {
          attrs: { type: "right" },
          "class": prefixCls2 + "-menu-submenu-arrow-icon"
        })]
      );
      var fixedModeOverlay = overlayNode && overlayNode.componentOptions ? cloneElement(overlayNode, {
        props: {
          mode: "vertical",
          selectable,
          focusable,
          expandIcon
        }
      }) : overlay;
      return fixedModeOverlay;
    }
  },
  render: function render49() {
    var h = arguments[0];
    var $slots = this.$slots;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, trigger2 = props2.trigger, disabled = props2.disabled, getPopupContainer = props2.getPopupContainer;
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("dropdown", customizePrefixCls);
    var dropdownTrigger = cloneElement($slots["default"], {
      "class": prefixCls2 + "-trigger",
      props: {
        disabled
      }
    });
    var triggerActions = disabled ? [] : trigger2;
    var alignPoint2 = void 0;
    if (triggerActions && triggerActions.indexOf("contextmenu") !== -1) {
      alignPoint2 = true;
    }
    var dropdownProps = {
      props: _default$6({
        alignPoint: alignPoint2
      }, props2, {
        prefixCls: prefixCls2,
        getPopupContainer: getPopupContainer || getContextPopupContainer,
        transitionName: this.getTransitionName(),
        trigger: triggerActions
      }),
      on: getListeners(this)
    };
    return h(
      Dropdown$2,
      dropdownProps,
      [dropdownTrigger, h(
        "template",
        { slot: "overlay" },
        [this.renderOverlay(prefixCls2)]
      )]
    );
  }
};
Dropdown.Button = DropdownButton;
var Dropdown$1 = Dropdown;
var BreadcrumbItem = {
  name: "ABreadcrumbItem",
  __ANT_BREADCRUMB_ITEM: true,
  props: {
    prefixCls: PropTypes.string,
    href: PropTypes.string,
    separator: PropTypes.any.def("/"),
    overlay: PropTypes.any
  },
  inject: {
    configProvider: { "default": function _default30() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    renderBreadcrumbNode: function renderBreadcrumbNode(breadcrumbItem, prefixCls2) {
      var h = this.$createElement;
      var overlay = getComponentFromProp(this, "overlay");
      if (overlay) {
        return h(
          Dropdown$1,
          {
            attrs: { overlay, placement: "bottomCenter" }
          },
          [h(
            "span",
            { "class": prefixCls2 + "-overlay-link" },
            [breadcrumbItem, h(Icon$1, {
              attrs: { type: "down" }
            })]
          )]
        );
      }
      return breadcrumbItem;
    }
  },
  render: function render50() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("breadcrumb", customizePrefixCls);
    var separator = getComponentFromProp(this, "separator");
    var children = $slots["default"];
    var link = void 0;
    if (hasProp(this, "href")) {
      link = h(
        "a",
        { "class": prefixCls2 + "-link" },
        [children]
      );
    } else {
      link = h(
        "span",
        { "class": prefixCls2 + "-link" },
        [children]
      );
    }
    link = this.renderBreadcrumbNode(link, prefixCls2);
    if (children) {
      return h("span", [link, separator && separator !== "" && h(
        "span",
        { "class": prefixCls2 + "-separator" },
        [separator]
      )]);
    }
    return null;
  }
};
var SubMenu = {
  name: "ASubMenu",
  isSubMenu: true,
  props: _default$6({}, SubMenu$2.props),
  inject: {
    menuPropsContext: { "default": function _default31() {
      return {};
    } }
  },
  methods: {
    onKeyDown: function onKeyDown6(e) {
      this.$refs.subMenu.onKeyDown(e);
    }
  },
  render: function render51() {
    var h = arguments[0];
    var $slots = this.$slots, $scopedSlots = this.$scopedSlots;
    var _$props = this.$props, rootPrefixCls = _$props.rootPrefixCls, popupClassName = _$props.popupClassName;
    var antdMenuTheme = this.menuPropsContext.theme;
    var props2 = {
      props: _default$6({}, this.$props, {
        popupClassName: classNames(rootPrefixCls + "-" + antdMenuTheme, popupClassName)
      }),
      ref: "subMenu",
      on: getListeners(this),
      scopedSlots: $scopedSlots
    };
    var slotsKey = Object.keys($slots);
    return h(
      SubMenu$2,
      props2,
      [slotsKey.length ? slotsKey.map(function(name) {
        return h(
          "template",
          { slot: name },
          [$slots[name]]
        );
      }) : null]
    );
  }
};
function animate$1(node, show, done) {
  var height3 = void 0;
  var requestAnimationFrameId = void 0;
  var appearRequestAnimationFrameId = void 0;
  return cssAnimation$1(node, "ant-motion-collapse-legacy", {
    start: function start() {
      if (appearRequestAnimationFrameId) {
        raf$2.cancel(appearRequestAnimationFrameId);
      }
      if (!show) {
        node.style.height = node.offsetHeight + "px";
        node.style.opacity = "1";
      } else {
        height3 = node.offsetHeight;
        if (height3 === 0) {
          appearRequestAnimationFrameId = raf$2(function() {
            height3 = node.offsetHeight;
            node.style.height = "0px";
            node.style.opacity = "0";
          });
        } else {
          node.style.height = "0px";
          node.style.opacity = "0";
        }
      }
    },
    active: function active() {
      if (requestAnimationFrameId) {
        raf$2.cancel(requestAnimationFrameId);
      }
      requestAnimationFrameId = raf$2(function() {
        node.style.height = (show ? height3 : 0) + "px";
        node.style.opacity = show ? "1" : "0";
      });
    },
    end: function end() {
      if (appearRequestAnimationFrameId) {
        raf$2.cancel(appearRequestAnimationFrameId);
      }
      if (requestAnimationFrameId) {
        raf$2.cancel(requestAnimationFrameId);
      }
      node.style.height = "";
      node.style.opacity = "";
      done && done();
    }
  });
}
var animation$1 = {
  enter: function enter(node, done) {
    Vue.nextTick(function() {
      animate$1(node, true, done);
    });
  },
  leave: function leave(node, done) {
    return animate$1(node, false, done);
  }
};
var animation$2 = animation$1;
var autoAdjustOverflow$2 = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset$3 = [0, 0];
var placements$4 = {
  left: {
    points: ["cr", "cl"],
    overflow: autoAdjustOverflow$2,
    offset: [-4, 0],
    targetOffset: targetOffset$3
  },
  right: {
    points: ["cl", "cr"],
    overflow: autoAdjustOverflow$2,
    offset: [4, 0],
    targetOffset: targetOffset$3
  },
  top: {
    points: ["bc", "tc"],
    overflow: autoAdjustOverflow$2,
    offset: [0, -4],
    targetOffset: targetOffset$3
  },
  bottom: {
    points: ["tc", "bc"],
    overflow: autoAdjustOverflow$2,
    offset: [0, 4],
    targetOffset: targetOffset$3
  },
  topLeft: {
    points: ["bl", "tl"],
    overflow: autoAdjustOverflow$2,
    offset: [0, -4],
    targetOffset: targetOffset$3
  },
  leftTop: {
    points: ["tr", "tl"],
    overflow: autoAdjustOverflow$2,
    offset: [-4, 0],
    targetOffset: targetOffset$3
  },
  topRight: {
    points: ["br", "tr"],
    overflow: autoAdjustOverflow$2,
    offset: [0, -4],
    targetOffset: targetOffset$3
  },
  rightTop: {
    points: ["tl", "tr"],
    overflow: autoAdjustOverflow$2,
    offset: [4, 0],
    targetOffset: targetOffset$3
  },
  bottomRight: {
    points: ["tr", "br"],
    overflow: autoAdjustOverflow$2,
    offset: [0, 4],
    targetOffset: targetOffset$3
  },
  rightBottom: {
    points: ["bl", "br"],
    overflow: autoAdjustOverflow$2,
    offset: [4, 0],
    targetOffset: targetOffset$3
  },
  bottomLeft: {
    points: ["tl", "bl"],
    overflow: autoAdjustOverflow$2,
    offset: [0, 4],
    targetOffset: targetOffset$3
  },
  leftBottom: {
    points: ["br", "bl"],
    overflow: autoAdjustOverflow$2,
    offset: [-4, 0],
    targetOffset: targetOffset$3
  }
};
var Content$1 = {
  props: {
    prefixCls: PropTypes.string,
    overlay: PropTypes.any,
    trigger: PropTypes.any
  },
  updated: function updated18() {
    var trigger2 = this.trigger;
    if (trigger2) {
      trigger2.forcePopupAlign();
    }
  },
  render: function render52() {
    var h = arguments[0];
    var overlay = this.overlay, prefixCls2 = this.prefixCls;
    return h(
      "div",
      {
        "class": prefixCls2 + "-inner",
        attrs: { role: "tooltip" }
      },
      [typeof overlay === "function" ? overlay() : overlay]
    );
  }
};
function noop$R() {
}
var Tooltip = {
  props: {
    trigger: PropTypes.any.def(["hover"]),
    defaultVisible: PropTypes.bool,
    visible: PropTypes.bool,
    placement: PropTypes.string.def("right"),
    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    animation: PropTypes.any,
    afterVisibleChange: PropTypes.func.def(function() {
    }),
    overlay: PropTypes.any,
    overlayStyle: PropTypes.object,
    overlayClassName: PropTypes.string,
    prefixCls: PropTypes.string.def("rc-tooltip"),
    mouseEnterDelay: PropTypes.number.def(0),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    getTooltipContainer: PropTypes.func,
    destroyTooltipOnHide: PropTypes.bool.def(false),
    align: PropTypes.object.def(function() {
      return {};
    }),
    arrowContent: PropTypes.any.def(null),
    tipId: PropTypes.string,
    builtinPlacements: PropTypes.object
  },
  methods: {
    getPopupElement: function getPopupElement2() {
      var h = this.$createElement;
      var _$props = this.$props, prefixCls2 = _$props.prefixCls, tipId = _$props.tipId;
      return [h(
        "div",
        { "class": prefixCls2 + "-arrow", key: "arrow" },
        [getComponentFromProp(this, "arrowContent")]
      ), h(Content$1, {
        key: "content",
        attrs: {
          trigger: this.$refs.trigger,
          prefixCls: prefixCls2,
          id: tipId,
          overlay: getComponentFromProp(this, "overlay")
        }
      })];
    },
    getPopupDomNode: function getPopupDomNode4() {
      return this.$refs.trigger.getPopupDomNode();
    }
  },
  render: function render53(h) {
    var _getOptionProps = getOptionProps(this), overlayClassName = _getOptionProps.overlayClassName, trigger2 = _getOptionProps.trigger, mouseEnterDelay = _getOptionProps.mouseEnterDelay, mouseLeaveDelay = _getOptionProps.mouseLeaveDelay, overlayStyle = _getOptionProps.overlayStyle, prefixCls2 = _getOptionProps.prefixCls, afterVisibleChange2 = _getOptionProps.afterVisibleChange, transitionName2 = _getOptionProps.transitionName, animation2 = _getOptionProps.animation, placement2 = _getOptionProps.placement, align = _getOptionProps.align, destroyTooltipOnHide = _getOptionProps.destroyTooltipOnHide, defaultVisible = _getOptionProps.defaultVisible, getTooltipContainer = _getOptionProps.getTooltipContainer, restProps = _default$2(_getOptionProps, ["overlayClassName", "trigger", "mouseEnterDelay", "mouseLeaveDelay", "overlayStyle", "prefixCls", "afterVisibleChange", "transitionName", "animation", "placement", "align", "destroyTooltipOnHide", "defaultVisible", "getTooltipContainer"]);
    var extraProps = _default$6({}, restProps);
    if (hasProp(this, "visible")) {
      extraProps.popupVisible = this.$props.visible;
    }
    var listeners = getListeners(this);
    var triggerProps = {
      props: _default$6({
        popupClassName: overlayClassName,
        prefixCls: prefixCls2,
        action: trigger2,
        builtinPlacements: placements$4,
        popupPlacement: placement2,
        popupAlign: align,
        getPopupContainer: getTooltipContainer,
        afterPopupVisibleChange: afterVisibleChange2,
        popupTransitionName: transitionName2,
        popupAnimation: animation2,
        defaultPopupVisible: defaultVisible,
        destroyPopupOnHide: destroyTooltipOnHide,
        mouseLeaveDelay,
        popupStyle: overlayStyle,
        mouseEnterDelay
      }, extraProps),
      on: _default$6({}, listeners, {
        popupVisibleChange: listeners.visibleChange || noop$R,
        popupAlign: listeners.popupAlign || noop$R
      }),
      ref: "trigger"
    };
    return h(
      Trigger,
      triggerProps,
      [h(
        "template",
        { slot: "popup" },
        [this.getPopupElement(h)]
      ), this.$slots["default"]]
    );
  }
};
var autoAdjustOverflowEnabled = {
  adjustX: 1,
  adjustY: 1
};
var autoAdjustOverflowDisabled = {
  adjustX: 0,
  adjustY: 0
};
var targetOffset$2 = [0, 0];
function getOverflowOptions(autoAdjustOverflow2) {
  if (typeof autoAdjustOverflow2 === "boolean") {
    return autoAdjustOverflow2 ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;
  }
  return _default$6({}, autoAdjustOverflowDisabled, autoAdjustOverflow2);
}
function getPlacements(config2) {
  var _config$arrowWidth = config2.arrowWidth, arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth, _config$horizontalArr = config2.horizontalArrowShift, horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr, _config$verticalArrow = config2.verticalArrowShift, verticalArrowShift = _config$verticalArrow === void 0 ? 12 : _config$verticalArrow, _config$autoAdjustOve = config2.autoAdjustOverflow, autoAdjustOverflow2 = _config$autoAdjustOve === void 0 ? true : _config$autoAdjustOve;
  var placementMap = {
    left: {
      points: ["cr", "cl"],
      offset: [-4, 0]
    },
    right: {
      points: ["cl", "cr"],
      offset: [4, 0]
    },
    top: {
      points: ["bc", "tc"],
      offset: [0, -4]
    },
    bottom: {
      points: ["tc", "bc"],
      offset: [0, 4]
    },
    topLeft: {
      points: ["bl", "tc"],
      offset: [-(horizontalArrowShift + arrowWidth), -4]
    },
    leftTop: {
      points: ["tr", "cl"],
      offset: [-4, -(verticalArrowShift + arrowWidth)]
    },
    topRight: {
      points: ["br", "tc"],
      offset: [horizontalArrowShift + arrowWidth, -4]
    },
    rightTop: {
      points: ["tl", "cr"],
      offset: [4, -(verticalArrowShift + arrowWidth)]
    },
    bottomRight: {
      points: ["tr", "bc"],
      offset: [horizontalArrowShift + arrowWidth, 4]
    },
    rightBottom: {
      points: ["bl", "cr"],
      offset: [4, verticalArrowShift + arrowWidth]
    },
    bottomLeft: {
      points: ["tl", "bc"],
      offset: [-(horizontalArrowShift + arrowWidth), 4]
    },
    leftBottom: {
      points: ["br", "cl"],
      offset: [-4, verticalArrowShift + arrowWidth]
    }
  };
  Object.keys(placementMap).forEach(function(key2) {
    placementMap[key2] = config2.arrowPointAtCenter ? _default$6({}, placementMap[key2], {
      overflow: getOverflowOptions(autoAdjustOverflow2),
      targetOffset: targetOffset$2
    }) : _default$6({}, placements$4[key2], {
      overflow: getOverflowOptions(autoAdjustOverflow2)
    });
    placementMap[key2].ignoreShake = true;
  });
  return placementMap;
}
var triggerType = PropTypes.oneOf(["hover", "focus", "click", "contextmenu"]);
var abstractTooltipProps = function() {
  return {
    trigger: PropTypes.oneOfType([triggerType, PropTypes.arrayOf(triggerType)]).def("hover"),
    visible: PropTypes.bool,
    defaultVisible: PropTypes.bool,
    placement: PropTypes.oneOf(["top", "left", "right", "bottom", "topLeft", "topRight", "bottomLeft", "bottomRight", "leftTop", "leftBottom", "rightTop", "rightBottom"]).def("top"),
    transitionName: PropTypes.string.def("zoom-big-fast"),
    overlayStyle: PropTypes.object.def(function() {
      return {};
    }),
    overlayClassName: PropTypes.string,
    prefixCls: PropTypes.string,
    mouseEnterDelay: PropTypes.number.def(0.1),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    getPopupContainer: PropTypes.func,
    arrowPointAtCenter: PropTypes.bool.def(false),
    autoAdjustOverflow: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).def(true),
    destroyTooltipOnHide: PropTypes.bool.def(false),
    align: PropTypes.object.def(function() {
      return {};
    }),
    builtinPlacements: PropTypes.object
  };
};
var splitObject = function splitObject2(obj, keys3) {
  var picked = {};
  var omitted = _default$6({}, obj);
  keys3.forEach(function(key2) {
    if (obj && key2 in obj) {
      picked[key2] = obj[key2];
      delete omitted[key2];
    }
  });
  return { picked, omitted };
};
var props$1 = abstractTooltipProps();
var ToolTip = {
  name: "ATooltip",
  model: {
    prop: "visible",
    event: "visibleChange"
  },
  props: _default$6({}, props$1, {
    title: PropTypes.any
  }),
  inject: {
    configProvider: { "default": function _default32() {
      return ConfigConsumerProps;
    } }
  },
  data: function data24() {
    return {
      sVisible: !!this.$props.visible || !!this.$props.defaultVisible
    };
  },
  watch: {
    visible: function visible3(val) {
      this.sVisible = val;
    }
  },
  methods: {
    onVisibleChange: function onVisibleChange4(visible11) {
      if (!hasProp(this, "visible")) {
        this.sVisible = this.isNoTitle() ? false : visible11;
      }
      if (!this.isNoTitle()) {
        this.$emit("visibleChange", visible11);
      }
    },
    getPopupDomNode: function getPopupDomNode5() {
      return this.$refs.tooltip.getPopupDomNode();
    },
    getPlacements: function getPlacements$1() {
      var _$props = this.$props, builtinPlacements = _$props.builtinPlacements, arrowPointAtCenter = _$props.arrowPointAtCenter, autoAdjustOverflow2 = _$props.autoAdjustOverflow;
      return builtinPlacements || getPlacements({
        arrowPointAtCenter,
        verticalArrowShift: 8,
        autoAdjustOverflow: autoAdjustOverflow2
      });
    },
    getDisabledCompatibleChildren: function getDisabledCompatibleChildren(ele) {
      var h = this.$createElement;
      var options2 = ele.componentOptions && ele.componentOptions.Ctor.options || {};
      if ((options2.__ANT_BUTTON === true || options2.__ANT_SWITCH === true || options2.__ANT_CHECKBOX === true) && (ele.componentOptions.propsData.disabled || ele.componentOptions.propsData.disabled === "") || ele.tag === "button" && ele.data && ele.data.attrs && ele.data.attrs.disabled !== void 0) {
        var _splitObject = splitObject(getStyle$1(ele), ["position", "left", "right", "top", "bottom", "float", "display", "zIndex"]), picked = _splitObject.picked, omitted = _splitObject.omitted;
        var spanStyle = _default$6({
          display: "inline-block"
        }, picked, {
          cursor: "not-allowed",
          width: ele.componentOptions.propsData.block ? "100%" : null
        });
        var buttonStyle = _default$6({}, omitted, {
          pointerEvents: "none"
        });
        var spanCls = getClass(ele);
        var child = cloneElement(ele, {
          style: buttonStyle,
          "class": null
        });
        return h(
          "span",
          { style: spanStyle, "class": spanCls },
          [child]
        );
      }
      return ele;
    },
    isNoTitle: function isNoTitle() {
      var title = getComponentFromProp(this, "title");
      return !title && title !== 0;
    },
    getOverlay: function getOverlay() {
      var title = getComponentFromProp(this, "title");
      if (title === 0) {
        return title;
      }
      return title || "";
    },
    onPopupAlign: function onPopupAlign(domNode, align) {
      var placements2 = this.getPlacements();
      var placement2 = Object.keys(placements2).filter(function(key2) {
        return placements2[key2].points[0] === align.points[0] && placements2[key2].points[1] === align.points[1];
      })[0];
      if (!placement2) {
        return;
      }
      var rect = domNode.getBoundingClientRect();
      var transformOrigin = {
        top: "50%",
        left: "50%"
      };
      if (placement2.indexOf("top") >= 0 || placement2.indexOf("Bottom") >= 0) {
        transformOrigin.top = rect.height - align.offset[1] + "px";
      } else if (placement2.indexOf("Top") >= 0 || placement2.indexOf("bottom") >= 0) {
        transformOrigin.top = -align.offset[1] + "px";
      }
      if (placement2.indexOf("left") >= 0 || placement2.indexOf("Right") >= 0) {
        transformOrigin.left = rect.width - align.offset[0] + "px";
      } else if (placement2.indexOf("right") >= 0 || placement2.indexOf("Left") >= 0) {
        transformOrigin.left = -align.offset[0] + "px";
      }
      domNode.style.transformOrigin = transformOrigin.left + " " + transformOrigin.top;
    }
  },
  render: function render54() {
    var h = arguments[0];
    var $props = this.$props, $data = this.$data, $slots = this.$slots;
    var customizePrefixCls = $props.prefixCls, openClassName = $props.openClassName, getPopupContainer = $props.getPopupContainer;
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("tooltip", customizePrefixCls);
    var children = ($slots["default"] || []).filter(function(c) {
      return c.tag || c.text.trim() !== "";
    });
    children = children.length === 1 ? children[0] : children;
    var sVisible = $data.sVisible;
    if (!hasProp(this, "visible") && this.isNoTitle()) {
      sVisible = false;
    }
    if (!children) {
      return null;
    }
    var child = this.getDisabledCompatibleChildren(isValidElement(children) ? children : h("span", [children]));
    var childCls = _default$8({}, openClassName || prefixCls2 + "-open", true);
    var tooltipProps2 = {
      props: _default$6({}, $props, {
        prefixCls: prefixCls2,
        getTooltipContainer: getPopupContainer || getContextPopupContainer,
        builtinPlacements: this.getPlacements(),
        overlay: this.getOverlay(),
        visible: sVisible
      }),
      ref: "tooltip",
      on: _default$6({}, getListeners(this), {
        visibleChange: this.onVisibleChange,
        popupAlign: this.onPopupAlign
      })
    };
    return h(
      Tooltip,
      tooltipProps2,
      [sVisible ? cloneElement(child, { "class": childCls }) : child]
    );
  }
};
ToolTip.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(ToolTip.name, ToolTip);
};
function noop$Q() {
}
var Item$1 = {
  name: "MenuItem",
  inheritAttrs: false,
  props: props$3,
  inject: {
    getInlineCollapsed: { "default": function _default33() {
      return noop$Q;
    } },
    layoutSiderContext: { "default": function _default34() {
      return {};
    } }
  },
  isMenuItem: true,
  methods: {
    onKeyDown: function onKeyDown7(e) {
      this.$refs.menuItem.onKeyDown(e);
    }
  },
  render: function render55() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var level2 = props2.level, title = props2.title, rootPrefixCls = props2.rootPrefixCls;
    var getInlineCollapsed2 = this.getInlineCollapsed, $slots = this.$slots, attrs = this.$attrs;
    var inlineCollapsed2 = getInlineCollapsed2();
    var tooltipTitle = title;
    if (typeof title === "undefined") {
      tooltipTitle = level2 === 1 ? $slots["default"] : "";
    } else if (title === false) {
      tooltipTitle = "";
    }
    var tooltipProps2 = {
      title: tooltipTitle
    };
    var siderCollapsed = this.layoutSiderContext.sCollapsed;
    if (!siderCollapsed && !inlineCollapsed2) {
      tooltipProps2.title = null;
      tooltipProps2.visible = false;
    }
    var itemProps = {
      props: _default$6({}, props2, {
        title
      }),
      attrs,
      on: getListeners(this)
    };
    var toolTipProps = {
      props: _default$6({}, tooltipProps2, {
        placement: "right",
        overlayClassName: rootPrefixCls + "-inline-collapsed-tooltip"
      })
    };
    return h(
      ToolTip,
      toolTipProps,
      [h(
        MenuItem$1,
        _mergeJSXProps([itemProps, { ref: "menuItem" }]),
        [$slots["default"]]
      )]
    );
  }
};
var MenuMode = PropTypes.oneOf(["vertical", "vertical-left", "vertical-right", "horizontal", "inline"]);
var menuProps = _default$6({}, commonPropsType, {
  theme: PropTypes.oneOf(["light", "dark"]).def("light"),
  mode: MenuMode.def("vertical"),
  selectable: PropTypes.bool,
  selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
  defaultSelectedKeys: PropTypes.array,
  openKeys: PropTypes.array,
  defaultOpenKeys: PropTypes.array,
  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  openTransitionName: PropTypes.string,
  prefixCls: PropTypes.string,
  multiple: PropTypes.bool,
  inlineIndent: PropTypes.number.def(24),
  inlineCollapsed: PropTypes.bool,
  isRootMenu: PropTypes.bool.def(true),
  focusable: PropTypes.bool.def(false)
});
var Menu = {
  name: "AMenu",
  props: menuProps,
  Divider: _default$6({}, Divider$2, { name: "AMenuDivider" }),
  Item: _default$6({}, Item$1, { name: "AMenuItem" }),
  SubMenu: _default$6({}, SubMenu, { name: "ASubMenu" }),
  ItemGroup: _default$6({}, ItemGroup, { name: "AMenuItemGroup" }),
  provide: function provide8() {
    return {
      getInlineCollapsed: this.getInlineCollapsed,
      menuPropsContext: this.$props
    };
  },
  mixins: [BaseMixin],
  inject: {
    layoutSiderContext: { "default": function _default35() {
      return {};
    } },
    configProvider: { "default": function _default36() {
      return ConfigConsumerProps;
    } }
  },
  model: {
    prop: "selectedKeys",
    event: "selectChange"
  },
  updated: function updated19() {
    this.propsUpdating = false;
  },
  watch: {
    mode: function mode(val, oldVal) {
      if (oldVal === "inline" && val !== "inline") {
        this.switchingModeFromInline = true;
      }
    },
    openKeys: function openKeys(val) {
      this.setState({ sOpenKeys: val });
    },
    inlineCollapsed: function inlineCollapsed(val) {
      this.collapsedChange(val);
    },
    "layoutSiderContext.sCollapsed": function layoutSiderContextSCollapsed(val) {
      this.collapsedChange(val);
    }
  },
  data: function data25() {
    var props2 = getOptionProps(this);
    warning$4(!("inlineCollapsed" in props2 && props2.mode !== "inline"), "Menu", "`inlineCollapsed` should only be used when Menu's `mode` is inline.");
    this.switchingModeFromInline = false;
    this.leaveAnimationExecutedWhenInlineCollapsed = false;
    this.inlineOpenKeys = [];
    var sOpenKeys = void 0;
    if ("openKeys" in props2) {
      sOpenKeys = props2.openKeys;
    } else if ("defaultOpenKeys" in props2) {
      sOpenKeys = props2.defaultOpenKeys;
    }
    return {
      sOpenKeys
    };
  },
  methods: {
    collapsedChange: function collapsedChange(val) {
      if (this.propsUpdating) {
        return;
      }
      this.propsUpdating = true;
      if (!hasProp(this, "openKeys")) {
        if (val) {
          this.switchingModeFromInline = true;
          this.inlineOpenKeys = this.sOpenKeys;
          this.setState({ sOpenKeys: [] });
        } else {
          this.setState({ sOpenKeys: this.inlineOpenKeys });
          this.inlineOpenKeys = [];
        }
      } else if (val) {
        this.switchingModeFromInline = true;
      }
    },
    restoreModeVerticalFromInline: function restoreModeVerticalFromInline() {
      if (this.switchingModeFromInline) {
        this.switchingModeFromInline = false;
        this.$forceUpdate();
      }
    },
    handleMouseEnter: function handleMouseEnter(e) {
      this.restoreModeVerticalFromInline();
      this.$emit("mouseenter", e);
    },
    handleTransitionEnd: function handleTransitionEnd(e) {
      var widthCollapsed = e.propertyName === "width" && e.target === e.currentTarget;
      var className = e.target.className;
      var classNameValue = Object.prototype.toString.call(className) === "[object SVGAnimatedString]" ? className.animVal : className;
      var iconScaled = e.propertyName === "font-size" && classNameValue.indexOf("anticon") >= 0;
      if (widthCollapsed || iconScaled) {
        this.restoreModeVerticalFromInline();
      }
    },
    handleClick: function handleClick3(e) {
      this.handleOpenChange([]);
      this.$emit("click", e);
    },
    handleSelect: function handleSelect(info3) {
      this.$emit("select", info3);
      this.$emit("selectChange", info3.selectedKeys);
    },
    handleDeselect: function handleDeselect(info3) {
      this.$emit("deselect", info3);
      this.$emit("selectChange", info3.selectedKeys);
    },
    handleOpenChange: function handleOpenChange(openKeys2) {
      this.setOpenKeys(openKeys2);
      this.$emit("openChange", openKeys2);
      this.$emit("update:openKeys", openKeys2);
    },
    setOpenKeys: function setOpenKeys(openKeys2) {
      if (!hasProp(this, "openKeys")) {
        this.setState({ sOpenKeys: openKeys2 });
      }
    },
    getRealMenuMode: function getRealMenuMode() {
      var inlineCollapsed2 = this.getInlineCollapsed();
      if (this.switchingModeFromInline && inlineCollapsed2) {
        return "inline";
      }
      var mode5 = this.$props.mode;
      return inlineCollapsed2 ? "vertical" : mode5;
    },
    getInlineCollapsed: function getInlineCollapsed() {
      var inlineCollapsed2 = this.$props.inlineCollapsed;
      if (this.layoutSiderContext.sCollapsed !== void 0) {
        return this.layoutSiderContext.sCollapsed;
      }
      return inlineCollapsed2;
    },
    getMenuOpenAnimation: function getMenuOpenAnimation(menuMode) {
      var _$props = this.$props, openAnimation2 = _$props.openAnimation, openTransitionName = _$props.openTransitionName;
      var menuOpenAnimation = openAnimation2 || openTransitionName;
      if (openAnimation2 === void 0 && openTransitionName === void 0) {
        if (menuMode === "horizontal") {
          menuOpenAnimation = "slide-up";
        } else if (menuMode === "inline") {
          menuOpenAnimation = { on: animation$2 };
        } else {
          if (this.switchingModeFromInline) {
            menuOpenAnimation = "";
            this.switchingModeFromInline = false;
          } else {
            menuOpenAnimation = "zoom-big";
          }
        }
      }
      return menuOpenAnimation;
    }
  },
  render: function render56() {
    var _menuClassName, _this = this;
    var h = arguments[0];
    var layoutSiderContext = this.layoutSiderContext, $slots = this.$slots;
    var collapsedWidth = layoutSiderContext.collapsedWidth;
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, theme = props2.theme, getPopupContainer = props2.getPopupContainer;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("menu", customizePrefixCls);
    var menuMode = this.getRealMenuMode();
    var menuOpenAnimation = this.getMenuOpenAnimation(menuMode);
    var menuClassName = (_menuClassName = {}, _default$8(_menuClassName, prefixCls2 + "-" + theme, true), _default$8(_menuClassName, prefixCls2 + "-inline-collapsed", this.getInlineCollapsed()), _menuClassName);
    var menuProps2 = {
      props: _default$6({}, omit$2(props2, ["inlineCollapsed"]), {
        getPopupContainer: getPopupContainer || getContextPopupContainer,
        openKeys: this.sOpenKeys,
        mode: menuMode,
        prefixCls: prefixCls2
      }),
      on: _default$6({}, getListeners(this), {
        select: this.handleSelect,
        deselect: this.handleDeselect,
        openChange: this.handleOpenChange,
        mouseenter: this.handleMouseEnter
      }),
      nativeOn: {
        transitionend: this.handleTransitionEnd
      }
    };
    if (!hasProp(this, "selectedKeys")) {
      delete menuProps2.props.selectedKeys;
    }
    if (menuMode !== "inline") {
      menuProps2.on.click = this.handleClick;
      menuProps2.props.openTransitionName = menuOpenAnimation;
    } else {
      menuProps2.on.click = function(e) {
        _this.$emit("click", e);
      };
      menuProps2.props.openAnimation = menuOpenAnimation;
    }
    var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === "0" || collapsedWidth === "0px");
    if (hideMenu) {
      menuProps2.props.openKeys = [];
    }
    return h(
      Menu$3,
      _mergeJSXProps([menuProps2, { "class": menuClassName }]),
      [$slots["default"]]
    );
  }
};
Menu.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Menu.name, Menu);
  Vue2.component(Menu.Item.name, Menu.Item);
  Vue2.component(Menu.SubMenu.name, Menu.SubMenu);
  Vue2.component(Menu.Divider.name, Menu.Divider);
  Vue2.component(Menu.ItemGroup.name, Menu.ItemGroup);
};
var Menu$1 = Menu;
var Route = PropTypes.shape({
  path: PropTypes.string,
  breadcrumbName: PropTypes.string,
  children: PropTypes.array
}).loose;
var BreadcrumbProps = {
  prefixCls: PropTypes.string,
  routes: PropTypes.arrayOf(Route),
  params: PropTypes.any,
  separator: PropTypes.any,
  itemRender: PropTypes.func
};
function getBreadcrumbName(route, params) {
  if (!route.breadcrumbName) {
    return null;
  }
  var paramsKeys = Object.keys(params).join("|");
  var name = route.breadcrumbName.replace(new RegExp(":(" + paramsKeys + ")", "g"), function(replacement, key2) {
    return params[key2] || replacement;
  });
  return name;
}
var Breadcrumb = {
  name: "ABreadcrumb",
  props: BreadcrumbProps,
  inject: {
    configProvider: { "default": function _default37() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    defaultItemRender: function defaultItemRender(_ref) {
      var route = _ref.route, params = _ref.params, routes = _ref.routes, paths = _ref.paths;
      var h = this.$createElement;
      var isLastItem = routes.indexOf(route) === routes.length - 1;
      var name = getBreadcrumbName(route, params);
      return isLastItem ? h("span", [name]) : h(
        "a",
        {
          attrs: { href: "#/" + paths.join("/") }
        },
        [name]
      );
    },
    getPath: function getPath(path, params) {
      path = (path || "").replace(/^\//, "");
      Object.keys(params).forEach(function(key2) {
        path = path.replace(":" + key2, params[key2]);
      });
      return path;
    },
    addChildPath: function addChildPath(paths, childPath, params) {
      var originalPaths = [].concat(_default$5(paths));
      var path = this.getPath(childPath, params);
      if (path) {
        originalPaths.push(path);
      }
      return originalPaths;
    },
    genForRoutes: function genForRoutes(_ref2) {
      var _this = this;
      var _ref2$routes = _ref2.routes, routes = _ref2$routes === void 0 ? [] : _ref2$routes, _ref2$params = _ref2.params, params = _ref2$params === void 0 ? {} : _ref2$params, separator = _ref2.separator, _ref2$itemRender = _ref2.itemRender, itemRender = _ref2$itemRender === void 0 ? this.defaultItemRender : _ref2$itemRender;
      var h = this.$createElement;
      var paths = [];
      return routes.map(function(route) {
        var path = _this.getPath(route.path, params);
        if (path) {
          paths.push(path);
        }
        var overlay = null;
        if (route.children && route.children.length) {
          overlay = h(Menu$1, [route.children.map(function(child) {
            return h(
              Menu$1.Item,
              { key: child.path || child.breadcrumbName },
              [itemRender({
                route: child,
                params,
                routes,
                paths: _this.addChildPath(paths, child.path, params),
                h: _this.$createElement
              })]
            );
          })]);
        }
        return h(
          BreadcrumbItem,
          {
            attrs: {
              overlay,
              separator
            },
            key: path || route.breadcrumbName
          },
          [itemRender({ route, params, routes, paths, h: _this.$createElement })]
        );
      });
    }
  },
  render: function render57() {
    var h = arguments[0];
    var crumbs = void 0;
    var customizePrefixCls = this.prefixCls, routes = this.routes, _params = this.params, params = _params === void 0 ? {} : _params, $slots = this.$slots, $scopedSlots = this.$scopedSlots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("breadcrumb", customizePrefixCls);
    var children = filterEmpty($slots["default"]);
    var separator = getComponentFromProp(this, "separator");
    var itemRender = this.itemRender || $scopedSlots.itemRender || this.defaultItemRender;
    if (routes && routes.length > 0) {
      crumbs = this.genForRoutes({
        routes,
        params,
        separator,
        itemRender
      });
    } else if (children.length) {
      crumbs = children.map(function(element, index2) {
        warning$4(getSlotOptions(element).__ANT_BREADCRUMB_ITEM || getSlotOptions(element).__ANT_BREADCRUMB_SEPARATOR, "Breadcrumb", "Only accepts Breadcrumb.Item and Breadcrumb.Separator as it's children");
        return cloneElement(element, {
          props: { separator },
          key: index2
        });
      });
    }
    return h(
      "div",
      { "class": prefixCls2 },
      [crumbs]
    );
  }
};
var BreadcrumbSeparator = {
  name: "ABreadcrumbSeparator",
  __ANT_BREADCRUMB_SEPARATOR: true,
  props: {
    prefixCls: PropTypes.string
  },
  inject: {
    configProvider: { "default": function _default38() {
      return ConfigConsumerProps;
    } }
  },
  render: function render58() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("breadcrumb", customizePrefixCls);
    var children = $slots["default"];
    return h(
      "span",
      { "class": prefixCls2 + "-separator" },
      [children || "/"]
    );
  }
};
Breadcrumb.Item = BreadcrumbItem;
Breadcrumb.Separator = BreadcrumbSeparator;
Breadcrumb.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Breadcrumb.name, Breadcrumb);
  Vue2.component(BreadcrumbItem.name, BreadcrumbItem);
  Vue2.component(BreadcrumbSeparator.name, BreadcrumbSeparator);
};
//! moment.js
//! version : 2.29.4
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var hookCallback;
function hooks() {
  return hookCallback.apply(null, arguments);
}
function setHookCallback(callback) {
  hookCallback = callback;
}
function isArray$9(input) {
  return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
}
function isObject$8(input) {
  return input != null && Object.prototype.toString.call(input) === "[object Object]";
}
function hasOwnProp(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
}
function isObjectEmpty(obj) {
  if (Object.getOwnPropertyNames) {
    return Object.getOwnPropertyNames(obj).length === 0;
  } else {
    var k;
    for (k in obj) {
      if (hasOwnProp(obj, k)) {
        return false;
      }
    }
    return true;
  }
}
function isUndefined(input) {
  return input === void 0;
}
function isNumber(input) {
  return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
}
function isDate(input) {
  return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
}
function map(arr, fn) {
  var res = [], i, arrLen = arr.length;
  for (i = 0; i < arrLen; ++i) {
    res.push(fn(arr[i], i));
  }
  return res;
}
function extend(a, b) {
  for (var i in b) {
    if (hasOwnProp(b, i)) {
      a[i] = b[i];
    }
  }
  if (hasOwnProp(b, "toString")) {
    a.toString = b.toString;
  }
  if (hasOwnProp(b, "valueOf")) {
    a.valueOf = b.valueOf;
  }
  return a;
}
function createUTC(input, format3, locale3, strict) {
  return createLocalOrUTC(input, format3, locale3, strict, true).utc();
}
function defaultParsingFlags() {
  return {
    empty: false,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: false,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: false,
    userInvalidated: false,
    iso: false,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: false,
    weekdayMismatch: false
  };
}
function getParsingFlags(m) {
  if (m._pf == null) {
    m._pf = defaultParsingFlags();
  }
  return m._pf;
}
var some;
if (Array.prototype.some) {
  some = Array.prototype.some;
} else {
  some = function(fun) {
    var t = Object(this), len = t.length >>> 0, i;
    for (i = 0; i < len; i++) {
      if (i in t && fun.call(this, t[i], i, t)) {
        return true;
      }
    }
    return false;
  };
}
function isValid$2(m) {
  if (m._isValid == null) {
    var flags = getParsingFlags(m), parsedParts = some.call(flags.parsedDateParts, function(i) {
      return i != null;
    }), isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
    if (m._strict) {
      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
    }
    if (Object.isFrozen == null || !Object.isFrozen(m)) {
      m._isValid = isNowValid;
    } else {
      return isNowValid;
    }
  }
  return m._isValid;
}
function createInvalid(flags) {
  var m = createUTC(NaN);
  if (flags != null) {
    extend(getParsingFlags(m), flags);
  } else {
    getParsingFlags(m).userInvalidated = true;
  }
  return m;
}
var momentProperties = hooks.momentProperties = [], updateInProgress = false;
function copyConfig(to2, from3) {
  var i, prop, val, momentPropertiesLen = momentProperties.length;
  if (!isUndefined(from3._isAMomentObject)) {
    to2._isAMomentObject = from3._isAMomentObject;
  }
  if (!isUndefined(from3._i)) {
    to2._i = from3._i;
  }
  if (!isUndefined(from3._f)) {
    to2._f = from3._f;
  }
  if (!isUndefined(from3._l)) {
    to2._l = from3._l;
  }
  if (!isUndefined(from3._strict)) {
    to2._strict = from3._strict;
  }
  if (!isUndefined(from3._tzm)) {
    to2._tzm = from3._tzm;
  }
  if (!isUndefined(from3._isUTC)) {
    to2._isUTC = from3._isUTC;
  }
  if (!isUndefined(from3._offset)) {
    to2._offset = from3._offset;
  }
  if (!isUndefined(from3._pf)) {
    to2._pf = getParsingFlags(from3);
  }
  if (!isUndefined(from3._locale)) {
    to2._locale = from3._locale;
  }
  if (momentPropertiesLen > 0) {
    for (i = 0; i < momentPropertiesLen; i++) {
      prop = momentProperties[i];
      val = from3[prop];
      if (!isUndefined(val)) {
        to2[prop] = val;
      }
    }
  }
  return to2;
}
function Moment(config2) {
  copyConfig(this, config2);
  this._d = new Date(config2._d != null ? config2._d.getTime() : NaN);
  if (!this.isValid()) {
    this._d = new Date(NaN);
  }
  if (updateInProgress === false) {
    updateInProgress = true;
    hooks.updateOffset(this);
    updateInProgress = false;
  }
}
function isMoment$1(obj) {
  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
}
function warn$1(msg) {
  if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
    console.warn("Deprecation warning: " + msg);
  }
}
function deprecate(msg, fn) {
  var firstTime = true;
  return extend(function() {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(null, msg);
    }
    if (firstTime) {
      var args = [], arg, i, key2, argLen = arguments.length;
      for (i = 0; i < argLen; i++) {
        arg = "";
        if (typeof arguments[i] === "object") {
          arg += "\n[" + i + "] ";
          for (key2 in arguments[0]) {
            if (hasOwnProp(arguments[0], key2)) {
              arg += key2 + ": " + arguments[0][key2] + ", ";
            }
          }
          arg = arg.slice(0, -2);
        } else {
          arg = arguments[i];
        }
        args.push(arg);
      }
      warn$1(
        msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack
      );
      firstTime = false;
    }
    return fn.apply(this, arguments);
  }, fn);
}
var deprecations = {};
function deprecateSimple(name, msg) {
  if (hooks.deprecationHandler != null) {
    hooks.deprecationHandler(name, msg);
  }
  if (!deprecations[name]) {
    warn$1(msg);
    deprecations[name] = true;
  }
}
hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;
function isFunction$1(input) {
  return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
}
function set$1(config2) {
  var prop, i;
  for (i in config2) {
    if (hasOwnProp(config2, i)) {
      prop = config2[i];
      if (isFunction$1(prop)) {
        this[i] = prop;
      } else {
        this["_" + i] = prop;
      }
    }
  }
  this._config = config2;
  this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function mergeConfigs(parentConfig, childConfig) {
  var res = extend({}, parentConfig), prop;
  for (prop in childConfig) {
    if (hasOwnProp(childConfig, prop)) {
      if (isObject$8(parentConfig[prop]) && isObject$8(childConfig[prop])) {
        res[prop] = {};
        extend(res[prop], parentConfig[prop]);
        extend(res[prop], childConfig[prop]);
      } else if (childConfig[prop] != null) {
        res[prop] = childConfig[prop];
      } else {
        delete res[prop];
      }
    }
  }
  for (prop in parentConfig) {
    if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject$8(parentConfig[prop])) {
      res[prop] = extend({}, res[prop]);
    }
  }
  return res;
}
function Locale(config2) {
  if (config2 != null) {
    this.set(config2);
  }
}
var keys$3;
if (Object.keys) {
  keys$3 = Object.keys;
} else {
  keys$3 = function(obj) {
    var i, res = [];
    for (i in obj) {
      if (hasOwnProp(obj, i)) {
        res.push(i);
      }
    }
    return res;
  };
}
var defaultCalendar = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
function calendar(key2, mom, now2) {
  var output = this._calendar[key2] || this._calendar["sameElse"];
  return isFunction$1(output) ? output.call(mom, now2) : output;
}
function zeroFill(number3, targetLength, forceSign) {
  var absNumber = "" + Math.abs(number3), zerosToFill = targetLength - absNumber.length, sign2 = number3 >= 0;
  return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}
var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
function addFormatToken(token2, padded, ordinal2, callback) {
  var func = callback;
  if (typeof callback === "string") {
    func = function() {
      return this[callback]();
    };
  }
  if (token2) {
    formatTokenFunctions[token2] = func;
  }
  if (padded) {
    formatTokenFunctions[padded[0]] = function() {
      return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
    };
  }
  if (ordinal2) {
    formatTokenFunctions[ordinal2] = function() {
      return this.localeData().ordinal(
        func.apply(this, arguments),
        token2
      );
    };
  }
}
function removeFormattingTokens(input) {
  if (input.match(/\[[\s\S]/)) {
    return input.replace(/^\[|\]$/g, "");
  }
  return input.replace(/\\/g, "");
}
function makeFormatFunction(format3) {
  var array3 = format3.match(formattingTokens), i, length;
  for (i = 0, length = array3.length; i < length; i++) {
    if (formatTokenFunctions[array3[i]]) {
      array3[i] = formatTokenFunctions[array3[i]];
    } else {
      array3[i] = removeFormattingTokens(array3[i]);
    }
  }
  return function(mom) {
    var output = "", i2;
    for (i2 = 0; i2 < length; i2++) {
      output += isFunction$1(array3[i2]) ? array3[i2].call(mom, format3) : array3[i2];
    }
    return output;
  };
}
function formatMoment(m, format3) {
  if (!m.isValid()) {
    return m.localeData().invalidDate();
  }
  format3 = expandFormat(format3, m.localeData());
  formatFunctions[format3] = formatFunctions[format3] || makeFormatFunction(format3);
  return formatFunctions[format3](m);
}
function expandFormat(format3, locale3) {
  var i = 5;
  function replaceLongDateFormatTokens(input) {
    return locale3.longDateFormat(input) || input;
  }
  localFormattingTokens.lastIndex = 0;
  while (i >= 0 && localFormattingTokens.test(format3)) {
    format3 = format3.replace(
      localFormattingTokens,
      replaceLongDateFormatTokens
    );
    localFormattingTokens.lastIndex = 0;
    i -= 1;
  }
  return format3;
}
var defaultLongDateFormat = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
function longDateFormat(key2) {
  var format3 = this._longDateFormat[key2], formatUpper = this._longDateFormat[key2.toUpperCase()];
  if (format3 || !formatUpper) {
    return format3;
  }
  this._longDateFormat[key2] = formatUpper.match(formattingTokens).map(function(tok) {
    if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
      return tok.slice(1);
    }
    return tok;
  }).join("");
  return this._longDateFormat[key2];
}
var defaultInvalidDate = "Invalid date";
function invalidDate() {
  return this._invalidDate;
}
var defaultOrdinal = "%d", defaultDayOfMonthOrdinalParse = /\d{1,2}/;
function ordinal(number3) {
  return this._ordinal.replace("%d", number3);
}
var defaultRelativeTime = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
function relativeTime(number3, withoutSuffix, string2, isFuture) {
  var output = this._relativeTime[string2];
  return isFunction$1(output) ? output(number3, withoutSuffix, string2, isFuture) : output.replace(/%d/i, number3);
}
function pastFuture(diff2, output) {
  var format3 = this._relativeTime[diff2 > 0 ? "future" : "past"];
  return isFunction$1(format3) ? format3(output) : format3.replace(/%s/i, output);
}
var aliases = {};
function addUnitAlias(unit, shorthand) {
  var lowerCase = unit.toLowerCase();
  aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit;
}
function normalizeUnits(units) {
  return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
}
function normalizeObjectUnits(inputObject) {
  var normalizedInput = {}, normalizedProp, prop;
  for (prop in inputObject) {
    if (hasOwnProp(inputObject, prop)) {
      normalizedProp = normalizeUnits(prop);
      if (normalizedProp) {
        normalizedInput[normalizedProp] = inputObject[prop];
      }
    }
  }
  return normalizedInput;
}
var priorities = {};
function addUnitPriority(unit, priority) {
  priorities[unit] = priority;
}
function getPrioritizedUnits(unitsObj) {
  var units = [], u;
  for (u in unitsObj) {
    if (hasOwnProp(unitsObj, u)) {
      units.push({ unit: u, priority: priorities[u] });
    }
  }
  units.sort(function(a, b) {
    return a.priority - b.priority;
  });
  return units;
}
function isLeapYear(year) {
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
function absFloor(number3) {
  if (number3 < 0) {
    return Math.ceil(number3) || 0;
  } else {
    return Math.floor(number3);
  }
}
function toInt(argumentForCoercion) {
  var coercedNumber = +argumentForCoercion, value27 = 0;
  if (coercedNumber !== 0 && isFinite(coercedNumber)) {
    value27 = absFloor(coercedNumber);
  }
  return value27;
}
function makeGetSet(unit, keepTime) {
  return function(value27) {
    if (value27 != null) {
      set$1$1(this, unit, value27);
      hooks.updateOffset(this, keepTime);
      return this;
    } else {
      return get$2(this, unit);
    }
  };
}
function get$2(mom, unit) {
  return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN;
}
function set$1$1(mom, unit, value27) {
  if (mom.isValid() && !isNaN(value27)) {
    if (unit === "FullYear" && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
      value27 = toInt(value27);
      mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](
        value27,
        mom.month(),
        daysInMonth(value27, mom.month())
      );
    } else {
      mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value27);
    }
  }
}
function stringGet(units) {
  units = normalizeUnits(units);
  if (isFunction$1(this[units])) {
    return this[units]();
  }
  return this;
}
function stringSet(units, value27) {
  if (typeof units === "object") {
    units = normalizeObjectUnits(units);
    var prioritized = getPrioritizedUnits(units), i, prioritizedLen = prioritized.length;
    for (i = 0; i < prioritizedLen; i++) {
      this[prioritized[i].unit](units[prioritized[i].unit]);
    }
  } else {
    units = normalizeUnits(units);
    if (isFunction$1(this[units])) {
      return this[units](value27);
    }
  }
  return this;
}
var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, regexes;
regexes = {};
function addRegexToken(token2, regex, strictRegex) {
  regexes[token2] = isFunction$1(regex) ? regex : function(isStrict, localeData2) {
    return isStrict && strictRegex ? strictRegex : regex;
  };
}
function getParseRegexForToken(token2, config2) {
  if (!hasOwnProp(regexes, token2)) {
    return new RegExp(unescapeFormat(token2));
  }
  return regexes[token2](config2._strict, config2._locale);
}
function unescapeFormat(s) {
  return regexEscape(
    s.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
      }
    )
  );
}
function regexEscape(s) {
  return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
var tokens = {};
function addParseToken(token2, callback) {
  var i, func = callback, tokenLen;
  if (typeof token2 === "string") {
    token2 = [token2];
  }
  if (isNumber(callback)) {
    func = function(input, array3) {
      array3[callback] = toInt(input);
    };
  }
  tokenLen = token2.length;
  for (i = 0; i < tokenLen; i++) {
    tokens[token2[i]] = func;
  }
}
function addWeekParseToken(token2, callback) {
  addParseToken(token2, function(input, array3, config2, token3) {
    config2._w = config2._w || {};
    callback(input, config2._w, config2, token3);
  });
}
function addTimeToArrayFromToken(token2, input, config2) {
  if (input != null && hasOwnProp(tokens, token2)) {
    tokens[token2](input, config2._a, config2, token2);
  }
}
var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
function mod(n, x) {
  return (n % x + x) % x;
}
var indexOf;
if (Array.prototype.indexOf) {
  indexOf = Array.prototype.indexOf;
} else {
  indexOf = function(o) {
    var i;
    for (i = 0; i < this.length; ++i) {
      if (this[i] === o) {
        return i;
      }
    }
    return -1;
  };
}
function daysInMonth(year, month) {
  if (isNaN(year) || isNaN(month)) {
    return NaN;
  }
  var modMonth = mod(month, 12);
  year += (month - modMonth) / 12;
  return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
}
addFormatToken("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
addFormatToken("MMM", 0, 0, function(format3) {
  return this.localeData().monthsShort(this, format3);
});
addFormatToken("MMMM", 0, 0, function(format3) {
  return this.localeData().months(this, format3);
});
addUnitAlias("month", "M");
addUnitPriority("month", 8);
addRegexToken("M", match1to2);
addRegexToken("MM", match1to2, match2);
addRegexToken("MMM", function(isStrict, locale3) {
  return locale3.monthsShortRegex(isStrict);
});
addRegexToken("MMMM", function(isStrict, locale3) {
  return locale3.monthsRegex(isStrict);
});
addParseToken(["M", "MM"], function(input, array3) {
  array3[MONTH] = toInt(input) - 1;
});
addParseToken(["MMM", "MMMM"], function(input, array3, config2, token2) {
  var month = config2._locale.monthsParse(input, token2, config2._strict);
  if (month != null) {
    array3[MONTH] = month;
  } else {
    getParsingFlags(config2).invalidMonth = input;
  }
});
var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
  "_"
), defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
function localeMonths(m, format3) {
  if (!m) {
    return isArray$9(this._months) ? this._months : this._months["standalone"];
  }
  return isArray$9(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format3) ? "format" : "standalone"][m.month()];
}
function localeMonthsShort(m, format3) {
  if (!m) {
    return isArray$9(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
  }
  return isArray$9(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format3) ? "format" : "standalone"][m.month()];
}
function handleStrictParse(monthName, format3, strict) {
  var i, ii, mom, llc = monthName.toLocaleLowerCase();
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
    for (i = 0; i < 12; ++i) {
      mom = createUTC([2e3, i]);
      this._shortMonthsParse[i] = this.monthsShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format3 === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format3 === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeMonthsParse(monthName, format3, strict) {
  var i, mom, regex;
  if (this._monthsParseExact) {
    return handleStrictParse.call(this, monthName, format3, strict);
  }
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
  }
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    if (strict && !this._longMonthsParse[i]) {
      this._longMonthsParse[i] = new RegExp(
        "^" + this.months(mom, "").replace(".", "") + "$",
        "i"
      );
      this._shortMonthsParse[i] = new RegExp(
        "^" + this.monthsShort(mom, "").replace(".", "") + "$",
        "i"
      );
    }
    if (!strict && !this._monthsParse[i]) {
      regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
      this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format3 === "MMMM" && this._longMonthsParse[i].test(monthName)) {
      return i;
    } else if (strict && format3 === "MMM" && this._shortMonthsParse[i].test(monthName)) {
      return i;
    } else if (!strict && this._monthsParse[i].test(monthName)) {
      return i;
    }
  }
}
function setMonth(mom, value27) {
  var dayOfMonth;
  if (!mom.isValid()) {
    return mom;
  }
  if (typeof value27 === "string") {
    if (/^\d+$/.test(value27)) {
      value27 = toInt(value27);
    } else {
      value27 = mom.localeData().monthsParse(value27);
      if (!isNumber(value27)) {
        return mom;
      }
    }
  }
  dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value27));
  mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value27, dayOfMonth);
  return mom;
}
function getSetMonth(value27) {
  if (value27 != null) {
    setMonth(this, value27);
    hooks.updateOffset(this, true);
    return this;
  } else {
    return get$2(this, "Month");
  }
}
function getDaysInMonth() {
  return daysInMonth(this.year(), this.month());
}
function monthsShortRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsShortStrictRegex;
    } else {
      return this._monthsShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsShortRegex")) {
      this._monthsShortRegex = defaultMonthsShortRegex;
    }
    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
  }
}
function monthsRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsStrictRegex;
    } else {
      return this._monthsRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsRegex")) {
      this._monthsRegex = defaultMonthsRegex;
    }
    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
  }
}
function computeMonthsParse() {
  function cmpLenRev(a, b) {
    return b.length - a.length;
  }
  var shortPieces = [], longPieces = [], mixedPieces = [], i, mom;
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    shortPieces.push(this.monthsShort(mom, ""));
    longPieces.push(this.months(mom, ""));
    mixedPieces.push(this.months(mom, ""));
    mixedPieces.push(this.monthsShort(mom, ""));
  }
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  for (i = 0; i < 12; i++) {
    shortPieces[i] = regexEscape(shortPieces[i]);
    longPieces[i] = regexEscape(longPieces[i]);
  }
  for (i = 0; i < 24; i++) {
    mixedPieces[i] = regexEscape(mixedPieces[i]);
  }
  this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._monthsShortRegex = this._monthsRegex;
  this._monthsStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._monthsShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
}
addFormatToken("Y", 0, 0, function() {
  var y = this.year();
  return y <= 9999 ? zeroFill(y, 4) : "+" + y;
});
addFormatToken(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
addFormatToken(0, ["YYYY", 4], 0, "year");
addFormatToken(0, ["YYYYY", 5], 0, "year");
addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
addUnitAlias("year", "y");
addUnitPriority("year", 1);
addRegexToken("Y", matchSigned);
addRegexToken("YY", match1to2, match2);
addRegexToken("YYYY", match1to4, match4);
addRegexToken("YYYYY", match1to6, match6);
addRegexToken("YYYYYY", match1to6, match6);
addParseToken(["YYYYY", "YYYYYY"], YEAR);
addParseToken("YYYY", function(input, array3) {
  array3[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken("YY", function(input, array3) {
  array3[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken("Y", function(input, array3) {
  array3[YEAR] = parseInt(input, 10);
});
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
hooks.parseTwoDigitYear = function(input) {
  return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
};
var getSetYear = makeGetSet("FullYear", true);
function getIsLeapYear() {
  return isLeapYear(this.year());
}
function createDate(y, m, d, h, M, s, ms) {
  var date3;
  if (y < 100 && y >= 0) {
    date3 = new Date(y + 400, m, d, h, M, s, ms);
    if (isFinite(date3.getFullYear())) {
      date3.setFullYear(y);
    }
  } else {
    date3 = new Date(y, m, d, h, M, s, ms);
  }
  return date3;
}
function createUTCDate(y) {
  var date3, args;
  if (y < 100 && y >= 0) {
    args = Array.prototype.slice.call(arguments);
    args[0] = y + 400;
    date3 = new Date(Date.UTC.apply(null, args));
    if (isFinite(date3.getUTCFullYear())) {
      date3.setUTCFullYear(y);
    }
  } else {
    date3 = new Date(Date.UTC.apply(null, arguments));
  }
  return date3;
}
function firstWeekOffset(year, dow, doy) {
  var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
  return -fwdlw + fwd - 1;
}
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
  var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
  if (dayOfYear <= 0) {
    resYear = year - 1;
    resDayOfYear = daysInYear(resYear) + dayOfYear;
  } else if (dayOfYear > daysInYear(year)) {
    resYear = year + 1;
    resDayOfYear = dayOfYear - daysInYear(year);
  } else {
    resYear = year;
    resDayOfYear = dayOfYear;
  }
  return {
    year: resYear,
    dayOfYear: resDayOfYear
  };
}
function weekOfYear(mom, dow, doy) {
  var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
  if (week < 1) {
    resYear = mom.year() - 1;
    resWeek = week + weeksInYear(resYear, dow, doy);
  } else if (week > weeksInYear(mom.year(), dow, doy)) {
    resWeek = week - weeksInYear(mom.year(), dow, doy);
    resYear = mom.year() + 1;
  } else {
    resYear = mom.year();
    resWeek = week;
  }
  return {
    week: resWeek,
    year: resYear
  };
}
function weeksInYear(year, dow, doy) {
  var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}
addFormatToken("w", ["ww", 2], "wo", "week");
addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
addUnitAlias("week", "w");
addUnitAlias("isoWeek", "W");
addUnitPriority("week", 5);
addUnitPriority("isoWeek", 5);
addRegexToken("w", match1to2);
addRegexToken("ww", match1to2, match2);
addRegexToken("W", match1to2);
addRegexToken("WW", match1to2, match2);
addWeekParseToken(
  ["w", "ww", "W", "WW"],
  function(input, week, config2, token2) {
    week[token2.substr(0, 1)] = toInt(input);
  }
);
function localeWeek(mom) {
  return weekOfYear(mom, this._week.dow, this._week.doy).week;
}
var defaultLocaleWeek = {
  dow: 0,
  doy: 6
};
function localeFirstDayOfWeek() {
  return this._week.dow;
}
function localeFirstDayOfYear() {
  return this._week.doy;
}
function getSetWeek(input) {
  var week = this.localeData().week(this);
  return input == null ? week : this.add((input - week) * 7, "d");
}
function getSetISOWeek(input) {
  var week = weekOfYear(this, 1, 4).week;
  return input == null ? week : this.add((input - week) * 7, "d");
}
addFormatToken("d", 0, "do", "day");
addFormatToken("dd", 0, 0, function(format3) {
  return this.localeData().weekdaysMin(this, format3);
});
addFormatToken("ddd", 0, 0, function(format3) {
  return this.localeData().weekdaysShort(this, format3);
});
addFormatToken("dddd", 0, 0, function(format3) {
  return this.localeData().weekdays(this, format3);
});
addFormatToken("e", 0, 0, "weekday");
addFormatToken("E", 0, 0, "isoWeekday");
addUnitAlias("day", "d");
addUnitAlias("weekday", "e");
addUnitAlias("isoWeekday", "E");
addUnitPriority("day", 11);
addUnitPriority("weekday", 11);
addUnitPriority("isoWeekday", 11);
addRegexToken("d", match1to2);
addRegexToken("e", match1to2);
addRegexToken("E", match1to2);
addRegexToken("dd", function(isStrict, locale3) {
  return locale3.weekdaysMinRegex(isStrict);
});
addRegexToken("ddd", function(isStrict, locale3) {
  return locale3.weekdaysShortRegex(isStrict);
});
addRegexToken("dddd", function(isStrict, locale3) {
  return locale3.weekdaysRegex(isStrict);
});
addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config2, token2) {
  var weekday = config2._locale.weekdaysParse(input, token2, config2._strict);
  if (weekday != null) {
    week.d = weekday;
  } else {
    getParsingFlags(config2).invalidWeekday = input;
  }
});
addWeekParseToken(["d", "e", "E"], function(input, week, config2, token2) {
  week[token2] = toInt(input);
});
function parseWeekday(input, locale3) {
  if (typeof input !== "string") {
    return input;
  }
  if (!isNaN(input)) {
    return parseInt(input, 10);
  }
  input = locale3.weekdaysParse(input);
  if (typeof input === "number") {
    return input;
  }
  return null;
}
function parseIsoWeekday(input, locale3) {
  if (typeof input === "string") {
    return locale3.weekdaysParse(input) % 7 || 7;
  }
  return isNaN(input) ? null : input;
}
function shiftWeekdays(ws, n) {
  return ws.slice(n, 7).concat(ws.slice(0, n));
}
var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
function localeWeekdays(m, format3) {
  var weekdays = isArray$9(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format3) ? "format" : "standalone"];
  return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
}
function localeWeekdaysShort(m) {
  return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
}
function localeWeekdaysMin(m) {
  return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
}
function handleStrictParse$1(weekdayName, format3, strict) {
  var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._minWeekdaysParse = [];
    for (i = 0; i < 7; ++i) {
      mom = createUTC([2e3, 1]).day(i);
      this._minWeekdaysParse[i] = this.weekdaysMin(
        mom,
        ""
      ).toLocaleLowerCase();
      this._shortWeekdaysParse[i] = this.weekdaysShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format3 === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format3 === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format3 === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format3 === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeWeekdaysParse(weekdayName, format3, strict) {
  var i, mom, regex;
  if (this._weekdaysParseExact) {
    return handleStrictParse$1.call(this, weekdayName, format3, strict);
  }
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._minWeekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._fullWeekdaysParse = [];
  }
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    if (strict && !this._fullWeekdaysParse[i]) {
      this._fullWeekdaysParse[i] = new RegExp(
        "^" + this.weekdays(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._shortWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._minWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
    }
    if (!this._weekdaysParse[i]) {
      regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
      this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format3 === "dddd" && this._fullWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format3 === "ddd" && this._shortWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format3 === "dd" && this._minWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
      return i;
    }
  }
}
function getSetDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
  if (input != null) {
    input = parseWeekday(input, this.localeData());
    return this.add(input - day, "d");
  } else {
    return day;
  }
}
function getSetLocaleDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return input == null ? weekday : this.add(input - weekday, "d");
}
function getSetISODayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    var weekday = parseIsoWeekday(input, this.localeData());
    return this.day(this.day() % 7 ? weekday : weekday - 7);
  } else {
    return this.day() || 7;
  }
}
function weekdaysRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysStrictRegex;
    } else {
      return this._weekdaysRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      this._weekdaysRegex = defaultWeekdaysRegex;
    }
    return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
  }
}
function weekdaysShortRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysShortStrictRegex;
    } else {
      return this._weekdaysShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysShortRegex")) {
      this._weekdaysShortRegex = defaultWeekdaysShortRegex;
    }
    return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
  }
}
function weekdaysMinRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysMinStrictRegex;
    } else {
      return this._weekdaysMinRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysMinRegex")) {
      this._weekdaysMinRegex = defaultWeekdaysMinRegex;
    }
    return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
  }
}
function computeWeekdaysParse() {
  function cmpLenRev(a, b) {
    return b.length - a.length;
  }
  var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    minp = regexEscape(this.weekdaysMin(mom, ""));
    shortp = regexEscape(this.weekdaysShort(mom, ""));
    longp = regexEscape(this.weekdays(mom, ""));
    minPieces.push(minp);
    shortPieces.push(shortp);
    longPieces.push(longp);
    mixedPieces.push(minp);
    mixedPieces.push(shortp);
    mixedPieces.push(longp);
  }
  minPieces.sort(cmpLenRev);
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._weekdaysShortRegex = this._weekdaysRegex;
  this._weekdaysMinRegex = this._weekdaysRegex;
  this._weekdaysStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._weekdaysShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
  this._weekdaysMinStrictRegex = new RegExp(
    "^(" + minPieces.join("|") + ")",
    "i"
  );
}
function hFormat() {
  return this.hours() % 12 || 12;
}
function kFormat() {
  return this.hours() || 24;
}
addFormatToken("H", ["HH", 2], 0, "hour");
addFormatToken("h", ["hh", 2], 0, hFormat);
addFormatToken("k", ["kk", 2], 0, kFormat);
addFormatToken("hmm", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});
addFormatToken("hmmss", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
addFormatToken("Hmm", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2);
});
addFormatToken("Hmmss", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
function meridiem(token2, lowercase) {
  addFormatToken(token2, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      lowercase
    );
  });
}
meridiem("a", true);
meridiem("A", false);
addUnitAlias("hour", "h");
addUnitPriority("hour", 13);
function matchMeridiem(isStrict, locale3) {
  return locale3._meridiemParse;
}
addRegexToken("a", matchMeridiem);
addRegexToken("A", matchMeridiem);
addRegexToken("H", match1to2);
addRegexToken("h", match1to2);
addRegexToken("k", match1to2);
addRegexToken("HH", match1to2, match2);
addRegexToken("hh", match1to2, match2);
addRegexToken("kk", match1to2, match2);
addRegexToken("hmm", match3to4);
addRegexToken("hmmss", match5to6);
addRegexToken("Hmm", match3to4);
addRegexToken("Hmmss", match5to6);
addParseToken(["H", "HH"], HOUR);
addParseToken(["k", "kk"], function(input, array3, config2) {
  var kInput = toInt(input);
  array3[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(["a", "A"], function(input, array3, config2) {
  config2._isPm = config2._locale.isPM(input);
  config2._meridiem = input;
});
addParseToken(["h", "hh"], function(input, array3, config2) {
  array3[HOUR] = toInt(input);
  getParsingFlags(config2).bigHour = true;
});
addParseToken("hmm", function(input, array3, config2) {
  var pos = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos));
  array3[MINUTE] = toInt(input.substr(pos));
  getParsingFlags(config2).bigHour = true;
});
addParseToken("hmmss", function(input, array3, config2) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos1));
  array3[MINUTE] = toInt(input.substr(pos1, 2));
  array3[SECOND] = toInt(input.substr(pos2));
  getParsingFlags(config2).bigHour = true;
});
addParseToken("Hmm", function(input, array3, config2) {
  var pos = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos));
  array3[MINUTE] = toInt(input.substr(pos));
});
addParseToken("Hmmss", function(input, array3, config2) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos1));
  array3[MINUTE] = toInt(input.substr(pos1, 2));
  array3[SECOND] = toInt(input.substr(pos2));
});
function localeIsPM(input) {
  return (input + "").toLowerCase().charAt(0) === "p";
}
var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", true);
function localeMeridiem(hours2, minutes2, isLower) {
  if (hours2 > 11) {
    return isLower ? "pm" : "PM";
  } else {
    return isLower ? "am" : "AM";
  }
}
var baseConfig = {
  calendar: defaultCalendar,
  longDateFormat: defaultLongDateFormat,
  invalidDate: defaultInvalidDate,
  ordinal: defaultOrdinal,
  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
  relativeTime: defaultRelativeTime,
  months: defaultLocaleMonths,
  monthsShort: defaultLocaleMonthsShort,
  week: defaultLocaleWeek,
  weekdays: defaultLocaleWeekdays,
  weekdaysMin: defaultLocaleWeekdaysMin,
  weekdaysShort: defaultLocaleWeekdaysShort,
  meridiemParse: defaultLocaleMeridiemParse
};
var locales = {}, localeFamilies = {}, globalLocale;
function commonPrefix(arr1, arr2) {
  var i, minl = Math.min(arr1.length, arr2.length);
  for (i = 0; i < minl; i += 1) {
    if (arr1[i] !== arr2[i]) {
      return i;
    }
  }
  return minl;
}
function normalizeLocale(key2) {
  return key2 ? key2.toLowerCase().replace("_", "-") : key2;
}
function chooseLocale(names) {
  var i = 0, j, next3, locale3, split;
  while (i < names.length) {
    split = normalizeLocale(names[i]).split("-");
    j = split.length;
    next3 = normalizeLocale(names[i + 1]);
    next3 = next3 ? next3.split("-") : null;
    while (j > 0) {
      locale3 = loadLocale(split.slice(0, j).join("-"));
      if (locale3) {
        return locale3;
      }
      if (next3 && next3.length >= j && commonPrefix(split, next3) >= j - 1) {
        break;
      }
      j--;
    }
    i++;
  }
  return globalLocale;
}
function isLocaleNameSane(name) {
  return name.match("^[^/\\\\]*$") != null;
}
function loadLocale(name) {
  var oldLocale = null, aliasedRequire;
  if (locales[name] === void 0 && typeof module !== "undefined" && module && module.exports && isLocaleNameSane(name)) {
    try {
      oldLocale = globalLocale._abbr;
      aliasedRequire = require;
      aliasedRequire("./locale/" + name);
      getSetGlobalLocale(oldLocale);
    } catch (e) {
      locales[name] = null;
    }
  }
  return locales[name];
}
function getSetGlobalLocale(key2, values) {
  var data109;
  if (key2) {
    if (isUndefined(values)) {
      data109 = getLocale2(key2);
    } else {
      data109 = defineLocale(key2, values);
    }
    if (data109) {
      globalLocale = data109;
    } else {
      if (typeof console !== "undefined" && console.warn) {
        console.warn(
          "Locale " + key2 + " not found. Did you forget to load it?"
        );
      }
    }
  }
  return globalLocale._abbr;
}
function defineLocale(name, config2) {
  if (config2 !== null) {
    var locale3, parentConfig = baseConfig;
    config2.abbr = name;
    if (locales[name] != null) {
      deprecateSimple(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      );
      parentConfig = locales[name]._config;
    } else if (config2.parentLocale != null) {
      if (locales[config2.parentLocale] != null) {
        parentConfig = locales[config2.parentLocale]._config;
      } else {
        locale3 = loadLocale(config2.parentLocale);
        if (locale3 != null) {
          parentConfig = locale3._config;
        } else {
          if (!localeFamilies[config2.parentLocale]) {
            localeFamilies[config2.parentLocale] = [];
          }
          localeFamilies[config2.parentLocale].push({
            name,
            config: config2
          });
          return null;
        }
      }
    }
    locales[name] = new Locale(mergeConfigs(parentConfig, config2));
    if (localeFamilies[name]) {
      localeFamilies[name].forEach(function(x) {
        defineLocale(x.name, x.config);
      });
    }
    getSetGlobalLocale(name);
    return locales[name];
  } else {
    delete locales[name];
    return null;
  }
}
function updateLocale(name, config2) {
  if (config2 != null) {
    var locale3, tmpLocale, parentConfig = baseConfig;
    if (locales[name] != null && locales[name].parentLocale != null) {
      locales[name].set(mergeConfigs(locales[name]._config, config2));
    } else {
      tmpLocale = loadLocale(name);
      if (tmpLocale != null) {
        parentConfig = tmpLocale._config;
      }
      config2 = mergeConfigs(parentConfig, config2);
      if (tmpLocale == null) {
        config2.abbr = name;
      }
      locale3 = new Locale(config2);
      locale3.parentLocale = locales[name];
      locales[name] = locale3;
    }
    getSetGlobalLocale(name);
  } else {
    if (locales[name] != null) {
      if (locales[name].parentLocale != null) {
        locales[name] = locales[name].parentLocale;
        if (name === getSetGlobalLocale()) {
          getSetGlobalLocale(name);
        }
      } else if (locales[name] != null) {
        delete locales[name];
      }
    }
  }
  return locales[name];
}
function getLocale2(key2) {
  var locale3;
  if (key2 && key2._locale && key2._locale._abbr) {
    key2 = key2._locale._abbr;
  }
  if (!key2) {
    return globalLocale;
  }
  if (!isArray$9(key2)) {
    locale3 = loadLocale(key2);
    if (locale3) {
      return locale3;
    }
    key2 = [key2];
  }
  return chooseLocale(key2);
}
function listLocales() {
  return keys$3(locales);
}
function checkOverflow(m) {
  var overflow3, a = m._a;
  if (a && getParsingFlags(m).overflow === -2) {
    overflow3 = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
    if (getParsingFlags(m)._overflowDayOfYear && (overflow3 < YEAR || overflow3 > DATE)) {
      overflow3 = DATE;
    }
    if (getParsingFlags(m)._overflowWeeks && overflow3 === -1) {
      overflow3 = WEEK;
    }
    if (getParsingFlags(m)._overflowWeekday && overflow3 === -1) {
      overflow3 = WEEKDAY;
    }
    getParsingFlags(m).overflow = overflow3;
  }
  return m;
}
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, false],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, false],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, false],
  ["YYYY", /\d{4}/, false]
], isoTimes = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function configFromISO(config2) {
  var i, l, string2 = config2._i, match5 = extendedIsoRegex.exec(string2) || basicIsoRegex.exec(string2), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
  if (match5) {
    getParsingFlags(config2).iso = true;
    for (i = 0, l = isoDatesLen; i < l; i++) {
      if (isoDates[i][1].exec(match5[1])) {
        dateFormat = isoDates[i][0];
        allowTime = isoDates[i][2] !== false;
        break;
      }
    }
    if (dateFormat == null) {
      config2._isValid = false;
      return;
    }
    if (match5[3]) {
      for (i = 0, l = isoTimesLen; i < l; i++) {
        if (isoTimes[i][1].exec(match5[3])) {
          timeFormat = (match5[2] || " ") + isoTimes[i][0];
          break;
        }
      }
      if (timeFormat == null) {
        config2._isValid = false;
        return;
      }
    }
    if (!allowTime && timeFormat != null) {
      config2._isValid = false;
      return;
    }
    if (match5[4]) {
      if (tzRegex.exec(match5[4])) {
        tzFormat = "Z";
      } else {
        config2._isValid = false;
        return;
      }
    }
    config2._f = dateFormat + (timeFormat || "") + (tzFormat || "");
    configFromStringAndFormat(config2);
  } else {
    config2._isValid = false;
  }
}
function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)
  ];
  if (secondStr) {
    result.push(parseInt(secondStr, 10));
  }
  return result;
}
function untruncateYear(yearStr) {
  var year = parseInt(yearStr, 10);
  if (year <= 49) {
    return 2e3 + year;
  } else if (year <= 999) {
    return 1900 + year;
  }
  return year;
}
function preprocessRFC2822(s) {
  return s.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function checkWeekday(weekdayStr, parsedInput, config2) {
  if (weekdayStr) {
    var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(
      parsedInput[0],
      parsedInput[1],
      parsedInput[2]
    ).getDay();
    if (weekdayProvided !== weekdayActual) {
      getParsingFlags(config2).weekdayMismatch = true;
      config2._isValid = false;
      return false;
    }
  }
  return true;
}
function calculateOffset(obsOffset, militaryOffset, numOffset) {
  if (obsOffset) {
    return obsOffsets[obsOffset];
  } else if (militaryOffset) {
    return 0;
  } else {
    var hm = parseInt(numOffset, 10), m = hm % 100, h = (hm - m) / 100;
    return h * 60 + m;
  }
}
function configFromRFC2822(config2) {
  var match5 = rfc2822.exec(preprocessRFC2822(config2._i)), parsedArray;
  if (match5) {
    parsedArray = extractFromRFC2822Strings(
      match5[4],
      match5[3],
      match5[2],
      match5[5],
      match5[6],
      match5[7]
    );
    if (!checkWeekday(match5[1], parsedArray, config2)) {
      return;
    }
    config2._a = parsedArray;
    config2._tzm = calculateOffset(match5[8], match5[9], match5[10]);
    config2._d = createUTCDate.apply(null, config2._a);
    config2._d.setUTCMinutes(config2._d.getUTCMinutes() - config2._tzm);
    getParsingFlags(config2).rfc2822 = true;
  } else {
    config2._isValid = false;
  }
}
function configFromString(config2) {
  var matched = aspNetJsonRegex.exec(config2._i);
  if (matched !== null) {
    config2._d = new Date(+matched[1]);
    return;
  }
  configFromISO(config2);
  if (config2._isValid === false) {
    delete config2._isValid;
  } else {
    return;
  }
  configFromRFC2822(config2);
  if (config2._isValid === false) {
    delete config2._isValid;
  } else {
    return;
  }
  if (config2._strict) {
    config2._isValid = false;
  } else {
    hooks.createFromInputFallback(config2);
  }
}
hooks.createFromInputFallback = deprecate(
  "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
  function(config2) {
    config2._d = new Date(config2._i + (config2._useUTC ? " UTC" : ""));
  }
);
function defaults(a, b, c) {
  if (a != null) {
    return a;
  }
  if (b != null) {
    return b;
  }
  return c;
}
function currentDateArray(config2) {
  var nowValue = new Date(hooks.now());
  if (config2._useUTC) {
    return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()
    ];
  }
  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}
function configFromArray(config2) {
  var i, date3, input = [], currentDate, expectedWeekday, yearToUse;
  if (config2._d) {
    return;
  }
  currentDate = currentDateArray(config2);
  if (config2._w && config2._a[DATE] == null && config2._a[MONTH] == null) {
    dayOfYearFromWeekInfo(config2);
  }
  if (config2._dayOfYear != null) {
    yearToUse = defaults(config2._a[YEAR], currentDate[YEAR]);
    if (config2._dayOfYear > daysInYear(yearToUse) || config2._dayOfYear === 0) {
      getParsingFlags(config2)._overflowDayOfYear = true;
    }
    date3 = createUTCDate(yearToUse, 0, config2._dayOfYear);
    config2._a[MONTH] = date3.getUTCMonth();
    config2._a[DATE] = date3.getUTCDate();
  }
  for (i = 0; i < 3 && config2._a[i] == null; ++i) {
    config2._a[i] = input[i] = currentDate[i];
  }
  for (; i < 7; i++) {
    config2._a[i] = input[i] = config2._a[i] == null ? i === 2 ? 1 : 0 : config2._a[i];
  }
  if (config2._a[HOUR] === 24 && config2._a[MINUTE] === 0 && config2._a[SECOND] === 0 && config2._a[MILLISECOND] === 0) {
    config2._nextDay = true;
    config2._a[HOUR] = 0;
  }
  config2._d = (config2._useUTC ? createUTCDate : createDate).apply(
    null,
    input
  );
  expectedWeekday = config2._useUTC ? config2._d.getUTCDay() : config2._d.getDay();
  if (config2._tzm != null) {
    config2._d.setUTCMinutes(config2._d.getUTCMinutes() - config2._tzm);
  }
  if (config2._nextDay) {
    config2._a[HOUR] = 24;
  }
  if (config2._w && typeof config2._w.d !== "undefined" && config2._w.d !== expectedWeekday) {
    getParsingFlags(config2).weekdayMismatch = true;
  }
}
function dayOfYearFromWeekInfo(config2) {
  var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
  w = config2._w;
  if (w.GG != null || w.W != null || w.E != null) {
    dow = 1;
    doy = 4;
    weekYear = defaults(
      w.GG,
      config2._a[YEAR],
      weekOfYear(createLocal(), 1, 4).year
    );
    week = defaults(w.W, 1);
    weekday = defaults(w.E, 1);
    if (weekday < 1 || weekday > 7) {
      weekdayOverflow = true;
    }
  } else {
    dow = config2._locale._week.dow;
    doy = config2._locale._week.doy;
    curWeek = weekOfYear(createLocal(), dow, doy);
    weekYear = defaults(w.gg, config2._a[YEAR], curWeek.year);
    week = defaults(w.w, curWeek.week);
    if (w.d != null) {
      weekday = w.d;
      if (weekday < 0 || weekday > 6) {
        weekdayOverflow = true;
      }
    } else if (w.e != null) {
      weekday = w.e + dow;
      if (w.e < 0 || w.e > 6) {
        weekdayOverflow = true;
      }
    } else {
      weekday = dow;
    }
  }
  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
    getParsingFlags(config2)._overflowWeeks = true;
  } else if (weekdayOverflow != null) {
    getParsingFlags(config2)._overflowWeekday = true;
  } else {
    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
    config2._a[YEAR] = temp.year;
    config2._dayOfYear = temp.dayOfYear;
  }
}
hooks.ISO_8601 = function() {
};
hooks.RFC_2822 = function() {
};
function configFromStringAndFormat(config2) {
  if (config2._f === hooks.ISO_8601) {
    configFromISO(config2);
    return;
  }
  if (config2._f === hooks.RFC_2822) {
    configFromRFC2822(config2);
    return;
  }
  config2._a = [];
  getParsingFlags(config2).empty = true;
  var string2 = "" + config2._i, i, parsedInput, tokens2, token2, skipped, stringLength = string2.length, totalParsedInputLength = 0, era, tokenLen;
  tokens2 = expandFormat(config2._f, config2._locale).match(formattingTokens) || [];
  tokenLen = tokens2.length;
  for (i = 0; i < tokenLen; i++) {
    token2 = tokens2[i];
    parsedInput = (string2.match(getParseRegexForToken(token2, config2)) || [])[0];
    if (parsedInput) {
      skipped = string2.substr(0, string2.indexOf(parsedInput));
      if (skipped.length > 0) {
        getParsingFlags(config2).unusedInput.push(skipped);
      }
      string2 = string2.slice(
        string2.indexOf(parsedInput) + parsedInput.length
      );
      totalParsedInputLength += parsedInput.length;
    }
    if (formatTokenFunctions[token2]) {
      if (parsedInput) {
        getParsingFlags(config2).empty = false;
      } else {
        getParsingFlags(config2).unusedTokens.push(token2);
      }
      addTimeToArrayFromToken(token2, parsedInput, config2);
    } else if (config2._strict && !parsedInput) {
      getParsingFlags(config2).unusedTokens.push(token2);
    }
  }
  getParsingFlags(config2).charsLeftOver = stringLength - totalParsedInputLength;
  if (string2.length > 0) {
    getParsingFlags(config2).unusedInput.push(string2);
  }
  if (config2._a[HOUR] <= 12 && getParsingFlags(config2).bigHour === true && config2._a[HOUR] > 0) {
    getParsingFlags(config2).bigHour = void 0;
  }
  getParsingFlags(config2).parsedDateParts = config2._a.slice(0);
  getParsingFlags(config2).meridiem = config2._meridiem;
  config2._a[HOUR] = meridiemFixWrap(
    config2._locale,
    config2._a[HOUR],
    config2._meridiem
  );
  era = getParsingFlags(config2).era;
  if (era !== null) {
    config2._a[YEAR] = config2._locale.erasConvertYear(era, config2._a[YEAR]);
  }
  configFromArray(config2);
  checkOverflow(config2);
}
function meridiemFixWrap(locale3, hour, meridiem2) {
  var isPm;
  if (meridiem2 == null) {
    return hour;
  }
  if (locale3.meridiemHour != null) {
    return locale3.meridiemHour(hour, meridiem2);
  } else if (locale3.isPM != null) {
    isPm = locale3.isPM(meridiem2);
    if (isPm && hour < 12) {
      hour += 12;
    }
    if (!isPm && hour === 12) {
      hour = 0;
    }
    return hour;
  } else {
    return hour;
  }
}
function configFromStringAndArray(config2) {
  var tempConfig, bestMoment, scoreToBeat, i, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config2._f.length;
  if (configfLen === 0) {
    getParsingFlags(config2).invalidFormat = true;
    config2._d = new Date(NaN);
    return;
  }
  for (i = 0; i < configfLen; i++) {
    currentScore = 0;
    validFormatFound = false;
    tempConfig = copyConfig({}, config2);
    if (config2._useUTC != null) {
      tempConfig._useUTC = config2._useUTC;
    }
    tempConfig._f = config2._f[i];
    configFromStringAndFormat(tempConfig);
    if (isValid$2(tempConfig)) {
      validFormatFound = true;
    }
    currentScore += getParsingFlags(tempConfig).charsLeftOver;
    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
    getParsingFlags(tempConfig).score = currentScore;
    if (!bestFormatIsValid) {
      if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
        if (validFormatFound) {
          bestFormatIsValid = true;
        }
      }
    } else {
      if (currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
  }
  extend(config2, bestMoment || tempConfig);
}
function configFromObject(config2) {
  if (config2._d) {
    return;
  }
  var i = normalizeObjectUnits(config2._i), dayOrDate = i.day === void 0 ? i.date : i.day;
  config2._a = map(
    [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
    function(obj) {
      return obj && parseInt(obj, 10);
    }
  );
  configFromArray(config2);
}
function createFromConfig(config2) {
  var res = new Moment(checkOverflow(prepareConfig(config2)));
  if (res._nextDay) {
    res.add(1, "d");
    res._nextDay = void 0;
  }
  return res;
}
function prepareConfig(config2) {
  var input = config2._i, format3 = config2._f;
  config2._locale = config2._locale || getLocale2(config2._l);
  if (input === null || format3 === void 0 && input === "") {
    return createInvalid({ nullInput: true });
  }
  if (typeof input === "string") {
    config2._i = input = config2._locale.preparse(input);
  }
  if (isMoment$1(input)) {
    return new Moment(checkOverflow(input));
  } else if (isDate(input)) {
    config2._d = input;
  } else if (isArray$9(format3)) {
    configFromStringAndArray(config2);
  } else if (format3) {
    configFromStringAndFormat(config2);
  } else {
    configFromInput(config2);
  }
  if (!isValid$2(config2)) {
    config2._d = null;
  }
  return config2;
}
function configFromInput(config2) {
  var input = config2._i;
  if (isUndefined(input)) {
    config2._d = new Date(hooks.now());
  } else if (isDate(input)) {
    config2._d = new Date(input.valueOf());
  } else if (typeof input === "string") {
    configFromString(config2);
  } else if (isArray$9(input)) {
    config2._a = map(input.slice(0), function(obj) {
      return parseInt(obj, 10);
    });
    configFromArray(config2);
  } else if (isObject$8(input)) {
    configFromObject(config2);
  } else if (isNumber(input)) {
    config2._d = new Date(input);
  } else {
    hooks.createFromInputFallback(config2);
  }
}
function createLocalOrUTC(input, format3, locale3, strict, isUTC) {
  var c = {};
  if (format3 === true || format3 === false) {
    strict = format3;
    format3 = void 0;
  }
  if (locale3 === true || locale3 === false) {
    strict = locale3;
    locale3 = void 0;
  }
  if (isObject$8(input) && isObjectEmpty(input) || isArray$9(input) && input.length === 0) {
    input = void 0;
  }
  c._isAMomentObject = true;
  c._useUTC = c._isUTC = isUTC;
  c._l = locale3;
  c._i = input;
  c._f = format3;
  c._strict = strict;
  return createFromConfig(c);
}
function createLocal(input, format3, locale3, strict) {
  return createLocalOrUTC(input, format3, locale3, strict, false);
}
var prototypeMin = deprecate(
  "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other < this ? this : other;
    } else {
      return createInvalid();
    }
  }
), prototypeMax = deprecate(
  "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other > this ? this : other;
    } else {
      return createInvalid();
    }
  }
);
function pickBy(fn, moments) {
  var res, i;
  if (moments.length === 1 && isArray$9(moments[0])) {
    moments = moments[0];
  }
  if (!moments.length) {
    return createLocal();
  }
  res = moments[0];
  for (i = 1; i < moments.length; ++i) {
    if (!moments[i].isValid() || moments[i][fn](res)) {
      res = moments[i];
    }
  }
  return res;
}
function min() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isBefore", args);
}
function max() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isAfter", args);
}
var now$4 = function() {
  return Date.now ? Date.now() : +new Date();
};
var ordering = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
function isDurationValid(m) {
  var key2, unitHasDecimal = false, i, orderLen = ordering.length;
  for (key2 in m) {
    if (hasOwnProp(m, key2) && !(indexOf.call(ordering, key2) !== -1 && (m[key2] == null || !isNaN(m[key2])))) {
      return false;
    }
  }
  for (i = 0; i < orderLen; ++i) {
    if (m[ordering[i]]) {
      if (unitHasDecimal) {
        return false;
      }
      if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
        unitHasDecimal = true;
      }
    }
  }
  return true;
}
function isValid$1$1() {
  return this._isValid;
}
function createInvalid$1() {
  return createDuration(NaN);
}
function Duration(duration2) {
  var normalizedInput = normalizeObjectUnits(duration2), years3 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months3 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
  this._isValid = isDurationValid(normalizedInput);
  this._milliseconds = +milliseconds2 + seconds2 * 1e3 + minutes2 * 6e4 + hours2 * 1e3 * 60 * 60;
  this._days = +days2 + weeks2 * 7;
  this._months = +months3 + quarters * 3 + years3 * 12;
  this._data = {};
  this._locale = getLocale2();
  this._bubble();
}
function isDuration(obj) {
  return obj instanceof Duration;
}
function absRound(number3) {
  if (number3 < 0) {
    return Math.round(-1 * number3) * -1;
  } else {
    return Math.round(number3);
  }
}
function compareArrays(array1, array22, dontConvert) {
  var len = Math.min(array1.length, array22.length), lengthDiff = Math.abs(array1.length - array22.length), diffs = 0, i;
  for (i = 0; i < len; i++) {
    if (dontConvert && array1[i] !== array22[i] || !dontConvert && toInt(array1[i]) !== toInt(array22[i])) {
      diffs++;
    }
  }
  return diffs + lengthDiff;
}
function offset$1(token2, separator) {
  addFormatToken(token2, 0, 0, function() {
    var offset4 = this.utcOffset(), sign2 = "+";
    if (offset4 < 0) {
      offset4 = -offset4;
      sign2 = "-";
    }
    return sign2 + zeroFill(~~(offset4 / 60), 2) + separator + zeroFill(~~offset4 % 60, 2);
  });
}
offset$1("Z", ":");
offset$1("ZZ", "");
addRegexToken("Z", matchShortOffset);
addRegexToken("ZZ", matchShortOffset);
addParseToken(["Z", "ZZ"], function(input, array3, config2) {
  config2._useUTC = true;
  config2._tzm = offsetFromString(matchShortOffset, input);
});
var chunkOffset = /([\+\-]|\d\d)/gi;
function offsetFromString(matcher, string2) {
  var matches2 = (string2 || "").match(matcher), chunk, parts, minutes2;
  if (matches2 === null) {
    return null;
  }
  chunk = matches2[matches2.length - 1] || [];
  parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
  minutes2 = +(parts[1] * 60) + toInt(parts[2]);
  return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
}
function cloneWithOffset(input, model) {
  var res, diff2;
  if (model._isUTC) {
    res = model.clone();
    diff2 = (isMoment$1(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
    res._d.setTime(res._d.valueOf() + diff2);
    hooks.updateOffset(res, false);
    return res;
  } else {
    return createLocal(input).local();
  }
}
function getDateOffset(m) {
  return -Math.round(m._d.getTimezoneOffset());
}
hooks.updateOffset = function() {
};
function getSetOffset(input, keepLocalTime, keepMinutes) {
  var offset4 = this._offset || 0, localAdjust;
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    if (typeof input === "string") {
      input = offsetFromString(matchShortOffset, input);
      if (input === null) {
        return this;
      }
    } else if (Math.abs(input) < 16 && !keepMinutes) {
      input = input * 60;
    }
    if (!this._isUTC && keepLocalTime) {
      localAdjust = getDateOffset(this);
    }
    this._offset = input;
    this._isUTC = true;
    if (localAdjust != null) {
      this.add(localAdjust, "m");
    }
    if (offset4 !== input) {
      if (!keepLocalTime || this._changeInProgress) {
        addSubtract(
          this,
          createDuration(input - offset4, "m"),
          1,
          false
        );
      } else if (!this._changeInProgress) {
        this._changeInProgress = true;
        hooks.updateOffset(this, true);
        this._changeInProgress = null;
      }
    }
    return this;
  } else {
    return this._isUTC ? offset4 : getDateOffset(this);
  }
}
function getSetZone(input, keepLocalTime) {
  if (input != null) {
    if (typeof input !== "string") {
      input = -input;
    }
    this.utcOffset(input, keepLocalTime);
    return this;
  } else {
    return -this.utcOffset();
  }
}
function setOffsetToUTC(keepLocalTime) {
  return this.utcOffset(0, keepLocalTime);
}
function setOffsetToLocal(keepLocalTime) {
  if (this._isUTC) {
    this.utcOffset(0, keepLocalTime);
    this._isUTC = false;
    if (keepLocalTime) {
      this.subtract(getDateOffset(this), "m");
    }
  }
  return this;
}
function setOffsetToParsedOffset() {
  if (this._tzm != null) {
    this.utcOffset(this._tzm, false, true);
  } else if (typeof this._i === "string") {
    var tZone = offsetFromString(matchOffset, this._i);
    if (tZone != null) {
      this.utcOffset(tZone);
    } else {
      this.utcOffset(0, true);
    }
  }
  return this;
}
function hasAlignedHourOffset(input) {
  if (!this.isValid()) {
    return false;
  }
  input = input ? createLocal(input).utcOffset() : 0;
  return (this.utcOffset() - input) % 60 === 0;
}
function isDaylightSavingTime() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function isDaylightSavingTimeShifted() {
  if (!isUndefined(this._isDSTShifted)) {
    return this._isDSTShifted;
  }
  var c = {}, other;
  copyConfig(c, this);
  c = prepareConfig(c);
  if (c._a) {
    other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
    this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
  } else {
    this._isDSTShifted = false;
  }
  return this._isDSTShifted;
}
function isLocal() {
  return this.isValid() ? !this._isUTC : false;
}
function isUtcOffset() {
  return this.isValid() ? this._isUTC : false;
}
function isUtc() {
  return this.isValid() ? this._isUTC && this._offset === 0 : false;
}
var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function createDuration(input, key2) {
  var duration2 = input, match5 = null, sign2, ret, diffRes;
  if (isDuration(input)) {
    duration2 = {
      ms: input._milliseconds,
      d: input._days,
      M: input._months
    };
  } else if (isNumber(input) || !isNaN(+input)) {
    duration2 = {};
    if (key2) {
      duration2[key2] = +input;
    } else {
      duration2.milliseconds = +input;
    }
  } else if (match5 = aspNetRegex.exec(input)) {
    sign2 = match5[1] === "-" ? -1 : 1;
    duration2 = {
      y: 0,
      d: toInt(match5[DATE]) * sign2,
      h: toInt(match5[HOUR]) * sign2,
      m: toInt(match5[MINUTE]) * sign2,
      s: toInt(match5[SECOND]) * sign2,
      ms: toInt(absRound(match5[MILLISECOND] * 1e3)) * sign2
    };
  } else if (match5 = isoRegex.exec(input)) {
    sign2 = match5[1] === "-" ? -1 : 1;
    duration2 = {
      y: parseIso(match5[2], sign2),
      M: parseIso(match5[3], sign2),
      w: parseIso(match5[4], sign2),
      d: parseIso(match5[5], sign2),
      h: parseIso(match5[6], sign2),
      m: parseIso(match5[7], sign2),
      s: parseIso(match5[8], sign2)
    };
  } else if (duration2 == null) {
    duration2 = {};
  } else if (typeof duration2 === "object" && ("from" in duration2 || "to" in duration2)) {
    diffRes = momentsDifference(
      createLocal(duration2.from),
      createLocal(duration2.to)
    );
    duration2 = {};
    duration2.ms = diffRes.milliseconds;
    duration2.M = diffRes.months;
  }
  ret = new Duration(duration2);
  if (isDuration(input) && hasOwnProp(input, "_locale")) {
    ret._locale = input._locale;
  }
  if (isDuration(input) && hasOwnProp(input, "_isValid")) {
    ret._isValid = input._isValid;
  }
  return ret;
}
createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;
function parseIso(inp, sign2) {
  var res = inp && parseFloat(inp.replace(",", "."));
  return (isNaN(res) ? 0 : res) * sign2;
}
function positiveMomentsDifference(base2, other) {
  var res = {};
  res.months = other.month() - base2.month() + (other.year() - base2.year()) * 12;
  if (base2.clone().add(res.months, "M").isAfter(other)) {
    --res.months;
  }
  res.milliseconds = +other - +base2.clone().add(res.months, "M");
  return res;
}
function momentsDifference(base2, other) {
  var res;
  if (!(base2.isValid() && other.isValid())) {
    return { milliseconds: 0, months: 0 };
  }
  other = cloneWithOffset(other, base2);
  if (base2.isBefore(other)) {
    res = positiveMomentsDifference(base2, other);
  } else {
    res = positiveMomentsDifference(other, base2);
    res.milliseconds = -res.milliseconds;
    res.months = -res.months;
  }
  return res;
}
function createAdder(direction, name) {
  return function(val, period) {
    var dur, tmp;
    if (period !== null && !isNaN(+period)) {
      deprecateSimple(
        name,
        "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
      );
      tmp = val;
      val = period;
      period = tmp;
    }
    dur = createDuration(val, period);
    addSubtract(this, dur, direction);
    return this;
  };
}
function addSubtract(mom, duration2, isAdding, updateOffset) {
  var milliseconds2 = duration2._milliseconds, days2 = absRound(duration2._days), months3 = absRound(duration2._months);
  if (!mom.isValid()) {
    return;
  }
  updateOffset = updateOffset == null ? true : updateOffset;
  if (months3) {
    setMonth(mom, get$2(mom, "Month") + months3 * isAdding);
  }
  if (days2) {
    set$1$1(mom, "Date", get$2(mom, "Date") + days2 * isAdding);
  }
  if (milliseconds2) {
    mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
  }
  if (updateOffset) {
    hooks.updateOffset(mom, days2 || months3);
  }
}
var add2 = createAdder(1, "add"), subtract = createAdder(-1, "subtract");
function isString$1(input) {
  return typeof input === "string" || input instanceof String;
}
function isMomentInput(input) {
  return isMoment$1(input) || isDate(input) || isString$1(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
}
function isMomentInputObject(input) {
  var objectTest = isObject$8(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], i, property2, propertyLen = properties.length;
  for (i = 0; i < propertyLen; i += 1) {
    property2 = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property2);
  }
  return objectTest && propertyTest;
}
function isNumberOrStringArray(input) {
  var arrayTest = isArray$9(input), dataTypeTest = false;
  if (arrayTest) {
    dataTypeTest = input.filter(function(item) {
      return !isNumber(item) && isString$1(input);
    }).length === 0;
  }
  return arrayTest && dataTypeTest;
}
function isCalendarSpec(input) {
  var objectTest = isObject$8(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], i, property2;
  for (i = 0; i < properties.length; i += 1) {
    property2 = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property2);
  }
  return objectTest && propertyTest;
}
function getCalendarFormat(myMoment, now2) {
  var diff2 = myMoment.diff(now2, "days", true);
  return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
}
function calendar$1(time, formats) {
  if (arguments.length === 1) {
    if (!arguments[0]) {
      time = void 0;
      formats = void 0;
    } else if (isMomentInput(arguments[0])) {
      time = arguments[0];
      formats = void 0;
    } else if (isCalendarSpec(arguments[0])) {
      formats = arguments[0];
      time = void 0;
    }
  }
  var now2 = time || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format3 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction$1(formats[format3]) ? formats[format3].call(this, now2) : formats[format3]);
  return this.format(
    output || this.localeData().calendar(format3, this, createLocal(now2))
  );
}
function clone3() {
  return new Moment(this);
}
function isAfter(input, units) {
  var localInput = isMoment$1(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() > localInput.valueOf();
  } else {
    return localInput.valueOf() < this.clone().startOf(units).valueOf();
  }
}
function isBefore(input, units) {
  var localInput = isMoment$1(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() < localInput.valueOf();
  } else {
    return this.clone().endOf(units).valueOf() < localInput.valueOf();
  }
}
function isBetween(from3, to2, units, inclusivity) {
  var localFrom = isMoment$1(from3) ? from3 : createLocal(from3), localTo = isMoment$1(to2) ? to2 : createLocal(to2);
  if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
    return false;
  }
  inclusivity = inclusivity || "()";
  return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
}
function isSame(input, units) {
  var localInput = isMoment$1(input) ? input : createLocal(input), inputMs;
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() === localInput.valueOf();
  } else {
    inputMs = localInput.valueOf();
    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
  }
}
function isSameOrAfter(input, units) {
  return this.isSame(input, units) || this.isAfter(input, units);
}
function isSameOrBefore(input, units) {
  return this.isSame(input, units) || this.isBefore(input, units);
}
function diff(input, units, asFloat) {
  var that, zoneDelta, output;
  if (!this.isValid()) {
    return NaN;
  }
  that = cloneWithOffset(input, this);
  if (!that.isValid()) {
    return NaN;
  }
  zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
  units = normalizeUnits(units);
  switch (units) {
    case "year":
      output = monthDiff(this, that) / 12;
      break;
    case "month":
      output = monthDiff(this, that);
      break;
    case "quarter":
      output = monthDiff(this, that) / 3;
      break;
    case "second":
      output = (this - that) / 1e3;
      break;
    case "minute":
      output = (this - that) / 6e4;
      break;
    case "hour":
      output = (this - that) / 36e5;
      break;
    case "day":
      output = (this - that - zoneDelta) / 864e5;
      break;
    case "week":
      output = (this - that - zoneDelta) / 6048e5;
      break;
    default:
      output = this - that;
  }
  return asFloat ? output : absFloor(output);
}
function monthDiff(a, b) {
  if (a.date() < b.date()) {
    return -monthDiff(b, a);
  }
  var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()), anchor = a.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
  if (b - anchor < 0) {
    anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
    adjust = (b - anchor) / (anchor - anchor2);
  } else {
    anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
    adjust = (b - anchor) / (anchor2 - anchor);
  }
  return -(wholeMonthDiff + adjust) || 0;
}
hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function toString$4() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function toISOString(keepOffset) {
  if (!this.isValid()) {
    return null;
  }
  var utc = keepOffset !== true, m = utc ? this.clone().utc() : this;
  if (m.year() < 0 || m.year() > 9999) {
    return formatMoment(
      m,
      utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
    );
  }
  if (isFunction$1(Date.prototype.toISOString)) {
    if (utc) {
      return this.toDate().toISOString();
    } else {
      return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m, "Z"));
    }
  }
  return formatMoment(
    m,
    utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function inspect() {
  if (!this.isValid()) {
    return "moment.invalid(/* " + this._i + " */)";
  }
  var func = "moment", zone = "", prefix, year, datetime, suffix2;
  if (!this.isLocal()) {
    func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
    zone = "Z";
  }
  prefix = "[" + func + '("]';
  year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
  datetime = "-MM-DD[T]HH:mm:ss.SSS";
  suffix2 = zone + '[")]';
  return this.format(prefix + year + datetime + suffix2);
}
function format$1(inputString) {
  if (!inputString) {
    inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
  }
  var output = formatMoment(this, inputString);
  return this.localeData().postformat(output);
}
function from2(time, withoutSuffix) {
  if (this.isValid() && (isMoment$1(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function fromNow(withoutSuffix) {
  return this.from(createLocal(), withoutSuffix);
}
function to(time, withoutSuffix) {
  if (this.isValid() && (isMoment$1(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function toNow(withoutSuffix) {
  return this.to(createLocal(), withoutSuffix);
}
function locale(key2) {
  var newLocaleData;
  if (key2 === void 0) {
    return this._locale._abbr;
  } else {
    newLocaleData = getLocale2(key2);
    if (newLocaleData != null) {
      this._locale = newLocaleData;
    }
    return this;
  }
}
var lang = deprecate(
  "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
  function(key2) {
    if (key2 === void 0) {
      return this.localeData();
    } else {
      return this.locale(key2);
    }
  }
);
function localeData() {
  return this._locale;
}
var MS_PER_SECOND = 1e3, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
function mod$1(dividend, divisor) {
  return (dividend % divisor + divisor) % divisor;
}
function localStartOfDate(y, m, d) {
  if (y < 100 && y >= 0) {
    return new Date(y + 400, m, d) - MS_PER_400_YEARS;
  } else {
    return new Date(y, m, d).valueOf();
  }
}
function utcStartOfDate(y, m, d) {
  if (y < 100 && y >= 0) {
    return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
  } else {
    return Date.UTC(y, m, d);
  }
}
function startOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year(), 0, 1);
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      time = startOfDate(this.year(), this.month(), 1);
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date());
      break;
    case "hour":
      time = this._d.valueOf();
      time -= mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      );
      break;
    case "minute":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_MINUTE);
      break;
    case "second":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_SECOND);
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function endOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      time = startOfDate(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      time = this._d.valueOf();
      time += MS_PER_HOUR - mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      ) - 1;
      break;
    case "minute":
      time = this._d.valueOf();
      time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
      break;
    case "second":
      time = this._d.valueOf();
      time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function valueOf() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function unix() {
  return Math.floor(this.valueOf() / 1e3);
}
function toDate() {
  return new Date(this.valueOf());
}
function toArray$4() {
  var m = this;
  return [
    m.year(),
    m.month(),
    m.date(),
    m.hour(),
    m.minute(),
    m.second(),
    m.millisecond()
  ];
}
function toObject() {
  var m = this;
  return {
    years: m.year(),
    months: m.month(),
    date: m.date(),
    hours: m.hours(),
    minutes: m.minutes(),
    seconds: m.seconds(),
    milliseconds: m.milliseconds()
  };
}
function toJSON() {
  return this.isValid() ? this.toISOString() : null;
}
function isValid$2$1() {
  return isValid$2(this);
}
function parsingFlags() {
  return extend({}, getParsingFlags(this));
}
function invalidAt() {
  return getParsingFlags(this).overflow;
}
function creationData() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
addFormatToken("N", 0, 0, "eraAbbr");
addFormatToken("NN", 0, 0, "eraAbbr");
addFormatToken("NNN", 0, 0, "eraAbbr");
addFormatToken("NNNN", 0, 0, "eraName");
addFormatToken("NNNNN", 0, 0, "eraNarrow");
addFormatToken("y", ["y", 1], "yo", "eraYear");
addFormatToken("y", ["yy", 2], 0, "eraYear");
addFormatToken("y", ["yyy", 3], 0, "eraYear");
addFormatToken("y", ["yyyy", 4], 0, "eraYear");
addRegexToken("N", matchEraAbbr);
addRegexToken("NN", matchEraAbbr);
addRegexToken("NNN", matchEraAbbr);
addRegexToken("NNNN", matchEraName);
addRegexToken("NNNNN", matchEraNarrow);
addParseToken(
  ["N", "NN", "NNN", "NNNN", "NNNNN"],
  function(input, array3, config2, token2) {
    var era = config2._locale.erasParse(input, token2, config2._strict);
    if (era) {
      getParsingFlags(config2).era = era;
    } else {
      getParsingFlags(config2).invalidEra = input;
    }
  }
);
addRegexToken("y", matchUnsigned);
addRegexToken("yy", matchUnsigned);
addRegexToken("yyy", matchUnsigned);
addRegexToken("yyyy", matchUnsigned);
addRegexToken("yo", matchEraYearOrdinal);
addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
addParseToken(["yo"], function(input, array3, config2, token2) {
  var match5;
  if (config2._locale._eraYearOrdinalRegex) {
    match5 = input.match(config2._locale._eraYearOrdinalRegex);
  }
  if (config2._locale.eraYearOrdinalParse) {
    array3[YEAR] = config2._locale.eraYearOrdinalParse(input, match5);
  } else {
    array3[YEAR] = parseInt(input, 10);
  }
});
function localeEras(m, format3) {
  var i, l, date3, eras = this._eras || getLocale2("en")._eras;
  for (i = 0, l = eras.length; i < l; ++i) {
    switch (typeof eras[i].since) {
      case "string":
        date3 = hooks(eras[i].since).startOf("day");
        eras[i].since = date3.valueOf();
        break;
    }
    switch (typeof eras[i].until) {
      case "undefined":
        eras[i].until = Infinity;
        break;
      case "string":
        date3 = hooks(eras[i].until).startOf("day").valueOf();
        eras[i].until = date3.valueOf();
        break;
    }
  }
  return eras;
}
function localeErasParse(eraName, format3, strict) {
  var i, l, eras = this.eras(), name, abbr, narrow;
  eraName = eraName.toUpperCase();
  for (i = 0, l = eras.length; i < l; ++i) {
    name = eras[i].name.toUpperCase();
    abbr = eras[i].abbr.toUpperCase();
    narrow = eras[i].narrow.toUpperCase();
    if (strict) {
      switch (format3) {
        case "N":
        case "NN":
        case "NNN":
          if (abbr === eraName) {
            return eras[i];
          }
          break;
        case "NNNN":
          if (name === eraName) {
            return eras[i];
          }
          break;
        case "NNNNN":
          if (narrow === eraName) {
            return eras[i];
          }
          break;
      }
    } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
      return eras[i];
    }
  }
}
function localeErasConvertYear(era, year) {
  var dir = era.since <= era.until ? 1 : -1;
  if (year === void 0) {
    return hooks(era.since).year();
  } else {
    return hooks(era.since).year() + (year - era.offset) * dir;
  }
}
function getEraName() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].name;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].name;
    }
  }
  return "";
}
function getEraNarrow() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].narrow;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].narrow;
    }
  }
  return "";
}
function getEraAbbr() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].abbr;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].abbr;
    }
  }
  return "";
}
function getEraYear() {
  var i, l, dir, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    dir = eras[i].since <= eras[i].until ? 1 : -1;
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {
      return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;
    }
  }
  return this.year();
}
function erasNameRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNameRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNameRegex : this._erasRegex;
}
function erasAbbrRegex(isStrict) {
  if (!hasOwnProp(this, "_erasAbbrRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasAbbrRegex : this._erasRegex;
}
function erasNarrowRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNarrowRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNarrowRegex : this._erasRegex;
}
function matchEraAbbr(isStrict, locale3) {
  return locale3.erasAbbrRegex(isStrict);
}
function matchEraName(isStrict, locale3) {
  return locale3.erasNameRegex(isStrict);
}
function matchEraNarrow(isStrict, locale3) {
  return locale3.erasNarrowRegex(isStrict);
}
function matchEraYearOrdinal(isStrict, locale3) {
  return locale3._eraYearOrdinalRegex || matchUnsigned;
}
function computeErasParse() {
  var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i, l, eras = this.eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    namePieces.push(regexEscape(eras[i].name));
    abbrPieces.push(regexEscape(eras[i].abbr));
    narrowPieces.push(regexEscape(eras[i].narrow));
    mixedPieces.push(regexEscape(eras[i].name));
    mixedPieces.push(regexEscape(eras[i].abbr));
    mixedPieces.push(regexEscape(eras[i].narrow));
  }
  this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
  this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
  this._erasNarrowRegex = new RegExp(
    "^(" + narrowPieces.join("|") + ")",
    "i"
  );
}
addFormatToken(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
addFormatToken(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function addWeekYearFormatToken(token2, getter) {
  addFormatToken(0, [token2, token2.length], 0, getter);
}
addWeekYearFormatToken("gggg", "weekYear");
addWeekYearFormatToken("ggggg", "weekYear");
addWeekYearFormatToken("GGGG", "isoWeekYear");
addWeekYearFormatToken("GGGGG", "isoWeekYear");
addUnitAlias("weekYear", "gg");
addUnitAlias("isoWeekYear", "GG");
addUnitPriority("weekYear", 1);
addUnitPriority("isoWeekYear", 1);
addRegexToken("G", matchSigned);
addRegexToken("g", matchSigned);
addRegexToken("GG", match1to2, match2);
addRegexToken("gg", match1to2, match2);
addRegexToken("GGGG", match1to4, match4);
addRegexToken("gggg", match1to4, match4);
addRegexToken("GGGGG", match1to6, match6);
addRegexToken("ggggg", match1to6, match6);
addWeekParseToken(
  ["gggg", "ggggg", "GGGG", "GGGGG"],
  function(input, week, config2, token2) {
    week[token2.substr(0, 2)] = toInt(input);
  }
);
addWeekParseToken(["gg", "GG"], function(input, week, config2, token2) {
  week[token2] = hooks.parseTwoDigitYear(input);
});
function getSetWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.week(),
    this.weekday(),
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function getSetISOWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function getISOWeeksInYear() {
  return weeksInYear(this.year(), 1, 4);
}
function getISOWeeksInISOWeekYear() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
}
function getWeeksInYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}
function getWeeksInWeekYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
}
function getSetWeekYearHelper(input, week, weekday, dow, doy) {
  var weeksTarget;
  if (input == null) {
    return weekOfYear(this, dow, doy).year;
  } else {
    weeksTarget = weeksInYear(input, dow, doy);
    if (week > weeksTarget) {
      week = weeksTarget;
    }
    return setWeekAll.call(this, input, week, weekday, dow, doy);
  }
}
function setWeekAll(weekYear, week, weekday, dow, doy) {
  var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date3 = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
  this.year(date3.getUTCFullYear());
  this.month(date3.getUTCMonth());
  this.date(date3.getUTCDate());
  return this;
}
addFormatToken("Q", 0, "Qo", "quarter");
addUnitAlias("quarter", "Q");
addUnitPriority("quarter", 7);
addRegexToken("Q", match1);
addParseToken("Q", function(input, array3) {
  array3[MONTH] = (toInt(input) - 1) * 3;
});
function getSetQuarter(input) {
  return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}
addFormatToken("D", ["DD", 2], "Do", "date");
addUnitAlias("date", "D");
addUnitPriority("date", 9);
addRegexToken("D", match1to2);
addRegexToken("DD", match1to2, match2);
addRegexToken("Do", function(isStrict, locale3) {
  return isStrict ? locale3._dayOfMonthOrdinalParse || locale3._ordinalParse : locale3._dayOfMonthOrdinalParseLenient;
});
addParseToken(["D", "DD"], DATE);
addParseToken("Do", function(input, array3) {
  array3[DATE] = toInt(input.match(match1to2)[0]);
});
var getSetDayOfMonth = makeGetSet("Date", true);
addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
addUnitAlias("dayOfYear", "DDD");
addUnitPriority("dayOfYear", 4);
addRegexToken("DDD", match1to3);
addRegexToken("DDDD", match3);
addParseToken(["DDD", "DDDD"], function(input, array3, config2) {
  config2._dayOfYear = toInt(input);
});
function getSetDayOfYear(input) {
  var dayOfYear = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
}
addFormatToken("m", ["mm", 2], 0, "minute");
addUnitAlias("minute", "m");
addUnitPriority("minute", 14);
addRegexToken("m", match1to2);
addRegexToken("mm", match1to2, match2);
addParseToken(["m", "mm"], MINUTE);
var getSetMinute = makeGetSet("Minutes", false);
addFormatToken("s", ["ss", 2], 0, "second");
addUnitAlias("second", "s");
addUnitPriority("second", 15);
addRegexToken("s", match1to2);
addRegexToken("ss", match1to2, match2);
addParseToken(["s", "ss"], SECOND);
var getSetSecond = makeGetSet("Seconds", false);
addFormatToken("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
addFormatToken(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
addFormatToken(0, ["SSS", 3], 0, "millisecond");
addFormatToken(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
addFormatToken(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
addFormatToken(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
addFormatToken(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
addUnitAlias("millisecond", "ms");
addUnitPriority("millisecond", 16);
addRegexToken("S", match1to3, match1);
addRegexToken("SS", match1to3, match2);
addRegexToken("SSS", match1to3, match3);
var token, getSetMillisecond;
for (token = "SSSS"; token.length <= 9; token += "S") {
  addRegexToken(token, matchUnsigned);
}
function parseMs(input, array3) {
  array3[MILLISECOND] = toInt(("0." + input) * 1e3);
}
for (token = "S"; token.length <= 9; token += "S") {
  addParseToken(token, parseMs);
}
getSetMillisecond = makeGetSet("Milliseconds", false);
addFormatToken("z", 0, 0, "zoneAbbr");
addFormatToken("zz", 0, 0, "zoneName");
function getZoneAbbr() {
  return this._isUTC ? "UTC" : "";
}
function getZoneName() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var proto = Moment.prototype;
proto.add = add2;
proto.calendar = calendar$1;
proto.clone = clone3;
proto.diff = diff;
proto.endOf = endOf;
proto.format = format$1;
proto.from = from2;
proto.fromNow = fromNow;
proto.to = to;
proto.toNow = toNow;
proto.get = stringGet;
proto.invalidAt = invalidAt;
proto.isAfter = isAfter;
proto.isBefore = isBefore;
proto.isBetween = isBetween;
proto.isSame = isSame;
proto.isSameOrAfter = isSameOrAfter;
proto.isSameOrBefore = isSameOrBefore;
proto.isValid = isValid$2$1;
proto.lang = lang;
proto.locale = locale;
proto.localeData = localeData;
proto.max = prototypeMax;
proto.min = prototypeMin;
proto.parsingFlags = parsingFlags;
proto.set = stringSet;
proto.startOf = startOf;
proto.subtract = subtract;
proto.toArray = toArray$4;
proto.toObject = toObject;
proto.toDate = toDate;
proto.toISOString = toISOString;
proto.inspect = inspect;
if (typeof Symbol !== "undefined" && Symbol.for != null) {
  proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
    return "Moment<" + this.format() + ">";
  };
}
proto.toJSON = toJSON;
proto.toString = toString$4;
proto.unix = unix;
proto.valueOf = valueOf;
proto.creationData = creationData;
proto.eraName = getEraName;
proto.eraNarrow = getEraNarrow;
proto.eraAbbr = getEraAbbr;
proto.eraYear = getEraYear;
proto.year = getSetYear;
proto.isLeapYear = getIsLeapYear;
proto.weekYear = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;
proto.quarter = proto.quarters = getSetQuarter;
proto.month = getSetMonth;
proto.daysInMonth = getDaysInMonth;
proto.week = proto.weeks = getSetWeek;
proto.isoWeek = proto.isoWeeks = getSetISOWeek;
proto.weeksInYear = getWeeksInYear;
proto.weeksInWeekYear = getWeeksInWeekYear;
proto.isoWeeksInYear = getISOWeeksInYear;
proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
proto.date = getSetDayOfMonth;
proto.day = proto.days = getSetDayOfWeek;
proto.weekday = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear = getSetDayOfYear;
proto.hour = proto.hours = getSetHour;
proto.minute = proto.minutes = getSetMinute;
proto.second = proto.seconds = getSetSecond;
proto.millisecond = proto.milliseconds = getSetMillisecond;
proto.utcOffset = getSetOffset;
proto.utc = setOffsetToUTC;
proto.local = setOffsetToLocal;
proto.parseZone = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST = isDaylightSavingTime;
proto.isLocal = isLocal;
proto.isUtcOffset = isUtcOffset;
proto.isUtc = isUtc;
proto.isUTC = isUtc;
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;
proto.dates = deprecate(
  "dates accessor is deprecated. Use date instead.",
  getSetDayOfMonth
);
proto.months = deprecate(
  "months accessor is deprecated. Use month instead",
  getSetMonth
);
proto.years = deprecate(
  "years accessor is deprecated. Use year instead",
  getSetYear
);
proto.zone = deprecate(
  "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
  getSetZone
);
proto.isDSTShifted = deprecate(
  "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
  isDaylightSavingTimeShifted
);
function createUnix(input) {
  return createLocal(input * 1e3);
}
function createInZone() {
  return createLocal.apply(null, arguments).parseZone();
}
function preParsePostFormat(string2) {
  return string2;
}
var proto$1 = Locale.prototype;
proto$1.calendar = calendar;
proto$1.longDateFormat = longDateFormat;
proto$1.invalidDate = invalidDate;
proto$1.ordinal = ordinal;
proto$1.preparse = preParsePostFormat;
proto$1.postformat = preParsePostFormat;
proto$1.relativeTime = relativeTime;
proto$1.pastFuture = pastFuture;
proto$1.set = set$1;
proto$1.eras = localeEras;
proto$1.erasParse = localeErasParse;
proto$1.erasConvertYear = localeErasConvertYear;
proto$1.erasAbbrRegex = erasAbbrRegex;
proto$1.erasNameRegex = erasNameRegex;
proto$1.erasNarrowRegex = erasNarrowRegex;
proto$1.months = localeMonths;
proto$1.monthsShort = localeMonthsShort;
proto$1.monthsParse = localeMonthsParse;
proto$1.monthsRegex = monthsRegex;
proto$1.monthsShortRegex = monthsShortRegex;
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;
proto$1.weekdays = localeWeekdays;
proto$1.weekdaysMin = localeWeekdaysMin;
proto$1.weekdaysShort = localeWeekdaysShort;
proto$1.weekdaysParse = localeWeekdaysParse;
proto$1.weekdaysRegex = weekdaysRegex;
proto$1.weekdaysShortRegex = weekdaysShortRegex;
proto$1.weekdaysMinRegex = weekdaysMinRegex;
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;
function get$1$1(format3, index2, field, setter2) {
  var locale3 = getLocale2(), utc = createUTC().set(setter2, index2);
  return locale3[field](utc, format3);
}
function listMonthsImpl(format3, index2, field) {
  if (isNumber(format3)) {
    index2 = format3;
    format3 = void 0;
  }
  format3 = format3 || "";
  if (index2 != null) {
    return get$1$1(format3, index2, field, "month");
  }
  var i, out = [];
  for (i = 0; i < 12; i++) {
    out[i] = get$1$1(format3, i, field, "month");
  }
  return out;
}
function listWeekdaysImpl(localeSorted, format3, index2, field) {
  if (typeof localeSorted === "boolean") {
    if (isNumber(format3)) {
      index2 = format3;
      format3 = void 0;
    }
    format3 = format3 || "";
  } else {
    format3 = localeSorted;
    index2 = format3;
    localeSorted = false;
    if (isNumber(format3)) {
      index2 = format3;
      format3 = void 0;
    }
    format3 = format3 || "";
  }
  var locale3 = getLocale2(), shift = localeSorted ? locale3._week.dow : 0, i, out = [];
  if (index2 != null) {
    return get$1$1(format3, (index2 + shift) % 7, field, "day");
  }
  for (i = 0; i < 7; i++) {
    out[i] = get$1$1(format3, (i + shift) % 7, field, "day");
  }
  return out;
}
function listMonths(format3, index2) {
  return listMonthsImpl(format3, index2, "months");
}
function listMonthsShort(format3, index2) {
  return listMonthsImpl(format3, index2, "monthsShort");
}
function listWeekdays(localeSorted, format3, index2) {
  return listWeekdaysImpl(localeSorted, format3, index2, "weekdays");
}
function listWeekdaysShort(localeSorted, format3, index2) {
  return listWeekdaysImpl(localeSorted, format3, index2, "weekdaysShort");
}
function listWeekdaysMin(localeSorted, format3, index2) {
  return listWeekdaysImpl(localeSorted, format3, index2, "weekdaysMin");
}
getSetGlobalLocale("en", {
  eras: [
    {
      since: "0001-01-01",
      until: Infinity,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: -Infinity,
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(number3) {
    var b = number3 % 10, output = toInt(number3 % 100 / 10) === 1 ? "th" : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
    return number3 + output;
  }
});
hooks.lang = deprecate(
  "moment.lang is deprecated. Use moment.locale instead.",
  getSetGlobalLocale
);
hooks.langData = deprecate(
  "moment.langData is deprecated. Use moment.localeData instead.",
  getLocale2
);
var mathAbs = Math.abs;
function abs() {
  var data109 = this._data;
  this._milliseconds = mathAbs(this._milliseconds);
  this._days = mathAbs(this._days);
  this._months = mathAbs(this._months);
  data109.milliseconds = mathAbs(data109.milliseconds);
  data109.seconds = mathAbs(data109.seconds);
  data109.minutes = mathAbs(data109.minutes);
  data109.hours = mathAbs(data109.hours);
  data109.months = mathAbs(data109.months);
  data109.years = mathAbs(data109.years);
  return this;
}
function addSubtract$1(duration2, input, value27, direction) {
  var other = createDuration(input, value27);
  duration2._milliseconds += direction * other._milliseconds;
  duration2._days += direction * other._days;
  duration2._months += direction * other._months;
  return duration2._bubble();
}
function add$1(input, value27) {
  return addSubtract$1(this, input, value27, 1);
}
function subtract$1(input, value27) {
  return addSubtract$1(this, input, value27, -1);
}
function absCeil(number3) {
  if (number3 < 0) {
    return Math.floor(number3);
  } else {
    return Math.ceil(number3);
  }
}
function bubble() {
  var milliseconds2 = this._milliseconds, days2 = this._days, months3 = this._months, data109 = this._data, seconds2, minutes2, hours2, years3, monthsFromDays;
  if (!(milliseconds2 >= 0 && days2 >= 0 && months3 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months3 <= 0)) {
    milliseconds2 += absCeil(monthsToDays(months3) + days2) * 864e5;
    days2 = 0;
    months3 = 0;
  }
  data109.milliseconds = milliseconds2 % 1e3;
  seconds2 = absFloor(milliseconds2 / 1e3);
  data109.seconds = seconds2 % 60;
  minutes2 = absFloor(seconds2 / 60);
  data109.minutes = minutes2 % 60;
  hours2 = absFloor(minutes2 / 60);
  data109.hours = hours2 % 24;
  days2 += absFloor(hours2 / 24);
  monthsFromDays = absFloor(daysToMonths(days2));
  months3 += monthsFromDays;
  days2 -= absCeil(monthsToDays(monthsFromDays));
  years3 = absFloor(months3 / 12);
  months3 %= 12;
  data109.days = days2;
  data109.months = months3;
  data109.years = years3;
  return this;
}
function daysToMonths(days2) {
  return days2 * 4800 / 146097;
}
function monthsToDays(months3) {
  return months3 * 146097 / 4800;
}
function as(units) {
  if (!this.isValid()) {
    return NaN;
  }
  var days2, months3, milliseconds2 = this._milliseconds;
  units = normalizeUnits(units);
  if (units === "month" || units === "quarter" || units === "year") {
    days2 = this._days + milliseconds2 / 864e5;
    months3 = this._months + daysToMonths(days2);
    switch (units) {
      case "month":
        return months3;
      case "quarter":
        return months3 / 3;
      case "year":
        return months3 / 12;
    }
  } else {
    days2 = this._days + Math.round(monthsToDays(this._months));
    switch (units) {
      case "week":
        return days2 / 7 + milliseconds2 / 6048e5;
      case "day":
        return days2 + milliseconds2 / 864e5;
      case "hour":
        return days2 * 24 + milliseconds2 / 36e5;
      case "minute":
        return days2 * 1440 + milliseconds2 / 6e4;
      case "second":
        return days2 * 86400 + milliseconds2 / 1e3;
      case "millisecond":
        return Math.floor(days2 * 864e5) + milliseconds2;
      default:
        throw new Error("Unknown unit " + units);
    }
  }
}
function valueOf$1() {
  if (!this.isValid()) {
    return NaN;
  }
  return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
}
function makeAs(alias2) {
  return function() {
    return this.as(alias2);
  };
}
var asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs("M"), asQuarters = makeAs("Q"), asYears = makeAs("y");
function clone$1() {
  return createDuration(this);
}
function get$2$1(units) {
  units = normalizeUnits(units);
  return this.isValid() ? this[units + "s"]() : NaN;
}
function makeGetter(name) {
  return function() {
    return this.isValid() ? this._data[name] : NaN;
  };
}
var milliseconds = makeGetter("milliseconds"), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter("hours"), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter("years");
function weeks() {
  return absFloor(this.days() / 7);
}
var round = Math.round, thresholds = {
  ss: 44,
  s: 45,
  m: 45,
  h: 22,
  d: 26,
  w: null,
  M: 11
};
function substituteTimeAgo(string2, number3, withoutSuffix, isFuture, locale3) {
  return locale3.relativeTime(number3 || 1, !!withoutSuffix, string2, isFuture);
}
function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale3) {
  var duration2 = createDuration(posNegDuration).abs(), seconds2 = round(duration2.as("s")), minutes2 = round(duration2.as("m")), hours2 = round(duration2.as("h")), days2 = round(duration2.as("d")), months3 = round(duration2.as("M")), weeks2 = round(duration2.as("w")), years3 = round(duration2.as("y")), a = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
  if (thresholds2.w != null) {
    a = a || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
  }
  a = a || months3 <= 1 && ["M"] || months3 < thresholds2.M && ["MM", months3] || years3 <= 1 && ["y"] || ["yy", years3];
  a[2] = withoutSuffix;
  a[3] = +posNegDuration > 0;
  a[4] = locale3;
  return substituteTimeAgo.apply(null, a);
}
function getSetRelativeTimeRounding(roundingFunction) {
  if (roundingFunction === void 0) {
    return round;
  }
  if (typeof roundingFunction === "function") {
    round = roundingFunction;
    return true;
  }
  return false;
}
function getSetRelativeTimeThreshold(threshold, limit) {
  if (thresholds[threshold] === void 0) {
    return false;
  }
  if (limit === void 0) {
    return thresholds[threshold];
  }
  thresholds[threshold] = limit;
  if (threshold === "s") {
    thresholds.ss = limit - 1;
  }
  return true;
}
function humanize(argWithSuffix, argThresholds) {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var withSuffix2 = false, th = thresholds, locale3, output;
  if (typeof argWithSuffix === "object") {
    argThresholds = argWithSuffix;
    argWithSuffix = false;
  }
  if (typeof argWithSuffix === "boolean") {
    withSuffix2 = argWithSuffix;
  }
  if (typeof argThresholds === "object") {
    th = Object.assign({}, thresholds, argThresholds);
    if (argThresholds.s != null && argThresholds.ss == null) {
      th.ss = argThresholds.s - 1;
    }
  }
  locale3 = this.localeData();
  output = relativeTime$1(this, !withSuffix2, th, locale3);
  if (withSuffix2) {
    output = locale3.pastFuture(+this, output);
  }
  return locale3.postformat(output);
}
var abs$1 = Math.abs;
function sign(x) {
  return (x > 0) - (x < 0) || +x;
}
function toISOString$1() {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months3 = abs$1(this._months), minutes2, hours2, years3, s, total2 = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
  if (!total2) {
    return "P0D";
  }
  minutes2 = absFloor(seconds2 / 60);
  hours2 = absFloor(minutes2 / 60);
  seconds2 %= 60;
  minutes2 %= 60;
  years3 = absFloor(months3 / 12);
  months3 %= 12;
  s = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
  totalSign = total2 < 0 ? "-" : "";
  ymSign = sign(this._months) !== sign(total2) ? "-" : "";
  daysSign = sign(this._days) !== sign(total2) ? "-" : "";
  hmsSign = sign(this._milliseconds) !== sign(total2) ? "-" : "";
  return totalSign + "P" + (years3 ? ymSign + years3 + "Y" : "") + (months3 ? ymSign + months3 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s + "S" : "");
}
var proto$2 = Duration.prototype;
proto$2.isValid = isValid$1$1;
proto$2.abs = abs;
proto$2.add = add$1;
proto$2.subtract = subtract$1;
proto$2.as = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds = asSeconds;
proto$2.asMinutes = asMinutes;
proto$2.asHours = asHours;
proto$2.asDays = asDays;
proto$2.asWeeks = asWeeks;
proto$2.asMonths = asMonths;
proto$2.asQuarters = asQuarters;
proto$2.asYears = asYears;
proto$2.valueOf = valueOf$1;
proto$2._bubble = bubble;
proto$2.clone = clone$1;
proto$2.get = get$2$1;
proto$2.milliseconds = milliseconds;
proto$2.seconds = seconds;
proto$2.minutes = minutes;
proto$2.hours = hours;
proto$2.days = days;
proto$2.weeks = weeks;
proto$2.months = months;
proto$2.years = years;
proto$2.humanize = humanize;
proto$2.toISOString = toISOString$1;
proto$2.toString = toISOString$1;
proto$2.toJSON = toISOString$1;
proto$2.locale = locale;
proto$2.localeData = localeData;
proto$2.toIsoString = deprecate(
  "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
  toISOString$1
);
proto$2.lang = lang;
addFormatToken("X", 0, 0, "unix");
addFormatToken("x", 0, 0, "valueOf");
addRegexToken("x", matchSigned);
addRegexToken("X", matchTimestamp);
addParseToken("X", function(input, array3, config2) {
  config2._d = new Date(parseFloat(input) * 1e3);
});
addParseToken("x", function(input, array3, config2) {
  config2._d = new Date(toInt(input));
});
//! moment.js
hooks.version = "2.29.4";
setHookCallback(createLocal);
hooks.fn = proto;
hooks.min = min;
hooks.max = max;
hooks.now = now$4;
hooks.utc = createUTC;
hooks.unix = createUnix;
hooks.months = listMonths;
hooks.isDate = isDate;
hooks.locale = getSetGlobalLocale;
hooks.invalid = createInvalid;
hooks.duration = createDuration;
hooks.isMoment = isMoment$1;
hooks.weekdays = listWeekdays;
hooks.parseZone = createInZone;
hooks.localeData = getLocale2;
hooks.isDuration = isDuration;
hooks.monthsShort = listMonthsShort;
hooks.weekdaysMin = listWeekdaysMin;
hooks.defineLocale = defineLocale;
hooks.updateLocale = updateLocale;
hooks.locales = listLocales;
hooks.weekdaysShort = listWeekdaysShort;
hooks.normalizeUnits = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat = getCalendarFormat;
hooks.prototype = proto;
hooks.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  DATE: "YYYY-MM-DD",
  TIME: "HH:mm",
  TIME_SECONDS: "HH:mm:ss",
  TIME_MS: "HH:mm:ss.SSS",
  WEEK: "GGGG-[W]WW",
  MONTH: "YYYY-MM"
};
var moment = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": hooks
}, Symbol.toStringTag, { value: "Module" }));
var DateConstants = {
  DATE_ROW_COUNT: 6,
  DATE_COL_COUNT: 7
};
var DateTHead = {
  functional: true,
  render: function render59(createElement, context) {
    var h = arguments[0];
    var props2 = context.props;
    var value27 = props2.value;
    var localeData2 = value27.localeData();
    var prefixCls2 = props2.prefixCls;
    var veryShortWeekdays = [];
    var weekDays = [];
    var firstDayOfWeek = localeData2.firstDayOfWeek();
    var showWeekNumberEl = void 0;
    var now2 = hooks();
    for (var dateColIndex = 0; dateColIndex < DateConstants.DATE_COL_COUNT; dateColIndex++) {
      var index2 = (firstDayOfWeek + dateColIndex) % DateConstants.DATE_COL_COUNT;
      now2.day(index2);
      veryShortWeekdays[dateColIndex] = localeData2.weekdaysMin(now2);
      weekDays[dateColIndex] = localeData2.weekdaysShort(now2);
    }
    if (props2.showWeekNumber) {
      showWeekNumberEl = h(
        "th",
        {
          attrs: {
            role: "columnheader"
          },
          "class": prefixCls2 + "-column-header " + prefixCls2 + "-week-number-header"
        },
        [h(
          "span",
          { "class": prefixCls2 + "-column-header-inner" },
          ["x"]
        )]
      );
    }
    var weekDaysEls = weekDays.map(function(day, xindex) {
      return h(
        "th",
        {
          key: xindex,
          attrs: { role: "columnheader", title: day },
          "class": prefixCls2 + "-column-header"
        },
        [h(
          "span",
          { "class": prefixCls2 + "-column-header-inner" },
          [veryShortWeekdays[xindex]]
        )]
      );
    });
    return h("thead", [h(
      "tr",
      {
        attrs: { role: "row" }
      },
      [showWeekNumberEl, weekDaysEls]
    )]);
  }
};
var defaultDisabledTime = {
  disabledHours: function disabledHours() {
    return [];
  },
  disabledMinutes: function disabledMinutes() {
    return [];
  },
  disabledSeconds: function disabledSeconds() {
    return [];
  }
};
function getTodayTime(value27) {
  var today = hooks();
  today.locale(value27.locale()).utcOffset(value27.utcOffset());
  return today;
}
function getTitleString(value27) {
  return value27.format("LL");
}
function getTodayTimeStr(value27) {
  var today = getTodayTime(value27);
  return getTitleString(today);
}
function getMonthName(month) {
  var locale3 = month.locale();
  var localeData2 = month.localeData();
  return localeData2[locale3 === "zh-cn" ? "months" : "monthsShort"](month);
}
function syncTime(from3, to2) {
  if (!hooks.isMoment(from3) || !hooks.isMoment(to2))
    return;
  to2.hour(from3.hour());
  to2.minute(from3.minute());
  to2.second(from3.second());
  to2.millisecond(from3.millisecond());
}
function getTimeConfig(value27, disabledTime) {
  var disabledTimeConfig = disabledTime ? disabledTime(value27) : {};
  disabledTimeConfig = _default$6({}, defaultDisabledTime, disabledTimeConfig);
  return disabledTimeConfig;
}
function isTimeValidByConfig(value27, disabledTimeConfig) {
  var invalidTime = false;
  if (value27) {
    var hour = value27.hour();
    var minutes2 = value27.minute();
    var seconds2 = value27.second();
    var disabledHours3 = disabledTimeConfig.disabledHours();
    if (disabledHours3.indexOf(hour) === -1) {
      var disabledMinutes2 = disabledTimeConfig.disabledMinutes(hour);
      if (disabledMinutes2.indexOf(minutes2) === -1) {
        var disabledSeconds2 = disabledTimeConfig.disabledSeconds(hour, minutes2);
        invalidTime = disabledSeconds2.indexOf(seconds2) !== -1;
      } else {
        invalidTime = true;
      }
    } else {
      invalidTime = true;
    }
  }
  return !invalidTime;
}
function isTimeValid(value27, disabledTime) {
  var disabledTimeConfig = getTimeConfig(value27, disabledTime);
  return isTimeValidByConfig(value27, disabledTimeConfig);
}
function isAllowedDate(value27, disabledDate, disabledTime) {
  if (disabledDate) {
    if (disabledDate(value27)) {
      return false;
    }
  }
  if (disabledTime) {
    if (!isTimeValid(value27, disabledTime)) {
      return false;
    }
  }
  return true;
}
function formatDate$1(value27, format3) {
  if (!value27) {
    return "";
  }
  if (Array.isArray(format3)) {
    format3 = format3[0];
  }
  if (typeof format3 === "function") {
    var result = format3(value27);
    if (typeof result === "string") {
      return result;
    } else {
      throw new Error("The function of format does not return a string");
    }
  }
  return value27.format(format3);
}
function noop$P() {
}
function isSameDay(one, two) {
  return one && two && one.isSame(two, "day");
}
function beforeCurrentMonthYear(current2, today) {
  if (current2.year() < today.year()) {
    return 1;
  }
  return current2.year() === today.year() && current2.month() < today.month();
}
function afterCurrentMonthYear(current2, today) {
  if (current2.year() > today.year()) {
    return 1;
  }
  return current2.year() === today.year() && current2.month() > today.month();
}
function getIdFromDate(date3) {
  return "rc-calendar-" + date3.year() + "-" + date3.month() + "-" + date3.date();
}
var DateTBody = {
  props: {
    contentRender: PropTypes.func,
    dateRender: PropTypes.func,
    disabledDate: PropTypes.func,
    prefixCls: PropTypes.string,
    selectedValue: PropTypes.oneOfType([PropTypes.any, PropTypes.arrayOf(PropTypes.any)]),
    value: PropTypes.object,
    hoverValue: PropTypes.any.def([]),
    showWeekNumber: PropTypes.bool
  },
  render: function render60() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var contentRender = props2.contentRender, prefixCls2 = props2.prefixCls, selectedValue6 = props2.selectedValue, value27 = props2.value, showWeekNumber = props2.showWeekNumber, dateRender = props2.dateRender, disabledDate = props2.disabledDate, hoverValue2 = props2.hoverValue;
    var _getListeners = getListeners(this), _getListeners$select = _getListeners.select, select2 = _getListeners$select === void 0 ? noop$P : _getListeners$select, _getListeners$dayHove = _getListeners.dayHover, dayHover = _getListeners$dayHove === void 0 ? noop$P : _getListeners$dayHove;
    var iIndex = void 0;
    var jIndex = void 0;
    var current2 = void 0;
    var dateTable = [];
    var today = getTodayTime(value27);
    var cellClass = prefixCls2 + "-cell";
    var weekNumberCellClass = prefixCls2 + "-week-number-cell";
    var dateClass = prefixCls2 + "-date";
    var todayClass = prefixCls2 + "-today";
    var selectedClass = prefixCls2 + "-selected-day";
    var selectedDateClass = prefixCls2 + "-selected-date";
    var selectedStartDateClass = prefixCls2 + "-selected-start-date";
    var selectedEndDateClass = prefixCls2 + "-selected-end-date";
    var inRangeClass = prefixCls2 + "-in-range-cell";
    var lastMonthDayClass = prefixCls2 + "-last-month-cell";
    var nextMonthDayClass = prefixCls2 + "-next-month-btn-day";
    var disabledClass = prefixCls2 + "-disabled-cell";
    var firstDisableClass = prefixCls2 + "-disabled-cell-first-of-row";
    var lastDisableClass = prefixCls2 + "-disabled-cell-last-of-row";
    var lastDayOfMonthClass = prefixCls2 + "-last-day-of-month";
    var month1 = value27.clone();
    month1.date(1);
    var day = month1.day();
    var lastMonthDiffDay = (day + 7 - value27.localeData().firstDayOfWeek()) % 7;
    var lastMonth1 = month1.clone();
    lastMonth1.add(0 - lastMonthDiffDay, "days");
    var passed = 0;
    for (iIndex = 0; iIndex < DateConstants.DATE_ROW_COUNT; iIndex++) {
      for (jIndex = 0; jIndex < DateConstants.DATE_COL_COUNT; jIndex++) {
        current2 = lastMonth1;
        if (passed) {
          current2 = current2.clone();
          current2.add(passed, "days");
        }
        dateTable.push(current2);
        passed++;
      }
    }
    var tableHtml = [];
    passed = 0;
    for (iIndex = 0; iIndex < DateConstants.DATE_ROW_COUNT; iIndex++) {
      var _cx;
      var isCurrentWeek = void 0;
      var weekNumberCell = void 0;
      var isActiveWeek = false;
      var dateCells = [];
      if (showWeekNumber) {
        weekNumberCell = h(
          "td",
          {
            key: "week-" + dateTable[passed].week(),
            attrs: { role: "gridcell" },
            "class": weekNumberCellClass
          },
          [dateTable[passed].week()]
        );
      }
      for (jIndex = 0; jIndex < DateConstants.DATE_COL_COUNT; jIndex++) {
        var next3 = null;
        var last2 = null;
        current2 = dateTable[passed];
        if (jIndex < DateConstants.DATE_COL_COUNT - 1) {
          next3 = dateTable[passed + 1];
        }
        if (jIndex > 0) {
          last2 = dateTable[passed - 1];
        }
        var cls = cellClass;
        var disabled = false;
        var selected = false;
        if (isSameDay(current2, today)) {
          cls += " " + todayClass;
          isCurrentWeek = true;
        }
        var isBeforeCurrentMonthYear = beforeCurrentMonthYear(current2, value27);
        var isAfterCurrentMonthYear = afterCurrentMonthYear(current2, value27);
        if (selectedValue6 && Array.isArray(selectedValue6)) {
          var rangeValue = hoverValue2.length ? hoverValue2 : selectedValue6;
          if (!isBeforeCurrentMonthYear && !isAfterCurrentMonthYear) {
            var startValue = rangeValue[0];
            var endValue = rangeValue[1];
            if (startValue) {
              if (isSameDay(current2, startValue)) {
                selected = true;
                isActiveWeek = true;
                cls += " " + selectedStartDateClass;
              }
            }
            if (startValue || endValue) {
              if (isSameDay(current2, endValue)) {
                selected = true;
                isActiveWeek = true;
                cls += " " + selectedEndDateClass;
              } else if ((startValue === null || startValue === void 0) && current2.isBefore(endValue, "day")) {
                cls += " " + inRangeClass;
              } else if ((endValue === null || endValue === void 0) && current2.isAfter(startValue, "day")) {
                cls += " " + inRangeClass;
              } else if (current2.isAfter(startValue, "day") && current2.isBefore(endValue, "day")) {
                cls += " " + inRangeClass;
              }
            }
          }
        } else if (isSameDay(current2, value27)) {
          selected = true;
          isActiveWeek = true;
        }
        if (isSameDay(current2, selectedValue6)) {
          cls += " " + selectedDateClass;
        }
        if (isBeforeCurrentMonthYear) {
          cls += " " + lastMonthDayClass;
        }
        if (isAfterCurrentMonthYear) {
          cls += " " + nextMonthDayClass;
        }
        if (current2.clone().endOf("month").date() === current2.date()) {
          cls += " " + lastDayOfMonthClass;
        }
        if (disabledDate) {
          if (disabledDate(current2, value27)) {
            disabled = true;
            if (!last2 || !disabledDate(last2, value27)) {
              cls += " " + firstDisableClass;
            }
            if (!next3 || !disabledDate(next3, value27)) {
              cls += " " + lastDisableClass;
            }
          }
        }
        if (selected) {
          cls += " " + selectedClass;
        }
        if (disabled) {
          cls += " " + disabledClass;
        }
        var dateHtml = void 0;
        if (dateRender) {
          dateHtml = dateRender(current2, value27);
        } else {
          var content = contentRender ? contentRender(current2, value27) : current2.date();
          dateHtml = h(
            "div",
            {
              key: getIdFromDate(current2),
              "class": dateClass,
              attrs: {
                "aria-selected": selected,
                "aria-disabled": disabled
              }
            },
            [content]
          );
        }
        dateCells.push(h(
          "td",
          {
            key: passed,
            on: {
              "click": disabled ? noop$P : select2.bind(null, current2),
              "mouseenter": disabled ? noop$P : dayHover.bind(null, current2)
            },
            attrs: {
              role: "gridcell",
              title: getTitleString(current2)
            },
            "class": cls
          },
          [dateHtml]
        ));
        passed++;
      }
      tableHtml.push(h(
        "tr",
        {
          key: iIndex,
          attrs: {
            role: "row"
          },
          "class": classNames((_cx = {}, _default$8(_cx, prefixCls2 + "-current-week", isCurrentWeek), _default$8(_cx, prefixCls2 + "-active-week", isActiveWeek), _cx))
        },
        [weekNumberCell, dateCells]
      ));
    }
    return h(
      "tbody",
      { "class": prefixCls2 + "-tbody" },
      [tableHtml]
    );
  }
};
var DateTBody$1 = DateTBody;
var DateTable = {
  functional: true,
  render: function render61(createElement, context) {
    var h = arguments[0];
    var props2 = context.props, _context$listeners = context.listeners, listeners = _context$listeners === void 0 ? {} : _context$listeners;
    var prefixCls2 = props2.prefixCls;
    var bodyProps = {
      props: props2,
      on: listeners
    };
    return h(
      "table",
      {
        "class": prefixCls2 + "-table",
        attrs: { cellSpacing: "0", role: "grid" }
      },
      [h(DateTHead, bodyProps), h(DateTBody$1, bodyProps)]
    );
  }
};
var ROW$2 = 4;
var COL$2 = 3;
function noop$O() {
}
var MonthTable = {
  name: "MonthTable",
  mixins: [BaseMixin],
  props: {
    cellRender: PropTypes.func,
    prefixCls: PropTypes.string,
    value: PropTypes.object,
    locale: PropTypes.any,
    contentRender: PropTypes.any,
    disabledDate: PropTypes.func
  },
  data: function data26() {
    return {
      sValue: this.value
    };
  },
  watch: {
    value: function value4(val) {
      this.setState({
        sValue: val
      });
    }
  },
  methods: {
    setAndSelectValue: function setAndSelectValue(value27) {
      this.setState({
        sValue: value27
      });
      this.__emit("select", value27);
    },
    chooseMonth: function chooseMonth(month) {
      var next3 = this.sValue.clone();
      next3.month(month);
      this.setAndSelectValue(next3);
    },
    months: function months2() {
      var value27 = this.sValue;
      var current2 = value27.clone();
      var months3 = [];
      var index2 = 0;
      for (var rowIndex = 0; rowIndex < ROW$2; rowIndex++) {
        months3[rowIndex] = [];
        for (var colIndex = 0; colIndex < COL$2; colIndex++) {
          current2.month(index2);
          var content = getMonthName(current2);
          months3[rowIndex][colIndex] = {
            value: index2,
            content,
            title: content
          };
          index2++;
        }
      }
      return months3;
    }
  },
  render: function render62() {
    var _this = this;
    var h = arguments[0];
    var props2 = this.$props;
    var value27 = this.sValue;
    var today = getTodayTime(value27);
    var months3 = this.months();
    var currentMonth = value27.month();
    var prefixCls2 = props2.prefixCls, locale3 = props2.locale, contentRender = props2.contentRender, cellRender = props2.cellRender, disabledDate = props2.disabledDate;
    var monthsEls = months3.map(function(month, index2) {
      var tds = month.map(function(monthData) {
        var _classNameMap;
        var disabled = false;
        if (disabledDate) {
          var testValue = value27.clone();
          testValue.month(monthData.value);
          disabled = disabledDate(testValue);
        }
        var classNameMap = (_classNameMap = {}, _default$8(_classNameMap, prefixCls2 + "-cell", 1), _default$8(_classNameMap, prefixCls2 + "-cell-disabled", disabled), _default$8(_classNameMap, prefixCls2 + "-selected-cell", monthData.value === currentMonth), _default$8(_classNameMap, prefixCls2 + "-current-cell", today.year() === value27.year() && monthData.value === today.month()), _classNameMap);
        var cellEl = void 0;
        if (cellRender) {
          var currentValue = value27.clone();
          currentValue.month(monthData.value);
          cellEl = cellRender(currentValue, locale3);
        } else {
          var content = void 0;
          if (contentRender) {
            var _currentValue = value27.clone();
            _currentValue.month(monthData.value);
            content = contentRender(_currentValue, locale3);
          } else {
            content = monthData.content;
          }
          cellEl = h(
            "a",
            { "class": prefixCls2 + "-month" },
            [content]
          );
        }
        return h(
          "td",
          {
            attrs: {
              role: "gridcell",
              title: monthData.title
            },
            key: monthData.value,
            on: {
              "click": disabled ? noop$O : function() {
                return _this.chooseMonth(monthData.value);
              }
            },
            "class": classNameMap
          },
          [cellEl]
        );
      });
      return h(
        "tr",
        {
          key: index2,
          attrs: { role: "row" }
        },
        [tds]
      );
    });
    return h(
      "table",
      {
        "class": prefixCls2 + "-table",
        attrs: { cellSpacing: "0", role: "grid" }
      },
      [h(
        "tbody",
        { "class": prefixCls2 + "-tbody" },
        [monthsEls]
      )]
    );
  }
};
var MonthTable$1 = MonthTable;
function noop$N() {
}
function getNowByCurrentStateValue(value27) {
  var ret = void 0;
  if (value27) {
    ret = getTodayTime(value27);
  } else {
    ret = hooks();
  }
  return ret;
}
function isMoment(value27) {
  if (Array.isArray(value27)) {
    return value27.length === 0 || value27.findIndex(function(val) {
      return val === void 0 || hooks.isMoment(val);
    }) !== -1;
  } else {
    return value27 === void 0 || hooks.isMoment(value27);
  }
}
var MomentType = PropTypes.custom(isMoment);
var CalendarMixin = {
  mixins: [BaseMixin],
  name: "CalendarMixinWrapper",
  props: {
    value: MomentType,
    defaultValue: MomentType
  },
  data: function data27() {
    var props2 = this.$props;
    var sValue = props2.value || props2.defaultValue || getNowByCurrentStateValue();
    return {
      sValue,
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  watch: {
    value: function value5(val) {
      var sValue = val || this.defaultValue || getNowByCurrentStateValue(this.sValue);
      this.setState({
        sValue
      });
    },
    selectedValue: function selectedValue(val) {
      this.setState({
        sSelectedValue: val
      });
    }
  },
  methods: {
    onSelect: function onSelect3(value27, cause) {
      if (value27) {
        this.setValue(value27);
      }
      this.setSelectedValue(value27, cause);
    },
    renderRoot: function renderRoot(newProps) {
      var _className;
      var h = this.$createElement;
      var props2 = this.$props;
      var prefixCls2 = props2.prefixCls;
      var className = (_className = {}, _default$8(_className, prefixCls2, 1), _default$8(_className, prefixCls2 + "-hidden", !props2.visible), _default$8(_className, newProps["class"], !!newProps["class"]), _className);
      return h(
        "div",
        {
          ref: "rootInstance",
          "class": className,
          attrs: {
            tabIndex: "0"
          },
          on: {
            "keydown": this.onKeyDown || noop$N,
            "blur": this.onBlur || noop$N
          }
        },
        [newProps.children]
      );
    },
    setSelectedValue: function setSelectedValue(selectedValue6, cause) {
      if (!hasProp(this, "selectedValue")) {
        this.setState({
          sSelectedValue: selectedValue6
        });
      }
      this.__emit("select", selectedValue6, cause);
    },
    setValue: function setValue3(value27) {
      var originalValue = this.sValue;
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value27
        });
      }
      if (originalValue && value27 && !originalValue.isSame(value27) || !originalValue && value27 || originalValue && !value27) {
        this.__emit("change", value27);
      }
    },
    isAllowedDate: function isAllowedDate$1(value27) {
      var disabledDate = this.disabledDate;
      var disabledTime = this.disabledTime;
      return isAllowedDate(value27, disabledDate, disabledTime);
    }
  }
};
var CalendarMixin$1 = CalendarMixin;
var CommonMixin = {
  methods: {
    getFormat: function getFormat() {
      var format3 = this.format;
      var locale3 = this.locale, timePicker = this.timePicker;
      if (!format3) {
        if (timePicker) {
          format3 = locale3.dateTimeFormat;
        } else {
          format3 = locale3.dateFormat;
        }
      }
      return format3;
    },
    focus: function focus8() {
      if (this.focusElement) {
        this.focusElement.focus();
      } else if (this.$refs.rootInstance) {
        this.$refs.rootInstance.focus();
      }
    },
    saveFocusElement: function saveFocusElement(focusElement) {
      this.focusElement = focusElement;
    }
  }
};
var CalendarHeader$2 = {
  name: "CalendarHeader",
  mixins: [BaseMixin],
  props: {
    value: PropTypes.object,
    locale: PropTypes.object,
    yearSelectOffset: PropTypes.number.def(10),
    yearSelectTotal: PropTypes.number.def(20),
    Select: PropTypes.object,
    prefixCls: PropTypes.string,
    type: PropTypes.string,
    showTypeSwitch: PropTypes.bool,
    headerComponents: PropTypes.array
  },
  methods: {
    onYearChange: function onYearChange(year) {
      var newValue = this.value.clone();
      newValue.year(parseInt(year, 10));
      this.__emit("valueChange", newValue);
    },
    onMonthChange: function onMonthChange(month) {
      var newValue = this.value.clone();
      newValue.month(parseInt(month, 10));
      this.__emit("valueChange", newValue);
    },
    yearSelectElement: function yearSelectElement(year) {
      var h = this.$createElement;
      var yearSelectOffset = this.yearSelectOffset, yearSelectTotal = this.yearSelectTotal, prefixCls2 = this.prefixCls, Select2 = this.Select;
      var start = year - yearSelectOffset;
      var end = start + yearSelectTotal;
      var options2 = [];
      for (var index2 = start; index2 < end; index2++) {
        options2.push(h(
          Select2.Option,
          { key: "" + index2 },
          [index2]
        ));
      }
      return h(
        Select2,
        {
          "class": prefixCls2 + "-header-year-select",
          on: {
            "change": this.onYearChange
          },
          attrs: {
            dropdownStyle: { zIndex: 2e3 },
            dropdownMenuStyle: { maxHeight: "250px", overflow: "auto", fontSize: "12px" },
            optionLabelProp: "children",
            value: String(year),
            showSearch: false
          }
        },
        [options2]
      );
    },
    monthSelectElement: function monthSelectElement(month) {
      var h = this.$createElement;
      var value27 = this.value, Select2 = this.Select, prefixCls2 = this.prefixCls;
      var t = value27.clone();
      var options2 = [];
      for (var index2 = 0; index2 < 12; index2++) {
        t.month(index2);
        options2.push(h(
          Select2.Option,
          { key: "" + index2 },
          [getMonthName(t)]
        ));
      }
      return h(
        Select2,
        {
          "class": prefixCls2 + "-header-month-select",
          attrs: {
            dropdownStyle: { zIndex: 2e3 },
            dropdownMenuStyle: {
              maxHeight: "250px",
              overflow: "auto",
              overflowX: "hidden",
              fontSize: "12px"
            },
            optionLabelProp: "children",
            value: String(month),
            showSearch: false
          },
          on: {
            "change": this.onMonthChange
          }
        },
        [options2]
      );
    },
    changeTypeToDate: function changeTypeToDate() {
      this.__emit("typeChange", "date");
    },
    changeTypeToMonth: function changeTypeToMonth() {
      this.__emit("typeChange", "month");
    }
  },
  render: function render63() {
    var h = arguments[0];
    var value27 = this.value, locale3 = this.locale, prefixCls2 = this.prefixCls, type3 = this.type, showTypeSwitch = this.showTypeSwitch, headerComponents = this.headerComponents;
    var year = value27.year();
    var month = value27.month();
    var yearSelect = this.yearSelectElement(year);
    var monthSelect = type3 === "month" ? null : this.monthSelectElement(month);
    var switchCls = prefixCls2 + "-header-switcher";
    var typeSwitcher = showTypeSwitch ? h(
      "span",
      { "class": switchCls },
      [type3 === "date" ? h(
        "span",
        { "class": switchCls + "-focus" },
        [locale3.month]
      ) : h(
        "span",
        {
          on: {
            "click": this.changeTypeToDate
          },
          "class": switchCls + "-normal"
        },
        [locale3.month]
      ), type3 === "month" ? h(
        "span",
        { "class": switchCls + "-focus" },
        [locale3.year]
      ) : h(
        "span",
        {
          on: {
            "click": this.changeTypeToMonth
          },
          "class": switchCls + "-normal"
        },
        [locale3.year]
      )]
    ) : null;
    return h(
      "div",
      { "class": prefixCls2 + "-header" },
      [typeSwitcher, monthSelect, yearSelect, headerComponents]
    );
  }
};
var CalendarHeader$3 = CalendarHeader$2;
var FullCalendar = {
  name: "FullCalendar",
  props: {
    locale: PropTypes.object.def(enUs),
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.func]),
    visible: PropTypes.bool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    defaultType: PropTypes.string.def("date"),
    type: PropTypes.string,
    fullscreen: PropTypes.bool.def(false),
    monthCellRender: PropTypes.func,
    dateCellRender: PropTypes.func,
    showTypeSwitch: PropTypes.bool.def(true),
    Select: PropTypes.object.isRequired,
    headerComponents: PropTypes.array,
    headerComponent: PropTypes.object,
    headerRender: PropTypes.func,
    showHeader: PropTypes.bool.def(true),
    disabledDate: PropTypes.func,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    selectedValue: PropTypes.object,
    defaultSelectedValue: PropTypes.object,
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    })
  },
  mixins: [BaseMixin, CommonMixin, CalendarMixin$1],
  data: function data28() {
    var type3 = void 0;
    if (hasProp(this, "type")) {
      type3 = this.type;
    } else {
      type3 = this.defaultType;
    }
    var props2 = this.$props;
    return {
      sType: type3,
      sValue: props2.value || props2.defaultValue || hooks(),
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  watch: {
    type: function type(val) {
      this.setState({
        sType: val
      });
    },
    value: function value6(val) {
      var sValue = val || this.defaultValue || getNowByCurrentStateValue(this.sValue);
      this.setState({
        sValue
      });
    },
    selectedValue: function selectedValue2(val) {
      this.setState({
        sSelectedValue: val
      });
    }
  },
  methods: {
    onMonthSelect: function onMonthSelect(value27) {
      this.onSelect(value27, {
        target: "month"
      });
    },
    setType: function setType(type3) {
      if (!hasProp(this, "type")) {
        this.setState({
          sType: type3
        });
      }
      this.__emit("typeChange", type3);
    }
  },
  render: function render64() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var locale3 = props2.locale, prefixCls2 = props2.prefixCls, fullscreen = props2.fullscreen, showHeader = props2.showHeader, headerComponent = props2.headerComponent, headerRender = props2.headerRender, disabledDate = props2.disabledDate;
    var value27 = this.sValue, type3 = this.sType;
    var header = null;
    if (showHeader) {
      if (headerRender) {
        header = headerRender(value27, type3, locale3);
      } else {
        var TheHeader = headerComponent || CalendarHeader$3;
        var headerProps = {
          props: _default$6({}, props2, {
            prefixCls: prefixCls2 + "-full",
            type: type3,
            value: value27
          }),
          on: _default$6({}, getListeners(this), {
            typeChange: this.setType,
            valueChange: this.setValue
          }),
          key: "calendar-header"
        };
        header = h(TheHeader, headerProps);
      }
    }
    var table = type3 === "date" ? h(DateTable, {
      attrs: {
        dateRender: props2.dateCellRender,
        contentRender: props2.dateCellContentRender,
        locale: locale3,
        prefixCls: prefixCls2,
        value: value27,
        disabledDate
      },
      on: {
        "select": this.onSelect
      }
    }) : h(MonthTable$1, {
      attrs: {
        cellRender: props2.monthCellRender,
        contentRender: props2.monthCellContentRender,
        locale: locale3,
        prefixCls: prefixCls2 + "-month-panel",
        value: value27,
        disabledDate
      },
      on: {
        "select": this.onMonthSelect
      }
    });
    var children = [header, h(
      "div",
      { key: "calendar-body", "class": prefixCls2 + "-calendar-body" },
      [table]
    )];
    var className = [prefixCls2 + "-full"];
    if (fullscreen) {
      className.push(prefixCls2 + "-fullscreen");
    }
    return this.renderRoot({
      children,
      "class": className.join(" ")
    });
  }
};
var FullCalendar$1 = FullCalendar;
var Checkbox$1 = {
  name: "Checkbox",
  mixins: [BaseMixin],
  inheritAttrs: false,
  model: {
    prop: "checked",
    event: "change"
  },
  props: initDefaultProps({
    prefixCls: PropTypes.string,
    name: PropTypes.string,
    id: PropTypes.string,
    type: PropTypes.string,
    defaultChecked: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),
    checked: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),
    disabled: PropTypes.bool,
    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    readOnly: PropTypes.bool,
    autoFocus: PropTypes.bool,
    value: PropTypes.any
  }, {
    prefixCls: "rc-checkbox",
    type: "checkbox",
    defaultChecked: false
  }),
  data: function data29() {
    var checked4 = hasProp(this, "checked") ? this.checked : this.defaultChecked;
    return {
      sChecked: checked4
    };
  },
  watch: {
    checked: function checked(val) {
      this.sChecked = val;
    }
  },
  mounted: function mounted23() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus) {
        _this.$refs.input && _this.$refs.input.focus();
      }
    });
  },
  methods: {
    focus: function focus9() {
      this.$refs.input.focus();
    },
    blur: function blur8() {
      this.$refs.input.blur();
    },
    handleChange: function handleChange3(e) {
      var props2 = getOptionProps(this);
      if (props2.disabled) {
        return;
      }
      if (!("checked" in props2)) {
        this.sChecked = e.target.checked;
      }
      this.$forceUpdate();
      e.shiftKey = this.eventShiftKey;
      this.__emit("change", {
        target: _default$6({}, props2, {
          checked: e.target.checked
        }),
        stopPropagation: function stopPropagation2() {
          e.stopPropagation();
        },
        preventDefault: function preventDefault2() {
          e.preventDefault();
        },
        nativeEvent: e
      });
      this.eventShiftKey = false;
      if ("checked" in props2) {
        this.$refs.input.checked = props2.checked;
      }
    },
    onClick: function onClick8(e) {
      this.__emit("click", e);
      this.eventShiftKey = e.shiftKey;
    }
  },
  render: function render65() {
    var _classNames;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), prefixCls2 = _getOptionProps.prefixCls, name = _getOptionProps.name, id2 = _getOptionProps.id, type3 = _getOptionProps.type, disabled = _getOptionProps.disabled, readOnly = _getOptionProps.readOnly, tabIndex = _getOptionProps.tabIndex, autoFocus = _getOptionProps.autoFocus, value27 = _getOptionProps.value, others = _default$2(_getOptionProps, ["prefixCls", "name", "id", "type", "disabled", "readOnly", "tabIndex", "autoFocus", "value"]);
    var attrs = getAttrs(this);
    var globalProps = Object.keys(_default$6({}, others, attrs)).reduce(function(prev3, key2) {
      if (key2.substr(0, 5) === "aria-" || key2.substr(0, 5) === "data-" || key2 === "role") {
        prev3[key2] = others[key2];
      }
      return prev3;
    }, {});
    var sChecked = this.sChecked;
    var classString = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-checked", sChecked), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _classNames));
    return h(
      "span",
      { "class": classString },
      [h("input", _mergeJSXProps([{
        attrs: {
          name,
          id: id2,
          type: type3,
          readOnly,
          disabled,
          tabIndex,
          autoFocus
        },
        "class": prefixCls2 + "-input",
        domProps: {
          "checked": !!sChecked,
          "value": value27
        },
        ref: "input"
      }, {
        attrs: globalProps,
        on: _default$6({}, getListeners(this), {
          change: this.handleChange,
          click: this.onClick
        })
      }])), h("span", { "class": prefixCls2 + "-inner" })]
    );
  }
};
function noop$M() {
}
var Radio = {
  name: "ARadio",
  model: {
    prop: "checked"
  },
  props: {
    prefixCls: PropTypes.string,
    defaultChecked: Boolean,
    checked: { type: Boolean, "default": void 0 },
    disabled: Boolean,
    isGroup: Boolean,
    value: PropTypes.any,
    name: String,
    id: String,
    autoFocus: Boolean,
    type: PropTypes.string.def("radio")
  },
  inject: {
    radioGroupContext: { "default": void 0 },
    configProvider: { "default": function _default39() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    focus: function focus10() {
      this.$refs.vcCheckbox.focus();
    },
    blur: function blur9() {
      this.$refs.vcCheckbox.blur();
    },
    handleChange: function handleChange4(event) {
      var targetChecked = event.target.checked;
      this.$emit("input", targetChecked);
      this.$emit("change", event);
    },
    onChange: function onChange4(e) {
      this.$emit("change", e);
      if (this.radioGroupContext && this.radioGroupContext.onRadioChange) {
        this.radioGroupContext.onRadioChange(e);
      }
    }
  },
  render: function render66() {
    var _classNames;
    var h = arguments[0];
    var $slots = this.$slots, radioGroup = this.radioGroupContext;
    var props2 = getOptionProps(this);
    var children = $slots["default"];
    var _getListeners = getListeners(this), _getListeners$mouseen = _getListeners.mouseenter, mouseenter = _getListeners$mouseen === void 0 ? noop$M : _getListeners$mouseen, _getListeners$mousele = _getListeners.mouseleave, mouseleave = _getListeners$mousele === void 0 ? noop$M : _getListeners$mousele, restListeners = _default$2(_getListeners, ["mouseenter", "mouseleave"]);
    var customizePrefixCls = props2.prefixCls, restProps = _default$2(props2, ["prefixCls"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("radio", customizePrefixCls);
    var radioProps = {
      props: _default$6({}, restProps, { prefixCls: prefixCls2 }),
      on: restListeners,
      attrs: getAttrs(this)
    };
    if (radioGroup) {
      radioProps.props.name = radioGroup.name;
      radioProps.on.change = this.onChange;
      radioProps.props.checked = props2.value === radioGroup.stateValue;
      radioProps.props.disabled = props2.disabled || radioGroup.disabled;
    } else {
      radioProps.on.change = this.handleChange;
    }
    var wrapperClassString = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-wrapper", true), _default$8(_classNames, prefixCls2 + "-wrapper-checked", radioProps.props.checked), _default$8(_classNames, prefixCls2 + "-wrapper-disabled", radioProps.props.disabled), _classNames));
    return h(
      "label",
      {
        "class": wrapperClassString,
        on: {
          "mouseenter": mouseenter,
          "mouseleave": mouseleave
        }
      },
      [h(Checkbox$1, _mergeJSXProps([radioProps, { ref: "vcCheckbox" }])), children !== void 0 ? h("span", [children]) : null]
    );
  }
};
function noop$L() {
}
var Group = {
  name: "ARadioGroup",
  model: {
    prop: "value"
  },
  props: {
    prefixCls: PropTypes.string,
    defaultValue: PropTypes.any,
    value: PropTypes.any,
    size: {
      "default": "default",
      validator: function validator5(value27) {
        return ["large", "default", "small"].includes(value27);
      }
    },
    options: {
      "default": function _default40() {
        return [];
      },
      type: Array
    },
    disabled: Boolean,
    name: String,
    buttonStyle: PropTypes.string.def("outline")
  },
  data: function data30() {
    var value27 = this.value, defaultValue = this.defaultValue;
    this.updatingValue = false;
    return {
      stateValue: value27 === void 0 ? defaultValue : value27
    };
  },
  provide: function provide9() {
    return {
      radioGroupContext: this
    };
  },
  inject: {
    configProvider: { "default": function _default41() {
      return ConfigConsumerProps;
    } }
  },
  computed: {
    radioOptions: function radioOptions() {
      var disabled = this.disabled;
      return this.options.map(function(option) {
        return typeof option === "string" ? { label: option, value: option } : _default$6({}, option, { disabled: option.disabled === void 0 ? disabled : option.disabled });
      });
    },
    classes: function classes3() {
      var _ref;
      var prefixCls2 = this.prefixCls, size = this.size;
      return _ref = {}, _default$8(_ref, "" + prefixCls2, true), _default$8(_ref, prefixCls2 + "-" + size, size), _ref;
    }
  },
  watch: {
    value: function value7(val) {
      this.updatingValue = false;
      this.stateValue = val;
    }
  },
  methods: {
    onRadioChange: function onRadioChange(ev) {
      var _this = this;
      var lastValue = this.stateValue;
      var value27 = ev.target.value;
      if (!hasProp(this, "value")) {
        this.stateValue = value27;
      }
      if (!this.updatingValue && value27 !== lastValue) {
        this.updatingValue = true;
        this.$emit("input", value27);
        this.$emit("change", ev);
      }
      this.$nextTick(function() {
        _this.updatingValue = false;
      });
    }
  },
  render: function render67() {
    var _this2 = this;
    var h = arguments[0];
    var _getListeners = getListeners(this), _getListeners$mouseen = _getListeners.mouseenter, mouseenter = _getListeners$mouseen === void 0 ? noop$L : _getListeners$mouseen, _getListeners$mousele = _getListeners.mouseleave, mouseleave = _getListeners$mousele === void 0 ? noop$L : _getListeners$mousele;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, options2 = props2.options, buttonStyle = props2.buttonStyle;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("radio", customizePrefixCls);
    var groupPrefixCls = prefixCls2 + "-group";
    var classString = classNames(groupPrefixCls, groupPrefixCls + "-" + buttonStyle, _default$8({}, groupPrefixCls + "-" + props2.size, props2.size));
    var children = filterEmpty(this.$slots["default"]);
    if (options2 && options2.length > 0) {
      children = options2.map(function(option) {
        if (typeof option === "string") {
          return h(
            Radio,
            {
              key: option,
              attrs: {
                prefixCls: prefixCls2,
                disabled: props2.disabled,
                value: option,
                checked: _this2.stateValue === option
              }
            },
            [option]
          );
        } else {
          return h(
            Radio,
            {
              key: "radio-group-value-options-" + option.value,
              attrs: {
                prefixCls: prefixCls2,
                disabled: option.disabled || props2.disabled,
                value: option.value,
                checked: _this2.stateValue === option.value
              }
            },
            [option.label]
          );
        }
      });
    }
    return h(
      "div",
      {
        "class": classString,
        on: {
          "mouseenter": mouseenter,
          "mouseleave": mouseleave
        }
      },
      [children]
    );
  }
};
var Button = {
  name: "ARadioButton",
  props: _default$6({}, Radio.props),
  inject: {
    radioGroupContext: { "default": void 0 },
    configProvider: { "default": function _default42() {
      return ConfigConsumerProps;
    } }
  },
  render: function render68() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, otherProps = _default$2(_getOptionProps, ["prefixCls"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("radio-button", customizePrefixCls);
    var radioProps = {
      props: _default$6({}, otherProps, {
        prefixCls: prefixCls2
      }),
      on: getListeners(this)
    };
    if (this.radioGroupContext) {
      radioProps.on.change = this.radioGroupContext.onRadioChange;
      radioProps.props.checked = this.$props.value === this.radioGroupContext.stateValue;
      radioProps.props.disabled = this.$props.disabled || this.radioGroupContext.disabled;
    }
    return h(
      Radio,
      radioProps,
      [this.$slots["default"]]
    );
  }
};
Radio.Group = Group;
Radio.Button = Button;
Radio.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Radio.name, Radio);
  Vue2.component(Radio.Group.name, Radio.Group);
  Vue2.component(Radio.Button.name, Radio.Button);
};
var Option$2 = Select$5.Option;
function getMonthsLocale(value27) {
  var current2 = value27.clone();
  var localeData2 = value27.localeData();
  var months3 = [];
  for (var i = 0; i < 12; i++) {
    current2.month(i);
    months3.push(localeData2.monthsShort(current2));
  }
  return months3;
}
var HeaderProps = {
  prefixCls: PropTypes.string,
  locale: PropTypes.any,
  fullscreen: PropTypes.boolean,
  yearSelectOffset: PropTypes.number,
  yearSelectTotal: PropTypes.number,
  type: PropTypes.string,
  value: PropTypes.any,
  validRange: PropTypes.array,
  headerRender: PropTypes.func
};
var Header$3 = {
  props: initDefaultProps(HeaderProps, {
    yearSelectOffset: 10,
    yearSelectTotal: 20
  }),
  inject: {
    configProvider: { "default": function _default43() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    getYearSelectElement: function getYearSelectElement(prefixCls2, year) {
      var _this = this;
      var h = this.$createElement;
      var yearSelectOffset = this.yearSelectOffset, yearSelectTotal = this.yearSelectTotal, _locale = this.locale, locale3 = _locale === void 0 ? {} : _locale, fullscreen = this.fullscreen, validRange = this.validRange;
      var start = year - yearSelectOffset;
      var end = start + yearSelectTotal;
      if (validRange) {
        start = validRange[0].get("year");
        end = validRange[1].get("year") + 1;
      }
      var suffix2 = locale3.year === "\u5E74" ? "\u5E74" : "";
      var options2 = [];
      for (var index2 = start; index2 < end; index2++) {
        options2.push(h(
          Option$2,
          { key: "" + index2 },
          [index2 + suffix2]
        ));
      }
      return h(
        Select$5,
        {
          attrs: {
            size: fullscreen ? "default" : "small",
            dropdownMatchSelectWidth: false,
            value: String(year),
            getPopupContainer: function getPopupContainer() {
              return _this.getCalenderHeaderNode();
            }
          },
          "class": prefixCls2 + "-year-select",
          on: {
            "change": this.onYearChange
          }
        },
        [options2]
      );
    },
    getMonthSelectElement: function getMonthSelectElement(prefixCls2, month, months3) {
      var _this2 = this;
      var h = this.$createElement;
      var fullscreen = this.fullscreen, validRange = this.validRange, value27 = this.value;
      var options2 = [];
      var start = 0;
      var end = 12;
      if (validRange) {
        var _validRange = _default$4(validRange, 2), rangeStart = _validRange[0], rangeEnd = _validRange[1];
        var currentYear = value27.get("year");
        if (rangeEnd.get("year") === currentYear) {
          end = rangeEnd.get("month") + 1;
        }
        if (rangeStart.get("year") === currentYear) {
          start = rangeStart.get("month");
        }
      }
      for (var index2 = start; index2 < end; index2++) {
        options2.push(h(
          Option$2,
          { key: "" + index2 },
          [months3[index2]]
        ));
      }
      return h(
        Select$5,
        {
          attrs: {
            size: fullscreen ? "default" : "small",
            dropdownMatchSelectWidth: false,
            value: String(month),
            getPopupContainer: function getPopupContainer() {
              return _this2.getCalenderHeaderNode();
            }
          },
          "class": prefixCls2 + "-month-select",
          on: {
            "change": this.onMonthChange
          }
        },
        [options2]
      );
    },
    onYearChange: function onYearChange2(year) {
      var value27 = this.value, validRange = this.validRange;
      var newValue = value27.clone();
      newValue.year(parseInt(year, 10));
      if (validRange) {
        var _validRange2 = _default$4(validRange, 2), start = _validRange2[0], end = _validRange2[1];
        var newYear = newValue.get("year");
        var newMonth = newValue.get("month");
        if (newYear === end.get("year") && newMonth > end.get("month")) {
          newValue.month(end.get("month"));
        }
        if (newYear === start.get("year") && newMonth < start.get("month")) {
          newValue.month(start.get("month"));
        }
      }
      this.$emit("valueChange", newValue);
    },
    onMonthChange: function onMonthChange2(month) {
      var newValue = this.value.clone();
      newValue.month(parseInt(month, 10));
      this.$emit("valueChange", newValue);
    },
    onInternalTypeChange: function onInternalTypeChange(e) {
      this.onTypeChange(e.target.value);
    },
    onTypeChange: function onTypeChange(val) {
      this.$emit("typeChange", val);
    },
    getCalenderHeaderNode: function getCalenderHeaderNode() {
      return this.$refs.calenderHeaderNode;
    },
    getMonthYearSelections: function getMonthYearSelections(getPrefixCls5) {
      var _$props = this.$props, customizePrefixCls = _$props.prefixCls, type3 = _$props.type, value27 = _$props.value;
      var prefixCls2 = getPrefixCls5("fullcalendar", customizePrefixCls);
      var yearReactNode = this.getYearSelectElement(prefixCls2, value27.year());
      var monthReactNode = type3 === "month" ? this.getMonthSelectElement(prefixCls2, value27.month(), getMonthsLocale(value27)) : null;
      return {
        yearReactNode,
        monthReactNode
      };
    },
    getTypeSwitch: function getTypeSwitch() {
      var h = this.$createElement;
      var _$props2 = this.$props, _$props2$locale = _$props2.locale, locale3 = _$props2$locale === void 0 ? {} : _$props2$locale, type3 = _$props2.type, fullscreen = _$props2.fullscreen;
      var size = fullscreen ? "default" : "small";
      return h(
        Group,
        {
          on: {
            "change": this.onInternalTypeChange
          },
          attrs: { value: type3, size }
        },
        [h(
          Button,
          {
            attrs: { value: "month" }
          },
          [locale3.month]
        ), h(
          Button,
          {
            attrs: { value: "year" }
          },
          [locale3.year]
        )]
      );
    },
    onValueChange: function onValueChange() {
      this.$emit.apply(this, ["valueChange"].concat(Array.prototype.slice.call(arguments)));
    },
    headerRenderCustom: function headerRenderCustom(headerRender) {
      var _$props3 = this.$props, type3 = _$props3.type, value27 = _$props3.value;
      return headerRender({
        value: value27,
        type: type3 || "month",
        onChange: this.onValueChange,
        onTypeChange: this.onTypeChange
      });
    }
  },
  render: function render69() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, headerRender = this.headerRender;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("fullcalendar", customizePrefixCls);
    var typeSwitch = this.getTypeSwitch();
    var _getMonthYearSelectio = this.getMonthYearSelections(getPrefixCls5), yearReactNode = _getMonthYearSelectio.yearReactNode, monthReactNode = _getMonthYearSelectio.monthReactNode;
    return headerRender ? this.headerRenderCustom(headerRender) : h(
      "div",
      { "class": prefixCls2 + "-header", ref: "calenderHeaderNode" },
      [yearReactNode, monthReactNode, typeSwitch]
    );
  }
};
function interopDefault(m) {
  return m["default"] || m;
}
function isNil(value27) {
  return value27 == null;
}
var isNil_1 = isNil;
var isNil$1 = isNil_1;
var TimeType$1 = {
  validator: function validator6(value27) {
    return typeof value27 === "string" || isNil$1(value27) || (void 0)(value27);
  }
};
var TimesType = {
  validator: function validator7(value27) {
    if (Array.isArray(value27)) {
      return value27.length === 0 || value27.findIndex(function(val) {
        return typeof val !== "string";
      }) === -1 || value27.findIndex(function(val) {
        return !isNil$1(val) && !(void 0)(val);
      }) === -1;
    }
    return false;
  }
};
var TimeOrTimesType = {
  validator: function validator8(value27) {
    if (Array.isArray(value27)) {
      return value27.length === 0 || value27.findIndex(function(val) {
        return typeof val !== "string";
      }) === -1 || value27.findIndex(function(val) {
        return !isNil$1(val) && !(void 0)(val);
      }) === -1;
    } else {
      return typeof value27 === "string" || isNil$1(value27) || (void 0)(value27);
    }
  }
};
function checkValidate(componentName, value27, propName, valueFormat) {
  var values = Array.isArray(value27) ? value27 : [value27];
  values.forEach(function(val) {
    if (!val)
      return;
    valueFormat && warning$4(interopDefault(moment)(val, valueFormat).isValid(), componentName, "When set `valueFormat`, `" + propName + "` should provides invalidate string time. ");
    !valueFormat && warning$4(interopDefault(moment).isMoment(val) && val.isValid(), componentName, "`" + propName + "` provides invalidate moment time. If you want to set empty value, use `null` instead.");
  });
}
var stringToMoment = function stringToMoment2(value27, valueFormat) {
  if (Array.isArray(value27)) {
    return value27.map(function(val) {
      return typeof val === "string" && val ? interopDefault(moment)(val, valueFormat) : val || null;
    });
  } else {
    return typeof value27 === "string" && value27 ? interopDefault(moment)(value27, valueFormat) : value27 || null;
  }
};
var momentToString = function momentToString2(value27, valueFormat) {
  if (Array.isArray(value27)) {
    return value27.map(function(val) {
      return interopDefault(moment).isMoment(val) ? val.format(valueFormat) : val;
    });
  } else {
    return interopDefault(moment).isMoment(value27) ? value27.format(valueFormat) : value27;
  }
};
function noop$K() {
  return null;
}
function zerofixed(v) {
  if (v < 10) {
    return "0" + v;
  }
  return "" + v;
}
function isMomentArray(value27) {
  return Array.isArray(value27) && !!value27.find(function(val) {
    return (void 0)(val);
  });
}
var CalendarMode = PropTypes.oneOf(["month", "year"]);
var CalendarProps = function CalendarProps2() {
  return {
    prefixCls: PropTypes.string,
    value: TimeType$1,
    defaultValue: TimeType$1,
    mode: CalendarMode,
    fullscreen: PropTypes.bool,
    locale: PropTypes.object,
    disabledDate: PropTypes.func,
    validRange: PropTypes.custom(isMomentArray),
    headerRender: PropTypes.func,
    valueFormat: PropTypes.string
  };
};
var Calendar$2 = {
  name: "ACalendar",
  mixins: [BaseMixin],
  props: initDefaultProps(CalendarProps(), {
    locale: {},
    fullscreen: true
  }),
  model: {
    prop: "value",
    event: "change"
  },
  inject: {
    configProvider: { "default": function _default44() {
      return ConfigConsumerProps;
    } }
  },
  data: function data31() {
    var value27 = this.value, defaultValue = this.defaultValue, valueFormat = this.valueFormat;
    var sValue = value27 || defaultValue || interopDefault(moment)();
    checkValidate("Calendar", defaultValue, "defaultValue", valueFormat);
    checkValidate("Calendar", value27, "value", valueFormat);
    this._sPrefixCls = void 0;
    return {
      sValue: stringToMoment(sValue, valueFormat),
      sMode: this.mode || "month"
    };
  },
  watch: {
    value: function value8(val) {
      checkValidate("Calendar", val, "value", this.valueFormat);
      this.setState({
        sValue: stringToMoment(val, this.valueFormat)
      });
    },
    mode: function mode2(val) {
      this.setState({
        sMode: val
      });
    }
  },
  methods: {
    onHeaderValueChange: function onHeaderValueChange(value27) {
      this.setValue(value27, "changePanel");
    },
    onHeaderTypeChange: function onHeaderTypeChange(mode5) {
      this.sMode = mode5;
      this.onPanelChange(this.sValue, mode5);
    },
    onPanelChange: function onPanelChange(value27, mode5) {
      var val = this.valueFormat ? momentToString(value27, this.valueFormat) : value27;
      this.$emit("panelChange", val, mode5);
      if (value27 !== this.sValue) {
        this.$emit("change", val);
      }
    },
    onSelect: function onSelect4(value27) {
      this.setValue(value27, "select");
    },
    setValue: function setValue4(value27, way) {
      var prevValue = this.value ? stringToMoment(this.value, this.valueFormat) : this.sValue;
      var mode5 = this.sMode, valueFormat = this.valueFormat;
      if (!hasProp(this, "value")) {
        this.setState({ sValue: value27 });
      }
      if (way === "select") {
        if (prevValue && prevValue.month() !== value27.month()) {
          this.onPanelChange(value27, mode5);
        }
        this.$emit("select", valueFormat ? momentToString(value27, valueFormat) : value27);
      } else if (way === "changePanel") {
        this.onPanelChange(value27, mode5);
      }
    },
    getDateRange: function getDateRange(validRange, disabledDate) {
      return function(current2) {
        if (!current2) {
          return false;
        }
        var _validRange = _default$4(validRange, 2), startDate = _validRange[0], endDate = _validRange[1];
        var inRange = !current2.isBetween(startDate, endDate, "days", "[]");
        if (disabledDate) {
          return disabledDate(current2) || inRange;
        }
        return inRange;
      };
    },
    getDefaultLocale: function getDefaultLocale() {
      var result = _default$6({}, enUS, this.$props.locale);
      result.lang = _default$6({}, result.lang, (this.$props.locale || {}).lang);
      return result;
    },
    monthCellRender2: function monthCellRender2(value27) {
      var h = this.$createElement;
      var _sPrefixCls = this._sPrefixCls, $scopedSlots = this.$scopedSlots;
      var monthCellRender = this.monthCellRender || $scopedSlots.monthCellRender || noop$K;
      return h(
        "div",
        { "class": _sPrefixCls + "-month" },
        [h(
          "div",
          { "class": _sPrefixCls + "-value" },
          [value27.localeData().monthsShort(value27)]
        ), h(
          "div",
          { "class": _sPrefixCls + "-content" },
          [monthCellRender(value27)]
        )]
      );
    },
    dateCellRender2: function dateCellRender2(value27) {
      var h = this.$createElement;
      var _sPrefixCls = this._sPrefixCls, $scopedSlots = this.$scopedSlots;
      var dateCellRender = this.dateCellRender || $scopedSlots.dateCellRender || noop$K;
      return h(
        "div",
        { "class": _sPrefixCls + "-date" },
        [h(
          "div",
          { "class": _sPrefixCls + "-value" },
          [zerofixed(value27.date())]
        ), h(
          "div",
          { "class": _sPrefixCls + "-content" },
          [dateCellRender(value27)]
        )]
      );
    },
    renderCalendar: function renderCalendar(locale3, localeCode) {
      var h = this.$createElement;
      var props2 = getOptionProps(this);
      var value27 = this.sValue, mode5 = this.sMode, $scopedSlots = this.$scopedSlots;
      if (value27 && localeCode) {
        value27.locale(localeCode);
      }
      var customizePrefixCls = props2.prefixCls, fullscreen = props2.fullscreen, dateFullCellRender = props2.dateFullCellRender, monthFullCellRender = props2.monthFullCellRender;
      var headerRender = this.headerRender || $scopedSlots.headerRender;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("fullcalendar", customizePrefixCls);
      this._sPrefixCls = prefixCls2;
      var cls = "";
      if (fullscreen) {
        cls += " " + prefixCls2 + "-fullscreen";
      }
      var monthCellRender = monthFullCellRender || $scopedSlots.monthFullCellRender || this.monthCellRender2;
      var dateCellRender = dateFullCellRender || $scopedSlots.dateFullCellRender || this.dateCellRender2;
      var disabledDate = props2.disabledDate;
      if (props2.validRange) {
        disabledDate = this.getDateRange(props2.validRange, disabledDate);
      }
      var fullCalendarProps = {
        props: _default$6({}, props2, {
          Select: {},
          locale: locale3.lang,
          type: mode5 === "year" ? "month" : "date",
          prefixCls: prefixCls2,
          showHeader: false,
          value: value27,
          monthCellRender,
          dateCellRender,
          disabledDate
        }),
        on: _default$6({}, getListeners(this), {
          select: this.onSelect
        })
      };
      return h(
        "div",
        { "class": cls },
        [h(Header$3, {
          attrs: {
            fullscreen,
            type: mode5,
            headerRender,
            value: value27,
            locale: locale3.lang,
            prefixCls: prefixCls2,
            validRange: props2.validRange
          },
          on: {
            "typeChange": this.onHeaderTypeChange,
            "valueChange": this.onHeaderValueChange
          }
        }), h(FullCalendar$1, fullCalendarProps)]
      );
    }
  },
  render: function render70() {
    var h = arguments[0];
    return h(LocaleReceiver, {
      attrs: {
        componentName: "Calendar",
        defaultLocale: this.getDefaultLocale
      },
      scopedSlots: { "default": this.renderCalendar }
    });
  }
};
Calendar$2.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Calendar$2.name, Calendar$2);
};
var Calendar$3 = Calendar$2;
var KeyCode = {
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40
};
var sentinelStyle = { width: 0, height: 0, overflow: "hidden", position: "absolute" };
var Sentinel = {
  name: "Sentinel",
  props: {
    setRef: PropTypes.func,
    prevElement: PropTypes.any,
    nextElement: PropTypes.any
  },
  methods: {
    onKeyDown: function onKeyDown8(_ref) {
      var target2 = _ref.target, which = _ref.which, shiftKey = _ref.shiftKey;
      var _$props = this.$props, nextElement = _$props.nextElement, prevElement = _$props.prevElement;
      if (which !== KeyCode$2.TAB || document.activeElement !== target2)
        return;
      if (!shiftKey && nextElement) {
        nextElement.focus();
      }
      if (shiftKey && prevElement) {
        prevElement.focus();
      }
    }
  },
  render: function render71() {
    var h = arguments[0];
    var setRef2 = this.$props.setRef;
    return h(
      "div",
      _mergeJSXProps([{
        attrs: {
          tabIndex: 0
        }
      }, {
        directives: [{
          name: "ant-ref",
          value: setRef2
        }]
      }, {
        style: sentinelStyle,
        on: {
          "keydown": this.onKeyDown
        },
        attrs: {
          role: "presentation"
        }
      }]),
      [this.$slots["default"]]
    );
  }
};
var isValid = function isValid2(value27) {
  return value27 !== void 0 && value27 !== null && value27 !== "";
};
var isValid$1 = isValid;
function getDefaultActiveKey(props2) {
  var activeKey2 = void 0;
  var children = props2.children;
  children.forEach(function(child) {
    if (child && !isValid$1(activeKey2) && !child.disabled) {
      activeKey2 = child.key;
    }
  });
  return activeKey2;
}
function activeKeyIsValid(props2, key2) {
  var children = props2.children;
  var keys3 = children.map(function(child) {
    return child && child.key;
  });
  return keys3.indexOf(key2) >= 0;
}
var Tabs$1 = {
  name: "Tabs",
  mixins: [BaseMixin],
  model: {
    prop: "activeKey",
    event: "change"
  },
  props: {
    destroyInactiveTabPane: PropTypes.bool,
    renderTabBar: PropTypes.func.isRequired,
    renderTabContent: PropTypes.func.isRequired,
    navWrapper: PropTypes.func.def(function(arg) {
      return arg;
    }),
    children: PropTypes.any.def([]),
    prefixCls: PropTypes.string.def("ant-tabs"),
    tabBarPosition: PropTypes.string.def("top"),
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    defaultActiveKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    __propsSymbol__: PropTypes.any,
    direction: PropTypes.string.def("ltr"),
    tabBarGutter: PropTypes.number
  },
  data: function data32() {
    var props2 = getOptionProps(this);
    var activeKey2 = void 0;
    if ("activeKey" in props2) {
      activeKey2 = props2.activeKey;
    } else if ("defaultActiveKey" in props2) {
      activeKey2 = props2.defaultActiveKey;
    } else {
      activeKey2 = getDefaultActiveKey(props2);
    }
    return {
      _activeKey: activeKey2
    };
  },
  provide: function provide10() {
    return {
      sentinelContext: this
    };
  },
  watch: {
    __propsSymbol__: function __propsSymbol__2() {
      var nextProps = getOptionProps(this);
      if ("activeKey" in nextProps) {
        this.setState({
          _activeKey: nextProps.activeKey
        });
      } else if (!activeKeyIsValid(nextProps, this.$data._activeKey)) {
        this.setState({
          _activeKey: getDefaultActiveKey(nextProps)
        });
      }
    }
  },
  beforeDestroy: function beforeDestroy21() {
    this.destroy = true;
    raf$2.cancel(this.sentinelId);
  },
  methods: {
    onTabClick: function onTabClick(activeKey2, e) {
      if (this.tabBar.componentOptions && this.tabBar.componentOptions.listeners && this.tabBar.componentOptions.listeners.tabClick) {
        this.tabBar.componentOptions.listeners.tabClick(activeKey2, e);
      }
      this.setActiveKey(activeKey2);
    },
    onNavKeyDown: function onNavKeyDown(e) {
      var eventKeyCode = e.keyCode;
      if (eventKeyCode === KeyCode.RIGHT || eventKeyCode === KeyCode.DOWN) {
        e.preventDefault();
        var nextKey = this.getNextActiveKey(true);
        this.onTabClick(nextKey);
      } else if (eventKeyCode === KeyCode.LEFT || eventKeyCode === KeyCode.UP) {
        e.preventDefault();
        var previousKey = this.getNextActiveKey(false);
        this.onTabClick(previousKey);
      }
    },
    onScroll: function onScroll(_ref) {
      var target2 = _ref.target, currentTarget = _ref.currentTarget;
      if (target2 === currentTarget && target2.scrollLeft > 0) {
        target2.scrollLeft = 0;
      }
    },
    setSentinelStart: function setSentinelStart(node) {
      this.sentinelStart = node;
    },
    setSentinelEnd: function setSentinelEnd(node) {
      this.sentinelEnd = node;
    },
    setPanelSentinelStart: function setPanelSentinelStart(node) {
      if (node !== this.panelSentinelStart) {
        this.updateSentinelContext();
      }
      this.panelSentinelStart = node;
    },
    setPanelSentinelEnd: function setPanelSentinelEnd(node) {
      if (node !== this.panelSentinelEnd) {
        this.updateSentinelContext();
      }
      this.panelSentinelEnd = node;
    },
    setActiveKey: function setActiveKey(activeKey2) {
      if (this.$data._activeKey !== activeKey2) {
        var props2 = getOptionProps(this);
        if (!("activeKey" in props2)) {
          this.setState({
            _activeKey: activeKey2
          });
        }
        this.__emit("change", activeKey2);
      }
    },
    getNextActiveKey: function getNextActiveKey(next3) {
      var activeKey2 = this.$data._activeKey;
      var children = [];
      this.$props.children.forEach(function(c) {
        var disabled = getValueByProp(c, "disabled");
        if (c && !disabled && disabled !== "") {
          if (next3) {
            children.push(c);
          } else {
            children.unshift(c);
          }
        }
      });
      var length = children.length;
      var ret = length && children[0].key;
      children.forEach(function(child, i) {
        if (child.key === activeKey2) {
          if (i === length - 1) {
            ret = children[0].key;
          } else {
            ret = children[i + 1].key;
          }
        }
      });
      return ret;
    },
    updateSentinelContext: function updateSentinelContext() {
      var _this = this;
      if (this.destroy)
        return;
      raf$2.cancel(this.sentinelId);
      this.sentinelId = raf$2(function() {
        if (_this.destroy)
          return;
        _this.$forceUpdate();
      });
    }
  },
  render: function render72() {
    var _cls;
    var h = arguments[0];
    var props2 = this.$props;
    var prefixCls2 = props2.prefixCls, navWrapper = props2.navWrapper, tabBarPosition2 = props2.tabBarPosition, renderTabContent = props2.renderTabContent, renderTabBar = props2.renderTabBar, destroyInactiveTabPane = props2.destroyInactiveTabPane, direction = props2.direction, tabBarGutter = props2.tabBarGutter;
    var cls = (_cls = {}, _default$8(_cls, prefixCls2, 1), _default$8(_cls, prefixCls2 + "-" + tabBarPosition2, 1), _default$8(_cls, prefixCls2 + "-rtl", direction === "rtl"), _cls);
    this.tabBar = renderTabBar();
    var tabBar = cloneElement(this.tabBar, {
      props: {
        prefixCls: prefixCls2,
        navWrapper,
        tabBarPosition: tabBarPosition2,
        panels: props2.children,
        activeKey: this.$data._activeKey,
        direction,
        tabBarGutter
      },
      on: {
        keydown: this.onNavKeyDown,
        tabClick: this.onTabClick
      },
      key: "tabBar"
    });
    var tabContent = cloneElement(renderTabContent(), {
      props: {
        prefixCls: prefixCls2,
        tabBarPosition: tabBarPosition2,
        activeKey: this.$data._activeKey,
        destroyInactiveTabPane,
        direction
      },
      on: {
        change: this.setActiveKey
      },
      children: props2.children,
      key: "tabContent"
    });
    var sentinelStart = h(Sentinel, {
      key: "sentinelStart",
      attrs: {
        setRef: this.setSentinelStart,
        nextElement: this.panelSentinelStart
      }
    });
    var sentinelEnd = h(Sentinel, {
      key: "sentinelEnd",
      attrs: {
        setRef: this.setSentinelEnd,
        prevElement: this.panelSentinelEnd
      }
    });
    var contents = [];
    if (tabBarPosition2 === "bottom") {
      contents.push(sentinelStart, tabContent, sentinelEnd, tabBar);
    } else {
      contents.push(tabBar, sentinelStart, tabContent, sentinelEnd);
    }
    var listeners = _default$6({}, omit$2(getListeners(this), ["change"]), {
      scroll: this.onScroll
    });
    return h(
      "div",
      { on: listeners, "class": cls },
      [contents]
    );
  }
};
var TabPane$1 = {
  name: "TabPane",
  props: {
    active: PropTypes.bool,
    destroyInactiveTabPane: PropTypes.bool,
    forceRender: PropTypes.bool,
    placeholder: PropTypes.any,
    rootPrefixCls: PropTypes.string,
    tab: PropTypes.any,
    closable: PropTypes.bool,
    disabled: PropTypes.bool
  },
  inject: {
    sentinelContext: { "default": function _default45() {
      return {};
    } }
  },
  render: function render73() {
    var _cls;
    var h = arguments[0];
    var _$props = this.$props, destroyInactiveTabPane = _$props.destroyInactiveTabPane, active = _$props.active, forceRender = _$props.forceRender, rootPrefixCls = _$props.rootPrefixCls;
    var children = this.$slots["default"];
    var placeholder = getComponentFromProp(this, "placeholder");
    this._isActived = this._isActived || active;
    var prefixCls2 = rootPrefixCls + "-tabpane";
    var cls = (_cls = {}, _default$8(_cls, prefixCls2, 1), _default$8(_cls, prefixCls2 + "-inactive", !active), _default$8(_cls, prefixCls2 + "-active", active), _cls);
    var isRender = destroyInactiveTabPane ? active : this._isActived;
    var shouldRender = isRender || forceRender;
    var _sentinelContext = this.sentinelContext, sentinelStart = _sentinelContext.sentinelStart, sentinelEnd = _sentinelContext.sentinelEnd, setPanelSentinelStart2 = _sentinelContext.setPanelSentinelStart, setPanelSentinelEnd2 = _sentinelContext.setPanelSentinelEnd;
    var panelSentinelStart = void 0;
    var panelSentinelEnd = void 0;
    if (active && shouldRender) {
      panelSentinelStart = h(Sentinel, {
        attrs: { setRef: setPanelSentinelStart2, prevElement: sentinelStart }
      });
      panelSentinelEnd = h(Sentinel, {
        attrs: { setRef: setPanelSentinelEnd2, nextElement: sentinelEnd }
      });
    }
    return h(
      "div",
      {
        "class": cls,
        attrs: { role: "tabpanel", "aria-hidden": active ? "false" : "true" }
      },
      [panelSentinelStart, shouldRender ? children : placeholder, panelSentinelEnd]
    );
  }
};
function toArray$3(children) {
  var c = [];
  children.forEach(function(child) {
    if (child.data) {
      c.push(child);
    }
  });
  return c;
}
function getActiveIndex(children, activeKey2) {
  var c = toArray$3(children);
  for (var i = 0; i < c.length; i++) {
    if (c[i].key === activeKey2) {
      return i;
    }
  }
  return -1;
}
function setTransform(style3, v) {
  style3.transform = v;
  style3.webkitTransform = v;
  style3.mozTransform = v;
}
function isTransform3dSupported(style3) {
  return ("transform" in style3 || "webkitTransform" in style3 || "MozTransform" in style3) && window.atob;
}
function getTransformPropValue(v) {
  return {
    transform: v,
    WebkitTransform: v,
    MozTransform: v
  };
}
function isVertical(tabBarPosition2) {
  return tabBarPosition2 === "left" || tabBarPosition2 === "right";
}
function getTransformByIndex(index2, tabBarPosition2) {
  var direction = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "ltr";
  var translate = isVertical(tabBarPosition2) ? "translateY" : "translateX";
  if (!isVertical(tabBarPosition2) && direction === "rtl") {
    return translate + "(" + index2 * 100 + "%) translateZ(0)";
  }
  return translate + "(" + -index2 * 100 + "%) translateZ(0)";
}
function getMarginStyle(index2, tabBarPosition2) {
  var marginDirection = isVertical(tabBarPosition2) ? "marginTop" : "marginLeft";
  return _default$8({}, marginDirection, -index2 * 100 + "%");
}
function getStyle(el, property2) {
  return +window.getComputedStyle(el).getPropertyValue(property2).replace("px", "");
}
function toNum(style3, property2) {
  return +style3.getPropertyValue(property2).replace("px", "");
}
function getTypeValue(start, current2, end, tabNode, wrapperNode) {
  var total2 = getStyle(wrapperNode, "padding-" + start);
  if (!tabNode || !tabNode.parentNode) {
    return total2;
  }
  var childNodes = tabNode.parentNode.childNodes;
  Array.prototype.some.call(childNodes, function(node) {
    var style3 = window.getComputedStyle(node);
    if (node !== tabNode) {
      total2 += toNum(style3, "margin-" + start);
      total2 += node[current2];
      total2 += toNum(style3, "margin-" + end);
      if (style3.boxSizing === "content-box") {
        total2 += toNum(style3, "border-" + start + "-width") + toNum(style3, "border-" + end + "-width");
      }
      return false;
    }
    total2 += toNum(style3, "margin-" + start);
    return true;
  });
  return total2;
}
function getLeft(tabNode, wrapperNode) {
  return getTypeValue("left", "offsetWidth", "right", tabNode, wrapperNode);
}
function getTop(tabNode, wrapperNode) {
  return getTypeValue("top", "offsetHeight", "bottom", tabNode, wrapperNode);
}
var TabContent = {
  name: "TabContent",
  props: {
    animated: { type: Boolean, "default": true },
    animatedWithMargin: { type: Boolean, "default": true },
    prefixCls: {
      "default": "ant-tabs",
      type: String
    },
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    tabBarPosition: String,
    direction: PropTypes.string,
    destroyInactiveTabPane: PropTypes.bool
  },
  computed: {
    classes: function classes4() {
      var _ref;
      var animated = this.animated, prefixCls2 = this.prefixCls;
      return _ref = {}, _default$8(_ref, prefixCls2 + "-content", true), _default$8(_ref, animated ? prefixCls2 + "-content-animated" : prefixCls2 + "-content-no-animated", true), _ref;
    }
  },
  methods: {
    getTabPanes: function getTabPanes() {
      var props2 = this.$props;
      var activeKey2 = props2.activeKey;
      var children = this.$slots["default"] || [];
      var newChildren = [];
      children.forEach(function(child) {
        if (!child) {
          return;
        }
        var key2 = child.key;
        var active = activeKey2 === key2;
        newChildren.push(cloneElement(child, {
          props: {
            active,
            destroyInactiveTabPane: props2.destroyInactiveTabPane,
            rootPrefixCls: props2.prefixCls
          }
        }));
      });
      return newChildren;
    }
  },
  render: function render74() {
    var h = arguments[0];
    var activeKey2 = this.activeKey, tabBarPosition2 = this.tabBarPosition, animated = this.animated, animatedWithMargin = this.animatedWithMargin, direction = this.direction, classes6 = this.classes;
    var style3 = {};
    if (animated && this.$slots["default"]) {
      var activeIndex = getActiveIndex(this.$slots["default"], activeKey2);
      if (activeIndex !== -1) {
        var animatedStyle = animatedWithMargin ? getMarginStyle(activeIndex, tabBarPosition2) : getTransformPropValue(getTransformByIndex(activeIndex, tabBarPosition2, direction));
        style3 = animatedStyle;
      } else {
        style3 = {
          display: "none"
        };
      }
    }
    return h(
      "div",
      { "class": classes6, style: style3 },
      [this.getTabPanes()]
    );
  }
};
Vue.use(_default$3, { name: "ant-ref" });
var isStyleSupport = function isStyleSupport2(styleName) {
  if (typeof window !== "undefined" && window.document && window.document.documentElement) {
    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];
    var documentElement = window.document.documentElement;
    return styleNameList.some(function(name) {
      return name in documentElement.style;
    });
  }
  return false;
};
var isFlexSupported$1 = isStyleSupport(["flex", "webkitFlex", "Flex", "msFlex"]);
function componentDidUpdate(component, init) {
  var _component$$props = component.$props, _component$$props$sty = _component$$props.styles, styles = _component$$props$sty === void 0 ? {} : _component$$props$sty, panels = _component$$props.panels, activeKey2 = _component$$props.activeKey, direction = _component$$props.direction;
  var rootNode = component.getRef("root");
  var wrapNode = component.getRef("nav") || rootNode;
  var inkBarNode = component.getRef("inkBar");
  var activeTab = component.getRef("activeTab");
  var inkBarNodeStyle = inkBarNode.style;
  var tabBarPosition2 = component.$props.tabBarPosition;
  var activeIndex = getActiveIndex(panels, activeKey2);
  if (init) {
    inkBarNodeStyle.display = "none";
  }
  if (activeTab) {
    var tabNode = activeTab;
    var transformSupported = isTransform3dSupported(inkBarNodeStyle);
    setTransform(inkBarNodeStyle, "");
    inkBarNodeStyle.width = "";
    inkBarNodeStyle.height = "";
    inkBarNodeStyle.left = "";
    inkBarNodeStyle.top = "";
    inkBarNodeStyle.bottom = "";
    inkBarNodeStyle.right = "";
    if (tabBarPosition2 === "top" || tabBarPosition2 === "bottom") {
      var left = getLeft(tabNode, wrapNode);
      var width = tabNode.offsetWidth;
      if (width === rootNode.offsetWidth) {
        width = 0;
      } else if (styles.inkBar && styles.inkBar.width !== void 0) {
        width = parseFloat(styles.inkBar.width, 10);
        if (width) {
          left += (tabNode.offsetWidth - width) / 2;
        }
      }
      if (direction === "rtl") {
        left = getStyle(tabNode, "margin-left") - left;
      }
      if (transformSupported) {
        setTransform(inkBarNodeStyle, "translate3d(" + left + "px,0,0)");
      } else {
        inkBarNodeStyle.left = left + "px";
      }
      inkBarNodeStyle.width = width + "px";
    } else {
      var top = getTop(tabNode, wrapNode);
      var height3 = tabNode.offsetHeight;
      if (styles.inkBar && styles.inkBar.height !== void 0) {
        height3 = parseFloat(styles.inkBar.height, 10);
        if (height3) {
          top += (tabNode.offsetHeight - height3) / 2;
        }
      }
      if (transformSupported) {
        setTransform(inkBarNodeStyle, "translate3d(0," + top + "px,0)");
        inkBarNodeStyle.top = "0";
      } else {
        inkBarNodeStyle.top = top + "px";
      }
      inkBarNodeStyle.height = height3 + "px";
    }
  }
  inkBarNodeStyle.display = activeIndex !== -1 ? "block" : "none";
}
var InkTabBarNode = {
  name: "InkTabBarNode",
  mixins: [BaseMixin],
  props: {
    inkBarAnimated: {
      type: Boolean,
      "default": true
    },
    direction: PropTypes.string,
    prefixCls: String,
    styles: Object,
    tabBarPosition: String,
    saveRef: PropTypes.func.def(function() {
    }),
    getRef: PropTypes.func.def(function() {
    }),
    panels: PropTypes.array,
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
  },
  updated: function updated20() {
    this.$nextTick(function() {
      componentDidUpdate(this);
    });
  },
  mounted: function mounted24() {
    this.$nextTick(function() {
      componentDidUpdate(this, true);
    });
  },
  render: function render75() {
    var _classes;
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, _styles = this.styles, styles = _styles === void 0 ? {} : _styles, inkBarAnimated = this.inkBarAnimated;
    var className = prefixCls2 + "-ink-bar";
    var classes6 = (_classes = {}, _default$8(_classes, className, true), _default$8(_classes, inkBarAnimated ? className + "-animated" : className + "-no-animated", true), _classes);
    return h("div", _mergeJSXProps([{
      style: styles.inkBar,
      "class": classes6,
      key: "inkBar"
    }, {
      directives: [{
        name: "ant-ref",
        value: this.saveRef("inkBar")
      }]
    }]));
  }
};
function noop$J() {
}
var TabBarTabsNode = {
  name: "TabBarTabsNode",
  mixins: [BaseMixin],
  props: {
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    panels: PropTypes.any.def([]),
    prefixCls: PropTypes.string.def(""),
    tabBarGutter: PropTypes.any.def(null),
    onTabClick: PropTypes.func,
    saveRef: PropTypes.func.def(noop$J),
    getRef: PropTypes.func.def(noop$J),
    renderTabBarNode: PropTypes.func,
    tabBarPosition: PropTypes.string,
    direction: PropTypes.string
  },
  render: function render76() {
    var _this = this;
    var h = arguments[0];
    var _$props = this.$props, children = _$props.panels, activeKey2 = _$props.activeKey, prefixCls2 = _$props.prefixCls, tabBarGutter = _$props.tabBarGutter, saveRef4 = _$props.saveRef, tabBarPosition2 = _$props.tabBarPosition, direction = _$props.direction;
    var rst = [];
    var renderTabBarNode = this.renderTabBarNode || this.$scopedSlots.renderTabBarNode;
    children.forEach(function(child, index2) {
      if (!child) {
        return;
      }
      var props2 = getOptionProps(child);
      var key2 = child.key;
      var cls = activeKey2 === key2 ? prefixCls2 + "-tab-active" : "";
      cls += " " + prefixCls2 + "-tab";
      var events = { on: {} };
      var disabled = props2.disabled || props2.disabled === "";
      if (disabled) {
        cls += " " + prefixCls2 + "-tab-disabled";
      } else {
        events.on.click = function() {
          _this.__emit("tabClick", key2);
        };
      }
      var directives = [];
      if (activeKey2 === key2) {
        directives.push({
          name: "ant-ref",
          value: saveRef4("activeTab")
        });
      }
      var tab = getComponentFromProp(child, "tab");
      var gutter = tabBarGutter && index2 === children.length - 1 ? 0 : tabBarGutter;
      gutter = typeof gutter === "number" ? gutter + "px" : gutter;
      var marginProperty = direction === "rtl" ? "marginLeft" : "marginRight";
      var style3 = _default$8({}, isVertical(tabBarPosition2) ? "marginBottom" : marginProperty, gutter);
      warning$3();
      var node = h(
        "div",
        _mergeJSXProps([{
          attrs: {
            role: "tab",
            "aria-disabled": disabled ? "true" : "false",
            "aria-selected": activeKey2 === key2 ? "true" : "false"
          }
        }, events, {
          "class": cls,
          key: key2,
          style: style3
        }, { directives }]),
        [tab]
      );
      if (renderTabBarNode) {
        node = renderTabBarNode(node);
      }
      rst.push(node);
    });
    return h(
      "div",
      {
        directives: [{
          name: "ant-ref",
          value: this.saveRef("navTabsContainer")
        }]
      },
      [rst]
    );
  }
};
function noop$I() {
}
var TabBarRootNode = {
  name: "TabBarRootNode",
  mixins: [BaseMixin],
  props: {
    saveRef: PropTypes.func.def(noop$I),
    getRef: PropTypes.func.def(noop$I),
    prefixCls: PropTypes.string.def(""),
    tabBarPosition: PropTypes.string.def("top"),
    extraContent: PropTypes.any
  },
  methods: {
    onKeyDown: function onKeyDown9(e) {
      this.__emit("keydown", e);
    }
  },
  render: function render77() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, onKeyDown25 = this.onKeyDown, tabBarPosition2 = this.tabBarPosition, extraContent = this.extraContent;
    var cls = _default$8({}, prefixCls2 + "-bar", true);
    var topOrBottom = tabBarPosition2 === "top" || tabBarPosition2 === "bottom";
    var tabBarExtraContentStyle = topOrBottom ? { float: "right" } : {};
    var children = this.$slots["default"];
    var newChildren = children;
    if (extraContent) {
      newChildren = [cloneElement(extraContent, {
        key: "extra",
        style: _default$6({}, tabBarExtraContentStyle)
      }), cloneElement(children, { key: "content" })];
      newChildren = topOrBottom ? newChildren : newChildren.reverse();
    }
    return h(
      "div",
      _mergeJSXProps([{
        attrs: {
          role: "tablist",
          tabIndex: "0"
        },
        "class": cls,
        on: {
          "keydown": onKeyDown25
        }
      }, {
        directives: [{
          name: "ant-ref",
          value: this.saveRef("root")
        }]
      }]),
      [newChildren]
    );
  }
};
var root = _root;
var now$3 = function() {
  return root.Date.now();
};
var now_1 = now$3;
var reWhitespace = /\s/;
function trimmedEndIndex$1(string2) {
  var index2 = string2.length;
  while (index2-- && reWhitespace.test(string2.charAt(index2))) {
  }
  return index2;
}
var _trimmedEndIndex = trimmedEndIndex$1;
var trimmedEndIndex = _trimmedEndIndex;
var reTrimStart = /^\s+/;
function baseTrim$1(string2) {
  return string2 ? string2.slice(0, trimmedEndIndex(string2) + 1).replace(reTrimStart, "") : string2;
}
var _baseTrim = baseTrim$1;
var baseGetTag$1 = _baseGetTag, isObjectLike$3 = isObjectLike_1;
var symbolTag$1 = "[object Symbol]";
function isSymbol$4(value27) {
  return typeof value27 == "symbol" || isObjectLike$3(value27) && baseGetTag$1(value27) == symbolTag$1;
}
var isSymbol_1 = isSymbol$4;
var baseTrim = _baseTrim, isObject$7 = isObject_1, isSymbol$3 = isSymbol_1;
var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber$2(value27) {
  if (typeof value27 == "number") {
    return value27;
  }
  if (isSymbol$3(value27)) {
    return NAN;
  }
  if (isObject$7(value27)) {
    var other = typeof value27.valueOf == "function" ? value27.valueOf() : value27;
    value27 = isObject$7(other) ? other + "" : other;
  }
  if (typeof value27 != "string") {
    return value27 === 0 ? value27 : +value27;
  }
  value27 = baseTrim(value27);
  var isBinary = reIsBinary.test(value27);
  return isBinary || reIsOctal.test(value27) ? freeParseInt(value27.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value27) ? NAN : +value27;
}
var toNumber_1 = toNumber$2;
var isObject$6 = isObject_1, now$2 = now_1, toNumber$1 = toNumber_1;
var FUNC_ERROR_TEXT$2 = "Expected a function";
var nativeMax$2 = Math.max, nativeMin = Math.min;
function debounce$2(func, wait, options2) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$2);
  }
  wait = toNumber$1(wait) || 0;
  if (isObject$6(options2)) {
    leading = !!options2.leading;
    maxing = "maxWait" in options2;
    maxWait = maxing ? nativeMax$2(toNumber$1(options2.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now$2();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now$2());
  }
  function debounced() {
    var time = now$2(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_1 = debounce$2;
var debounce$3 = debounce_1;
function noop$H() {
}
var ScrollableTabBarNode = {
  name: "ScrollableTabBarNode",
  mixins: [BaseMixin],
  props: {
    activeKey: PropTypes.any,
    getRef: PropTypes.func.def(function() {
    }),
    saveRef: PropTypes.func.def(function() {
    }),
    tabBarPosition: PropTypes.oneOf(["left", "right", "top", "bottom"]).def("left"),
    prefixCls: PropTypes.string.def(""),
    scrollAnimated: PropTypes.bool.def(true),
    navWrapper: PropTypes.func.def(function(arg) {
      return arg;
    }),
    prevIcon: PropTypes.any,
    nextIcon: PropTypes.any,
    direction: PropTypes.string
  },
  data: function data33() {
    this.offset = 0;
    this.prevProps = _default$6({}, this.$props);
    return {
      next: false,
      prev: false
    };
  },
  watch: {
    tabBarPosition: function tabBarPosition() {
      var _this = this;
      this.tabBarPositionChange = true;
      this.$nextTick(function() {
        _this.setOffset(0);
      });
    }
  },
  mounted: function mounted25() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.updatedCal();
      _this2.debouncedResize = debounce$3(function() {
        _this2.setNextPrev();
        _this2.scrollToActiveTab();
      }, 200);
      _this2.resizeObserver = new ResizeObserver$2(_this2.debouncedResize);
      _this2.resizeObserver.observe(_this2.$props.getRef("container"));
    });
  },
  updated: function updated21() {
    var _this3 = this;
    this.$nextTick(function() {
      _this3.updatedCal(_this3.prevProps);
      _this3.prevProps = _default$6({}, _this3.$props);
    });
  },
  beforeDestroy: function beforeDestroy22() {
    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    }
    if (this.debouncedResize && this.debouncedResize.cancel) {
      this.debouncedResize.cancel();
    }
  },
  methods: {
    updatedCal: function updatedCal2(prevProps) {
      var _this4 = this;
      var props2 = this.$props;
      if (prevProps && prevProps.tabBarPosition !== props2.tabBarPosition) {
        this.setOffset(0);
        return;
      }
      if (this.isNextPrevShown(this.$data) !== this.isNextPrevShown(this.setNextPrev())) {
        this.$forceUpdate();
        this.$nextTick(function() {
          _this4.scrollToActiveTab();
        });
      } else if (!prevProps || props2.activeKey !== prevProps.activeKey) {
        this.scrollToActiveTab();
      }
    },
    setNextPrev: function setNextPrev() {
      var navNode = this.$props.getRef("nav");
      var navTabsContainer = this.$props.getRef("navTabsContainer");
      var navNodeWH = this.getScrollWH(navTabsContainer || navNode);
      var containerWH = this.getOffsetWH(this.$props.getRef("container")) + 1;
      var navWrapNodeWH = this.getOffsetWH(this.$props.getRef("navWrap"));
      var offset4 = this.offset;
      var minOffset = containerWH - navNodeWH;
      var next3 = this.next, prev3 = this.prev;
      if (minOffset >= 0) {
        next3 = false;
        this.setOffset(0, false);
        offset4 = 0;
      } else if (minOffset < offset4) {
        next3 = true;
      } else {
        next3 = false;
        var realOffset = navWrapNodeWH - navNodeWH;
        this.setOffset(realOffset, false);
        offset4 = realOffset;
      }
      if (offset4 < 0) {
        prev3 = true;
      } else {
        prev3 = false;
      }
      this.setNext(next3);
      this.setPrev(prev3);
      return {
        next: next3,
        prev: prev3
      };
    },
    getOffsetWH: function getOffsetWH(node) {
      var tabBarPosition2 = this.$props.tabBarPosition;
      var prop = "offsetWidth";
      if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
        prop = "offsetHeight";
      }
      return node[prop];
    },
    getScrollWH: function getScrollWH(node) {
      var tabBarPosition2 = this.tabBarPosition;
      var prop = "scrollWidth";
      if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
        prop = "scrollHeight";
      }
      return node[prop];
    },
    getOffsetLT: function getOffsetLT(node) {
      var tabBarPosition2 = this.$props.tabBarPosition;
      var prop = "left";
      if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
        prop = "top";
      }
      return node.getBoundingClientRect()[prop];
    },
    setOffset: function setOffset2(offset4) {
      var checkNextPrev = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      var target2 = Math.min(0, offset4);
      if (this.offset !== target2) {
        this.offset = target2;
        var navOffset = {};
        var tabBarPosition2 = this.$props.tabBarPosition;
        var navStyle = this.$props.getRef("nav").style;
        var transformSupported = isTransform3dSupported(navStyle);
        if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
          if (transformSupported) {
            navOffset = {
              value: "translate3d(0," + target2 + "px,0)"
            };
          } else {
            navOffset = {
              name: "top",
              value: target2 + "px"
            };
          }
        } else if (transformSupported) {
          if (this.$props.direction === "rtl") {
            target2 = -target2;
          }
          navOffset = {
            value: "translate3d(" + target2 + "px,0,0)"
          };
        } else {
          navOffset = {
            name: "left",
            value: target2 + "px"
          };
        }
        if (transformSupported) {
          setTransform(navStyle, navOffset.value);
        } else {
          navStyle[navOffset.name] = navOffset.value;
        }
        if (checkNextPrev) {
          this.setNextPrev();
        }
      }
    },
    setPrev: function setPrev(v) {
      if (this.prev !== v) {
        this.prev = v;
      }
    },
    setNext: function setNext(v) {
      if (this.next !== v) {
        this.next = v;
      }
    },
    isNextPrevShown: function isNextPrevShown(state) {
      if (state) {
        return state.next || state.prev;
      }
      return this.next || this.prev;
    },
    prevTransitionEnd: function prevTransitionEnd(e) {
      if (e.propertyName !== "opacity") {
        return;
      }
      var container = this.$props.getRef("container");
      this.scrollToActiveTab({
        target: container,
        currentTarget: container
      });
    },
    scrollToActiveTab: function scrollToActiveTab(e) {
      var activeTab = this.$props.getRef("activeTab");
      var navWrap = this.$props.getRef("navWrap");
      if (e && e.target !== e.currentTarget || !activeTab) {
        return;
      }
      var needToSroll = this.isNextPrevShown() && this.lastNextPrevShown;
      this.lastNextPrevShown = this.isNextPrevShown();
      if (!needToSroll) {
        return;
      }
      var activeTabWH = this.getScrollWH(activeTab);
      var navWrapNodeWH = this.getOffsetWH(navWrap);
      var offset4 = this.offset;
      var wrapOffset = this.getOffsetLT(navWrap);
      var activeTabOffset = this.getOffsetLT(activeTab);
      if (wrapOffset > activeTabOffset) {
        offset4 += wrapOffset - activeTabOffset;
        this.setOffset(offset4);
      } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {
        offset4 -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);
        this.setOffset(offset4);
      }
    },
    prevClick: function prevClick(e) {
      this.__emit("prevClick", e);
      var navWrapNode = this.$props.getRef("navWrap");
      var navWrapNodeWH = this.getOffsetWH(navWrapNode);
      var offset4 = this.offset;
      this.setOffset(offset4 + navWrapNodeWH);
    },
    nextClick: function nextClick(e) {
      this.__emit("nextClick", e);
      var navWrapNode = this.$props.getRef("navWrap");
      var navWrapNodeWH = this.getOffsetWH(navWrapNode);
      var offset4 = this.offset;
      this.setOffset(offset4 - navWrapNodeWH);
    }
  },
  render: function render78() {
    var _ref, _ref2, _navClasses, _ref3;
    var h = arguments[0];
    var next3 = this.next, prev3 = this.prev;
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, scrollAnimated = _$props.scrollAnimated, navWrapper = _$props.navWrapper;
    var prevIcon = getComponentFromProp(this, "prevIcon");
    var nextIcon = getComponentFromProp(this, "nextIcon");
    var showNextPrev = prev3 || next3;
    var prevButton = h(
      "span",
      {
        on: {
          "click": prev3 ? this.prevClick : noop$H,
          "transitionend": this.prevTransitionEnd
        },
        attrs: {
          unselectable: "unselectable"
        },
        "class": (_ref = {}, _default$8(_ref, prefixCls2 + "-tab-prev", 1), _default$8(_ref, prefixCls2 + "-tab-btn-disabled", !prev3), _default$8(_ref, prefixCls2 + "-tab-arrow-show", showNextPrev), _ref)
      },
      [prevIcon || h("span", { "class": prefixCls2 + "-tab-prev-icon" })]
    );
    var nextButton = h(
      "span",
      {
        on: {
          "click": next3 ? this.nextClick : noop$H
        },
        attrs: {
          unselectable: "unselectable"
        },
        "class": (_ref2 = {}, _default$8(_ref2, prefixCls2 + "-tab-next", 1), _default$8(_ref2, prefixCls2 + "-tab-btn-disabled", !next3), _default$8(_ref2, prefixCls2 + "-tab-arrow-show", showNextPrev), _ref2)
      },
      [nextIcon || h("span", { "class": prefixCls2 + "-tab-next-icon" })]
    );
    var navClassName = prefixCls2 + "-nav";
    var navClasses = (_navClasses = {}, _default$8(_navClasses, navClassName, true), _default$8(_navClasses, scrollAnimated ? navClassName + "-animated" : navClassName + "-no-animated", true), _navClasses);
    return h(
      "div",
      _mergeJSXProps([{
        "class": (_ref3 = {}, _default$8(_ref3, prefixCls2 + "-nav-container", 1), _default$8(_ref3, prefixCls2 + "-nav-container-scrolling", showNextPrev), _ref3),
        key: "container"
      }, {
        directives: [{
          name: "ant-ref",
          value: this.saveRef("container")
        }]
      }]),
      [prevButton, nextButton, h(
        "div",
        _mergeJSXProps([{
          "class": prefixCls2 + "-nav-wrap"
        }, {
          directives: [{
            name: "ant-ref",
            value: this.saveRef("navWrap")
          }]
        }]),
        [h(
          "div",
          { "class": prefixCls2 + "-nav-scroll" },
          [h(
            "div",
            _mergeJSXProps([{
              "class": navClasses
            }, {
              directives: [{
                name: "ant-ref",
                value: this.saveRef("nav")
              }]
            }]),
            [navWrapper(this.$slots["default"])]
          )]
        )]
      )]
    );
  }
};
var SaveRef = {
  props: {
    children: PropTypes.func.def(function() {
      return null;
    })
  },
  methods: {
    getRef: function getRef(name) {
      return this[name];
    },
    saveRef: function saveRef2(name) {
      var _this = this;
      return function(node) {
        if (node) {
          _this[name] = node;
        }
      };
    }
  },
  render: function render79() {
    var _this2 = this;
    var saveRef4 = function saveRef5(name) {
      return _this2.saveRef(name);
    };
    var getRef2 = function getRef3(name) {
      return _this2.getRef(name);
    };
    return this.children(saveRef4, getRef2);
  }
};
var ScrollableInkTabBar = {
  name: "ScrollableInkTabBar",
  inheritAttrs: false,
  props: ["extraContent", "inkBarAnimated", "tabBarGutter", "prefixCls", "navWrapper", "tabBarPosition", "panels", "activeKey", "prevIcon", "nextIcon"],
  render: function render80() {
    var h = arguments[0];
    var props2 = _default$6({}, this.$props);
    var listeners = getListeners(this);
    var renderTabBarNode = this.$scopedSlots["default"];
    return h(SaveRef, {
      attrs: {
        children: function children(saveRef4, getRef2) {
          return h(
            TabBarRootNode,
            _mergeJSXProps([{
              attrs: { saveRef: saveRef4 }
            }, { props: props2, on: listeners }]),
            [h(
              ScrollableTabBarNode,
              _mergeJSXProps([{
                attrs: { saveRef: saveRef4, getRef: getRef2 }
              }, { props: props2, on: listeners }]),
              [h(TabBarTabsNode, _mergeJSXProps([{
                attrs: {
                  saveRef: saveRef4
                }
              }, { props: _default$6({}, props2, { renderTabBarNode }), on: listeners }])), h(InkTabBarNode, _mergeJSXProps([{
                attrs: { saveRef: saveRef4, getRef: getRef2 }
              }, { props: props2, on: listeners }]))]
            )]
          );
        }
      }
    });
  }
};
var TabBar = {
  name: "TabBar",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    tabBarStyle: PropTypes.object,
    tabBarExtraContent: PropTypes.any,
    type: PropTypes.oneOf(["line", "card", "editable-card"]),
    tabPosition: PropTypes.oneOf(["top", "right", "bottom", "left"]).def("top"),
    tabBarPosition: PropTypes.oneOf(["top", "right", "bottom", "left"]),
    size: PropTypes.oneOf(["default", "small", "large"]),
    animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    renderTabBar: PropTypes.func,
    panels: PropTypes.array.def([]),
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    tabBarGutter: PropTypes.number
  },
  render: function render81() {
    var _cls;
    var h = arguments[0];
    var _$props = this.$props, tabBarStyle = _$props.tabBarStyle, _$props$animated = _$props.animated, animated = _$props$animated === void 0 ? true : _$props$animated, renderTabBar = _$props.renderTabBar, tabBarExtraContent = _$props.tabBarExtraContent, tabPosition = _$props.tabPosition, prefixCls2 = _$props.prefixCls, _$props$type = _$props.type, type3 = _$props$type === void 0 ? "line" : _$props$type, size = _$props.size;
    var inkBarAnimated = (typeof animated === "undefined" ? "undefined" : _default$7(animated)) === "object" ? animated.inkBar : animated;
    var isVertical2 = tabPosition === "left" || tabPosition === "right";
    var prevIconType = isVertical2 ? "up" : "left";
    var nextIconType = isVertical2 ? "down" : "right";
    var prevIcon = h(
      "span",
      { "class": prefixCls2 + "-tab-prev-icon" },
      [h(Icon$1, {
        attrs: { type: prevIconType },
        "class": prefixCls2 + "-tab-prev-icon-target"
      })]
    );
    var nextIcon = h(
      "span",
      { "class": prefixCls2 + "-tab-next-icon" },
      [h(Icon$1, {
        attrs: { type: nextIconType },
        "class": prefixCls2 + "-tab-next-icon-target"
      })]
    );
    var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-" + tabPosition + "-bar", true), _default$8(_cls, prefixCls2 + "-" + size + "-bar", !!size), _default$8(_cls, prefixCls2 + "-card-bar", type3 && type3.indexOf("card") >= 0), _cls);
    var renderProps = {
      props: _default$6({}, this.$props, this.$attrs, {
        inkBarAnimated,
        extraContent: tabBarExtraContent,
        prevIcon,
        nextIcon
      }),
      style: tabBarStyle,
      on: getListeners(this),
      "class": cls
    };
    var RenderTabBar = void 0;
    if (renderTabBar) {
      RenderTabBar = renderTabBar(renderProps, ScrollableInkTabBar);
      return cloneElement(RenderTabBar, renderProps);
    } else {
      return h(ScrollableInkTabBar, renderProps);
    }
  }
};
var TabBar$1 = TabBar;
var Tabs = {
  TabPane: TabPane$1,
  name: "ATabs",
  model: {
    prop: "activeKey",
    event: "change"
  },
  props: {
    prefixCls: PropTypes.string,
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    defaultActiveKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    hideAdd: PropTypes.bool.def(false),
    tabBarStyle: PropTypes.object,
    tabBarExtraContent: PropTypes.any,
    destroyInactiveTabPane: PropTypes.bool.def(false),
    type: PropTypes.oneOf(["line", "card", "editable-card"]),
    tabPosition: PropTypes.oneOf(["top", "right", "bottom", "left"]).def("top"),
    size: PropTypes.oneOf(["default", "small", "large"]),
    animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    tabBarGutter: PropTypes.number,
    renderTabBar: PropTypes.func
  },
  inject: {
    configProvider: { "default": function _default46() {
      return ConfigConsumerProps;
    } }
  },
  mounted: function mounted26() {
    var NO_FLEX = " no-flex";
    var tabNode = this.$el;
    if (tabNode && !isFlexSupported$1 && tabNode.className.indexOf(NO_FLEX) === -1) {
      tabNode.className += NO_FLEX;
    }
  },
  methods: {
    removeTab: function removeTab(targetKey, e) {
      e.stopPropagation();
      if (isValid$1(targetKey)) {
        this.$emit("edit", targetKey, "remove");
      }
    },
    handleChange: function handleChange5(activeKey2) {
      this.$emit("change", activeKey2);
    },
    createNewTab: function createNewTab(targetKey) {
      this.$emit("edit", targetKey, "add");
    },
    onTabClick: function onTabClick2(val) {
      this.$emit("tabClick", val);
    },
    onPrevClick: function onPrevClick(val) {
      this.$emit("prevClick", val);
    },
    onNextClick: function onNextClick(val) {
      this.$emit("nextClick", val);
    }
  },
  render: function render82() {
    var _cls, _this = this, _contentCls;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, size = props2.size, _props$type = props2.type, type3 = _props$type === void 0 ? "line" : _props$type, tabPosition = props2.tabPosition, _props$animated = props2.animated, animated = _props$animated === void 0 ? true : _props$animated, hideAdd = props2.hideAdd, renderTabBar = props2.renderTabBar;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("tabs", customizePrefixCls);
    var children = filterEmpty(this.$slots["default"]);
    var tabBarExtraContent = getComponentFromProp(this, "tabBarExtraContent");
    var tabPaneAnimated = (typeof animated === "undefined" ? "undefined" : _default$7(animated)) === "object" ? animated.tabPane : animated;
    if (type3 !== "line") {
      tabPaneAnimated = "animated" in props2 ? tabPaneAnimated : false;
    }
    var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-vertical", tabPosition === "left" || tabPosition === "right"), _default$8(_cls, prefixCls2 + "-" + size, !!size), _default$8(_cls, prefixCls2 + "-card", type3.indexOf("card") >= 0), _default$8(_cls, prefixCls2 + "-" + type3, true), _default$8(_cls, prefixCls2 + "-no-animation", !tabPaneAnimated), _cls);
    var childrenWithClose = [];
    if (type3 === "editable-card") {
      childrenWithClose = [];
      children.forEach(function(child, index2) {
        var props3 = getOptionProps(child);
        var closable = props3.closable;
        closable = typeof closable === "undefined" ? true : closable;
        var closeIcon = closable ? h(Icon$1, {
          attrs: {
            type: "close"
          },
          "class": prefixCls2 + "-close-x",
          on: {
            "click": function click(e) {
              return _this.removeTab(child.key, e);
            }
          }
        }) : null;
        childrenWithClose.push(cloneElement(child, {
          props: {
            tab: h(
              "div",
              { "class": closable ? void 0 : prefixCls2 + "-tab-unclosable" },
              [getComponentFromProp(child, "tab"), closeIcon]
            )
          },
          key: child.key || index2
        }));
      });
      if (!hideAdd) {
        tabBarExtraContent = h("span", [h(Icon$1, {
          attrs: { type: "plus" },
          "class": prefixCls2 + "-new-tab",
          on: {
            "click": this.createNewTab
          }
        }), tabBarExtraContent]);
      }
    }
    tabBarExtraContent = tabBarExtraContent ? h(
      "div",
      { "class": prefixCls2 + "-extra-content" },
      [tabBarExtraContent]
    ) : null;
    var renderTabBarSlot = renderTabBar || this.$scopedSlots.renderTabBar;
    var listeners = getListeners(this);
    var tabBarProps = {
      props: _default$6({}, this.$props, {
        prefixCls: prefixCls2,
        tabBarExtraContent,
        renderTabBar: renderTabBarSlot
      }),
      on: listeners
    };
    var contentCls = (_contentCls = {}, _default$8(_contentCls, prefixCls2 + "-" + tabPosition + "-content", true), _default$8(_contentCls, prefixCls2 + "-card-content", type3.indexOf("card") >= 0), _contentCls);
    var tabsProps = {
      props: _default$6({}, getOptionProps(this), {
        prefixCls: prefixCls2,
        tabBarPosition: tabPosition,
        renderTabBar: function renderTabBar2() {
          return h(TabBar$1, _mergeJSXProps([{ key: "tabBar" }, tabBarProps]));
        },
        renderTabContent: function renderTabContent() {
          return h(TabContent, {
            "class": contentCls,
            attrs: { animated: tabPaneAnimated, animatedWithMargin: true }
          });
        },
        children: childrenWithClose.length > 0 ? childrenWithClose : children,
        __propsSymbol__: Symbol()
      }),
      on: _default$6({}, listeners, {
        change: this.handleChange
      }),
      "class": cls
    };
    return h(Tabs$1, tabsProps);
  }
};
Tabs.TabPane = _default$6({}, TabPane$1, { name: "ATabPane", __ANT_TAB_PANE: true });
Tabs.TabContent = _default$6({}, TabContent, { name: "ATabContent" });
Vue.use(_default$3, { name: "ant-ref" });
Tabs.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Tabs.name, Tabs);
  Vue2.component(Tabs.TabPane.name, Tabs.TabPane);
  Vue2.component(Tabs.TabContent.name, Tabs.TabContent);
};
var enquire = void 0;
if (typeof window !== "undefined") {
  var matchMediaPolyfill$2 = function matchMediaPolyfill(mediaQuery) {
    return {
      media: mediaQuery,
      matches: false,
      addListener: function addListener() {
      },
      removeListener: function removeListener() {
      }
    };
  };
  if (!window.matchMedia)
    window.matchMedia = matchMediaPolyfill$2;
  enquire = require("enquire.js");
}
var responsiveArray$1 = ["xxl", "xl", "lg", "md", "sm", "xs"];
var responsiveMap = {
  xs: "(max-width: 575px)",
  sm: "(min-width: 576px)",
  md: "(min-width: 768px)",
  lg: "(min-width: 992px)",
  xl: "(min-width: 1200px)",
  xxl: "(min-width: 1600px)"
};
var subscribers = [];
var subUid = -1;
var screens = {};
var responsiveObserve = {
  dispatch: function dispatch(pointMap) {
    screens = pointMap;
    if (subscribers.length < 1) {
      return false;
    }
    subscribers.forEach(function(item) {
      item.func(screens);
    });
    return true;
  },
  subscribe: function subscribe(func) {
    if (subscribers.length === 0) {
      this.register();
    }
    var token2 = (++subUid).toString();
    subscribers.push({
      token: token2,
      func
    });
    func(screens);
    return token2;
  },
  unsubscribe: function unsubscribe(token2) {
    subscribers = subscribers.filter(function(item) {
      return item.token !== token2;
    });
    if (subscribers.length === 0) {
      this.unregister();
    }
  },
  unregister: function unregister() {
    Object.keys(responsiveMap).map(function(screen) {
      return enquire.unregister(responsiveMap[screen]);
    });
  },
  register: function register() {
    var _this = this;
    Object.keys(responsiveMap).map(function(screen) {
      return enquire.register(responsiveMap[screen], {
        match: function match5() {
          var pointMap = _default$6({}, screens, _default$8({}, screen, true));
          _this.dispatch(pointMap);
        },
        unmatch: function unmatch() {
          var pointMap = _default$6({}, screens, _default$8({}, screen, false));
          _this.dispatch(pointMap);
        },
        destroy: function destroy3() {
        }
      });
    });
  }
};
var ResponsiveObserve = responsiveObserve;
var RowProps = {
  gutter: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),
  type: PropTypes.oneOf(["flex"]),
  align: PropTypes.oneOf(["top", "middle", "bottom", "stretch"]),
  justify: PropTypes.oneOf(["start", "end", "center", "space-around", "space-between"]),
  prefixCls: PropTypes.string
};
var responsiveArray = ["xxl", "xl", "lg", "md", "sm", "xs"];
var Row = {
  name: "ARow",
  mixins: [BaseMixin],
  props: _default$6({}, RowProps, {
    gutter: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]).def(0)
  }),
  provide: function provide11() {
    return {
      rowContext: this
    };
  },
  inject: {
    configProvider: { "default": function _default47() {
      return ConfigConsumerProps;
    } }
  },
  data: function data34() {
    return {
      screens: {}
    };
  },
  mounted: function mounted27() {
    var _this = this;
    this.$nextTick(function() {
      _this.token = ResponsiveObserve.subscribe(function(screens2) {
        var gutter = _this.gutter;
        if ((typeof gutter === "undefined" ? "undefined" : _default$7(gutter)) === "object" || Array.isArray(gutter) && (_default$7(gutter[0]) === "object" || _default$7(gutter[1]) === "object")) {
          _this.screens = screens2;
        }
      });
    });
  },
  beforeDestroy: function beforeDestroy23() {
    ResponsiveObserve.unsubscribe(this.token);
  },
  methods: {
    getGutter: function getGutter() {
      var results = [0, 0];
      var gutter = this.gutter, screens2 = this.screens;
      var normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, 0];
      normalizedGutter.forEach(function(g, index2) {
        if ((typeof g === "undefined" ? "undefined" : _default$7(g)) === "object") {
          for (var i = 0; i < responsiveArray.length; i++) {
            var breakpoint = responsiveArray[i];
            if (screens2[breakpoint] && g[breakpoint] !== void 0) {
              results[index2] = g[breakpoint];
              break;
            }
          }
        } else {
          results[index2] = g || 0;
        }
      });
      return results;
    }
  },
  render: function render83() {
    var _classes;
    var h = arguments[0];
    var type3 = this.type, justify = this.justify, align = this.align, customizePrefixCls = this.prefixCls, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("row", customizePrefixCls);
    var gutter = this.getGutter();
    var classes6 = (_classes = {}, _default$8(_classes, prefixCls2, !type3), _default$8(_classes, prefixCls2 + "-" + type3, type3), _default$8(_classes, prefixCls2 + "-" + type3 + "-" + justify, type3 && justify), _default$8(_classes, prefixCls2 + "-" + type3 + "-" + align, type3 && align), _classes);
    var rowStyle = _default$6({}, gutter[0] > 0 ? {
      marginLeft: gutter[0] / -2 + "px",
      marginRight: gutter[0] / -2 + "px"
    } : {}, gutter[1] > 0 ? {
      marginTop: gutter[1] / -2 + "px",
      marginBottom: gutter[1] / -2 + "px"
    } : {});
    return h(
      "div",
      { "class": classes6, style: rowStyle },
      [$slots["default"]]
    );
  }
};
var stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);
var ColSize = PropTypes.shape({
  span: stringOrNumber,
  order: stringOrNumber,
  offset: stringOrNumber,
  push: stringOrNumber,
  pull: stringOrNumber
}).loose;
var objectOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number, ColSize]);
var ColProps$1 = {
  span: stringOrNumber,
  order: stringOrNumber,
  offset: stringOrNumber,
  push: stringOrNumber,
  pull: stringOrNumber,
  xs: objectOrNumber,
  sm: objectOrNumber,
  md: objectOrNumber,
  lg: objectOrNumber,
  xl: objectOrNumber,
  xxl: objectOrNumber,
  prefixCls: PropTypes.string,
  flex: stringOrNumber
};
var Col$2 = {
  name: "ACol",
  props: ColProps$1,
  inject: {
    configProvider: { "default": function _default48() {
      return ConfigConsumerProps;
    } },
    rowContext: {
      "default": function _default49() {
        return null;
      }
    }
  },
  methods: {
    parseFlex: function parseFlex(flex) {
      if (typeof flex === "number") {
        return flex + " " + flex + " auto";
      }
      if (/^\d+(\.\d+)?(px|em|rem|%)$/.test(flex)) {
        return "0 0 " + flex;
      }
      return flex;
    }
  },
  render: function render84() {
    var _this = this, _extends3;
    var h = arguments[0];
    var span = this.span, order = this.order, offset4 = this.offset, push2 = this.push, pull2 = this.pull, flex = this.flex, customizePrefixCls = this.prefixCls, $slots = this.$slots, rowContext = this.rowContext;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("col", customizePrefixCls);
    var sizeClassObj = {};
    ["xs", "sm", "md", "lg", "xl", "xxl"].forEach(function(size) {
      var _extends2;
      var sizeProps = {};
      var propSize = _this[size];
      if (typeof propSize === "number") {
        sizeProps.span = propSize;
      } else if ((typeof propSize === "undefined" ? "undefined" : _default$7(propSize)) === "object") {
        sizeProps = propSize || {};
      }
      sizeClassObj = _default$6({}, sizeClassObj, (_extends2 = {}, _default$8(_extends2, prefixCls2 + "-" + size + "-" + sizeProps.span, sizeProps.span !== void 0), _default$8(_extends2, prefixCls2 + "-" + size + "-order-" + sizeProps.order, sizeProps.order || sizeProps.order === 0), _default$8(_extends2, prefixCls2 + "-" + size + "-offset-" + sizeProps.offset, sizeProps.offset || sizeProps.offset === 0), _default$8(_extends2, prefixCls2 + "-" + size + "-push-" + sizeProps.push, sizeProps.push || sizeProps.push === 0), _default$8(_extends2, prefixCls2 + "-" + size + "-pull-" + sizeProps.pull, sizeProps.pull || sizeProps.pull === 0), _extends2));
    });
    var classes6 = _default$6((_extends3 = {}, _default$8(_extends3, "" + prefixCls2, true), _default$8(_extends3, prefixCls2 + "-" + span, span !== void 0), _default$8(_extends3, prefixCls2 + "-order-" + order, order), _default$8(_extends3, prefixCls2 + "-offset-" + offset4, offset4), _default$8(_extends3, prefixCls2 + "-push-" + push2, push2), _default$8(_extends3, prefixCls2 + "-pull-" + pull2, pull2), _extends3), sizeClassObj);
    var divProps = {
      on: getListeners(this),
      "class": classes6,
      style: {}
    };
    if (rowContext) {
      var gutter = rowContext.getGutter();
      if (gutter) {
        divProps.style = _default$6({}, gutter[0] > 0 ? {
          paddingLeft: gutter[0] / 2 + "px",
          paddingRight: gutter[0] / 2 + "px"
        } : {}, gutter[1] > 0 ? {
          paddingTop: gutter[1] / 2 + "px",
          paddingBottom: gutter[1] / 2 + "px"
        } : {});
      }
    }
    if (flex) {
      divProps.style.flex = this.parseFlex(flex);
    }
    return h(
      "div",
      divProps,
      [$slots["default"]]
    );
  }
};
Row.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Row.name, Row);
};
Col$2.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Col$2.name, Col$2);
};
var TabPane = Tabs.TabPane;
var Card = {
  name: "ACard",
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    title: PropTypes.any,
    extra: PropTypes.any,
    bordered: PropTypes.bool.def(true),
    bodyStyle: PropTypes.object,
    headStyle: PropTypes.object,
    loading: PropTypes.bool.def(false),
    hoverable: PropTypes.bool.def(false),
    type: PropTypes.string,
    size: PropTypes.oneOf(["default", "small"]),
    actions: PropTypes.any,
    tabList: PropTypes.array,
    tabProps: PropTypes.object,
    tabBarExtraContent: PropTypes.any,
    activeTabKey: PropTypes.string,
    defaultActiveTabKey: PropTypes.string
  },
  inject: {
    configProvider: { "default": function _default50() {
      return ConfigConsumerProps;
    } }
  },
  data: function data35() {
    return {
      widerPadding: false
    };
  },
  methods: {
    getAction: function getAction(actions) {
      var h = this.$createElement;
      var actionList = actions.map(function(action, index2) {
        return h(
          "li",
          { style: { width: 100 / actions.length + "%" }, key: "action-" + index2 },
          [h("span", [action])]
        );
      });
      return actionList;
    },
    onTabChange: function onTabChange(key2) {
      this.$emit("tabChange", key2);
    },
    isContainGrid: function isContainGrid() {
      var obj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var containGrid = void 0;
      obj.forEach(function(element) {
        if (element && getSlotOptions(element).__ANT_CARD_GRID) {
          containGrid = true;
        }
      });
      return containGrid;
    }
  },
  render: function render85() {
    var _classString, _extends2;
    var h = arguments[0];
    var _$props = this.$props, customizePrefixCls = _$props.prefixCls, _$props$headStyle = _$props.headStyle, headStyle = _$props$headStyle === void 0 ? {} : _$props$headStyle, _$props$bodyStyle = _$props.bodyStyle, bodyStyle = _$props$bodyStyle === void 0 ? {} : _$props$bodyStyle, loading2 = _$props.loading, _$props$bordered = _$props.bordered, bordered = _$props$bordered === void 0 ? true : _$props$bordered, _$props$size = _$props.size, size = _$props$size === void 0 ? "default" : _$props$size, type3 = _$props.type, tabList = _$props.tabList, _$props$tabProps = _$props.tabProps, tabProps = _$props$tabProps === void 0 ? {} : _$props$tabProps, hoverable = _$props.hoverable, activeTabKey = _$props.activeTabKey, defaultActiveTabKey = _$props.defaultActiveTabKey;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("card", customizePrefixCls);
    var $slots = this.$slots, $scopedSlots = this.$scopedSlots;
    var tabBarExtraContent = getComponentFromProp(this, "tabBarExtraContent");
    var classString = (_classString = {}, _default$8(_classString, "" + prefixCls2, true), _default$8(_classString, prefixCls2 + "-loading", loading2), _default$8(_classString, prefixCls2 + "-bordered", bordered), _default$8(_classString, prefixCls2 + "-hoverable", !!hoverable), _default$8(_classString, prefixCls2 + "-contain-grid", this.isContainGrid($slots["default"])), _default$8(_classString, prefixCls2 + "-contain-tabs", tabList && tabList.length), _default$8(_classString, prefixCls2 + "-" + size, size !== "default"), _default$8(_classString, prefixCls2 + "-type-" + type3, !!type3), _classString);
    var loadingBlockStyle = bodyStyle.padding === 0 || bodyStyle.padding === "0px" ? { padding: 24 } : void 0;
    var loadingBlock = h(
      "div",
      { "class": prefixCls2 + "-loading-content", style: loadingBlockStyle },
      [h(
        Row,
        {
          attrs: { gutter: 8 }
        },
        [h(
          Col$2,
          {
            attrs: { span: 22 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        )]
      ), h(
        Row,
        {
          attrs: { gutter: 8 }
        },
        [h(
          Col$2,
          {
            attrs: { span: 8 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        ), h(
          Col$2,
          {
            attrs: { span: 15 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        )]
      ), h(
        Row,
        {
          attrs: { gutter: 8 }
        },
        [h(
          Col$2,
          {
            attrs: { span: 6 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        ), h(
          Col$2,
          {
            attrs: { span: 18 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        )]
      ), h(
        Row,
        {
          attrs: { gutter: 8 }
        },
        [h(
          Col$2,
          {
            attrs: { span: 13 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        ), h(
          Col$2,
          {
            attrs: { span: 9 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        )]
      ), h(
        Row,
        {
          attrs: { gutter: 8 }
        },
        [h(
          Col$2,
          {
            attrs: { span: 4 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        ), h(
          Col$2,
          {
            attrs: { span: 3 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        ), h(
          Col$2,
          {
            attrs: { span: 16 }
          },
          [h("div", { "class": prefixCls2 + "-loading-block" })]
        )]
      )]
    );
    var hasActiveTabKey = activeTabKey !== void 0;
    var tabsProps = {
      props: _default$6({
        size: "large"
      }, tabProps, (_extends2 = {}, _default$8(_extends2, hasActiveTabKey ? "activeKey" : "defaultActiveKey", hasActiveTabKey ? activeTabKey : defaultActiveTabKey), _default$8(_extends2, "tabBarExtraContent", tabBarExtraContent), _extends2)),
      on: {
        change: this.onTabChange
      },
      "class": prefixCls2 + "-head-tabs"
    };
    var head = void 0;
    var tabs = tabList && tabList.length ? h(
      Tabs,
      tabsProps,
      [tabList.map(function(item) {
        var temp = item.tab, _item$scopedSlots = item.scopedSlots, scopedSlots = _item$scopedSlots === void 0 ? {} : _item$scopedSlots;
        var name = scopedSlots.tab;
        var tab = temp !== void 0 ? temp : $scopedSlots[name] ? $scopedSlots[name](item) : null;
        return h(TabPane, {
          attrs: { tab, disabled: item.disabled },
          key: item.key
        });
      })]
    ) : null;
    var titleDom = getComponentFromProp(this, "title");
    var extraDom = getComponentFromProp(this, "extra");
    if (titleDom || extraDom || tabs) {
      head = h(
        "div",
        { "class": prefixCls2 + "-head", style: headStyle },
        [h(
          "div",
          { "class": prefixCls2 + "-head-wrapper" },
          [titleDom && h(
            "div",
            { "class": prefixCls2 + "-head-title" },
            [titleDom]
          ), extraDom && h(
            "div",
            { "class": prefixCls2 + "-extra" },
            [extraDom]
          )]
        ), tabs]
      );
    }
    var children = $slots["default"];
    var cover = getComponentFromProp(this, "cover");
    var coverDom = cover ? h(
      "div",
      { "class": prefixCls2 + "-cover" },
      [cover]
    ) : null;
    var body = h(
      "div",
      { "class": prefixCls2 + "-body", style: bodyStyle },
      [loading2 ? loadingBlock : children]
    );
    var actions = filterEmpty(this.$slots.actions);
    var actionDom = actions && actions.length ? h(
      "ul",
      { "class": prefixCls2 + "-actions" },
      [this.getAction(actions)]
    ) : null;
    return h(
      "div",
      _mergeJSXProps([{
        "class": classString,
        ref: "cardContainerRef"
      }, { on: omit$2(getListeners(this), ["tabChange", "tab-change"]) }]),
      [head, coverDom, children ? body : null, actionDom]
    );
  }
};
var Meta$1 = {
  name: "ACardMeta",
  props: {
    prefixCls: PropTypes.string,
    title: PropTypes.any,
    description: PropTypes.any
  },
  inject: {
    configProvider: { "default": function _default51() {
      return ConfigConsumerProps;
    } }
  },
  render: function render86() {
    var h = arguments[0];
    var customizePrefixCls = this.$props.prefixCls;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("card", customizePrefixCls);
    var classString = _default$8({}, prefixCls2 + "-meta", true);
    var avatar = getComponentFromProp(this, "avatar");
    var title = getComponentFromProp(this, "title");
    var description = getComponentFromProp(this, "description");
    var avatarDom = avatar ? h(
      "div",
      { "class": prefixCls2 + "-meta-avatar" },
      [avatar]
    ) : null;
    var titleDom = title ? h(
      "div",
      { "class": prefixCls2 + "-meta-title" },
      [title]
    ) : null;
    var descriptionDom = description ? h(
      "div",
      { "class": prefixCls2 + "-meta-description" },
      [description]
    ) : null;
    var MetaDetail = titleDom || descriptionDom ? h(
      "div",
      { "class": prefixCls2 + "-meta-detail" },
      [titleDom, descriptionDom]
    ) : null;
    return h(
      "div",
      _mergeJSXProps([{ on: getListeners(this) }, { "class": classString }]),
      [avatarDom, MetaDetail]
    );
  }
};
var Grid = {
  name: "ACardGrid",
  __ANT_CARD_GRID: true,
  props: {
    prefixCls: PropTypes.string,
    hoverable: PropTypes.bool
  },
  inject: {
    configProvider: { "default": function _default52() {
      return ConfigConsumerProps;
    } }
  },
  render: function render87() {
    var _classString;
    var h = arguments[0];
    var _$props = this.$props, customizePrefixCls = _$props.prefixCls, _$props$hoverable = _$props.hoverable, hoverable = _$props$hoverable === void 0 ? true : _$props$hoverable;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("card", customizePrefixCls);
    var classString = (_classString = {}, _default$8(_classString, prefixCls2 + "-grid", true), _default$8(_classString, prefixCls2 + "-grid-hoverable", hoverable), _classString);
    return h(
      "div",
      _mergeJSXProps([{ on: getListeners(this) }, { "class": classString }]),
      [this.$slots["default"]]
    );
  }
};
Card.Meta = Meta$1;
Card.Grid = Grid;
Card.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Card.name, Card);
  Vue2.component(Meta$1.name, Meta$1);
  Vue2.component(Grid.name, Grid);
};
var PanelContent = {
  name: "PanelContent",
  props: {
    prefixCls: PropTypes.string,
    isActive: PropTypes.bool,
    destroyInactivePanel: PropTypes.bool,
    forceRender: PropTypes.bool,
    role: PropTypes.any
  },
  data: function data36() {
    return {
      _isActive: void 0
    };
  },
  render: function render88() {
    var _contentCls;
    var h = arguments[0];
    this._isActive = this.forceRender || this._isActive || this.isActive;
    if (!this._isActive) {
      return null;
    }
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, isActive = _$props.isActive, destroyInactivePanel = _$props.destroyInactivePanel, forceRender = _$props.forceRender, role = _$props.role;
    var $slots = this.$slots;
    var contentCls = (_contentCls = {}, _default$8(_contentCls, prefixCls2 + "-content", true), _default$8(_contentCls, prefixCls2 + "-content-active", isActive), _contentCls);
    var child = !forceRender && !isActive && destroyInactivePanel ? null : h(
      "div",
      { "class": prefixCls2 + "-content-box" },
      [$slots["default"]]
    );
    return h(
      "div",
      {
        "class": contentCls,
        attrs: { role }
      },
      [child]
    );
  }
};
var collapseProps = function collapseProps2() {
  return {
    prefixCls: PropTypes.string,
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),
    defaultActiveKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),
    accordion: PropTypes.bool,
    destroyInactivePanel: PropTypes.bool,
    bordered: PropTypes.bool,
    expandIcon: PropTypes.func,
    openAnimation: PropTypes.object,
    expandIconPosition: PropTypes.oneOf(["left", "right"])
  };
};
var panelProps = function panelProps2() {
  return {
    openAnimation: PropTypes.object,
    prefixCls: PropTypes.string,
    header: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.node]),
    headerClass: PropTypes.string,
    showArrow: PropTypes.bool,
    isActive: PropTypes.bool,
    destroyInactivePanel: PropTypes.bool,
    disabled: PropTypes.bool,
    accordion: PropTypes.bool,
    forceRender: PropTypes.bool,
    expandIcon: PropTypes.func,
    extra: PropTypes.any,
    panelKey: PropTypes.any
  };
};
var CollapsePanel$1 = {
  name: "Panel",
  props: initDefaultProps(panelProps(), {
    showArrow: true,
    isActive: false,
    destroyInactivePanel: false,
    headerClass: "",
    forceRender: false
  }),
  methods: {
    handleItemClick: function handleItemClick() {
      this.$emit("itemClick", this.panelKey);
    },
    handleKeyPress: function handleKeyPress(e) {
      if (e.key === "Enter" || e.keyCode === 13 || e.which === 13) {
        this.handleItemClick();
      }
    }
  },
  render: function render89() {
    var _headerCls, _itemCls;
    var h = arguments[0];
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, headerClass = _$props.headerClass, isActive = _$props.isActive, showArrow = _$props.showArrow, destroyInactivePanel = _$props.destroyInactivePanel, disabled = _$props.disabled, openAnimation2 = _$props.openAnimation, accordion = _$props.accordion, forceRender = _$props.forceRender, expandIcon = _$props.expandIcon, extra = _$props.extra;
    var $slots = this.$slots;
    var transitionProps = {
      props: _default$6({
        appear: true,
        css: false
      }),
      on: _default$6({}, openAnimation2)
    };
    var headerCls = (_headerCls = {}, _default$8(_headerCls, prefixCls2 + "-header", true), _default$8(_headerCls, headerClass, headerClass), _headerCls);
    var header = getComponentFromProp(this, "header");
    var itemCls = (_itemCls = {}, _default$8(_itemCls, prefixCls2 + "-item", true), _default$8(_itemCls, prefixCls2 + "-item-active", isActive), _default$8(_itemCls, prefixCls2 + "-item-disabled", disabled), _itemCls);
    var icon = h("i", { "class": "arrow" });
    if (showArrow && typeof expandIcon === "function") {
      icon = expandIcon(this.$props);
    }
    return h(
      "div",
      {
        "class": itemCls,
        attrs: { role: "tablist" }
      },
      [h(
        "div",
        {
          "class": headerCls,
          on: {
            "click": this.handleItemClick.bind(this),
            "keypress": this.handleKeyPress
          },
          attrs: {
            role: accordion ? "tab" : "button",
            tabIndex: disabled ? -1 : 0,
            "aria-expanded": isActive
          }
        },
        [showArrow && icon, header, extra && h(
          "div",
          { "class": prefixCls2 + "-extra" },
          [extra]
        )]
      ), h(
        "transition",
        transitionProps,
        [h(
          PanelContent,
          {
            directives: [{
              name: "show",
              value: isActive
            }],
            attrs: {
              prefixCls: prefixCls2,
              isActive,
              destroyInactivePanel,
              forceRender,
              role: accordion ? "tabpanel" : null
            }
          },
          [$slots["default"]]
        )]
      )]
    );
  }
};
function animate(node, show, transitionName2, done) {
  var height3 = void 0;
  return cssAnimation$1(node, transitionName2, {
    start: function start() {
      if (!show) {
        node.style.height = node.offsetHeight + "px";
      } else {
        height3 = node.offsetHeight;
        node.style.height = 0;
      }
    },
    active: function active() {
      node.style.height = (show ? height3 : 0) + "px";
    },
    end: function end() {
      node.style.height = "";
      done();
    }
  });
}
function animation(prefixCls2) {
  return {
    enter: function enter2(node, done) {
      return animate(node, true, prefixCls2 + "-anim", done);
    },
    leave: function leave2(node, done) {
      return animate(node, false, prefixCls2 + "-anim", done);
    }
  };
}
function _toArray(activeKey2) {
  var currentActiveKey = activeKey2;
  if (!Array.isArray(currentActiveKey)) {
    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];
  }
  return currentActiveKey.map(function(key2) {
    return String(key2);
  });
}
var Collapse$1 = {
  name: "Collapse",
  mixins: [BaseMixin],
  model: {
    prop: "activeKey",
    event: "change"
  },
  props: initDefaultProps(collapseProps(), {
    prefixCls: "rc-collapse",
    accordion: false,
    destroyInactivePanel: false
  }),
  data: function data37() {
    var _$props = this.$props, activeKey2 = _$props.activeKey, defaultActiveKey = _$props.defaultActiveKey, openAnimation2 = _$props.openAnimation, prefixCls2 = _$props.prefixCls;
    var currentActiveKey = defaultActiveKey;
    if (hasProp(this, "activeKey")) {
      currentActiveKey = activeKey2;
    }
    var currentOpenAnimations = openAnimation2 || animation(prefixCls2);
    return {
      currentOpenAnimations,
      stateActiveKey: _toArray(currentActiveKey)
    };
  },
  watch: {
    activeKey: function activeKey(val) {
      this.setState({
        stateActiveKey: _toArray(val)
      });
    },
    openAnimation: function openAnimation(val) {
      this.setState({
        currentOpenAnimations: val
      });
    }
  },
  methods: {
    onClickItem: function onClickItem(key2) {
      var activeKey2 = this.stateActiveKey;
      if (this.accordion) {
        activeKey2 = activeKey2[0] === key2 ? [] : [key2];
      } else {
        activeKey2 = [].concat(_default$5(activeKey2));
        var index2 = activeKey2.indexOf(key2);
        var isActive = index2 > -1;
        if (isActive) {
          activeKey2.splice(index2, 1);
        } else {
          activeKey2.push(key2);
        }
      }
      this.setActiveKey(activeKey2);
    },
    getNewChild: function getNewChild(child, index2) {
      if (isEmptyElement(child))
        return;
      var activeKey2 = this.stateActiveKey;
      var _$props2 = this.$props, prefixCls2 = _$props2.prefixCls, accordion = _$props2.accordion, destroyInactivePanel = _$props2.destroyInactivePanel, expandIcon = _$props2.expandIcon;
      var key2 = child.key || String(index2);
      var _getPropsData = getPropsData(child), header = _getPropsData.header, headerClass = _getPropsData.headerClass, disabled = _getPropsData.disabled;
      var isActive = false;
      if (accordion) {
        isActive = activeKey2[0] === key2;
      } else {
        isActive = activeKey2.indexOf(key2) > -1;
      }
      var panelEvents = {};
      if (!disabled && disabled !== "") {
        panelEvents = {
          itemClick: this.onClickItem
        };
      }
      var props2 = {
        key: key2,
        props: {
          panelKey: key2,
          header,
          headerClass,
          isActive,
          prefixCls: prefixCls2,
          destroyInactivePanel,
          openAnimation: this.currentOpenAnimations,
          accordion,
          expandIcon
        },
        on: panelEvents
      };
      return cloneElement(child, props2);
    },
    getItems: function getItems() {
      var _this = this;
      var newChildren = [];
      this.$slots["default"] && this.$slots["default"].forEach(function(child, index2) {
        newChildren.push(_this.getNewChild(child, index2));
      });
      return newChildren;
    },
    setActiveKey: function setActiveKey2(activeKey2) {
      this.setState({ stateActiveKey: activeKey2 });
      this.$emit("change", this.accordion ? activeKey2[0] : activeKey2);
    }
  },
  render: function render90() {
    var h = arguments[0];
    var _$props3 = this.$props, prefixCls2 = _$props3.prefixCls, accordion = _$props3.accordion;
    var collapseClassName = _default$8({}, prefixCls2, true);
    return h(
      "div",
      {
        "class": collapseClassName,
        attrs: { role: accordion ? "tablist" : null }
      },
      [this.getItems()]
    );
  }
};
Collapse$1.Panel = CollapsePanel$1;
var Collapse = {
  name: "ACollapse",
  model: {
    prop: "activeKey",
    event: "change"
  },
  props: initDefaultProps(collapseProps(), {
    bordered: true,
    openAnimation: animation$2,
    expandIconPosition: "left"
  }),
  inject: {
    configProvider: { "default": function _default53() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    renderExpandIcon: function renderExpandIcon(panelProps3, prefixCls2) {
      var h = this.$createElement;
      var expandIcon = getComponentFromProp(this, "expandIcon", panelProps3);
      var icon = expandIcon || h(Icon$1, {
        attrs: { type: "right", rotate: panelProps3.isActive ? 90 : void 0 }
      });
      return isValidElement(Array.isArray(expandIcon) ? icon[0] : icon) ? cloneElement(icon, {
        "class": prefixCls2 + "-arrow"
      }) : icon;
    }
  },
  render: function render91() {
    var _collapseClassName, _this = this;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, bordered = this.bordered, expandIconPosition = this.expandIconPosition;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("collapse", customizePrefixCls);
    var collapseClassName = (_collapseClassName = {}, _default$8(_collapseClassName, prefixCls2 + "-borderless", !bordered), _default$8(_collapseClassName, prefixCls2 + "-icon-position-" + expandIconPosition, true), _collapseClassName);
    var rcCollapeProps = {
      props: _default$6({}, getOptionProps(this), {
        prefixCls: prefixCls2,
        expandIcon: function expandIcon(panelProps3) {
          return _this.renderExpandIcon(panelProps3, prefixCls2);
        }
      }),
      "class": collapseClassName,
      on: getListeners(this)
    };
    return h(
      Collapse$1,
      rcCollapeProps,
      [this.$slots["default"]]
    );
  }
};
var CollapsePanel = {
  name: "ACollapsePanel",
  props: _default$6({}, panelProps()),
  inject: {
    configProvider: { "default": function _default54() {
      return ConfigConsumerProps;
    } }
  },
  render: function render92() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, _showArrow = this.showArrow, showArrow = _showArrow === void 0 ? true : _showArrow;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("collapse", customizePrefixCls);
    var collapsePanelClassName = _default$8({}, prefixCls2 + "-no-arrow", !showArrow);
    var rcCollapePanelProps = {
      props: _default$6({}, getOptionProps(this), {
        prefixCls: prefixCls2,
        extra: getComponentFromProp(this, "extra")
      }),
      "class": collapsePanelClassName,
      on: getListeners(this)
    };
    var header = getComponentFromProp(this, "header");
    return h(
      Collapse$1.Panel,
      rcCollapePanelProps,
      [this.$slots["default"], header ? h(
        "template",
        { slot: "header" },
        [header]
      ) : null]
    );
  }
};
Collapse.Panel = CollapsePanel;
Collapse.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Collapse.name, Collapse);
  Vue2.component(CollapsePanel.name, CollapsePanel);
};
if (typeof window !== "undefined") {
  var matchMediaPolyfill$1 = function matchMediaPolyfill(mediaQuery) {
    return {
      media: mediaQuery,
      matches: false,
      addListener: function addListener() {
      },
      removeListener: function removeListener() {
      }
    };
  };
  if (!window.matchMedia)
    window.matchMedia = matchMediaPolyfill$1;
}
var SlickCarousel = require("../vc-slick/src")["default"];
var CarouselEffect = PropTypes.oneOf(["scrollx", "fade"]);
var CarouselProps = {
  effect: CarouselEffect,
  dots: PropTypes.bool,
  vertical: PropTypes.bool,
  autoplay: PropTypes.bool,
  easing: PropTypes.string,
  beforeChange: PropTypes.func,
  afterChange: PropTypes.func,
  prefixCls: PropTypes.string,
  accessibility: PropTypes.bool,
  nextArrow: PropTypes.any,
  prevArrow: PropTypes.any,
  pauseOnHover: PropTypes.bool,
  adaptiveHeight: PropTypes.bool,
  arrows: PropTypes.bool,
  autoplaySpeed: PropTypes.number,
  centerMode: PropTypes.bool,
  centerPadding: PropTypes.string,
  cssEase: PropTypes.string,
  dotsClass: PropTypes.string,
  draggable: PropTypes.bool,
  fade: PropTypes.bool,
  focusOnSelect: PropTypes.bool,
  infinite: PropTypes.bool,
  initialSlide: PropTypes.number,
  lazyLoad: PropTypes.bool,
  rtl: PropTypes.bool,
  slide: PropTypes.string,
  slidesToShow: PropTypes.number,
  slidesToScroll: PropTypes.number,
  speed: PropTypes.number,
  swipe: PropTypes.bool,
  swipeToSlide: PropTypes.bool,
  touchMove: PropTypes.bool,
  touchThreshold: PropTypes.number,
  variableWidth: PropTypes.bool,
  useCSS: PropTypes.bool,
  slickGoTo: PropTypes.number,
  responsive: PropTypes.array,
  dotPosition: PropTypes.oneOf(["top", "bottom", "left", "right"])
};
var Carousel = {
  name: "ACarousel",
  props: initDefaultProps(CarouselProps, {
    dots: true,
    arrows: false,
    draggable: false
  }),
  inject: {
    configProvider: { "default": function _default55() {
      return ConfigConsumerProps;
    } }
  },
  beforeMount: function beforeMount2() {
    this.onWindowResized = debounce$3(this.onWindowResized, 500, {
      leading: false
    });
  },
  mounted: function mounted28() {
    if (hasProp(this, "vertical")) {
      warning$4(!this.vertical, "Carousel", "`vertical` is deprecated, please use `dotPosition` instead.");
    }
    var autoplay = this.autoplay;
    if (autoplay) {
      window.addEventListener("resize", this.onWindowResized);
    }
    this.innerSlider = this.$refs.slick && this.$refs.slick.innerSlider;
  },
  beforeDestroy: function beforeDestroy24() {
    var autoplay = this.autoplay;
    if (autoplay) {
      window.removeEventListener("resize", this.onWindowResized);
      this.onWindowResized.cancel();
    }
  },
  methods: {
    getDotPosition: function getDotPosition() {
      if (this.dotPosition) {
        return this.dotPosition;
      }
      if (hasProp(this, "vertical")) {
        return this.vertical ? "right" : "bottom";
      }
      return "bottom";
    },
    onWindowResized: function onWindowResized() {
      var autoplay = this.autoplay;
      if (autoplay && this.$refs.slick && this.$refs.slick.innerSlider && this.$refs.slick.innerSlider.autoPlay) {
        this.$refs.slick.innerSlider.autoPlay();
      }
    },
    next: function next() {
      this.$refs.slick.slickNext();
    },
    prev: function prev() {
      this.$refs.slick.slickPrev();
    },
    goTo: function goTo(slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      this.$refs.slick.slickGoTo(slide, dontAnimate);
    }
  },
  render: function render93() {
    var h = arguments[0];
    var props2 = _default$6({}, this.$props);
    var $slots = this.$slots;
    if (props2.effect === "fade") {
      props2.fade = true;
    }
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var className = getPrefixCls5("carousel", props2.prefixCls);
    var dotsClass = "slick-dots";
    var dotPosition = this.getDotPosition();
    props2.vertical = dotPosition === "left" || dotPosition === "right";
    props2.dotsClass = classNames("" + dotsClass, dotsClass + "-" + (dotPosition || "bottom"), _default$8({}, "" + props2.dotsClass, !!props2.dotsClass));
    if (props2.vertical) {
      className = className + " " + className + "-vertical";
    }
    var SlickCarouselProps = {
      props: _default$6({}, props2, {
        nextArrow: getComponentFromProp(this, "nextArrow"),
        prevArrow: getComponentFromProp(this, "prevArrow")
      }),
      on: getListeners(this),
      scopedSlots: this.$scopedSlots
    };
    var children = filterEmpty($slots["default"]);
    return h(
      "div",
      { "class": className },
      [h(
        SlickCarousel,
        _mergeJSXProps([{ ref: "slick" }, SlickCarouselProps]),
        [children]
      )]
    );
  }
};
Carousel.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Carousel.name, Carousel);
};
var Carousel$1 = Carousel;
var lib = { exports: {} };
(function(module2, exports) {
  (function(global2, factory) {
    module2.exports = factory();
  })(commonjsGlobal, function() {
    function arrayTreeFilter2(data109, filterFn, options2) {
      options2 = options2 || {};
      options2.childrenKeyName = options2.childrenKeyName || "children";
      var children = data109 || [];
      var result = [];
      var level2 = 0;
      do {
        var foundItem = children.filter(function(item) {
          return filterFn(item, level2);
        })[0];
        if (!foundItem) {
          break;
        }
        result.push(foundItem);
        children = foundItem[options2.childrenKeyName] || [];
        level2 += 1;
      } while (children.length > 0);
      return result;
    }
    return arrayTreeFilter2;
  });
})(lib);
var arrayTreeFilter = lib.exports;
var Menus = {
  name: "CascaderMenus",
  mixins: [BaseMixin],
  props: {
    value: PropTypes.array.def([]),
    activeValue: PropTypes.array.def([]),
    options: PropTypes.array,
    prefixCls: PropTypes.string.def("rc-cascader-menus"),
    expandTrigger: PropTypes.string.def("click"),
    visible: PropTypes.bool.def(false),
    dropdownMenuColumnStyle: PropTypes.object,
    defaultFieldNames: PropTypes.object,
    fieldNames: PropTypes.object,
    expandIcon: PropTypes.any,
    loadingIcon: PropTypes.any
  },
  data: function data38() {
    this.menuItems = {};
    return {};
  },
  watch: {
    visible: function visible4(val) {
      var _this = this;
      if (val) {
        this.$nextTick(function() {
          _this.scrollActiveItemToView();
        });
      }
    }
  },
  mounted: function mounted29() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.scrollActiveItemToView();
    });
  },
  methods: {
    getFieldName: function getFieldName(name) {
      var _$props = this.$props, fieldNames = _$props.fieldNames, defaultFieldNames = _$props.defaultFieldNames;
      return fieldNames[name] || defaultFieldNames[name];
    },
    getOption: function getOption(option, menuIndex) {
      var _this3 = this;
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, expandTrigger = this.expandTrigger;
      var loadingIcon = getComponentFromProp(this, "loadingIcon");
      var expandIcon = getComponentFromProp(this, "expandIcon");
      var onSelect11 = function onSelect12(e) {
        _this3.__emit("select", option, menuIndex, e);
      };
      var onItemDoubleClick = function onItemDoubleClick2(e) {
        _this3.__emit("itemDoubleClick", option, menuIndex, e);
      };
      var key2 = option[this.getFieldName("value")];
      var expandProps = {
        attrs: {
          role: "menuitem"
        },
        on: {
          click: onSelect11,
          dblclick: onItemDoubleClick,
          mousedown: function mousedown(e) {
            return e.preventDefault();
          }
        },
        key: Array.isArray(key2) ? key2.join("__ant__") : key2
      };
      var menuItemCls = prefixCls2 + "-menu-item";
      var expandIconNode = null;
      var hasChildren = option[this.getFieldName("children")] && option[this.getFieldName("children")].length > 0;
      if (hasChildren || option.isLeaf === false) {
        menuItemCls += " " + prefixCls2 + "-menu-item-expand";
        if (!option.loading) {
          expandIconNode = h(
            "span",
            { "class": prefixCls2 + "-menu-item-expand-icon" },
            [expandIcon]
          );
        }
      }
      if (expandTrigger === "hover" && (hasChildren || option.isLeaf === false)) {
        expandProps.on = {
          mouseenter: this.delayOnSelect.bind(this, onSelect11),
          mouseleave: this.delayOnSelect.bind(this),
          click: onSelect11
        };
      }
      if (this.isActiveOption(option, menuIndex)) {
        menuItemCls += " " + prefixCls2 + "-menu-item-active";
        expandProps.ref = this.getMenuItemRef(menuIndex);
      }
      if (option.disabled) {
        menuItemCls += " " + prefixCls2 + "-menu-item-disabled";
      }
      var loadingIconNode = null;
      if (option.loading) {
        menuItemCls += " " + prefixCls2 + "-menu-item-loading";
        loadingIconNode = loadingIcon || null;
      }
      var title = "";
      if (option.title) {
        title = option.title;
      } else if (typeof option[this.getFieldName("label")] === "string") {
        title = option[this.getFieldName("label")];
      }
      expandProps.attrs.title = title;
      expandProps["class"] = menuItemCls;
      return h(
        "li",
        expandProps,
        [option[this.getFieldName("label")], expandIconNode, loadingIconNode]
      );
    },
    getActiveOptions: function getActiveOptions(values) {
      var _this4 = this;
      var activeValue = values || this.activeValue;
      var options2 = this.options;
      return arrayTreeFilter(options2, function(o, level2) {
        return o[_this4.getFieldName("value")] === activeValue[level2];
      }, { childrenKeyName: this.getFieldName("children") });
    },
    getShowOptions: function getShowOptions() {
      var _this5 = this;
      var options2 = this.options;
      var result = this.getActiveOptions().map(function(activeOption) {
        return activeOption[_this5.getFieldName("children")];
      }).filter(function(activeOption) {
        return !!activeOption;
      });
      result.unshift(options2);
      return result;
    },
    delayOnSelect: function delayOnSelect(onSelect11) {
      var _this6 = this;
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      if (this.delayTimer) {
        clearTimeout(this.delayTimer);
        this.delayTimer = null;
      }
      if (typeof onSelect11 === "function") {
        this.delayTimer = setTimeout(function() {
          onSelect11(args);
          _this6.delayTimer = null;
        }, 150);
      }
    },
    scrollActiveItemToView: function scrollActiveItemToView2() {
      var optionsLength = this.getShowOptions().length;
      for (var i = 0; i < optionsLength; i++) {
        var itemComponent = this.$refs["menuItems_" + i];
        if (itemComponent) {
          var target2 = itemComponent;
          target2.parentNode.scrollTop = target2.offsetTop;
        }
      }
    },
    isActiveOption: function isActiveOption(option, menuIndex) {
      var _activeValue = this.activeValue, activeValue = _activeValue === void 0 ? [] : _activeValue;
      return activeValue[menuIndex] === option[this.getFieldName("value")];
    },
    getMenuItemRef: function getMenuItemRef(index2) {
      return "menuItems_" + index2;
    }
  },
  render: function render94() {
    var _this7 = this;
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, dropdownMenuColumnStyle = this.dropdownMenuColumnStyle;
    return h("div", [this.getShowOptions().map(function(options2, menuIndex) {
      return h(
        "ul",
        { "class": prefixCls2 + "-menu", key: menuIndex, style: dropdownMenuColumnStyle },
        [options2.map(function(option) {
          return _this7.getOption(option, menuIndex);
        })]
      );
    })]);
  }
};
function shallowEqualArrays(arrA, arrB) {
  if (arrA === arrB) {
    return true;
  }
  if (!arrA || !arrB) {
    return false;
  }
  var len = arrA.length;
  if (arrB.length !== len) {
    return false;
  }
  for (var i = 0; i < len; i++) {
    if (arrA[i] !== arrB[i]) {
      return false;
    }
  }
  return true;
}
var arrays = shallowEqualArrays;
var shallowEqualArrays$1 = arrays;
var BUILT_IN_PLACEMENTS$2 = {
  bottomLeft: {
    points: ["tl", "bl"],
    offset: [0, 4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  topLeft: {
    points: ["bl", "tl"],
    offset: [0, -4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  bottomRight: {
    points: ["tr", "br"],
    offset: [0, 4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  topRight: {
    points: ["br", "tr"],
    offset: [0, -4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  }
};
var Cascader$2 = {
  mixins: [BaseMixin],
  model: {
    prop: "value",
    event: "change"
  },
  props: {
    value: PropTypes.array,
    defaultValue: PropTypes.array,
    options: PropTypes.array,
    popupVisible: PropTypes.bool,
    disabled: PropTypes.bool.def(false),
    transitionName: PropTypes.string.def(""),
    popupClassName: PropTypes.string.def(""),
    popupStyle: PropTypes.object.def(function() {
      return {};
    }),
    popupPlacement: PropTypes.string.def("bottomLeft"),
    prefixCls: PropTypes.string.def("rc-cascader"),
    dropdownMenuColumnStyle: PropTypes.object,
    builtinPlacements: PropTypes.object.def(BUILT_IN_PLACEMENTS$2),
    loadData: PropTypes.func,
    changeOnSelect: PropTypes.bool,
    expandTrigger: PropTypes.string.def("click"),
    fieldNames: PropTypes.object.def(function() {
      return {
        label: "label",
        value: "value",
        children: "children"
      };
    }),
    expandIcon: PropTypes.any,
    loadingIcon: PropTypes.any,
    getPopupContainer: PropTypes.func
  },
  data: function data39() {
    var initialValue = [];
    var value27 = this.value, defaultValue = this.defaultValue, popupVisible4 = this.popupVisible;
    if (hasProp(this, "value")) {
      initialValue = value27 || [];
    } else if (hasProp(this, "defaultValue")) {
      initialValue = defaultValue || [];
    }
    return {
      sPopupVisible: popupVisible4,
      sActiveValue: initialValue,
      sValue: initialValue
    };
  },
  watch: {
    value: function value9(val, oldValue) {
      if (!shallowEqualArrays$1(val, oldValue)) {
        var newValues = {
          sValue: val || []
        };
        if (!hasProp(this, "loadData")) {
          newValues.sActiveValue = val || [];
        }
        this.setState(newValues);
      }
    },
    popupVisible: function popupVisible2(val) {
      this.setState({
        sPopupVisible: val
      });
    }
  },
  methods: {
    getPopupDOMNode: function getPopupDOMNode3() {
      return this.$refs.trigger.getPopupDomNode();
    },
    getFieldName: function getFieldName2(name) {
      var defaultFieldNames = this.defaultFieldNames, fieldNames = this.fieldNames;
      return fieldNames[name] || defaultFieldNames[name];
    },
    getFieldNames: function getFieldNames() {
      return this.fieldNames;
    },
    getCurrentLevelOptions: function getCurrentLevelOptions() {
      var _this = this;
      var _options = this.options, options2 = _options === void 0 ? [] : _options, _sActiveValue = this.sActiveValue, sActiveValue = _sActiveValue === void 0 ? [] : _sActiveValue;
      var result = arrayTreeFilter(options2, function(o, level2) {
        return o[_this.getFieldName("value")] === sActiveValue[level2];
      }, { childrenKeyName: this.getFieldName("children") });
      if (result[result.length - 2]) {
        return result[result.length - 2][this.getFieldName("children")];
      }
      return [].concat(_default$5(options2)).filter(function(o) {
        return !o.disabled;
      });
    },
    getActiveOptions: function getActiveOptions2(activeValue) {
      var _this2 = this;
      return arrayTreeFilter(this.options || [], function(o, level2) {
        return o[_this2.getFieldName("value")] === activeValue[level2];
      }, { childrenKeyName: this.getFieldName("children") });
    },
    setPopupVisible: function setPopupVisible2(popupVisible4) {
      if (!hasProp(this, "popupVisible")) {
        this.setState({ sPopupVisible: popupVisible4 });
      }
      if (popupVisible4 && !this.sPopupVisible) {
        this.setState({
          sActiveValue: this.sValue
        });
      }
      this.__emit("popupVisibleChange", popupVisible4);
    },
    handleChange: function handleChange6(options2, setProps, e) {
      var _this3 = this;
      if (e.type !== "keydown" || e.keyCode === KeyCode$2.ENTER) {
        this.__emit("change", options2.map(function(o) {
          return o[_this3.getFieldName("value")];
        }), options2);
        this.setPopupVisible(setProps.visible);
      }
    },
    handlePopupVisibleChange: function handlePopupVisibleChange(popupVisible4) {
      this.setPopupVisible(popupVisible4);
    },
    handleMenuSelect: function handleMenuSelect(targetOption, menuIndex, e) {
      var triggerNode = this.$refs.trigger.getRootDomNode();
      if (triggerNode && triggerNode.focus) {
        triggerNode.focus();
      }
      var changeOnSelect = this.changeOnSelect, loadData = this.loadData, expandTrigger = this.expandTrigger;
      if (!targetOption || targetOption.disabled) {
        return;
      }
      var sActiveValue = this.sActiveValue;
      sActiveValue = sActiveValue.slice(0, menuIndex + 1);
      sActiveValue[menuIndex] = targetOption[this.getFieldName("value")];
      var activeOptions = this.getActiveOptions(sActiveValue);
      if (targetOption.isLeaf === false && !targetOption[this.getFieldName("children")] && loadData) {
        if (changeOnSelect) {
          this.handleChange(activeOptions, { visible: true }, e);
        }
        this.setState({ sActiveValue });
        loadData(activeOptions);
        return;
      }
      var newState = {};
      if (!targetOption[this.getFieldName("children")] || !targetOption[this.getFieldName("children")].length) {
        this.handleChange(activeOptions, { visible: false }, e);
        newState.sValue = sActiveValue;
      } else if (changeOnSelect && (e.type === "click" || e.type === "keydown")) {
        if (expandTrigger === "hover") {
          this.handleChange(activeOptions, { visible: false }, e);
        } else {
          this.handleChange(activeOptions, { visible: true }, e);
        }
        newState.sValue = sActiveValue;
      }
      newState.sActiveValue = sActiveValue;
      if (hasProp(this, "value") || e.type === "keydown" && e.keyCode !== KeyCode$2.ENTER) {
        delete newState.sValue;
      }
      this.setState(newState);
    },
    handleItemDoubleClick: function handleItemDoubleClick() {
      var changeOnSelect = this.$props.changeOnSelect;
      if (changeOnSelect) {
        this.setPopupVisible(false);
      }
    },
    handleKeyDown: function handleKeyDown3(e) {
      var _this4 = this;
      var $slots = this.$slots;
      var children = $slots["default"] && $slots["default"][0];
      if (children) {
        var keydown = getEvents(children).keydown;
        if (keydown) {
          keydown(e);
          return;
        }
      }
      var activeValue = [].concat(_default$5(this.sActiveValue));
      var currentLevel = activeValue.length - 1 < 0 ? 0 : activeValue.length - 1;
      var currentOptions = this.getCurrentLevelOptions();
      var currentIndex = currentOptions.map(function(o) {
        return o[_this4.getFieldName("value")];
      }).indexOf(activeValue[currentLevel]);
      if (e.keyCode !== KeyCode$2.DOWN && e.keyCode !== KeyCode$2.UP && e.keyCode !== KeyCode$2.LEFT && e.keyCode !== KeyCode$2.RIGHT && e.keyCode !== KeyCode$2.ENTER && e.keyCode !== KeyCode$2.SPACE && e.keyCode !== KeyCode$2.BACKSPACE && e.keyCode !== KeyCode$2.ESC && e.keyCode !== KeyCode$2.TAB) {
        return;
      }
      if (!this.sPopupVisible && e.keyCode !== KeyCode$2.BACKSPACE && e.keyCode !== KeyCode$2.LEFT && e.keyCode !== KeyCode$2.RIGHT && e.keyCode !== KeyCode$2.ESC && e.keyCode !== KeyCode$2.TAB) {
        this.setPopupVisible(true);
        return;
      }
      if (e.keyCode === KeyCode$2.DOWN || e.keyCode === KeyCode$2.UP) {
        e.preventDefault();
        var nextIndex = currentIndex;
        if (nextIndex !== -1) {
          if (e.keyCode === KeyCode$2.DOWN) {
            nextIndex += 1;
            nextIndex = nextIndex >= currentOptions.length ? 0 : nextIndex;
          } else {
            nextIndex -= 1;
            nextIndex = nextIndex < 0 ? currentOptions.length - 1 : nextIndex;
          }
        } else {
          nextIndex = 0;
        }
        activeValue[currentLevel] = currentOptions[nextIndex][this.getFieldName("value")];
      } else if (e.keyCode === KeyCode$2.LEFT || e.keyCode === KeyCode$2.BACKSPACE) {
        e.preventDefault();
        activeValue.splice(activeValue.length - 1, 1);
      } else if (e.keyCode === KeyCode$2.RIGHT) {
        e.preventDefault();
        if (currentOptions[currentIndex] && currentOptions[currentIndex][this.getFieldName("children")]) {
          activeValue.push(currentOptions[currentIndex][this.getFieldName("children")][0][this.getFieldName("value")]);
        }
      } else if (e.keyCode === KeyCode$2.ESC || e.keyCode === KeyCode$2.TAB) {
        this.setPopupVisible(false);
        return;
      }
      if (!activeValue || activeValue.length === 0) {
        this.setPopupVisible(false);
      }
      var activeOptions = this.getActiveOptions(activeValue);
      var targetOption = activeOptions[activeOptions.length - 1];
      this.handleMenuSelect(targetOption, activeOptions.length - 1, e);
      this.__emit("keydown", e);
    }
  },
  render: function render95() {
    var h = arguments[0];
    var $props = this.$props, sActiveValue = this.sActiveValue, handleMenuSelect2 = this.handleMenuSelect, sPopupVisible = this.sPopupVisible, handlePopupVisibleChange3 = this.handlePopupVisibleChange, handleKeyDown8 = this.handleKeyDown;
    var listeners = getListeners(this);
    var prefixCls2 = $props.prefixCls, transitionName2 = $props.transitionName, popupClassName = $props.popupClassName, _$props$options = $props.options, options2 = _$props$options === void 0 ? [] : _$props$options, disabled = $props.disabled, builtinPlacements = $props.builtinPlacements, popupPlacement = $props.popupPlacement, restProps = _default$2($props, ["prefixCls", "transitionName", "popupClassName", "options", "disabled", "builtinPlacements", "popupPlacement"]);
    var menus = h("div");
    var emptyMenuClassName = "";
    if (options2 && options2.length > 0) {
      var loadingIcon = getComponentFromProp(this, "loadingIcon");
      var expandIcon = getComponentFromProp(this, "expandIcon") || ">";
      var menusProps = {
        props: _default$6({}, $props, {
          fieldNames: this.getFieldNames(),
          defaultFieldNames: this.defaultFieldNames,
          activeValue: sActiveValue,
          visible: sPopupVisible,
          loadingIcon,
          expandIcon
        }),
        on: _default$6({}, listeners, {
          select: handleMenuSelect2,
          itemDoubleClick: this.handleItemDoubleClick
        })
      };
      menus = h(Menus, menusProps);
    } else {
      emptyMenuClassName = " " + prefixCls2 + "-menus-empty";
    }
    var triggerProps = {
      props: _default$6({}, restProps, {
        disabled,
        popupPlacement,
        builtinPlacements,
        popupTransitionName: transitionName2,
        action: disabled ? [] : ["click"],
        popupVisible: disabled ? false : sPopupVisible,
        prefixCls: prefixCls2 + "-menus",
        popupClassName: popupClassName + emptyMenuClassName
      }),
      on: _default$6({}, listeners, {
        popupVisibleChange: handlePopupVisibleChange3
      }),
      ref: "trigger"
    };
    var children = getSlot(this, "default")[0];
    return h(
      Trigger,
      triggerProps,
      [children && cloneElement(children, {
        on: {
          keydown: handleKeyDown8
        },
        attrs: {
          tabIndex: disabled ? void 0 : 0
        }
      }), h(
        "template",
        { slot: "popup" },
        [menus]
      )]
    );
  }
};
var CascaderOptionType = PropTypes.shape({
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  label: PropTypes.any,
  disabled: PropTypes.bool,
  children: PropTypes.array,
  key: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
}).loose;
var FieldNamesType = PropTypes.shape({
  value: PropTypes.string.isRequired,
  label: PropTypes.string.isRequired,
  children: PropTypes.string
}).loose;
var CascaderExpandTrigger = PropTypes.oneOf(["click", "hover"]);
var ShowSearchType = PropTypes.shape({
  filter: PropTypes.func,
  render: PropTypes.func,
  sort: PropTypes.func,
  matchInputWidth: PropTypes.bool,
  limit: PropTypes.oneOfType([Boolean, Number])
}).loose;
function noop$G() {
}
var CascaderProps = {
  options: PropTypes.arrayOf(CascaderOptionType).def([]),
  defaultValue: PropTypes.array,
  value: PropTypes.array,
  displayRender: PropTypes.func,
  transitionName: PropTypes.string.def("slide-up"),
  popupStyle: PropTypes.object.def(function() {
    return {};
  }),
  popupClassName: PropTypes.string,
  popupPlacement: PropTypes.oneOf(["bottomLeft", "bottomRight", "topLeft", "topRight"]).def("bottomLeft"),
  placeholder: PropTypes.string.def("Please select"),
  size: PropTypes.oneOf(["large", "default", "small"]),
  disabled: PropTypes.bool.def(false),
  allowClear: PropTypes.bool.def(true),
  showSearch: PropTypes.oneOfType([Boolean, ShowSearchType]),
  notFoundContent: PropTypes.any,
  loadData: PropTypes.func,
  expandTrigger: CascaderExpandTrigger,
  changeOnSelect: PropTypes.bool,
  prefixCls: PropTypes.string,
  inputPrefixCls: PropTypes.string,
  getPopupContainer: PropTypes.func,
  popupVisible: PropTypes.bool,
  fieldNames: FieldNamesType,
  autoFocus: PropTypes.bool,
  suffixIcon: PropTypes.any
};
var defaultLimit = 50;
function defaultFilterOption(inputValue, path, names) {
  return path.some(function(option) {
    return option[names.label].indexOf(inputValue) > -1;
  });
}
function defaultSortFilteredOption(a, b, inputValue, names) {
  function callback(elem) {
    return elem[names.label].indexOf(inputValue) > -1;
  }
  return a.findIndex(callback) - b.findIndex(callback);
}
function getFilledFieldNames(_ref) {
  var _ref$fieldNames = _ref.fieldNames, fieldNames = _ref$fieldNames === void 0 ? {} : _ref$fieldNames;
  var names = {
    children: fieldNames.children || "children",
    label: fieldNames.label || "label",
    value: fieldNames.value || "value"
  };
  return names;
}
function flattenTree() {
  var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var props2 = arguments[1];
  var ancestor = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  var names = getFilledFieldNames(props2);
  var flattenOptions = [];
  var childrenName = names.children;
  options2.forEach(function(option) {
    var path = ancestor.concat(option);
    if (props2.changeOnSelect || !option[childrenName] || !option[childrenName].length) {
      flattenOptions.push(path);
    }
    if (option[childrenName]) {
      flattenOptions = flattenOptions.concat(flattenTree(option[childrenName], props2, path));
    }
  });
  return flattenOptions;
}
var defaultDisplayRender = function defaultDisplayRender2(_ref2) {
  var labels = _ref2.labels;
  return labels.join(" / ");
};
var Cascader = {
  inheritAttrs: false,
  name: "ACascader",
  mixins: [BaseMixin],
  props: CascaderProps,
  model: {
    prop: "value",
    event: "change"
  },
  provide: function provide12() {
    return {
      savePopupRef: this.savePopupRef
    };
  },
  inject: {
    configProvider: { "default": function _default56() {
      return ConfigConsumerProps;
    } },
    localeData: { "default": function _default57() {
      return {};
    } }
  },
  data: function data40() {
    this.cachedOptions = [];
    var value27 = this.value, defaultValue = this.defaultValue, popupVisible4 = this.popupVisible, showSearch = this.showSearch, options2 = this.options;
    return {
      sValue: value27 || defaultValue || [],
      inputValue: "",
      inputFocused: false,
      sPopupVisible: popupVisible4,
      flattenOptions: showSearch ? flattenTree(options2, this.$props) : void 0
    };
  },
  mounted: function mounted30() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus && !_this.showSearch && !_this.disabled) {
        _this.$refs.picker.focus();
      }
    });
  },
  watch: {
    value: function value10(val) {
      this.setState({ sValue: val || [] });
    },
    popupVisible: function popupVisible3(val) {
      this.setState({ sPopupVisible: val });
    },
    options: function options(val) {
      if (this.showSearch) {
        this.setState({ flattenOptions: flattenTree(val, this.$props) });
      }
    }
  },
  methods: {
    savePopupRef: function savePopupRef5(ref) {
      this.popupRef = ref;
    },
    highlightKeyword: function highlightKeyword(str, keyword, prefixCls2) {
      var h = this.$createElement;
      return str.split(keyword).map(function(node, index2) {
        return index2 === 0 ? node : [h(
          "span",
          { "class": prefixCls2 + "-menu-item-keyword" },
          [keyword]
        ), node];
      });
    },
    defaultRenderFilteredOption: function defaultRenderFilteredOption(_ref3) {
      var _this2 = this;
      var inputValue = _ref3.inputValue, path = _ref3.path, prefixCls2 = _ref3.prefixCls, names = _ref3.names;
      return path.map(function(option, index2) {
        var label = option[names.label];
        var node = label.indexOf(inputValue) > -1 ? _this2.highlightKeyword(label, inputValue, prefixCls2) : label;
        return index2 === 0 ? node : [" / ", node];
      });
    },
    handleChange: function handleChange7(value27, selectedOptions) {
      this.setState({ inputValue: "" });
      if (selectedOptions[0].__IS_FILTERED_OPTION) {
        var unwrappedValue = value27[0];
        var unwrappedSelectedOptions = selectedOptions[0].path;
        this.setValue(unwrappedValue, unwrappedSelectedOptions);
        return;
      }
      this.setValue(value27, selectedOptions);
    },
    handlePopupVisibleChange: function handlePopupVisibleChange2(popupVisible4) {
      if (!hasProp(this, "popupVisible")) {
        this.setState(function(state) {
          return {
            sPopupVisible: popupVisible4,
            inputFocused: popupVisible4,
            inputValue: popupVisible4 ? state.inputValue : ""
          };
        });
      }
      this.$emit("popupVisibleChange", popupVisible4);
    },
    handleInputFocus: function handleInputFocus(e) {
      this.$emit("focus", e);
    },
    handleInputBlur: function handleInputBlur(e) {
      this.setState({
        inputFocused: false
      });
      this.$emit("blur", e);
    },
    handleInputClick: function handleInputClick(e) {
      var inputFocused = this.inputFocused, sPopupVisible = this.sPopupVisible;
      if (inputFocused || sPopupVisible) {
        e.stopPropagation();
        if (e.nativeEvent && e.nativeEvent.stopImmediatePropagation) {
          e.nativeEvent.stopImmediatePropagation();
        }
      }
    },
    handleKeyDown: function handleKeyDown4(e) {
      if (e.keyCode === KeyCode$2.BACKSPACE || e.keyCode === KeyCode$2.SPACE) {
        e.stopPropagation();
      }
    },
    handleInputChange: function handleInputChange(e) {
      var inputValue = e.target.value;
      this.setState({ inputValue });
      this.$emit("search", inputValue);
    },
    setValue: function setValue5(value27, selectedOptions) {
      if (!hasProp(this, "value")) {
        this.setState({ sValue: value27 });
      }
      this.$emit("change", value27, selectedOptions);
    },
    getLabel: function getLabel() {
      var options2 = this.options, $scopedSlots = this.$scopedSlots;
      var names = getFilledFieldNames(this.$props);
      var displayRender = this.displayRender || $scopedSlots.displayRender || defaultDisplayRender;
      var value27 = this.sValue;
      var unwrappedValue = Array.isArray(value27[0]) ? value27[0] : value27;
      var selectedOptions = arrayTreeFilter(options2, function(o, level2) {
        return o[names.value] === unwrappedValue[level2];
      }, { childrenKeyName: names.children });
      var labels = selectedOptions.map(function(o) {
        return o[names.label];
      });
      return displayRender({ labels, selectedOptions });
    },
    clearSelection: function clearSelection(e) {
      e.preventDefault();
      e.stopPropagation();
      if (!this.inputValue) {
        this.setValue([]);
        this.handlePopupVisibleChange(false);
      } else {
        this.setState({ inputValue: "" });
      }
    },
    generateFilteredOptions: function generateFilteredOptions(prefixCls2, renderEmpty4) {
      var _ref5;
      var h = this.$createElement;
      var showSearch = this.showSearch, notFoundContent = this.notFoundContent, $scopedSlots = this.$scopedSlots;
      var names = getFilledFieldNames(this.$props);
      var _showSearch$filter = showSearch.filter, filter = _showSearch$filter === void 0 ? defaultFilterOption : _showSearch$filter, _showSearch$sort = showSearch.sort, sort = _showSearch$sort === void 0 ? defaultSortFilteredOption : _showSearch$sort, _showSearch$limit = showSearch.limit, limit = _showSearch$limit === void 0 ? defaultLimit : _showSearch$limit;
      var render249 = showSearch.render || $scopedSlots.showSearchRender || this.defaultRenderFilteredOption;
      var _$data = this.$data, _$data$flattenOptions = _$data.flattenOptions, flattenOptions = _$data$flattenOptions === void 0 ? [] : _$data$flattenOptions, inputValue = _$data.inputValue;
      var filtered = void 0;
      if (limit > 0) {
        filtered = [];
        var matchCount = 0;
        flattenOptions.some(function(path) {
          var match5 = filter(inputValue, path, names);
          if (match5) {
            filtered.push(path);
            matchCount += 1;
          }
          return matchCount >= limit;
        });
      } else {
        warning$4(typeof limit !== "number", "Cascader", "'limit' of showSearch in Cascader should be positive number or false.");
        filtered = flattenOptions.filter(function(path) {
          return filter(inputValue, path, names);
        });
      }
      filtered.sort(function(a, b) {
        return sort(a, b, inputValue, names);
      });
      if (filtered.length > 0) {
        return filtered.map(function(path) {
          var _ref4;
          return _ref4 = {
            __IS_FILTERED_OPTION: true,
            path
          }, _default$8(_ref4, names.label, render249({ inputValue, path, prefixCls: prefixCls2, names })), _default$8(_ref4, names.value, path.map(function(o) {
            return o[names.value];
          })), _default$8(_ref4, "disabled", path.some(function(o) {
            return !!o.disabled;
          })), _ref4;
        });
      }
      return [(_ref5 = {}, _default$8(_ref5, names.label, notFoundContent || renderEmpty4(h, "Cascader")), _default$8(_ref5, names.value, "ANT_CASCADER_NOT_FOUND"), _default$8(_ref5, "disabled", true), _ref5)];
    },
    focus: function focus11() {
      if (this.showSearch) {
        this.$refs.input.focus();
      } else {
        this.$refs.picker.focus();
      }
    },
    blur: function blur10() {
      if (this.showSearch) {
        this.$refs.input.blur();
      } else {
        this.$refs.picker.blur();
      }
    }
  },
  render: function render96() {
    var _classNames, _classNames2, _classNames3;
    var h = arguments[0];
    var $slots = this.$slots, sPopupVisible = this.sPopupVisible, inputValue = this.inputValue, configProvider = this.configProvider, localeData2 = this.localeData;
    var _$data2 = this.$data, value27 = _$data2.sValue, inputFocused = _$data2.inputFocused;
    var props2 = getOptionProps(this);
    var suffixIcon = getComponentFromProp(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var getContextPopupContainer = configProvider.getPopupContainer;
    var customizePrefixCls = props2.prefixCls, customizeInputPrefixCls = props2.inputPrefixCls, _props$placeholder = props2.placeholder, placeholder = _props$placeholder === void 0 ? localeData2.placeholder : _props$placeholder, size = props2.size, disabled = props2.disabled, allowClear = props2.allowClear, _props$showSearch = props2.showSearch, showSearch = _props$showSearch === void 0 ? false : _props$showSearch, notFoundContent = props2.notFoundContent, otherProps = _default$2(props2, ["prefixCls", "inputPrefixCls", "placeholder", "size", "disabled", "allowClear", "showSearch", "notFoundContent"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var renderEmpty4 = this.configProvider.renderEmpty;
    var prefixCls2 = getPrefixCls5("cascader", customizePrefixCls);
    var inputPrefixCls = getPrefixCls5("input", customizeInputPrefixCls);
    var sizeCls = classNames((_classNames = {}, _default$8(_classNames, inputPrefixCls + "-lg", size === "large"), _default$8(_classNames, inputPrefixCls + "-sm", size === "small"), _classNames));
    var clearIcon = allowClear && !disabled && value27.length > 0 || inputValue ? h(Icon$1, {
      attrs: {
        type: "close-circle",
        theme: "filled"
      },
      "class": prefixCls2 + "-picker-clear",
      on: {
        "click": this.clearSelection
      },
      key: "clear-icon"
    }) : null;
    var arrowCls = classNames((_classNames2 = {}, _default$8(_classNames2, prefixCls2 + "-picker-arrow", true), _default$8(_classNames2, prefixCls2 + "-picker-arrow-expand", sPopupVisible), _classNames2));
    var pickerCls = classNames(getClass(this), prefixCls2 + "-picker", (_classNames3 = {}, _default$8(_classNames3, prefixCls2 + "-picker-with-value", inputValue), _default$8(_classNames3, prefixCls2 + "-picker-disabled", disabled), _default$8(_classNames3, prefixCls2 + "-picker-" + size, !!size), _default$8(_classNames3, prefixCls2 + "-picker-show-search", !!showSearch), _default$8(_classNames3, prefixCls2 + "-picker-focused", inputFocused), _classNames3));
    var tempInputProps = omit$2(otherProps, ["options", "popupPlacement", "transitionName", "displayRender", "changeOnSelect", "expandTrigger", "popupVisible", "getPopupContainer", "loadData", "popupClassName", "filterOption", "renderFilteredOption", "sortFilteredOption", "notFoundContent", "defaultValue", "fieldNames"]);
    var options2 = props2.options;
    var names = getFilledFieldNames(this.$props);
    if (options2 && options2.length > 0) {
      if (inputValue) {
        options2 = this.generateFilteredOptions(prefixCls2, renderEmpty4);
      }
    } else {
      var _ref6;
      options2 = [(_ref6 = {}, _default$8(_ref6, names.label, notFoundContent || renderEmpty4(h, "Cascader")), _default$8(_ref6, names.value, "ANT_CASCADER_NOT_FOUND"), _default$8(_ref6, "disabled", true), _ref6)];
    }
    if (!sPopupVisible) {
      options2 = this.cachedOptions;
    } else {
      this.cachedOptions = options2;
    }
    var dropdownMenuColumnStyle = {};
    var isNotFound = (options2 || []).length === 1 && options2[0].value === "ANT_CASCADER_NOT_FOUND";
    if (isNotFound) {
      dropdownMenuColumnStyle.height = "auto";
    }
    var resultListMatchInputWidth = showSearch.matchInputWidth !== false;
    if (resultListMatchInputWidth && (inputValue || isNotFound) && this.$refs.input) {
      dropdownMenuColumnStyle.width = this.$refs.input.$el.offsetWidth + "px";
    }
    var inputProps2 = {
      props: _default$6({}, tempInputProps, {
        prefixCls: inputPrefixCls,
        placeholder: value27 && value27.length > 0 ? void 0 : placeholder,
        value: inputValue,
        disabled,
        readOnly: !showSearch,
        autoComplete: "off"
      }),
      "class": prefixCls2 + "-input " + sizeCls,
      ref: "input",
      on: {
        focus: showSearch ? this.handleInputFocus : noop$G,
        click: showSearch ? this.handleInputClick : noop$G,
        blur: showSearch ? this.handleInputBlur : noop$G,
        keydown: this.handleKeyDown,
        change: showSearch ? this.handleInputChange : noop$G
      },
      attrs: getAttrs(this)
    };
    var children = filterEmpty($slots["default"]);
    var inputIcon = suffixIcon && (isValidElement(suffixIcon) ? cloneElement(suffixIcon, {
      "class": _default$8({}, prefixCls2 + "-picker-arrow", true)
    }) : h(
      "span",
      { "class": prefixCls2 + "-picker-arrow" },
      [suffixIcon]
    )) || h(Icon$1, {
      attrs: { type: "down" },
      "class": arrowCls
    });
    var input = children.length ? children : h(
      "span",
      { "class": pickerCls, style: getStyle$1(this), ref: "picker" },
      [showSearch ? h(
        "span",
        { "class": prefixCls2 + "-picker-label" },
        [this.getLabel()]
      ) : null, h(Input, inputProps2), !showSearch ? h(
        "span",
        { "class": prefixCls2 + "-picker-label" },
        [this.getLabel()]
      ) : null, clearIcon, inputIcon]
    );
    var expandIcon = h(Icon$1, {
      attrs: { type: "right" }
    });
    var loadingIcon = h(
      "span",
      { "class": prefixCls2 + "-menu-item-loading-icon" },
      [h(Icon$1, {
        attrs: { type: "redo", spin: true }
      })]
    );
    var getPopupContainer = props2.getPopupContainer || getContextPopupContainer;
    var cascaderProps = {
      props: _default$6({}, props2, {
        getPopupContainer,
        options: options2,
        prefixCls: prefixCls2,
        value: value27,
        popupVisible: sPopupVisible,
        dropdownMenuColumnStyle,
        expandIcon,
        loadingIcon
      }),
      on: _default$6({}, getListeners(this), {
        popupVisibleChange: this.handlePopupVisibleChange,
        change: this.handleChange
      })
    };
    return h(
      Cascader$2,
      cascaderProps,
      [input]
    );
  }
};
Cascader.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Cascader.name, Cascader);
};
var Cascader$1 = Cascader;
function noop$F() {
}
var Checkbox = {
  name: "ACheckbox",
  inheritAttrs: false,
  __ANT_CHECKBOX: true,
  model: {
    prop: "checked"
  },
  props: {
    prefixCls: PropTypes.string,
    defaultChecked: PropTypes.bool,
    checked: PropTypes.bool,
    disabled: PropTypes.bool,
    isGroup: PropTypes.bool,
    value: PropTypes.any,
    name: PropTypes.string,
    id: PropTypes.string,
    indeterminate: PropTypes.bool,
    type: PropTypes.string.def("checkbox"),
    autoFocus: PropTypes.bool
  },
  inject: {
    configProvider: { "default": function _default58() {
      return ConfigConsumerProps;
    } },
    checkboxGroupContext: { "default": function _default59() {
      return void 0;
    } }
  },
  watch: {
    value: function value11(_value, prevValue) {
      var _this = this;
      this.$nextTick(function() {
        var _checkboxGroupContext = _this.checkboxGroupContext, checkboxGroup = _checkboxGroupContext === void 0 ? {} : _checkboxGroupContext;
        if (checkboxGroup.registerValue && checkboxGroup.cancelValue) {
          checkboxGroup.cancelValue(prevValue);
          checkboxGroup.registerValue(_value);
        }
      });
    }
  },
  mounted: function mounted31() {
    var value27 = this.value, _checkboxGroupContext2 = this.checkboxGroupContext, checkboxGroup = _checkboxGroupContext2 === void 0 ? {} : _checkboxGroupContext2;
    if (checkboxGroup.registerValue) {
      checkboxGroup.registerValue(value27);
    }
    warning$4(hasProp(this, "checked") || this.checkboxGroupContext || !hasProp(this, "value"), "Checkbox", "`value` is not validate prop, do you mean `checked`?");
  },
  beforeDestroy: function beforeDestroy25() {
    var value27 = this.value, _checkboxGroupContext3 = this.checkboxGroupContext, checkboxGroup = _checkboxGroupContext3 === void 0 ? {} : _checkboxGroupContext3;
    if (checkboxGroup.cancelValue) {
      checkboxGroup.cancelValue(value27);
    }
  },
  methods: {
    handleChange: function handleChange8(event) {
      var targetChecked = event.target.checked;
      this.$emit("input", targetChecked);
      this.$emit("change", event);
    },
    focus: function focus12() {
      this.$refs.vcCheckbox.focus();
    },
    blur: function blur11() {
      this.$refs.vcCheckbox.blur();
    }
  },
  render: function render97() {
    var _this2 = this, _classNames;
    var h = arguments[0];
    var checkboxGroup = this.checkboxGroupContext, $slots = this.$slots;
    var props2 = getOptionProps(this);
    var children = $slots["default"];
    var _getListeners = getListeners(this), _getListeners$mouseen = _getListeners.mouseenter, mouseenter = _getListeners$mouseen === void 0 ? noop$F : _getListeners$mouseen, _getListeners$mousele = _getListeners.mouseleave, mouseleave = _getListeners$mousele === void 0 ? noop$F : _getListeners$mousele;
    _getListeners.input;
    var restListeners = _default$2(_getListeners, ["mouseenter", "mouseleave", "input"]);
    var customizePrefixCls = props2.prefixCls, indeterminate = props2.indeterminate, restProps = _default$2(props2, ["prefixCls", "indeterminate"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("checkbox", customizePrefixCls);
    var checkboxProps = {
      props: _default$6({}, restProps, { prefixCls: prefixCls2 }),
      on: restListeners,
      attrs: getAttrs(this)
    };
    if (checkboxGroup) {
      checkboxProps.on.change = function() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this2.$emit.apply(_this2, ["change"].concat(args));
        checkboxGroup.toggleOption({ label: children, value: props2.value });
      };
      checkboxProps.props.name = checkboxGroup.name;
      checkboxProps.props.checked = checkboxGroup.sValue.indexOf(props2.value) !== -1;
      checkboxProps.props.disabled = props2.disabled || checkboxGroup.disabled;
      checkboxProps.props.indeterminate = indeterminate;
    } else {
      checkboxProps.on.change = this.handleChange;
    }
    var classString = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-wrapper", true), _default$8(_classNames, prefixCls2 + "-wrapper-checked", checkboxProps.props.checked), _default$8(_classNames, prefixCls2 + "-wrapper-disabled", checkboxProps.props.disabled), _classNames));
    var checkboxClass = classNames(_default$8({}, prefixCls2 + "-indeterminate", indeterminate));
    return h(
      "label",
      {
        "class": classString,
        on: {
          "mouseenter": mouseenter,
          "mouseleave": mouseleave
        }
      },
      [h(Checkbox$1, _mergeJSXProps([checkboxProps, { "class": checkboxClass, ref: "vcCheckbox" }])), children !== void 0 && h("span", [children])]
    );
  }
};
function noop$E() {
}
var CheckboxGroup = {
  name: "ACheckboxGroup",
  model: {
    prop: "value"
  },
  props: {
    name: PropTypes.string,
    prefixCls: PropTypes.string,
    defaultValue: PropTypes.array,
    value: PropTypes.array,
    options: PropTypes.array.def([]),
    disabled: PropTypes.bool
  },
  provide: function provide13() {
    return {
      checkboxGroupContext: this
    };
  },
  inject: {
    configProvider: { "default": function _default60() {
      return ConfigConsumerProps;
    } }
  },
  data: function data41() {
    var value27 = this.value, defaultValue = this.defaultValue;
    return {
      sValue: value27 || defaultValue || [],
      registeredValues: []
    };
  },
  watch: {
    value: function value12(val) {
      this.sValue = val || [];
    }
  },
  methods: {
    getOptions: function getOptions() {
      var options2 = this.options, $scopedSlots = this.$scopedSlots;
      return options2.map(function(option) {
        if (typeof option === "string") {
          return {
            label: option,
            value: option
          };
        }
        var label = option.label;
        if (label === void 0 && $scopedSlots.label) {
          label = $scopedSlots.label(option);
        }
        return _default$6({}, option, { label });
      });
    },
    cancelValue: function cancelValue(value27) {
      this.registeredValues = this.registeredValues.filter(function(val) {
        return val !== value27;
      });
    },
    registerValue: function registerValue(value27) {
      this.registeredValues = [].concat(_default$5(this.registeredValues), [value27]);
    },
    toggleOption: function toggleOption(option) {
      var registeredValues = this.registeredValues;
      var optionIndex = this.sValue.indexOf(option.value);
      var value27 = [].concat(_default$5(this.sValue));
      if (optionIndex === -1) {
        value27.push(option.value);
      } else {
        value27.splice(optionIndex, 1);
      }
      if (!hasProp(this, "value")) {
        this.sValue = value27;
      }
      var options2 = this.getOptions();
      var val = value27.filter(function(val2) {
        return registeredValues.indexOf(val2) !== -1;
      }).sort(function(a, b) {
        var indexA = options2.findIndex(function(opt) {
          return opt.value === a;
        });
        var indexB = options2.findIndex(function(opt) {
          return opt.value === b;
        });
        return indexA - indexB;
      });
      this.$emit("input", val);
      this.$emit("change", val);
    }
  },
  render: function render98() {
    var h = arguments[0];
    var props2 = this.$props, state = this.$data, $slots = this.$slots;
    var customizePrefixCls = props2.prefixCls, options2 = props2.options;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("checkbox", customizePrefixCls);
    var children = $slots["default"];
    var groupPrefixCls = prefixCls2 + "-group";
    if (options2 && options2.length > 0) {
      children = this.getOptions().map(function(option) {
        return h(
          Checkbox,
          {
            attrs: {
              prefixCls: prefixCls2,
              disabled: "disabled" in option ? option.disabled : props2.disabled,
              indeterminate: option.indeterminate,
              value: option.value,
              checked: state.sValue.indexOf(option.value) !== -1
            },
            key: option.value.toString(),
            on: {
              "change": option.onChange || noop$E
            },
            "class": groupPrefixCls + "-item"
          },
          [option.label]
        );
      });
    }
    return h(
      "div",
      { "class": groupPrefixCls },
      [children]
    );
  }
};
Checkbox.Group = CheckboxGroup;
Checkbox.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Checkbox.name, Checkbox);
  Vue2.component(CheckboxGroup.name, CheckboxGroup);
};
function goYear$3(direction) {
  this.changeYear(direction);
}
function noop$D() {
}
var MonthPanel = {
  name: "MonthPanel",
  mixins: [BaseMixin],
  props: {
    value: PropTypes.any,
    defaultValue: PropTypes.any,
    cellRender: PropTypes.any,
    contentRender: PropTypes.any,
    locale: PropTypes.any,
    rootPrefixCls: PropTypes.string,
    disabledDate: PropTypes.func,
    renderFooter: PropTypes.func,
    changeYear: PropTypes.func.def(noop$D)
  },
  data: function data42() {
    var value27 = this.value, defaultValue = this.defaultValue;
    this.nextYear = goYear$3.bind(this, 1);
    this.previousYear = goYear$3.bind(this, -1);
    return {
      sValue: value27 || defaultValue
    };
  },
  watch: {
    value: function value13(val) {
      this.setState({
        sValue: val
      });
    }
  },
  methods: {
    setAndSelectValue: function setAndSelectValue2(value27) {
      this.setValue(value27);
      this.__emit("select", value27);
    },
    setValue: function setValue6(value27) {
      if (hasProp(this, "value")) {
        this.setState({
          sValue: value27
        });
      }
    }
  },
  render: function render99() {
    var h = arguments[0];
    var sValue = this.sValue, cellRender = this.cellRender, contentRender = this.contentRender, locale3 = this.locale, rootPrefixCls = this.rootPrefixCls, disabledDate = this.disabledDate, renderFooter7 = this.renderFooter;
    var year = sValue.year();
    var prefixCls2 = rootPrefixCls + "-month-panel";
    var footer = renderFooter7 && renderFooter7("month");
    return h(
      "div",
      { "class": prefixCls2 },
      [h("div", [h(
        "div",
        { "class": prefixCls2 + "-header" },
        [h("a", {
          "class": prefixCls2 + "-prev-year-btn",
          attrs: {
            role: "button",
            title: locale3.previousYear
          },
          on: {
            "click": this.previousYear
          }
        }), h(
          "a",
          {
            "class": prefixCls2 + "-year-select",
            attrs: {
              role: "button",
              title: locale3.yearSelect
            },
            on: {
              "click": getListeners(this).yearPanelShow || noop$D
            }
          },
          [h(
            "span",
            { "class": prefixCls2 + "-year-select-content" },
            [year]
          ), h(
            "span",
            { "class": prefixCls2 + "-year-select-arrow" },
            ["x"]
          )]
        ), h("a", {
          "class": prefixCls2 + "-next-year-btn",
          attrs: {
            role: "button",
            title: locale3.nextYear
          },
          on: {
            "click": this.nextYear
          }
        })]
      ), h(
        "div",
        { "class": prefixCls2 + "-body" },
        [h(MonthTable$1, {
          attrs: {
            disabledDate,
            locale: locale3,
            value: sValue,
            cellRender,
            contentRender,
            prefixCls: prefixCls2
          },
          on: {
            "select": this.setAndSelectValue
          }
        })]
      ), footer && h(
        "div",
        { "class": prefixCls2 + "-footer" },
        [footer]
      )])]
    );
  }
};
var MonthPanel$1 = MonthPanel;
var ROW$1 = 4;
var COL$1 = 3;
function noop$C() {
}
function goYear$2(direction) {
  var value27 = this.sValue.clone();
  value27.add(direction, "year");
  this.setState({
    sValue: value27
  });
}
function chooseYear(year) {
  var value27 = this.sValue.clone();
  value27.year(year);
  value27.month(this.sValue.month());
  this.sValue = value27;
  this.__emit("select", value27);
}
var YearPanel = {
  mixins: [BaseMixin],
  props: {
    rootPrefixCls: PropTypes.string,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    locale: PropTypes.object,
    renderFooter: PropTypes.func,
    disabledDate: PropTypes.func
  },
  data: function data43() {
    this.nextDecade = goYear$2.bind(this, 10);
    this.previousDecade = goYear$2.bind(this, -10);
    return {
      sValue: this.value || this.defaultValue
    };
  },
  watch: {
    value: function value14(val) {
      this.sValue = val;
    }
  },
  methods: {
    years: function years2() {
      var value27 = this.sValue;
      var currentYear = value27.year();
      var startYear = parseInt(currentYear / 10, 10) * 10;
      var previousYear = startYear - 1;
      var years3 = [];
      var index2 = 0;
      for (var rowIndex = 0; rowIndex < ROW$1; rowIndex++) {
        years3[rowIndex] = [];
        for (var colIndex = 0; colIndex < COL$1; colIndex++) {
          var year = previousYear + index2;
          var content = String(year);
          years3[rowIndex][colIndex] = {
            content,
            year,
            title: content
          };
          index2++;
        }
      }
      return years3;
    }
  },
  render: function render100() {
    var _this = this;
    var h = arguments[0];
    var value27 = this.sValue, locale3 = this.locale, renderFooter7 = this.renderFooter, $props = this.$props;
    var decadePanelShow = getListeners(this).decadePanelShow || noop$C;
    var years3 = this.years();
    var currentYear = value27.year();
    var startYear = parseInt(currentYear / 10, 10) * 10;
    var endYear = startYear + 9;
    var prefixCls2 = this.rootPrefixCls + "-year-panel";
    var disabledDate = $props.disabledDate;
    var yeasEls = years3.map(function(row, index2) {
      var tds = row.map(function(yearData) {
        var _classNameMap;
        var disabled = false;
        if (disabledDate) {
          var testValue = value27.clone();
          testValue.year(yearData.year);
          disabled = disabledDate(testValue);
        }
        var classNameMap = (_classNameMap = {}, _default$8(_classNameMap, prefixCls2 + "-cell", 1), _default$8(_classNameMap, prefixCls2 + "-cell-disabled", disabled), _default$8(_classNameMap, prefixCls2 + "-selected-cell", yearData.year === currentYear), _default$8(_classNameMap, prefixCls2 + "-last-decade-cell", yearData.year < startYear), _default$8(_classNameMap, prefixCls2 + "-next-decade-cell", yearData.year > endYear), _classNameMap);
        var clickHandler = noop$C;
        if (yearData.year < startYear) {
          clickHandler = _this.previousDecade;
        } else if (yearData.year > endYear) {
          clickHandler = _this.nextDecade;
        } else {
          clickHandler = chooseYear.bind(_this, yearData.year);
        }
        return h(
          "td",
          {
            attrs: {
              role: "gridcell",
              title: yearData.title
            },
            key: yearData.content,
            on: {
              "click": disabled ? noop$C : clickHandler
            },
            "class": classNameMap
          },
          [h(
            "a",
            { "class": prefixCls2 + "-year" },
            [yearData.content]
          )]
        );
      });
      return h(
        "tr",
        {
          key: index2,
          attrs: { role: "row" }
        },
        [tds]
      );
    });
    var footer = renderFooter7 && renderFooter7("year");
    return h(
      "div",
      { "class": prefixCls2 },
      [h("div", [h(
        "div",
        { "class": prefixCls2 + "-header" },
        [h("a", {
          "class": prefixCls2 + "-prev-decade-btn",
          attrs: {
            role: "button",
            title: locale3.previousDecade
          },
          on: {
            "click": this.previousDecade
          }
        }), h(
          "a",
          {
            "class": prefixCls2 + "-decade-select",
            attrs: {
              role: "button",
              title: locale3.decadeSelect
            },
            on: {
              "click": decadePanelShow
            }
          },
          [h(
            "span",
            { "class": prefixCls2 + "-decade-select-content" },
            [startYear, "-", endYear]
          ), h(
            "span",
            { "class": prefixCls2 + "-decade-select-arrow" },
            ["x"]
          )]
        ), h("a", {
          "class": prefixCls2 + "-next-decade-btn",
          attrs: {
            role: "button",
            title: locale3.nextDecade
          },
          on: {
            "click": this.nextDecade
          }
        })]
      ), h(
        "div",
        { "class": prefixCls2 + "-body" },
        [h(
          "table",
          {
            "class": prefixCls2 + "-table",
            attrs: { cellSpacing: "0", role: "grid" }
          },
          [h(
            "tbody",
            { "class": prefixCls2 + "-tbody" },
            [yeasEls]
          )]
        )]
      ), footer && h(
        "div",
        { "class": prefixCls2 + "-footer" },
        [footer]
      )])]
    );
  }
};
var ROW = 4;
var COL = 3;
function noop$B() {
}
function goYear$1(direction) {
  var next3 = this.sValue.clone();
  next3.add(direction, "years");
  this.setState({
    sValue: next3
  });
}
function chooseDecade(year, event) {
  var next3 = this.sValue.clone();
  next3.year(year);
  next3.month(this.sValue.month());
  this.__emit("select", next3);
  event.preventDefault();
}
var DecadePanel = {
  mixins: [BaseMixin],
  props: {
    locale: PropTypes.object,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    rootPrefixCls: PropTypes.string,
    renderFooter: PropTypes.func
  },
  data: function data44() {
    this.nextCentury = goYear$1.bind(this, 100);
    this.previousCentury = goYear$1.bind(this, -100);
    return {
      sValue: this.value || this.defaultValue
    };
  },
  watch: {
    value: function value15(val) {
      this.sValue = val;
    }
  },
  render: function render101() {
    var _this = this;
    var h = arguments[0];
    var value27 = this.sValue;
    var _$props = this.$props, locale3 = _$props.locale, renderFooter7 = _$props.renderFooter;
    var currentYear = value27.year();
    var startYear = parseInt(currentYear / 100, 10) * 100;
    var preYear = startYear - 10;
    var endYear = startYear + 99;
    var decades = [];
    var index2 = 0;
    var prefixCls2 = this.rootPrefixCls + "-decade-panel";
    for (var rowIndex = 0; rowIndex < ROW; rowIndex++) {
      decades[rowIndex] = [];
      for (var colIndex = 0; colIndex < COL; colIndex++) {
        var startDecade = preYear + index2 * 10;
        var endDecade = preYear + index2 * 10 + 9;
        decades[rowIndex][colIndex] = {
          startDecade,
          endDecade
        };
        index2++;
      }
    }
    var footer = renderFooter7 && renderFooter7("decade");
    var decadesEls = decades.map(function(row, decadeIndex) {
      var tds = row.map(function(decadeData) {
        var _classNameMap;
        var dStartDecade = decadeData.startDecade;
        var dEndDecade = decadeData.endDecade;
        var isLast = dStartDecade < startYear;
        var isNext = dEndDecade > endYear;
        var classNameMap = (_classNameMap = {}, _default$8(_classNameMap, prefixCls2 + "-cell", 1), _default$8(_classNameMap, prefixCls2 + "-selected-cell", dStartDecade <= currentYear && currentYear <= dEndDecade), _default$8(_classNameMap, prefixCls2 + "-last-century-cell", isLast), _default$8(_classNameMap, prefixCls2 + "-next-century-cell", isNext), _classNameMap);
        var content = dStartDecade + "-" + dEndDecade;
        var clickHandler = noop$B;
        if (isLast) {
          clickHandler = _this.previousCentury;
        } else if (isNext) {
          clickHandler = _this.nextCentury;
        } else {
          clickHandler = chooseDecade.bind(_this, dStartDecade);
        }
        return h(
          "td",
          {
            key: dStartDecade,
            on: {
              "click": clickHandler
            },
            attrs: { role: "gridcell" },
            "class": classNameMap
          },
          [h(
            "a",
            { "class": prefixCls2 + "-decade" },
            [content]
          )]
        );
      });
      return h(
        "tr",
        {
          key: decadeIndex,
          attrs: { role: "row" }
        },
        [tds]
      );
    });
    return h(
      "div",
      { "class": prefixCls2 },
      [h(
        "div",
        { "class": prefixCls2 + "-header" },
        [h("a", {
          "class": prefixCls2 + "-prev-century-btn",
          attrs: {
            role: "button",
            title: locale3.previousCentury
          },
          on: {
            "click": this.previousCentury
          }
        }), h(
          "div",
          { "class": prefixCls2 + "-century" },
          [startYear, "-", endYear]
        ), h("a", {
          "class": prefixCls2 + "-next-century-btn",
          attrs: {
            role: "button",
            title: locale3.nextCentury
          },
          on: {
            "click": this.nextCentury
          }
        })]
      ), h(
        "div",
        { "class": prefixCls2 + "-body" },
        [h(
          "table",
          {
            "class": prefixCls2 + "-table",
            attrs: { cellSpacing: "0", role: "grid" }
          },
          [h(
            "tbody",
            { "class": prefixCls2 + "-tbody" },
            [decadesEls]
          )]
        )]
      ), footer && h(
        "div",
        { "class": prefixCls2 + "-footer" },
        [footer]
      )]
    );
  }
};
function noop$A() {
}
function goMonth(direction) {
  var next3 = this.value.clone();
  next3.add(direction, "months");
  this.__emit("valueChange", next3);
}
function goYear(direction) {
  var next3 = this.value.clone();
  next3.add(direction, "years");
  this.__emit("valueChange", next3);
}
function showIf(condition, el) {
  return condition ? el : null;
}
var CalendarHeader = {
  name: "CalendarHeader",
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    value: PropTypes.object,
    showTimePicker: PropTypes.bool,
    locale: PropTypes.object,
    enablePrev: PropTypes.any.def(1),
    enableNext: PropTypes.any.def(1),
    disabledMonth: PropTypes.func,
    mode: PropTypes.any,
    monthCellRender: PropTypes.func,
    monthCellContentRender: PropTypes.func,
    renderFooter: PropTypes.func
  },
  data: function data45() {
    this.nextMonth = goMonth.bind(this, 1);
    this.previousMonth = goMonth.bind(this, -1);
    this.nextYear = goYear.bind(this, 1);
    this.previousYear = goYear.bind(this, -1);
    return {
      yearPanelReferer: null
    };
  },
  methods: {
    onMonthSelect: function onMonthSelect2(value27) {
      this.__emit("panelChange", value27, "date");
      if (getListeners(this).monthSelect) {
        this.__emit("monthSelect", value27);
      } else {
        this.__emit("valueChange", value27);
      }
    },
    onYearSelect: function onYearSelect(value27) {
      var referer = this.yearPanelReferer;
      this.setState({ yearPanelReferer: null });
      this.__emit("panelChange", value27, referer);
      this.__emit("valueChange", value27);
    },
    onDecadeSelect: function onDecadeSelect(value27) {
      this.__emit("panelChange", value27, "year");
      this.__emit("valueChange", value27);
    },
    changeYear: function changeYear(direction) {
      if (direction > 0) {
        this.nextYear();
      } else {
        this.previousYear();
      }
    },
    monthYearElement: function monthYearElement(showTimePicker) {
      var _this = this;
      var h = this.$createElement;
      var props2 = this.$props;
      var prefixCls2 = props2.prefixCls;
      var locale3 = props2.locale;
      var value27 = props2.value;
      var localeData2 = value27.localeData();
      var monthBeforeYear = locale3.monthBeforeYear;
      var selectClassName = prefixCls2 + "-" + (monthBeforeYear ? "my-select" : "ym-select");
      var timeClassName = showTimePicker ? " " + prefixCls2 + "-time-status" : "";
      var year = h(
        "a",
        {
          "class": prefixCls2 + "-year-select" + timeClassName,
          attrs: {
            role: "button",
            title: showTimePicker ? null : locale3.yearSelect
          },
          on: {
            "click": showTimePicker ? noop$A : function() {
              return _this.showYearPanel("date");
            }
          }
        },
        [value27.format(locale3.yearFormat)]
      );
      var month = h(
        "a",
        {
          "class": prefixCls2 + "-month-select" + timeClassName,
          attrs: {
            role: "button",
            title: showTimePicker ? null : locale3.monthSelect
          },
          on: {
            "click": showTimePicker ? noop$A : this.showMonthPanel
          }
        },
        [locale3.monthFormat ? value27.format(locale3.monthFormat) : localeData2.monthsShort(value27)]
      );
      var day = void 0;
      if (showTimePicker) {
        day = h(
          "a",
          {
            "class": prefixCls2 + "-day-select" + timeClassName,
            attrs: { role: "button" }
          },
          [value27.format(locale3.dayFormat)]
        );
      }
      var my = [];
      if (monthBeforeYear) {
        my = [month, day, year];
      } else {
        my = [year, month, day];
      }
      return h(
        "span",
        { "class": selectClassName },
        [my]
      );
    },
    showMonthPanel: function showMonthPanel() {
      this.__emit("panelChange", null, "month");
    },
    showYearPanel: function showYearPanel(referer) {
      this.setState({ yearPanelReferer: referer });
      this.__emit("panelChange", null, "year");
    },
    showDecadePanel: function showDecadePanel() {
      this.__emit("panelChange", null, "decade");
    }
  },
  render: function render102() {
    var _this2 = this;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var prefixCls2 = props2.prefixCls, locale3 = props2.locale, mode5 = props2.mode, value27 = props2.value, showTimePicker = props2.showTimePicker, enableNext = props2.enableNext, enablePrev = props2.enablePrev, disabledMonth = props2.disabledMonth, renderFooter7 = props2.renderFooter;
    var panel = null;
    if (mode5 === "month") {
      panel = h(MonthPanel$1, {
        attrs: {
          locale: locale3,
          value: value27,
          rootPrefixCls: prefixCls2,
          disabledDate: disabledMonth,
          cellRender: props2.monthCellRender,
          contentRender: props2.monthCellContentRender,
          renderFooter: renderFooter7,
          changeYear: this.changeYear
        },
        on: {
          "select": this.onMonthSelect,
          "yearPanelShow": function yearPanelShow() {
            return _this2.showYearPanel("month");
          }
        }
      });
    }
    if (mode5 === "year") {
      panel = h(YearPanel, {
        attrs: {
          locale: locale3,
          value: value27,
          rootPrefixCls: prefixCls2,
          renderFooter: renderFooter7,
          disabledDate: disabledMonth
        },
        on: {
          "select": this.onYearSelect,
          "decadePanelShow": this.showDecadePanel
        }
      });
    }
    if (mode5 === "decade") {
      panel = h(DecadePanel, {
        attrs: {
          locale: locale3,
          value: value27,
          rootPrefixCls: prefixCls2,
          renderFooter: renderFooter7
        },
        on: {
          "select": this.onDecadeSelect
        }
      });
    }
    return h(
      "div",
      { "class": prefixCls2 + "-header" },
      [h(
        "div",
        { style: { position: "relative" } },
        [showIf(enablePrev && !showTimePicker, h("a", {
          "class": prefixCls2 + "-prev-year-btn",
          attrs: {
            role: "button",
            title: locale3.previousYear
          },
          on: {
            "click": this.previousYear
          }
        })), showIf(enablePrev && !showTimePicker, h("a", {
          "class": prefixCls2 + "-prev-month-btn",
          attrs: {
            role: "button",
            title: locale3.previousMonth
          },
          on: {
            "click": this.previousMonth
          }
        })), this.monthYearElement(showTimePicker), showIf(enableNext && !showTimePicker, h("a", {
          "class": prefixCls2 + "-next-month-btn",
          on: {
            "click": this.nextMonth
          },
          attrs: {
            title: locale3.nextMonth
          }
        })), showIf(enableNext && !showTimePicker, h("a", {
          "class": prefixCls2 + "-next-year-btn",
          on: {
            "click": this.nextYear
          },
          attrs: {
            title: locale3.nextYear
          }
        }))]
      ), panel]
    );
  }
};
var CalendarHeader$1 = CalendarHeader;
function noop$z() {
}
var TodayButton = {
  functional: true,
  render: function render103(createElement, context) {
    var h = arguments[0];
    var props2 = context.props, _context$listeners = context.listeners, listeners = _context$listeners === void 0 ? {} : _context$listeners;
    var prefixCls2 = props2.prefixCls, locale3 = props2.locale, value27 = props2.value, timePicker = props2.timePicker, disabled = props2.disabled, disabledDate = props2.disabledDate, text = props2.text;
    var _listeners$today = listeners.today, today = _listeners$today === void 0 ? noop$z : _listeners$today;
    var localeNow = (!text && timePicker ? locale3.now : text) || locale3.today;
    var disabledToday = disabledDate && !isAllowedDate(getTodayTime(value27), disabledDate);
    var isDisabled2 = disabledToday || disabled;
    var disabledTodayClass = isDisabled2 ? prefixCls2 + "-today-btn-disabled" : "";
    return h(
      "a",
      {
        "class": prefixCls2 + "-today-btn " + disabledTodayClass,
        attrs: {
          role: "button",
          title: getTodayTimeStr(value27)
        },
        on: {
          "click": isDisabled2 ? noop$z : today
        }
      },
      [localeNow]
    );
  }
};
function noop$y() {
}
var OkButton = {
  functional: true,
  render: function render104(createElement, context) {
    var h = arguments[0];
    var props2 = context.props, _context$listeners = context.listeners, listeners = _context$listeners === void 0 ? {} : _context$listeners;
    var prefixCls2 = props2.prefixCls, locale3 = props2.locale, okDisabled = props2.okDisabled;
    var _listeners$ok = listeners.ok, ok = _listeners$ok === void 0 ? noop$y : _listeners$ok;
    var className = prefixCls2 + "-ok-btn";
    if (okDisabled) {
      className += " " + prefixCls2 + "-ok-btn-disabled";
    }
    return h(
      "a",
      {
        "class": className,
        attrs: { role: "button" },
        on: {
          "click": okDisabled ? noop$y : ok
        }
      },
      [locale3.ok]
    );
  }
};
function noop$x() {
}
var TimePickerButton = {
  functional: true,
  render: function render105(h, context) {
    var _className;
    var props2 = context.props, _context$listeners = context.listeners, listeners = _context$listeners === void 0 ? {} : _context$listeners;
    var prefixCls2 = props2.prefixCls, locale3 = props2.locale, showTimePicker = props2.showTimePicker, timePickerDisabled = props2.timePickerDisabled;
    var _listeners$closeTimeP = listeners.closeTimePicker, closeTimePicker2 = _listeners$closeTimeP === void 0 ? noop$x : _listeners$closeTimeP, _listeners$openTimePi = listeners.openTimePicker, openTimePicker2 = _listeners$openTimePi === void 0 ? noop$x : _listeners$openTimePi;
    var className = (_className = {}, _default$8(_className, prefixCls2 + "-time-picker-btn", true), _default$8(_className, prefixCls2 + "-time-picker-btn-disabled", timePickerDisabled), _className);
    var onClick15 = noop$x;
    if (!timePickerDisabled) {
      onClick15 = showTimePicker ? closeTimePicker2 : openTimePicker2;
    }
    return h(
      "a",
      {
        "class": className,
        attrs: { role: "button" },
        on: {
          "click": onClick15
        }
      },
      [showTimePicker ? locale3.dateSelect : locale3.timeSelect]
    );
  }
};
var CalendarFooter = {
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    showDateInput: PropTypes.bool,
    disabledTime: PropTypes.any,
    timePicker: PropTypes.any,
    selectedValue: PropTypes.any,
    showOk: PropTypes.bool,
    value: PropTypes.object,
    renderFooter: PropTypes.func,
    defaultValue: PropTypes.object,
    locale: PropTypes.object,
    showToday: PropTypes.bool,
    disabledDate: PropTypes.func,
    showTimePicker: PropTypes.bool,
    okDisabled: PropTypes.bool,
    mode: PropTypes.string
  },
  methods: {
    onSelect: function onSelect5(value27) {
      this.__emit("select", value27);
    },
    getRootDOMNode: function getRootDOMNode() {
      return this.$el;
    }
  },
  render: function render106() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var value27 = props2.value, prefixCls2 = props2.prefixCls, showOk = props2.showOk, timePicker = props2.timePicker, renderFooter7 = props2.renderFooter, showToday = props2.showToday, mode5 = props2.mode;
    var footerEl = null;
    var extraFooter = renderFooter7 && renderFooter7(mode5);
    if (showToday || timePicker || extraFooter) {
      var _cls;
      var btnProps2 = {
        props: _default$6({}, props2, {
          value: value27
        }),
        on: getListeners(this)
      };
      var nowEl = null;
      if (showToday) {
        nowEl = h(TodayButton, _mergeJSXProps([{ key: "todayButton" }, btnProps2]));
      }
      delete btnProps2.props.value;
      var okBtn = null;
      if (showOk === true || showOk !== false && !!timePicker) {
        okBtn = h(OkButton, _mergeJSXProps([{ key: "okButton" }, btnProps2]));
      }
      var timePickerBtn = null;
      if (timePicker) {
        timePickerBtn = h(TimePickerButton, _mergeJSXProps([{ key: "timePickerButton" }, btnProps2]));
      }
      var footerBtn = void 0;
      if (nowEl || timePickerBtn || okBtn || extraFooter) {
        footerBtn = h(
          "span",
          { "class": prefixCls2 + "-footer-btn" },
          [extraFooter, nowEl, timePickerBtn, okBtn]
        );
      }
      var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-footer", true), _default$8(_cls, prefixCls2 + "-footer-show-ok", !!okBtn), _cls);
      footerEl = h(
        "div",
        { "class": cls },
        [footerBtn]
      );
    }
    return footerEl;
  }
};
var CalendarFooter$1 = CalendarFooter;
var cachedSelectionStart = void 0;
var cachedSelectionEnd = void 0;
var dateInputInstance = void 0;
var DateInput = {
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    timePicker: PropTypes.object,
    value: PropTypes.object,
    disabledTime: PropTypes.any,
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.func]),
    locale: PropTypes.object,
    disabledDate: PropTypes.func,
    placeholder: PropTypes.string,
    selectedValue: PropTypes.object,
    clearIcon: PropTypes.any,
    inputMode: PropTypes.string,
    inputReadOnly: PropTypes.bool
  },
  data: function data46() {
    var selectedValue6 = this.selectedValue;
    return {
      str: formatDate$1(selectedValue6, this.format),
      invalid: false,
      hasFocus: false
    };
  },
  watch: {
    selectedValue: function selectedValue3() {
      this.setState();
    },
    format: function format() {
      this.setState();
    }
  },
  updated: function updated22() {
    var _this = this;
    this.$nextTick(function() {
      if (dateInputInstance && _this.$data.hasFocus && !_this.invalid && !(cachedSelectionStart === 0 && cachedSelectionEnd === 0)) {
        dateInputInstance.setSelectionRange(cachedSelectionStart, cachedSelectionEnd);
      }
    });
  },
  getInstance: function getInstance() {
    return dateInputInstance;
  },
  methods: {
    getDerivedStateFromProps: function getDerivedStateFromProps(nextProps, state) {
      var newState = {};
      if (dateInputInstance) {
        cachedSelectionStart = dateInputInstance.selectionStart;
        cachedSelectionEnd = dateInputInstance.selectionEnd;
      }
      var selectedValue6 = nextProps.selectedValue;
      if (!state.hasFocus) {
        newState = {
          str: formatDate$1(selectedValue6, this.format),
          invalid: false
        };
      }
      return newState;
    },
    onClear: function onClear() {
      this.setState({
        str: ""
      });
      this.__emit("clear", null);
    },
    onInputChange: function onInputChange2(e) {
      var _e$target = e.target, str = _e$target.value, composing = _e$target.composing;
      var _str = this.str, oldStr = _str === void 0 ? "" : _str;
      if (e.isComposing || composing || oldStr === str)
        return;
      var _$props = this.$props, disabledDate = _$props.disabledDate, format3 = _$props.format, selectedValue6 = _$props.selectedValue;
      if (!str) {
        this.__emit("change", null);
        this.setState({
          invalid: false,
          str
        });
        return;
      }
      var parsed = hooks(str, format3, true);
      if (!parsed.isValid()) {
        this.setState({
          invalid: true,
          str
        });
        return;
      }
      var value27 = this.value.clone();
      value27.year(parsed.year()).month(parsed.month()).date(parsed.date()).hour(parsed.hour()).minute(parsed.minute()).second(parsed.second());
      if (!value27 || disabledDate && disabledDate(value27)) {
        this.setState({
          invalid: true,
          str
        });
        return;
      }
      if (selectedValue6 !== value27 || selectedValue6 && value27 && !selectedValue6.isSame(value27)) {
        this.setState({
          invalid: false,
          str
        });
        this.__emit("change", value27);
      }
    },
    onFocus: function onFocus2() {
      this.setState({ hasFocus: true });
    },
    onBlur: function onBlur3() {
      this.setState(function(prevState, prevProps) {
        return {
          hasFocus: false,
          str: formatDate$1(prevProps.value, prevProps.format)
        };
      });
    },
    onKeyDown: function onKeyDown10(event) {
      var keyCode = event.keyCode;
      var _$props2 = this.$props, value27 = _$props2.value, disabledDate = _$props2.disabledDate;
      if (keyCode === KeyCode$2.ENTER) {
        var validateDate = !disabledDate || !disabledDate(value27);
        if (validateDate) {
          this.__emit("select", value27.clone());
        }
        event.preventDefault();
      }
    },
    getRootDOMNode: function getRootDOMNode2() {
      return this.$el;
    },
    focus: function focus13() {
      if (dateInputInstance) {
        dateInputInstance.focus();
      }
    },
    saveDateInput: function saveDateInput(dateInput) {
      dateInputInstance = dateInput;
    }
  },
  render: function render107() {
    var h = arguments[0];
    var invalid = this.invalid, str = this.str, locale3 = this.locale, prefixCls2 = this.prefixCls, placeholder = this.placeholder, disabled = this.disabled, showClear = this.showClear, inputMode = this.inputMode, inputReadOnly = this.inputReadOnly;
    var clearIcon = getComponentFromProp(this, "clearIcon");
    var invalidClass = invalid ? prefixCls2 + "-input-invalid" : "";
    return h(
      "div",
      { "class": prefixCls2 + "-input-wrap" },
      [h(
        "div",
        { "class": prefixCls2 + "-date-input-wrap" },
        [h("input", _mergeJSXProps([{
          directives: [{
            name: "ant-ref",
            value: this.saveDateInput
          }, {
            name: "ant-input"
          }]
        }, {
          "class": prefixCls2 + "-input " + invalidClass,
          domProps: {
            "value": str
          },
          attrs: {
            disabled,
            placeholder,
            inputMode,
            readOnly: inputReadOnly
          },
          on: {
            "input": this.onInputChange,
            "keydown": this.onKeyDown,
            "focus": this.onFocus,
            "blur": this.onBlur
          }
        }]))]
      ), showClear ? h(
        "a",
        {
          attrs: { role: "button", title: locale3.clear },
          on: {
            "click": this.onClear
          }
        },
        [clearIcon || h("span", { "class": prefixCls2 + "-clear-btn" })]
      ) : null]
    );
  }
};
var DateInput$1 = DateInput;
function goStartMonth(time) {
  return time.clone().startOf("month");
}
function goEndMonth(time) {
  return time.clone().endOf("month");
}
function goTime(time, direction, unit) {
  return time.clone().add(direction, unit);
}
function includesTime() {
  var timeList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var time = arguments[1];
  var unit = arguments[2];
  return timeList.some(function(t) {
    return t.isSame(time, unit);
  });
}
var getMomentObjectIfValid = function getMomentObjectIfValid2(date3) {
  if (hooks.isMoment(date3) && date3.isValid()) {
    return date3;
  }
  return false;
};
var Calendar = {
  name: "Calendar",
  props: {
    locale: PropTypes.object.def(enUs),
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.func]),
    visible: PropTypes.bool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    defaultValue: PropTypes.object,
    value: PropTypes.object,
    selectedValue: PropTypes.object,
    defaultSelectedValue: PropTypes.object,
    mode: PropTypes.oneOf(["time", "date", "month", "year", "decade"]),
    showDateInput: PropTypes.bool.def(true),
    showWeekNumber: PropTypes.bool,
    showToday: PropTypes.bool.def(true),
    showOk: PropTypes.bool,
    timePicker: PropTypes.any,
    dateInputPlaceholder: PropTypes.any,
    disabledDate: PropTypes.func,
    disabledTime: PropTypes.any,
    dateRender: PropTypes.func,
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    }),
    clearIcon: PropTypes.any,
    focusablePanel: PropTypes.bool.def(true),
    inputMode: PropTypes.string,
    inputReadOnly: PropTypes.bool
  },
  mixins: [BaseMixin, CommonMixin, CalendarMixin$1],
  data: function data47() {
    var props2 = this.$props;
    return {
      sMode: this.mode || "date",
      sValue: getMomentObjectIfValid(props2.value) || getMomentObjectIfValid(props2.defaultValue) || hooks(),
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  watch: {
    mode: function mode3(val) {
      this.setState({ sMode: val });
    },
    value: function value16(val) {
      this.setState({
        sValue: getMomentObjectIfValid(val) || getMomentObjectIfValid(this.defaultValue) || getNowByCurrentStateValue(this.sValue)
      });
    },
    selectedValue: function selectedValue4(val) {
      this.setState({
        sSelectedValue: val
      });
    }
  },
  mounted: function mounted32() {
    var _this = this;
    this.$nextTick(function() {
      _this.saveFocusElement(DateInput$1.getInstance());
    });
  },
  methods: {
    onPanelChange: function onPanelChange2(value27, mode5) {
      var sValue = this.sValue;
      if (!hasProp(this, "mode")) {
        this.setState({ sMode: mode5 });
      }
      this.__emit("panelChange", value27 || sValue, mode5);
    },
    onKeyDown: function onKeyDown11(event) {
      if (event.target.nodeName.toLowerCase() === "input") {
        return void 0;
      }
      var keyCode = event.keyCode;
      var ctrlKey = event.ctrlKey || event.metaKey;
      var disabledDate = this.disabledDate, value27 = this.sValue;
      switch (keyCode) {
        case KeyCode$2.DOWN:
          this.goTime(1, "weeks");
          event.preventDefault();
          return 1;
        case KeyCode$2.UP:
          this.goTime(-1, "weeks");
          event.preventDefault();
          return 1;
        case KeyCode$2.LEFT:
          if (ctrlKey) {
            this.goTime(-1, "years");
          } else {
            this.goTime(-1, "days");
          }
          event.preventDefault();
          return 1;
        case KeyCode$2.RIGHT:
          if (ctrlKey) {
            this.goTime(1, "years");
          } else {
            this.goTime(1, "days");
          }
          event.preventDefault();
          return 1;
        case KeyCode$2.HOME:
          this.setValue(goStartMonth(value27));
          event.preventDefault();
          return 1;
        case KeyCode$2.END:
          this.setValue(goEndMonth(value27));
          event.preventDefault();
          return 1;
        case KeyCode$2.PAGE_DOWN:
          this.goTime(1, "month");
          event.preventDefault();
          return 1;
        case KeyCode$2.PAGE_UP:
          this.goTime(-1, "month");
          event.preventDefault();
          return 1;
        case KeyCode$2.ENTER:
          if (!disabledDate || !disabledDate(value27)) {
            this.onSelect(value27, {
              source: "keyboard"
            });
          }
          event.preventDefault();
          return 1;
        default:
          this.__emit("keydown", event);
          return 1;
      }
    },
    onClear: function onClear2() {
      this.onSelect(null);
      this.__emit("clear");
    },
    onOk: function onOk() {
      var sSelectedValue = this.sSelectedValue;
      if (this.isAllowedDate(sSelectedValue)) {
        this.__emit("ok", sSelectedValue);
      }
    },
    onDateInputChange: function onDateInputChange(value27) {
      this.onSelect(value27, {
        source: "dateInput"
      });
    },
    onDateInputSelect: function onDateInputSelect(value27) {
      this.onSelect(value27, {
        source: "dateInputSelect"
      });
    },
    onDateTableSelect: function onDateTableSelect(value27) {
      var timePicker = this.timePicker, sSelectedValue = this.sSelectedValue;
      if (!sSelectedValue && timePicker) {
        var timePickerProps = getOptionProps(timePicker);
        var timePickerDefaultValue = timePickerProps.defaultValue;
        if (timePickerDefaultValue) {
          syncTime(timePickerDefaultValue, value27);
        }
      }
      this.onSelect(value27);
    },
    onToday: function onToday() {
      var sValue = this.sValue;
      var now2 = getTodayTime(sValue);
      this.onSelect(now2, {
        source: "todayButton"
      });
    },
    onBlur: function onBlur4(event) {
      var _this2 = this;
      setTimeout(function() {
        var dateInput = DateInput$1.getInstance();
        var rootInstance = _this2.rootInstance;
        if (!rootInstance || rootInstance.contains(document.activeElement) || dateInput && dateInput.contains(document.activeElement)) {
          return;
        }
        _this2.$emit("blur", event);
      }, 0);
    },
    getRootDOMNode: function getRootDOMNode3() {
      return this.$el;
    },
    openTimePicker: function openTimePicker() {
      this.onPanelChange(null, "time");
    },
    closeTimePicker: function closeTimePicker() {
      this.onPanelChange(null, "date");
    },
    goTime: function goTime$1(direction, unit) {
      this.setValue(goTime(this.sValue, direction, unit));
    }
  },
  render: function render108() {
    var h = arguments[0];
    var locale3 = this.locale, prefixCls2 = this.prefixCls, disabledDate = this.disabledDate, dateInputPlaceholder = this.dateInputPlaceholder, timePicker = this.timePicker, disabledTime = this.disabledTime, showDateInput = this.showDateInput, sValue = this.sValue, sSelectedValue = this.sSelectedValue, sMode = this.sMode, renderFooter7 = this.renderFooter, inputMode = this.inputMode, inputReadOnly = this.inputReadOnly, monthCellRender = this.monthCellRender, monthCellContentRender = this.monthCellContentRender, props2 = this.$props;
    var clearIcon = getComponentFromProp(this, "clearIcon");
    var showTimePicker = sMode === "time";
    var disabledTimeConfig = showTimePicker && disabledTime && timePicker ? getTimeConfig(sSelectedValue, disabledTime) : null;
    var timePickerEle = null;
    if (timePicker && showTimePicker) {
      var timePickerOriginProps = getOptionProps(timePicker);
      var timePickerProps = {
        props: _default$6({
          showHour: true,
          showSecond: true,
          showMinute: true
        }, timePickerOriginProps, disabledTimeConfig, {
          value: sSelectedValue,
          disabledTime
        }),
        on: {
          change: this.onDateInputChange
        }
      };
      if (timePickerOriginProps.defaultValue !== void 0) {
        timePickerProps.props.defaultOpenValue = timePickerOriginProps.defaultValue;
      }
      timePickerEle = cloneElement(timePicker, timePickerProps);
    }
    var dateInputElement = showDateInput ? h(DateInput$1, {
      attrs: {
        format: this.getFormat(),
        value: sValue,
        locale: locale3,
        placeholder: dateInputPlaceholder,
        showClear: true,
        disabledTime,
        disabledDate,
        prefixCls: prefixCls2,
        selectedValue: sSelectedValue,
        clearIcon,
        inputMode,
        inputReadOnly
      },
      key: "date-input",
      on: {
        "clear": this.onClear,
        "change": this.onDateInputChange,
        "select": this.onDateInputSelect
      }
    }) : null;
    var children = [];
    if (props2.renderSidebar) {
      children.push(props2.renderSidebar());
    }
    children.push(h(
      "div",
      { "class": prefixCls2 + "-panel", key: "panel" },
      [dateInputElement, h(
        "div",
        {
          attrs: { tabIndex: props2.focusablePanel ? 0 : void 0 },
          "class": prefixCls2 + "-date-panel"
        },
        [h(CalendarHeader$1, {
          attrs: {
            locale: locale3,
            mode: sMode,
            value: sValue,
            disabledMonth: disabledDate,
            renderFooter: renderFooter7,
            showTimePicker,
            prefixCls: prefixCls2,
            monthCellRender,
            monthCellContentRender
          },
          on: {
            "valueChange": this.setValue,
            "panelChange": this.onPanelChange
          }
        }), timePicker && showTimePicker ? h(
          "div",
          { "class": prefixCls2 + "-time-picker" },
          [h(
            "div",
            { "class": prefixCls2 + "-time-picker-panel" },
            [timePickerEle]
          )]
        ) : null, h(
          "div",
          { "class": prefixCls2 + "-body" },
          [h(DateTable, {
            attrs: {
              locale: locale3,
              value: sValue,
              selectedValue: sSelectedValue,
              prefixCls: prefixCls2,
              dateRender: props2.dateRender,
              disabledDate,
              showWeekNumber: props2.showWeekNumber
            },
            on: {
              "select": this.onDateTableSelect
            }
          })]
        ), h(CalendarFooter$1, {
          attrs: {
            showOk: props2.showOk,
            mode: sMode,
            renderFooter: props2.renderFooter,
            locale: locale3,
            prefixCls: prefixCls2,
            showToday: props2.showToday,
            disabledTime,
            showTimePicker,
            showDateInput: props2.showDateInput,
            timePicker,
            selectedValue: sSelectedValue,
            timePickerDisabled: !sSelectedValue,
            value: sValue,
            disabledDate,
            okDisabled: props2.showOk !== false && (!sSelectedValue || !this.isAllowedDate(sSelectedValue))
          },
          on: {
            "ok": this.onOk,
            "select": this.onSelect,
            "today": this.onToday,
            "openTimePicker": this.openTimePicker,
            "closeTimePicker": this.closeTimePicker
          }
        })]
      )]
    ));
    return this.renderRoot({
      children,
      "class": props2.showWeekNumber ? prefixCls2 + "-week-number" : ""
    });
  }
};
var Calendar$1 = Calendar;
Vue.use(_default$3, { name: "ant-ref" });
var MonthCalendar = {
  name: "MonthCalendar",
  props: {
    locale: PropTypes.object.def(enUs),
    format: PropTypes.string,
    visible: PropTypes.bool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    monthCellRender: PropTypes.func,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    selectedValue: PropTypes.object,
    defaultSelectedValue: PropTypes.object,
    disabledDate: PropTypes.func,
    monthCellContentRender: PropTypes.func,
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    })
  },
  mixins: [BaseMixin, CommonMixin, CalendarMixin$1],
  data: function data48() {
    var props2 = this.$props;
    return {
      mode: "month",
      sValue: props2.value || props2.defaultValue || hooks(),
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  methods: {
    onKeyDown: function onKeyDown12(event) {
      var keyCode = event.keyCode;
      var ctrlKey = event.ctrlKey || event.metaKey;
      var stateValue = this.sValue;
      var disabledDate = this.disabledDate;
      var value27 = stateValue;
      switch (keyCode) {
        case KeyCode$2.DOWN:
          value27 = stateValue.clone();
          value27.add(3, "months");
          break;
        case KeyCode$2.UP:
          value27 = stateValue.clone();
          value27.add(-3, "months");
          break;
        case KeyCode$2.LEFT:
          value27 = stateValue.clone();
          if (ctrlKey) {
            value27.add(-1, "years");
          } else {
            value27.add(-1, "months");
          }
          break;
        case KeyCode$2.RIGHT:
          value27 = stateValue.clone();
          if (ctrlKey) {
            value27.add(1, "years");
          } else {
            value27.add(1, "months");
          }
          break;
        case KeyCode$2.ENTER:
          if (!disabledDate || !disabledDate(stateValue)) {
            this.onSelect(stateValue);
          }
          event.preventDefault();
          return 1;
        default:
          return void 0;
      }
      if (value27 !== stateValue) {
        this.setValue(value27);
        event.preventDefault();
        return 1;
      }
    },
    handlePanelChange: function handlePanelChange(_, mode5) {
      if (mode5 !== "date") {
        this.setState({ mode: mode5 });
      }
    }
  },
  render: function render109() {
    var h = arguments[0];
    var mode5 = this.mode, value27 = this.sValue, props2 = this.$props, $scopedSlots = this.$scopedSlots;
    var prefixCls2 = props2.prefixCls, locale3 = props2.locale, disabledDate = props2.disabledDate;
    var monthCellRender = this.monthCellRender || $scopedSlots.monthCellRender;
    var monthCellContentRender = this.monthCellContentRender || $scopedSlots.monthCellContentRender;
    var renderFooter7 = this.renderFooter || $scopedSlots.renderFooter;
    var children = h(
      "div",
      { "class": prefixCls2 + "-month-calendar-content" },
      [h(
        "div",
        { "class": prefixCls2 + "-month-header-wrap" },
        [h(CalendarHeader$1, {
          attrs: {
            prefixCls: prefixCls2,
            mode: mode5,
            value: value27,
            locale: locale3,
            disabledMonth: disabledDate,
            monthCellRender,
            monthCellContentRender
          },
          on: {
            "monthSelect": this.onSelect,
            "valueChange": this.setValue,
            "panelChange": this.handlePanelChange
          }
        })]
      ), h(CalendarFooter$1, {
        attrs: { prefixCls: prefixCls2, renderFooter: renderFooter7 }
      })]
    );
    return this.renderRoot({
      "class": props2.prefixCls + "-month-calendar",
      children
    });
  }
};
var MonthCalendar$1 = MonthCalendar;
function arrayMap$2(array3, iteratee) {
  var index2 = -1, length = array3 == null ? 0 : array3.length, result = Array(length);
  while (++index2 < length) {
    result[index2] = iteratee(array3[index2], index2, array3);
  }
  return result;
}
var _arrayMap = arrayMap$2;
var isArray$8 = isArray_1, isSymbol$2 = isSymbol_1;
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
function isKey$3(value27, object3) {
  if (isArray$8(value27)) {
    return false;
  }
  var type3 = typeof value27;
  if (type3 == "number" || type3 == "symbol" || type3 == "boolean" || value27 == null || isSymbol$2(value27)) {
    return true;
  }
  return reIsPlainProp.test(value27) || !reIsDeepProp.test(value27) || object3 != null && value27 in Object(object3);
}
var _isKey = isKey$3;
var MapCache$1 = _MapCache;
var FUNC_ERROR_TEXT$1 = "Expected a function";
function memoize$1(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  var memoized = function() {
    var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key2)) {
      return cache.get(key2);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key2, result) || cache;
    return result;
  };
  memoized.cache = new (memoize$1.Cache || MapCache$1)();
  return memoized;
}
memoize$1.Cache = MapCache$1;
var memoize_1 = memoize$1;
var memoize = memoize_1;
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped$1(func) {
  var result = memoize(func, function(key2) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key2;
  });
  var cache = result.cache;
  return result;
}
var _memoizeCapped = memoizeCapped$1;
var memoizeCapped = _memoizeCapped;
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath$1 = memoizeCapped(function(string2) {
  var result = [];
  if (string2.charCodeAt(0) === 46) {
    result.push("");
  }
  string2.replace(rePropName, function(match5, number3, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number3 || match5);
  });
  return result;
});
var _stringToPath = stringToPath$1;
var Symbol$3 = _Symbol, arrayMap$1 = _arrayMap, isArray$7 = isArray_1, isSymbol$1 = isSymbol_1;
var INFINITY$3 = 1 / 0;
var symbolProto$1 = Symbol$3 ? Symbol$3.prototype : void 0, symbolToString = symbolProto$1 ? symbolProto$1.toString : void 0;
function baseToString$2(value27) {
  if (typeof value27 == "string") {
    return value27;
  }
  if (isArray$7(value27)) {
    return arrayMap$1(value27, baseToString$2) + "";
  }
  if (isSymbol$1(value27)) {
    return symbolToString ? symbolToString.call(value27) : "";
  }
  var result = value27 + "";
  return result == "0" && 1 / value27 == -INFINITY$3 ? "-0" : result;
}
var _baseToString = baseToString$2;
var baseToString$1 = _baseToString;
function toString$3(value27) {
  return value27 == null ? "" : baseToString$1(value27);
}
var toString_1 = toString$3;
var isArray$6 = isArray_1, isKey$2 = _isKey, stringToPath = _stringToPath, toString$2 = toString_1;
function castPath$6(value27, object3) {
  if (isArray$6(value27)) {
    return value27;
  }
  return isKey$2(value27, object3) ? [value27] : stringToPath(toString$2(value27));
}
var _castPath = castPath$6;
function last$1(array3) {
  var length = array3 == null ? 0 : array3.length;
  return length ? array3[length - 1] : void 0;
}
var last_1 = last$1;
var isSymbol = isSymbol_1;
var INFINITY$2 = 1 / 0;
function toKey$6(value27) {
  if (typeof value27 == "string" || isSymbol(value27)) {
    return value27;
  }
  var result = value27 + "";
  return result == "0" && 1 / value27 == -INFINITY$2 ? "-0" : result;
}
var _toKey = toKey$6;
var castPath$5 = _castPath, toKey$5 = _toKey;
function baseGet$4(object3, path) {
  path = castPath$5(path, object3);
  var index2 = 0, length = path.length;
  while (object3 != null && index2 < length) {
    object3 = object3[toKey$5(path[index2++])];
  }
  return index2 && index2 == length ? object3 : void 0;
}
var _baseGet = baseGet$4;
function baseSlice$2(array3, start, end) {
  var index2 = -1, length = array3.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result = Array(length);
  while (++index2 < length) {
    result[index2] = array3[index2 + start];
  }
  return result;
}
var _baseSlice = baseSlice$2;
var baseGet$3 = _baseGet, baseSlice$1 = _baseSlice;
function parent$1(object3, path) {
  return path.length < 2 ? object3 : baseGet$3(object3, baseSlice$1(path, 0, -1));
}
var _parent = parent$1;
var castPath$4 = _castPath, last = last_1, parent = _parent, toKey$4 = _toKey;
function baseUnset$1(object3, path) {
  path = castPath$4(path, object3);
  object3 = parent(object3, path);
  return object3 == null || delete object3[toKey$4(last(path))];
}
var _baseUnset = baseUnset$1;
var isPlainObject$1 = isPlainObject_1;
function customOmitClone$1(value27) {
  return isPlainObject$1(value27) ? void 0 : value27;
}
var _customOmitClone = customOmitClone$1;
var Symbol$2 = _Symbol, isArguments$2 = isArguments_1, isArray$5 = isArray_1;
var spreadableSymbol = Symbol$2 ? Symbol$2.isConcatSpreadable : void 0;
function isFlattenable$1(value27) {
  return isArray$5(value27) || isArguments$2(value27) || !!(spreadableSymbol && value27 && value27[spreadableSymbol]);
}
var _isFlattenable = isFlattenable$1;
var arrayPush = _arrayPush, isFlattenable = _isFlattenable;
function baseFlatten$1(array3, depth, predicate, isStrict, result) {
  var index2 = -1, length = array3.length;
  predicate || (predicate = isFlattenable);
  result || (result = []);
  while (++index2 < length) {
    var value27 = array3[index2];
    if (depth > 0 && predicate(value27)) {
      if (depth > 1) {
        baseFlatten$1(value27, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value27);
      }
    } else if (!isStrict) {
      result[result.length] = value27;
    }
  }
  return result;
}
var _baseFlatten = baseFlatten$1;
var baseFlatten = _baseFlatten;
function flatten$1(array3) {
  var length = array3 == null ? 0 : array3.length;
  return length ? baseFlatten(array3, 1) : [];
}
var flatten_1 = flatten$1;
function apply$1(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var _apply = apply$1;
var apply = _apply;
var nativeMax$1 = Math.max;
function overRest$2(func, start, transform) {
  start = nativeMax$1(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index2 = -1, length = nativeMax$1(args.length - start, 0), array3 = Array(length);
    while (++index2 < length) {
      array3[index2] = args[start + index2];
    }
    index2 = -1;
    var otherArgs = Array(start + 1);
    while (++index2 < start) {
      otherArgs[index2] = args[index2];
    }
    otherArgs[start] = transform(array3);
    return apply(func, this, otherArgs);
  };
}
var _overRest = overRest$2;
function constant$1(value27) {
  return function() {
    return value27;
  };
}
var constant_1 = constant$1;
function identity$4(value27) {
  return value27;
}
var identity_1 = identity$4;
var constant = constant_1, defineProperty4 = _defineProperty$2, identity$3 = identity_1;
var baseSetToString$1 = !defineProperty4 ? identity$3 : function(func, string2) {
  return defineProperty4(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant(string2),
    "writable": true
  });
};
var _baseSetToString = baseSetToString$1;
var HOT_COUNT = 800, HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut$1(func) {
  var count2 = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count2 >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count2 = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var _shortOut = shortOut$1;
var baseSetToString = _baseSetToString, shortOut = _shortOut;
var setToString$2 = shortOut(baseSetToString);
var _setToString = setToString$2;
var flatten = flatten_1, overRest$1 = _overRest, setToString$1 = _setToString;
function flatRest$2(func) {
  return setToString$1(overRest$1(func, void 0, flatten), func + "");
}
var _flatRest = flatRest$2;
var arrayMap = _arrayMap, baseClone = _baseClone, baseUnset = _baseUnset, castPath$3 = _castPath, copyObject$1 = _copyObject, customOmitClone = _customOmitClone, flatRest$1 = _flatRest, getAllKeysIn = _getAllKeysIn;
var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
var omit = flatRest$1(function(object3, paths) {
  var result = {};
  if (object3 == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path) {
    path = castPath$3(path, object3);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject$1(object3, getAllKeysIn(object3), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});
var omit_1 = omit;
var omit$1 = omit_1;
function createChainedFunction() {
  var args = [].slice.call(arguments, 0);
  if (args.length === 1) {
    return args[0];
  }
  return function chainedFunction() {
    for (var i = 0; i < args.length; i++) {
      if (args[i] && args[i].apply) {
        args[i].apply(this, arguments);
      }
    }
  };
}
var autoAdjustOverflow$1 = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset$1 = [0, 0];
var placements$2 = {
  bottomLeft: {
    points: ["tl", "tl"],
    overflow: autoAdjustOverflow$1,
    offset: [0, -3],
    targetOffset: targetOffset$1
  },
  bottomRight: {
    points: ["tr", "tr"],
    overflow: autoAdjustOverflow$1,
    offset: [0, -3],
    targetOffset: targetOffset$1
  },
  topRight: {
    points: ["br", "br"],
    overflow: autoAdjustOverflow$1,
    offset: [0, 3],
    targetOffset: targetOffset$1
  },
  topLeft: {
    points: ["bl", "bl"],
    overflow: autoAdjustOverflow$1,
    offset: [0, 3],
    targetOffset: targetOffset$1
  }
};
var placements$3 = placements$2;
var TimeType = {
  validator: function validator9(value27) {
    if (Array.isArray(value27)) {
      return value27.length === 0 || value27.findIndex(function(val) {
        return !isNil$1(val) && !hooks.isMoment(val);
      }) === -1;
    } else {
      return isNil$1(value27) || hooks.isMoment(value27);
    }
  }
};
var Picker = {
  name: "Picker",
  props: {
    animation: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),
    disabled: PropTypes.bool,
    transitionName: PropTypes.string,
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.func]),
    children: PropTypes.func,
    getCalendarContainer: PropTypes.func,
    calendar: PropTypes.any,
    open: PropTypes.bool,
    defaultOpen: PropTypes.bool.def(false),
    prefixCls: PropTypes.string.def("rc-calendar-picker"),
    placement: PropTypes.any.def("bottomLeft"),
    value: TimeType,
    defaultValue: TimeType,
    align: PropTypes.object.def(function() {
      return {};
    }),
    dropdownClassName: PropTypes.string,
    dateRender: PropTypes.func
  },
  mixins: [BaseMixin],
  data: function data49() {
    var props2 = this.$props;
    var open6 = void 0;
    if (hasProp(this, "open")) {
      open6 = props2.open;
    } else {
      open6 = props2.defaultOpen;
    }
    var value27 = props2.value || props2.defaultValue;
    return {
      sOpen: open6,
      sValue: value27
    };
  },
  watch: {
    value: function value17(val) {
      this.setState({
        sValue: val
      });
    },
    open: function open2(val) {
      this.setState({
        sOpen: val
      });
    }
  },
  mounted: function mounted33() {
    this.preSOpen = this.sOpen;
  },
  updated: function updated23() {
    if (!this.preSOpen && this.sOpen) {
      this.focusTimeout = setTimeout(this.focusCalendar, 0);
    }
    this.preSOpen = this.sOpen;
  },
  beforeDestroy: function beforeDestroy26() {
    clearTimeout(this.focusTimeout);
  },
  methods: {
    onCalendarKeyDown: function onCalendarKeyDown(event) {
      if (event.keyCode === KeyCode$2.ESC) {
        event.stopPropagation();
        this.closeCalendar(this.focus);
      }
    },
    onCalendarSelect: function onCalendarSelect(value27) {
      var cause = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var props2 = this.$props;
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value27
        });
      }
      var calendarProps = getOptionProps(props2.calendar);
      if (cause.source === "keyboard" || cause.source === "dateInputSelect" || !calendarProps.timePicker && cause.source !== "dateInput" || cause.source === "todayButton") {
        this.closeCalendar(this.focus);
      }
      this.__emit("change", value27);
    },
    onKeyDown: function onKeyDown13(event) {
      if (!this.sOpen && (event.keyCode === KeyCode$2.DOWN || event.keyCode === KeyCode$2.ENTER)) {
        this.openCalendar();
        event.preventDefault();
      }
    },
    onCalendarOk: function onCalendarOk() {
      this.closeCalendar(this.focus);
    },
    onCalendarClear: function onCalendarClear() {
      this.closeCalendar(this.focus);
    },
    onCalendarBlur: function onCalendarBlur() {
      this.setOpen(false);
    },
    onVisibleChange: function onVisibleChange5(open6) {
      this.setOpen(open6);
    },
    getCalendarElement: function getCalendarElement() {
      var props2 = this.$props;
      var calendarProps = getOptionProps(props2.calendar);
      var calendarEvents = getEvents(props2.calendar);
      var value27 = this.sValue;
      var defaultValue = value27;
      var extraProps = {
        ref: "calendarInstance",
        props: {
          defaultValue: defaultValue || calendarProps.defaultValue,
          selectedValue: value27
        },
        on: {
          keydown: this.onCalendarKeyDown,
          ok: createChainedFunction(calendarEvents.ok, this.onCalendarOk),
          select: createChainedFunction(calendarEvents.select, this.onCalendarSelect),
          clear: createChainedFunction(calendarEvents.clear, this.onCalendarClear),
          blur: createChainedFunction(calendarEvents.blur, this.onCalendarBlur)
        }
      };
      return cloneElement(props2.calendar, extraProps);
    },
    setOpen: function setOpen(open6, callback) {
      if (this.sOpen !== open6) {
        if (!hasProp(this, "open")) {
          this.setState({
            sOpen: open6
          }, callback);
        }
        this.__emit("openChange", open6);
      }
    },
    openCalendar: function openCalendar(callback) {
      this.setOpen(true, callback);
    },
    closeCalendar: function closeCalendar(callback) {
      this.setOpen(false, callback);
    },
    focus: function focus14() {
      if (!this.sOpen) {
        this.$el.focus();
      }
    },
    focusCalendar: function focusCalendar() {
      if (this.sOpen && this.calendarInstance && this.calendarInstance.componentInstance) {
        this.calendarInstance.componentInstance.focus();
      }
    }
  },
  render: function render110() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var style3 = getStyle$1(this);
    var prefixCls2 = props2.prefixCls, placement2 = props2.placement, getCalendarContainer = props2.getCalendarContainer, align = props2.align, animation2 = props2.animation, disabled = props2.disabled, dropdownClassName = props2.dropdownClassName, transitionName2 = props2.transitionName;
    var sValue = this.sValue, sOpen2 = this.sOpen;
    var children = this.$scopedSlots["default"];
    var childrenState = {
      value: sValue,
      open: sOpen2
    };
    if (this.sOpen || !this.calendarInstance) {
      this.calendarInstance = this.getCalendarElement();
    }
    return h(
      Trigger,
      {
        attrs: {
          popupAlign: align,
          builtinPlacements: placements$3,
          popupPlacement: placement2,
          action: disabled && !sOpen2 ? [] : ["click"],
          destroyPopupOnHide: true,
          getPopupContainer: getCalendarContainer,
          popupStyle: style3,
          popupAnimation: animation2,
          popupTransitionName: transitionName2,
          popupVisible: sOpen2,
          prefixCls: prefixCls2,
          popupClassName: dropdownClassName
        },
        on: {
          "popupVisibleChange": this.onVisibleChange
        }
      },
      [h(
        "template",
        { slot: "popup" },
        [this.calendarInstance]
      ), cloneElement(children(childrenState, props2), { on: { keydown: this.onKeyDown } })]
    );
  }
};
var VcDatePicker = Picker;
function formatDate(value27, format3) {
  if (!value27) {
    return "";
  }
  if (Array.isArray(format3)) {
    format3 = format3[0];
  }
  if (typeof format3 === "function") {
    var result = format3(value27);
    if (typeof result === "string") {
      return result;
    } else {
      throw new Error("The function of format does not return a string");
    }
  }
  return value27.format(format3);
}
function noop$w() {
}
function createPicker(TheCalendar, props2) {
  return {
    props: initDefaultProps(props2, {
      allowClear: true,
      showToday: true
    }),
    mixins: [BaseMixin],
    model: {
      prop: "value",
      event: "change"
    },
    inject: {
      configProvider: { "default": function _default130() {
        return ConfigConsumerProps;
      } }
    },
    data: function data109() {
      var value27 = this.value || this.defaultValue;
      if (value27 && !interopDefault(moment).isMoment(value27)) {
        throw new Error("The value/defaultValue of DatePicker or MonthPicker must be a moment object");
      }
      return {
        sValue: value27,
        showDate: value27,
        _open: !!this.open
      };
    },
    watch: {
      open: function open6(val) {
        var props3 = getOptionProps(this);
        var state = {};
        state._open = val;
        if ("value" in props3 && !val && props3.value !== this.showDate) {
          state.showDate = props3.value;
        }
        this.setState(state);
      },
      value: function value27(val) {
        var state = {};
        state.sValue = val;
        if (val !== this.sValue) {
          state.showDate = val;
        }
        this.setState(state);
      },
      _open: function _open2(val, oldVal) {
        var _this = this;
        this.$nextTick(function() {
          if (!hasProp(_this, "open") && oldVal && !val) {
            _this.focus();
          }
        });
      }
    },
    methods: {
      clearSelection: function clearSelection4(e) {
        e.preventDefault();
        e.stopPropagation();
        this.handleChange(null);
      },
      handleChange: function handleChange15(value27) {
        if (!hasProp(this, "value")) {
          this.setState({
            sValue: value27,
            showDate: value27
          });
        }
        this.$emit("change", value27, formatDate(value27, this.format));
      },
      handleCalendarChange: function handleCalendarChange(value27) {
        this.setState({ showDate: value27 });
      },
      handleOpenChange: function handleOpenChange4(open6) {
        var props3 = getOptionProps(this);
        if (!("open" in props3)) {
          this.setState({ _open: open6 });
        }
        this.$emit("openChange", open6);
      },
      focus: function focus35() {
        this.$refs.input.focus();
      },
      blur: function blur32() {
        this.$refs.input.blur();
      },
      renderFooter: function renderFooter7() {
        var h = this.$createElement;
        var $scopedSlots = this.$scopedSlots, $slots = this.$slots, prefixCls2 = this._prefixCls;
        var renderExtraFooter = this.renderExtraFooter || $scopedSlots.renderExtraFooter || $slots.renderExtraFooter;
        return renderExtraFooter ? h(
          "div",
          { "class": prefixCls2 + "-footer-extra" },
          [typeof renderExtraFooter === "function" ? renderExtraFooter.apply(void 0, arguments) : renderExtraFooter]
        ) : null;
      },
      onMouseEnter: function onMouseEnter6(e) {
        this.$emit("mouseenter", e);
      },
      onMouseLeave: function onMouseLeave8(e) {
        this.$emit("mouseleave", e);
      }
    },
    render: function render249() {
      var _classNames, _this2 = this;
      var h = arguments[0];
      var $scopedSlots = this.$scopedSlots;
      var _$data = this.$data, value27 = _$data.sValue, showDate = _$data.showDate, open6 = _$data._open;
      var suffixIcon = getComponentFromProp(this, "suffixIcon");
      suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
      var listeners = getListeners(this);
      var _listeners$panelChang = listeners.panelChange, panelChange = _listeners$panelChang === void 0 ? noop$w : _listeners$panelChang, _listeners$focus = listeners.focus, focus35 = _listeners$focus === void 0 ? noop$w : _listeners$focus, _listeners$blur = listeners.blur, blur32 = _listeners$blur === void 0 ? noop$w : _listeners$blur, _listeners$ok = listeners.ok, ok = _listeners$ok === void 0 ? noop$w : _listeners$ok;
      var props3 = getOptionProps(this);
      var customizePrefixCls = props3.prefixCls, locale3 = props3.locale, localeCode = props3.localeCode, inputReadOnly = props3.inputReadOnly;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("calendar", customizePrefixCls);
      this._prefixCls = prefixCls2;
      var dateRender = props3.dateRender || $scopedSlots.dateRender;
      var monthCellContentRender = props3.monthCellContentRender || $scopedSlots.monthCellContentRender;
      var placeholder = "placeholder" in props3 ? props3.placeholder : locale3.lang.placeholder;
      var disabledTime = props3.showTime ? props3.disabledTime : null;
      var calendarClassName = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-time", props3.showTime), _default$8(_classNames, prefixCls2 + "-month", MonthCalendar$1 === TheCalendar), _classNames));
      if (value27 && localeCode) {
        value27.locale(localeCode);
      }
      var pickerProps = { props: {}, on: {} };
      var calendarProps = { props: {}, on: {} };
      var pickerStyle = {};
      if (props3.showTime) {
        calendarProps.on.select = this.handleChange;
        pickerStyle.minWidth = "195px";
      } else {
        pickerProps.on.change = this.handleChange;
      }
      if ("mode" in props3) {
        calendarProps.props.mode = props3.mode;
      }
      var theCalendarProps = mergeProps(calendarProps, {
        props: {
          disabledDate: props3.disabledDate,
          disabledTime,
          locale: locale3.lang,
          timePicker: props3.timePicker,
          defaultValue: props3.defaultPickerValue || interopDefault(moment)(),
          dateInputPlaceholder: placeholder,
          prefixCls: prefixCls2,
          dateRender,
          format: props3.format,
          showToday: props3.showToday,
          monthCellContentRender,
          renderFooter: this.renderFooter,
          value: showDate,
          inputReadOnly
        },
        on: {
          ok,
          panelChange,
          change: this.handleCalendarChange
        },
        "class": calendarClassName,
        scopedSlots: $scopedSlots
      });
      var calendar2 = h(TheCalendar, theCalendarProps);
      var clearIcon = !props3.disabled && props3.allowClear && value27 ? h(Icon$1, {
        attrs: {
          type: "close-circle",
          theme: "filled"
        },
        "class": prefixCls2 + "-picker-clear",
        on: {
          "click": this.clearSelection
        }
      }) : null;
      var inputIcon = suffixIcon && (isValidElement(suffixIcon) ? cloneElement(suffixIcon, {
        "class": prefixCls2 + "-picker-icon"
      }) : h(
        "span",
        { "class": prefixCls2 + "-picker-icon" },
        [suffixIcon]
      )) || h(Icon$1, {
        attrs: { type: "calendar" },
        "class": prefixCls2 + "-picker-icon"
      });
      var input = function input2(_ref) {
        var inputValue = _ref.value;
        return h("div", [h("input", {
          ref: "input",
          attrs: {
            disabled: props3.disabled,
            readOnly: true,
            placeholder,
            tabIndex: props3.tabIndex,
            name: _this2.name
          },
          on: {
            "focus": focus35,
            "blur": blur32
          },
          domProps: {
            "value": formatDate(inputValue, _this2.format)
          },
          "class": props3.pickerInputClass
        }), clearIcon, inputIcon]);
      };
      var vcDatePickerProps = {
        props: _default$6({}, props3, pickerProps.props, {
          calendar: calendar2,
          value: value27,
          prefixCls: prefixCls2 + "-picker-container"
        }),
        on: _default$6({}, omit$1(listeners, "change"), pickerProps.on, {
          open: open6,
          onOpenChange: this.handleOpenChange
        }),
        style: props3.popupStyle,
        scopedSlots: _default$6({ "default": input }, $scopedSlots)
      };
      return h(
        "span",
        {
          "class": props3.pickerClass,
          style: pickerStyle,
          on: {
            "mouseenter": this.onMouseEnter,
            "mouseleave": this.onMouseLeave
          }
        },
        [h(VcDatePicker, vcDatePickerProps)]
      );
    }
  };
}
var Header$1 = {
  mixins: [BaseMixin],
  props: {
    format: PropTypes.string,
    prefixCls: PropTypes.string,
    disabledDate: PropTypes.func,
    placeholder: PropTypes.string,
    clearText: PropTypes.string,
    value: PropTypes.object,
    inputReadOnly: PropTypes.bool.def(false),
    hourOptions: PropTypes.array,
    minuteOptions: PropTypes.array,
    secondOptions: PropTypes.array,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    allowEmpty: PropTypes.bool,
    defaultOpenValue: PropTypes.object,
    currentSelectPanel: PropTypes.string,
    focusOnOpen: PropTypes.bool,
    clearIcon: PropTypes.any
  },
  data: function data50() {
    var value27 = this.value, format3 = this.format;
    return {
      str: value27 && value27.format(format3) || "",
      invalid: false
    };
  },
  mounted: function mounted34() {
    var _this = this;
    if (this.focusOnOpen) {
      var requestAnimationFrame2 = window.requestAnimationFrame || window.setTimeout;
      requestAnimationFrame2(function() {
        _this.$refs.input.focus();
        _this.$refs.input.select();
      });
    }
  },
  watch: {
    value: function value18(val) {
      var _this2 = this;
      this.$nextTick(function() {
        _this2.setState({
          str: val && val.format(_this2.format) || "",
          invalid: false
        });
      });
    }
  },
  methods: {
    onInputChange: function onInputChange3(e) {
      var _e$target = e.target, str = _e$target.value, composing = _e$target.composing;
      var _str = this.str, oldStr = _str === void 0 ? "" : _str;
      if (e.isComposing || composing || oldStr === str)
        return;
      this.setState({
        str
      });
      var format3 = this.format, hourOptions = this.hourOptions, minuteOptions = this.minuteOptions, secondOptions = this.secondOptions, disabledHours3 = this.disabledHours, disabledMinutes2 = this.disabledMinutes, disabledSeconds2 = this.disabledSeconds, originalValue = this.value;
      if (str) {
        var value27 = this.getProtoValue().clone();
        var parsed = hooks(str, format3, true);
        if (!parsed.isValid()) {
          this.setState({
            invalid: true
          });
          return;
        }
        value27.hour(parsed.hour()).minute(parsed.minute()).second(parsed.second());
        if (hourOptions.indexOf(value27.hour()) < 0 || minuteOptions.indexOf(value27.minute()) < 0 || secondOptions.indexOf(value27.second()) < 0) {
          this.setState({
            invalid: true
          });
          return;
        }
        var disabledHourOptions = disabledHours3();
        var disabledMinuteOptions = disabledMinutes2(value27.hour());
        var disabledSecondOptions = disabledSeconds2(value27.hour(), value27.minute());
        if (disabledHourOptions && disabledHourOptions.indexOf(value27.hour()) >= 0 || disabledMinuteOptions && disabledMinuteOptions.indexOf(value27.minute()) >= 0 || disabledSecondOptions && disabledSecondOptions.indexOf(value27.second()) >= 0) {
          this.setState({
            invalid: true
          });
          return;
        }
        if (originalValue) {
          if (originalValue.hour() !== value27.hour() || originalValue.minute() !== value27.minute() || originalValue.second() !== value27.second()) {
            var changedValue = originalValue.clone();
            changedValue.hour(value27.hour());
            changedValue.minute(value27.minute());
            changedValue.second(value27.second());
            this.__emit("change", changedValue);
          }
        } else if (originalValue !== value27) {
          this.__emit("change", value27);
        }
      } else {
        this.__emit("change", null);
      }
      this.setState({
        invalid: false
      });
    },
    onKeyDown: function onKeyDown14(e) {
      if (e.keyCode === 27) {
        this.__emit("esc");
      }
      this.__emit("keydown", e);
    },
    getProtoValue: function getProtoValue() {
      return this.value || this.defaultOpenValue;
    },
    getInput: function getInput() {
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, placeholder = this.placeholder, inputReadOnly = this.inputReadOnly, invalid = this.invalid, str = this.str;
      var invalidClass = invalid ? prefixCls2 + "-input-invalid" : "";
      return h("input", _mergeJSXProps([{
        "class": prefixCls2 + "-input " + invalidClass,
        ref: "input",
        on: {
          "keydown": this.onKeyDown,
          "input": this.onInputChange
        },
        domProps: {
          "value": str
        },
        attrs: {
          placeholder,
          readOnly: !!inputReadOnly
        }
      }, {
        directives: [{
          name: "ant-input"
        }]
      }]));
    }
  },
  render: function render111() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls;
    return h(
      "div",
      { "class": prefixCls2 + "-input-wrap" },
      [this.getInput()]
    );
  }
};
var Header$2 = Header$1;
function noop$v() {
}
var scrollTo = function scrollTo2(element, to2, duration2) {
  if (duration2 <= 0) {
    raf$2(function() {
      element.scrollTop = to2;
    });
    return;
  }
  var difference = to2 - element.scrollTop;
  var perTick = difference / duration2 * 10;
  raf$2(function() {
    element.scrollTop += perTick;
    if (element.scrollTop === to2)
      return;
    scrollTo2(element, to2, duration2 - 10);
  });
};
var Select$2 = {
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    options: PropTypes.array,
    selectedIndex: PropTypes.number,
    type: PropTypes.string
  },
  data: function data51() {
    return {
      active: false
    };
  },
  mounted: function mounted35() {
    var _this = this;
    this.$nextTick(function() {
      _this.scrollToSelected(0);
    });
  },
  watch: {
    selectedIndex: function selectedIndex() {
      var _this2 = this;
      this.$nextTick(function() {
        _this2.scrollToSelected(120);
      });
    }
  },
  methods: {
    onSelect: function onSelect6(value27) {
      var type3 = this.type;
      this.__emit("select", type3, value27);
    },
    onEsc: function onEsc(e) {
      this.__emit("esc", e);
    },
    getOptions: function getOptions2() {
      var _this3 = this;
      var h = this.$createElement;
      var options2 = this.options, selectedIndex2 = this.selectedIndex, prefixCls2 = this.prefixCls;
      return options2.map(function(item, index2) {
        var _classnames;
        var cls = classNames((_classnames = {}, _default$8(_classnames, prefixCls2 + "-select-option-selected", selectedIndex2 === index2), _default$8(_classnames, prefixCls2 + "-select-option-disabled", item.disabled), _classnames));
        var onClick15 = item.disabled ? noop$v : function() {
          _this3.onSelect(item.value);
        };
        var onKeyDown25 = function onKeyDown26(e) {
          if (e.keyCode === 13)
            onClick15();
          else if (e.keyCode === 27)
            _this3.onEsc();
        };
        return h(
          "li",
          {
            attrs: {
              role: "button",
              disabled: item.disabled,
              tabIndex: "0"
            },
            on: {
              "click": onClick15,
              "keydown": onKeyDown25
            },
            "class": cls,
            key: index2
          },
          [item.value]
        );
      });
    },
    handleMouseEnter: function handleMouseEnter2(e) {
      this.setState({ active: true });
      this.__emit("mouseenter", e);
    },
    handleMouseLeave: function handleMouseLeave() {
      this.setState({ active: false });
    },
    scrollToSelected: function scrollToSelected(duration2) {
      var select2 = this.$el;
      var list = this.$refs.list;
      if (!list) {
        return;
      }
      var index2 = this.selectedIndex;
      if (index2 < 0) {
        index2 = 0;
      }
      var topOption = list.children[index2];
      var to2 = topOption.offsetTop;
      scrollTo(select2, to2, duration2);
    }
  },
  render: function render112() {
    var _cls;
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, options2 = this.options, active = this.active;
    if (options2.length === 0) {
      return null;
    }
    var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-select", 1), _default$8(_cls, prefixCls2 + "-select-active", active), _cls);
    return h(
      "div",
      {
        "class": cls,
        on: {
          "mouseenter": this.handleMouseEnter,
          "mouseleave": this.handleMouseLeave
        }
      },
      [h(
        "ul",
        { ref: "list" },
        [this.getOptions()]
      )]
    );
  }
};
var Select$3 = Select$2;
var formatOption = function formatOption2(option, disabledOptions) {
  var value27 = "" + option;
  if (option < 10) {
    value27 = "0" + option;
  }
  var disabled = false;
  if (disabledOptions && disabledOptions.indexOf(option) >= 0) {
    disabled = true;
  }
  return {
    value: value27,
    disabled
  };
};
var Combobox = {
  mixins: [BaseMixin],
  name: "Combobox",
  props: {
    format: PropTypes.string,
    defaultOpenValue: PropTypes.object,
    prefixCls: PropTypes.string,
    value: PropTypes.object,
    showHour: PropTypes.bool,
    showMinute: PropTypes.bool,
    showSecond: PropTypes.bool,
    hourOptions: PropTypes.array,
    minuteOptions: PropTypes.array,
    secondOptions: PropTypes.array,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    use12Hours: PropTypes.bool,
    isAM: PropTypes.bool
  },
  methods: {
    onItemChange: function onItemChange(type3, itemValue) {
      var defaultOpenValue = this.defaultOpenValue, use12Hours = this.use12Hours, propValue = this.value, isAM2 = this.isAM;
      var value27 = (propValue || defaultOpenValue).clone();
      if (type3 === "hour") {
        if (use12Hours) {
          if (isAM2) {
            value27.hour(+itemValue % 12);
          } else {
            value27.hour(+itemValue % 12 + 12);
          }
        } else {
          value27.hour(+itemValue);
        }
      } else if (type3 === "minute") {
        value27.minute(+itemValue);
      } else if (type3 === "ampm") {
        var ampm = itemValue.toUpperCase();
        if (use12Hours) {
          if (ampm === "PM" && value27.hour() < 12) {
            value27.hour(value27.hour() % 12 + 12);
          }
          if (ampm === "AM") {
            if (value27.hour() >= 12) {
              value27.hour(value27.hour() - 12);
            }
          }
        }
        this.__emit("amPmChange", ampm);
      } else {
        value27.second(+itemValue);
      }
      this.__emit("change", value27);
    },
    onEnterSelectPanel: function onEnterSelectPanel(range2) {
      this.__emit("currentSelectPanelChange", range2);
    },
    onEsc: function onEsc2(e) {
      this.__emit("esc", e);
    },
    getHourSelect: function getHourSelect(hour) {
      var _this = this;
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, hourOptions = this.hourOptions, disabledHours3 = this.disabledHours, showHour = this.showHour, use12Hours = this.use12Hours;
      if (!showHour) {
        return null;
      }
      var disabledOptions = disabledHours3();
      var hourOptionsAdj = void 0;
      var hourAdj = void 0;
      if (use12Hours) {
        hourOptionsAdj = [12].concat(hourOptions.filter(function(h2) {
          return h2 < 12 && h2 > 0;
        }));
        hourAdj = hour % 12 || 12;
      } else {
        hourOptionsAdj = hourOptions;
        hourAdj = hour;
      }
      return h(Select$3, {
        attrs: {
          prefixCls: prefixCls2,
          options: hourOptionsAdj.map(function(option) {
            return formatOption(option, disabledOptions);
          }),
          selectedIndex: hourOptionsAdj.indexOf(hourAdj),
          type: "hour"
        },
        on: {
          "select": this.onItemChange,
          "mouseenter": function mouseenter() {
            return _this.onEnterSelectPanel("hour");
          },
          "esc": this.onEsc
        }
      });
    },
    getMinuteSelect: function getMinuteSelect(minute) {
      var _this2 = this;
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, minuteOptions = this.minuteOptions, disabledMinutes2 = this.disabledMinutes, defaultOpenValue = this.defaultOpenValue, showMinute = this.showMinute, propValue = this.value;
      if (!showMinute) {
        return null;
      }
      var value27 = propValue || defaultOpenValue;
      var disabledOptions = disabledMinutes2(value27.hour());
      return h(Select$3, {
        attrs: {
          prefixCls: prefixCls2,
          options: minuteOptions.map(function(option) {
            return formatOption(option, disabledOptions);
          }),
          selectedIndex: minuteOptions.indexOf(minute),
          type: "minute"
        },
        on: {
          "select": this.onItemChange,
          "mouseenter": function mouseenter() {
            return _this2.onEnterSelectPanel("minute");
          },
          "esc": this.onEsc
        }
      });
    },
    getSecondSelect: function getSecondSelect(second) {
      var _this3 = this;
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, secondOptions = this.secondOptions, disabledSeconds2 = this.disabledSeconds, showSecond = this.showSecond, defaultOpenValue = this.defaultOpenValue, propValue = this.value;
      if (!showSecond) {
        return null;
      }
      var value27 = propValue || defaultOpenValue;
      var disabledOptions = disabledSeconds2(value27.hour(), value27.minute());
      return h(Select$3, {
        attrs: {
          prefixCls: prefixCls2,
          options: secondOptions.map(function(option) {
            return formatOption(option, disabledOptions);
          }),
          selectedIndex: secondOptions.indexOf(second),
          type: "second"
        },
        on: {
          "select": this.onItemChange,
          "mouseenter": function mouseenter() {
            return _this3.onEnterSelectPanel("second");
          },
          "esc": this.onEsc
        }
      });
    },
    getAMPMSelect: function getAMPMSelect() {
      var _this4 = this;
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, use12Hours = this.use12Hours, format3 = this.format, isAM2 = this.isAM;
      if (!use12Hours) {
        return null;
      }
      var AMPMOptions = ["am", "pm"].map(function(c) {
        return format3.match(/\sA/) ? c.toUpperCase() : c;
      }).map(function(c) {
        return { value: c };
      });
      var selected = isAM2 ? 0 : 1;
      return h(Select$3, {
        attrs: {
          prefixCls: prefixCls2,
          options: AMPMOptions,
          selectedIndex: selected,
          type: "ampm"
        },
        on: {
          "select": this.onItemChange,
          "mouseenter": function mouseenter() {
            return _this4.onEnterSelectPanel("ampm");
          },
          "esc": this.onEsc
        }
      });
    }
  },
  render: function render113() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, defaultOpenValue = this.defaultOpenValue, propValue = this.value;
    var value27 = propValue || defaultOpenValue;
    return h(
      "div",
      { "class": prefixCls2 + "-combobox" },
      [this.getHourSelect(value27.hour()), this.getMinuteSelect(value27.minute()), this.getSecondSelect(value27.second()), this.getAMPMSelect(value27.hour())]
    );
  }
};
var Combobox$1 = Combobox;
function noop$u() {
}
function generateOptions$1(length, disabledOptions, hideDisabledOptions) {
  var step3 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1;
  var arr = [];
  for (var value27 = 0; value27 < length; value27 += step3) {
    if (!disabledOptions || disabledOptions.indexOf(value27) < 0 || !hideDisabledOptions) {
      arr.push(value27);
    }
  }
  return arr;
}
function toNearestValidTime(time, hourOptions, minuteOptions, secondOptions) {
  var hour = hourOptions.slice().sort(function(a, b) {
    return Math.abs(time.hour() - a) - Math.abs(time.hour() - b);
  })[0];
  var minute = minuteOptions.slice().sort(function(a, b) {
    return Math.abs(time.minute() - a) - Math.abs(time.minute() - b);
  })[0];
  var second = secondOptions.slice().sort(function(a, b) {
    return Math.abs(time.second() - a) - Math.abs(time.second() - b);
  })[0];
  return hooks(hour + ":" + minute + ":" + second, "HH:mm:ss");
}
var Panel = {
  mixins: [BaseMixin],
  props: {
    clearText: PropTypes.string,
    prefixCls: PropTypes.string.def("rc-time-picker-panel"),
    defaultOpenValue: {
      type: Object,
      "default": function _default61() {
        return hooks();
      }
    },
    value: PropTypes.any,
    defaultValue: PropTypes.any,
    placeholder: PropTypes.string,
    format: PropTypes.string,
    inputReadOnly: PropTypes.bool.def(false),
    disabledHours: PropTypes.func.def(noop$u),
    disabledMinutes: PropTypes.func.def(noop$u),
    disabledSeconds: PropTypes.func.def(noop$u),
    hideDisabledOptions: PropTypes.bool,
    allowEmpty: PropTypes.bool,
    showHour: PropTypes.bool,
    showMinute: PropTypes.bool,
    showSecond: PropTypes.bool,
    use12Hours: PropTypes.bool.def(false),
    hourStep: PropTypes.number,
    minuteStep: PropTypes.number,
    secondStep: PropTypes.number,
    addon: PropTypes.func.def(noop$u),
    focusOnOpen: PropTypes.bool,
    clearIcon: PropTypes.any
  },
  data: function data52() {
    return {
      sValue: this.value,
      selectionRange: [],
      currentSelectPanel: ""
    };
  },
  watch: {
    value: function value19(val) {
      this.setState({
        sValue: val
      });
    }
  },
  methods: {
    onChange: function onChange5(newValue) {
      this.setState({ sValue: newValue });
      this.__emit("change", newValue);
    },
    onAmPmChange: function onAmPmChange(ampm) {
      this.__emit("amPmChange", ampm);
    },
    onCurrentSelectPanelChange: function onCurrentSelectPanelChange(currentSelectPanel) {
      this.setState({ currentSelectPanel });
    },
    close: function close2() {
      this.__emit("esc");
    },
    onEsc: function onEsc3(e) {
      this.__emit("esc", e);
    },
    disabledHours2: function disabledHours2() {
      var use12Hours = this.use12Hours, disabledHours3 = this.disabledHours;
      var disabledOptions = disabledHours3();
      if (use12Hours && Array.isArray(disabledOptions)) {
        if (this.isAM()) {
          disabledOptions = disabledOptions.filter(function(h) {
            return h < 12;
          }).map(function(h) {
            return h === 0 ? 12 : h;
          });
        } else {
          disabledOptions = disabledOptions.map(function(h) {
            return h === 12 ? 12 : h - 12;
          });
        }
      }
      return disabledOptions;
    },
    isAM: function isAM() {
      var value27 = this.sValue || this.defaultOpenValue;
      return value27.hour() >= 0 && value27.hour() < 12;
    }
  },
  render: function render114() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, placeholder = this.placeholder, disabledMinutes2 = this.disabledMinutes, addon = this.addon, disabledSeconds2 = this.disabledSeconds, hideDisabledOptions = this.hideDisabledOptions, showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, format3 = this.format, defaultOpenValue = this.defaultOpenValue, clearText = this.clearText, use12Hours = this.use12Hours, focusOnOpen = this.focusOnOpen, hourStep = this.hourStep, minuteStep = this.minuteStep, secondStep = this.secondStep, inputReadOnly = this.inputReadOnly, sValue = this.sValue, currentSelectPanel = this.currentSelectPanel;
    var clearIcon = getComponentFromProp(this, "clearIcon");
    var _getListeners = getListeners(this), _getListeners$esc = _getListeners.esc, esc = _getListeners$esc === void 0 ? noop$u : _getListeners$esc, _getListeners$keydown = _getListeners.keydown, keydown = _getListeners$keydown === void 0 ? noop$u : _getListeners$keydown;
    var disabledHourOptions = this.disabledHours2();
    var disabledMinuteOptions = disabledMinutes2(sValue ? sValue.hour() : null);
    var disabledSecondOptions = disabledSeconds2(sValue ? sValue.hour() : null, sValue ? sValue.minute() : null);
    var hourOptions = generateOptions$1(24, disabledHourOptions, hideDisabledOptions, hourStep);
    var minuteOptions = generateOptions$1(60, disabledMinuteOptions, hideDisabledOptions, minuteStep);
    var secondOptions = generateOptions$1(60, disabledSecondOptions, hideDisabledOptions, secondStep);
    var validDefaultOpenValue = toNearestValidTime(defaultOpenValue, hourOptions, minuteOptions, secondOptions);
    return h(
      "div",
      { "class": prefixCls2 + "-inner" },
      [h(Header$2, {
        attrs: {
          clearText,
          prefixCls: prefixCls2,
          defaultOpenValue: validDefaultOpenValue,
          value: sValue,
          currentSelectPanel,
          format: format3,
          placeholder,
          hourOptions,
          minuteOptions,
          secondOptions,
          disabledHours: this.disabledHours2,
          disabledMinutes: disabledMinutes2,
          disabledSeconds: disabledSeconds2,
          focusOnOpen,
          inputReadOnly,
          clearIcon
        },
        on: {
          "esc": esc,
          "change": this.onChange,
          "keydown": keydown
        }
      }), h(Combobox$1, {
        attrs: {
          prefixCls: prefixCls2,
          value: sValue,
          defaultOpenValue: validDefaultOpenValue,
          format: format3,
          showHour,
          showMinute,
          showSecond,
          hourOptions,
          minuteOptions,
          secondOptions,
          disabledHours: this.disabledHours2,
          disabledMinutes: disabledMinutes2,
          disabledSeconds: disabledSeconds2,
          use12Hours,
          isAM: this.isAM()
        },
        on: {
          "change": this.onChange,
          "amPmChange": this.onAmPmChange,
          "currentSelectPanelChange": this.onCurrentSelectPanelChange,
          "esc": this.onEsc
        }
      }), addon(this)]
    );
  }
};
var TimePickerPanel = Panel;
var autoAdjustOverflow = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset = [0, 0];
var placements = {
  bottomLeft: {
    points: ["tl", "tl"],
    overflow: autoAdjustOverflow,
    offset: [0, -3],
    targetOffset
  },
  bottomRight: {
    points: ["tr", "tr"],
    overflow: autoAdjustOverflow,
    offset: [0, -3],
    targetOffset
  },
  topRight: {
    points: ["br", "br"],
    overflow: autoAdjustOverflow,
    offset: [0, 3],
    targetOffset
  },
  topLeft: {
    points: ["bl", "bl"],
    overflow: autoAdjustOverflow,
    offset: [0, 3],
    targetOffset
  }
};
var placements$1 = placements;
function noop$t() {
}
var VcTimePicker = {
  name: "VcTimePicker",
  mixins: [BaseMixin],
  props: initDefaultProps({
    prefixCls: PropTypes.string,
    clearText: PropTypes.string,
    value: PropTypes.any,
    defaultOpenValue: {
      type: Object,
      "default": function _default62() {
        return hooks();
      }
    },
    inputReadOnly: PropTypes.bool,
    disabled: PropTypes.bool,
    allowEmpty: PropTypes.bool,
    defaultValue: PropTypes.any,
    open: PropTypes.bool,
    defaultOpen: PropTypes.bool,
    align: PropTypes.object,
    placement: PropTypes.any,
    transitionName: PropTypes.string,
    getPopupContainer: PropTypes.func,
    placeholder: PropTypes.string,
    format: PropTypes.string,
    showHour: PropTypes.bool,
    showMinute: PropTypes.bool,
    showSecond: PropTypes.bool,
    popupClassName: PropTypes.string,
    popupStyle: PropTypes.object,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    hideDisabledOptions: PropTypes.bool,
    name: PropTypes.string,
    autoComplete: PropTypes.string,
    use12Hours: PropTypes.bool,
    hourStep: PropTypes.number,
    minuteStep: PropTypes.number,
    secondStep: PropTypes.number,
    focusOnOpen: PropTypes.bool,
    autoFocus: PropTypes.bool,
    id: PropTypes.string,
    inputIcon: PropTypes.any,
    clearIcon: PropTypes.any,
    addon: PropTypes.func
  }, {
    clearText: "clear",
    prefixCls: "rc-time-picker",
    defaultOpen: false,
    inputReadOnly: false,
    popupClassName: "",
    popupStyle: {},
    align: {},
    allowEmpty: true,
    showHour: true,
    showMinute: true,
    showSecond: true,
    disabledHours: noop$t,
    disabledMinutes: noop$t,
    disabledSeconds: noop$t,
    hideDisabledOptions: false,
    placement: "bottomLeft",
    use12Hours: false,
    focusOnOpen: false
  }),
  data: function data53() {
    var defaultOpen = this.defaultOpen, defaultValue = this.defaultValue, _open2 = this.open, open6 = _open2 === void 0 ? defaultOpen : _open2, _value = this.value, value27 = _value === void 0 ? defaultValue : _value;
    return {
      sOpen: open6,
      sValue: value27
    };
  },
  watch: {
    value: function value20(val) {
      this.setState({
        sValue: val
      });
    },
    open: function open3(val) {
      if (val !== void 0) {
        this.setState({
          sOpen: val
        });
      }
    }
  },
  mounted: function mounted36() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus) {
        _this.focus();
      }
    });
  },
  methods: {
    onPanelChange: function onPanelChange3(value27) {
      this.setValue(value27);
    },
    onAmPmChange: function onAmPmChange2(ampm) {
      this.__emit("amPmChange", ampm);
    },
    onClear: function onClear3(event) {
      event.stopPropagation();
      this.setValue(null);
      this.setOpen(false);
    },
    onVisibleChange: function onVisibleChange6(open6) {
      this.setOpen(open6);
    },
    onEsc: function onEsc4() {
      this.setOpen(false);
      this.focus();
    },
    onKeyDown: function onKeyDown15(e) {
      if (e.keyCode === 40) {
        this.setOpen(true);
      }
    },
    onKeyDown2: function onKeyDown22(e) {
      this.__emit("keydown", e);
    },
    setValue: function setValue7(value27) {
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value27
        });
      }
      this.__emit("change", value27);
    },
    getFormat: function getFormat2() {
      var format3 = this.format, showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, use12Hours = this.use12Hours;
      if (format3) {
        return format3;
      }
      if (use12Hours) {
        var fmtString = [showHour ? "h" : "", showMinute ? "mm" : "", showSecond ? "ss" : ""].filter(function(item) {
          return !!item;
        }).join(":");
        return fmtString.concat(" a");
      }
      return [showHour ? "HH" : "", showMinute ? "mm" : "", showSecond ? "ss" : ""].filter(function(item) {
        return !!item;
      }).join(":");
    },
    getPanelElement: function getPanelElement() {
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, placeholder = this.placeholder, disabledHours3 = this.disabledHours, addon = this.addon, disabledMinutes2 = this.disabledMinutes, disabledSeconds2 = this.disabledSeconds, hideDisabledOptions = this.hideDisabledOptions, inputReadOnly = this.inputReadOnly, showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, defaultOpenValue = this.defaultOpenValue, clearText = this.clearText, use12Hours = this.use12Hours, focusOnOpen = this.focusOnOpen, onKeyDown25 = this.onKeyDown2, hourStep = this.hourStep, minuteStep = this.minuteStep, secondStep = this.secondStep, sValue = this.sValue;
      var clearIcon = getComponentFromProp(this, "clearIcon");
      return h(TimePickerPanel, {
        attrs: {
          clearText,
          prefixCls: prefixCls2 + "-panel",
          value: sValue,
          inputReadOnly,
          defaultOpenValue,
          showHour,
          showMinute,
          showSecond,
          format: this.getFormat(),
          placeholder,
          disabledHours: disabledHours3,
          disabledMinutes: disabledMinutes2,
          disabledSeconds: disabledSeconds2,
          hideDisabledOptions,
          use12Hours,
          hourStep,
          minuteStep,
          secondStep,
          focusOnOpen,
          clearIcon,
          addon
        },
        ref: "panel",
        on: {
          "change": this.onPanelChange,
          "amPmChange": this.onAmPmChange,
          "esc": this.onEsc,
          "keydown": onKeyDown25
        }
      });
    },
    getPopupClassName: function getPopupClassName() {
      var showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, use12Hours = this.use12Hours, prefixCls2 = this.prefixCls, popupClassName = this.popupClassName;
      var selectColumnCount = 0;
      if (showHour) {
        selectColumnCount += 1;
      }
      if (showMinute) {
        selectColumnCount += 1;
      }
      if (showSecond) {
        selectColumnCount += 1;
      }
      if (use12Hours) {
        selectColumnCount += 1;
      }
      return classNames(popupClassName, _default$8({}, prefixCls2 + "-panel-narrow", (!showHour || !showMinute || !showSecond) && !use12Hours), prefixCls2 + "-panel-column-" + selectColumnCount);
    },
    setOpen: function setOpen2(open6) {
      if (this.sOpen !== open6) {
        if (!hasProp(this, "open")) {
          this.setState({ sOpen: open6 });
        }
        if (open6) {
          this.__emit("open", { open: open6 });
        } else {
          this.__emit("close", { open: open6 });
        }
      }
    },
    focus: function focus15() {
      this.$refs.picker.focus();
    },
    blur: function blur12() {
      this.$refs.picker.blur();
    },
    onFocus: function onFocus3(e) {
      this.__emit("focus", e);
    },
    onBlur: function onBlur5(e) {
      this.__emit("blur", e);
    },
    renderClearButton: function renderClearButton() {
      var _this2 = this;
      var h = this.$createElement;
      var sValue = this.sValue;
      var _$props = this.$props, prefixCls2 = _$props.prefixCls, allowEmpty = _$props.allowEmpty, clearText = _$props.clearText, disabled = _$props.disabled;
      if (!allowEmpty || !sValue || disabled) {
        return null;
      }
      var clearIcon = getComponentFromProp(this, "clearIcon");
      if (isValidElement(clearIcon)) {
        var _ref = getEvents(clearIcon) || {}, _click = _ref.click;
        return cloneElement(clearIcon, {
          on: {
            click: function click() {
              if (_click)
                _click.apply(void 0, arguments);
              _this2.onClear.apply(_this2, arguments);
            }
          }
        });
      }
      return h(
        "a",
        {
          attrs: {
            role: "button",
            title: clearText,
            tabIndex: 0
          },
          "class": prefixCls2 + "-clear",
          on: {
            "click": this.onClear
          }
        },
        [clearIcon || h("i", { "class": prefixCls2 + "-clear-icon" })]
      );
    }
  },
  render: function render115() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, placeholder = this.placeholder, placement2 = this.placement, align = this.align, id2 = this.id, disabled = this.disabled, transitionName2 = this.transitionName, getPopupContainer = this.getPopupContainer, name = this.name, autoComplete = this.autoComplete, autoFocus = this.autoFocus, sOpen2 = this.sOpen, sValue = this.sValue, onFocus8 = this.onFocus, onBlur10 = this.onBlur, popupStyle = this.popupStyle;
    var popupClassName = this.getPopupClassName();
    var inputIcon = getComponentFromProp(this, "inputIcon");
    return h(
      Trigger,
      {
        attrs: {
          prefixCls: prefixCls2 + "-panel",
          popupClassName,
          popupStyle,
          popupAlign: align,
          builtinPlacements: placements$1,
          popupPlacement: placement2,
          action: disabled ? [] : ["click"],
          destroyPopupOnHide: true,
          getPopupContainer,
          popupTransitionName: transitionName2,
          popupVisible: sOpen2
        },
        on: {
          "popupVisibleChange": this.onVisibleChange
        }
      },
      [h(
        "template",
        { slot: "popup" },
        [this.getPanelElement()]
      ), h(
        "span",
        { "class": "" + prefixCls2 },
        [h("input", {
          "class": prefixCls2 + "-input",
          ref: "picker",
          attrs: {
            type: "text",
            placeholder,
            name,
            disabled,
            autoComplete,
            autoFocus,
            readOnly: true,
            id: id2
          },
          on: {
            "keydown": this.onKeyDown,
            "focus": onFocus8,
            "blur": onBlur10
          },
          domProps: {
            "value": sValue && sValue.format(this.getFormat()) || ""
          }
        }), inputIcon || h("span", { "class": prefixCls2 + "-icon" }), this.renderClearButton()]
      )]
    );
  }
};
function generateShowHourMinuteSecond(format3) {
  return {
    showHour: format3.indexOf("H") > -1 || format3.indexOf("h") > -1 || format3.indexOf("k") > -1,
    showMinute: format3.indexOf("m") > -1,
    showSecond: format3.indexOf("s") > -1
  };
}
var TimePickerProps = function TimePickerProps2() {
  return {
    size: PropTypes.oneOf(["large", "default", "small"]),
    value: TimeOrTimesType,
    defaultValue: TimeOrTimesType,
    open: PropTypes.bool,
    format: PropTypes.string,
    disabled: PropTypes.bool,
    placeholder: PropTypes.string,
    prefixCls: PropTypes.string,
    hideDisabledOptions: PropTypes.bool,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    getPopupContainer: PropTypes.func,
    use12Hours: PropTypes.bool,
    focusOnOpen: PropTypes.bool,
    hourStep: PropTypes.number,
    minuteStep: PropTypes.number,
    secondStep: PropTypes.number,
    allowEmpty: PropTypes.bool,
    allowClear: PropTypes.bool,
    inputReadOnly: PropTypes.bool,
    clearText: PropTypes.string,
    defaultOpenValue: PropTypes.object,
    popupClassName: PropTypes.string,
    popupStyle: PropTypes.object,
    suffixIcon: PropTypes.any,
    align: PropTypes.object,
    placement: PropTypes.any,
    transitionName: PropTypes.string,
    autoFocus: PropTypes.bool,
    addon: PropTypes.any,
    clearIcon: PropTypes.any,
    locale: PropTypes.object,
    valueFormat: PropTypes.string
  };
};
var TimePicker = {
  name: "ATimePicker",
  mixins: [BaseMixin],
  props: initDefaultProps(TimePickerProps(), {
    align: {
      offset: [0, -2]
    },
    disabled: false,
    disabledHours: void 0,
    disabledMinutes: void 0,
    disabledSeconds: void 0,
    hideDisabledOptions: false,
    placement: "bottomLeft",
    transitionName: "slide-up",
    focusOnOpen: true,
    allowClear: true
  }),
  model: {
    prop: "value",
    event: "change"
  },
  provide: function provide14() {
    return {
      savePopupRef: this.savePopupRef
    };
  },
  inject: {
    configProvider: { "default": function _default63() {
      return ConfigConsumerProps;
    } }
  },
  data: function data54() {
    var value27 = this.value, defaultValue = this.defaultValue, valueFormat = this.valueFormat;
    checkValidate("TimePicker", defaultValue, "defaultValue", valueFormat);
    checkValidate("TimePicker", value27, "value", valueFormat);
    warning$4(!hasProp(this, "allowEmpty"), "TimePicker", "`allowEmpty` is deprecated. Please use `allowClear` instead.");
    return {
      sValue: stringToMoment(value27 || defaultValue, valueFormat)
    };
  },
  watch: {
    value: function value21(val) {
      checkValidate("TimePicker", val, "value", this.valueFormat);
      this.setState({ sValue: stringToMoment(val, this.valueFormat) });
    }
  },
  methods: {
    getDefaultFormat: function getDefaultFormat() {
      var format3 = this.format, use12Hours = this.use12Hours;
      if (format3) {
        return format3;
      } else if (use12Hours) {
        return "h:mm:ss a";
      }
      return "HH:mm:ss";
    },
    getAllowClear: function getAllowClear() {
      var _$props = this.$props, allowClear = _$props.allowClear, allowEmpty = _$props.allowEmpty;
      if (hasProp(this, "allowClear")) {
        return allowClear;
      }
      return allowEmpty;
    },
    getDefaultLocale: function getDefaultLocale2() {
      var defaultLocale2 = _default$6({}, enUS$1, this.$props.locale);
      return defaultLocale2;
    },
    savePopupRef: function savePopupRef6(ref) {
      this.popupRef = ref;
    },
    handleChange: function handleChange9(value27) {
      if (!hasProp(this, "value")) {
        this.setState({ sValue: value27 });
      }
      var _format = this.format, format3 = _format === void 0 ? "HH:mm:ss" : _format;
      this.$emit("change", this.valueFormat ? momentToString(value27, this.valueFormat) : value27, value27 && value27.format(format3) || "");
    },
    handleOpenClose: function handleOpenClose(_ref) {
      var open6 = _ref.open;
      this.$emit("openChange", open6);
      this.$emit("update:open", open6);
    },
    focus: function focus16() {
      this.$refs.timePicker.focus();
    },
    blur: function blur13() {
      this.$refs.timePicker.blur();
    },
    renderInputIcon: function renderInputIcon(prefixCls2) {
      var h = this.$createElement;
      var suffixIcon = getComponentFromProp(this, "suffixIcon");
      suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
      var clockIcon = suffixIcon && isValidElement(suffixIcon) && cloneElement(suffixIcon, {
        "class": prefixCls2 + "-clock-icon"
      }) || h(Icon$1, {
        attrs: { type: "clock-circle" },
        "class": prefixCls2 + "-clock-icon"
      });
      return h(
        "span",
        { "class": prefixCls2 + "-icon" },
        [clockIcon]
      );
    },
    renderClearIcon: function renderClearIcon2(prefixCls2) {
      var h = this.$createElement;
      var clearIcon = getComponentFromProp(this, "clearIcon");
      var clearIconPrefixCls = prefixCls2 + "-clear";
      if (clearIcon && isValidElement(clearIcon)) {
        return cloneElement(clearIcon, {
          "class": clearIconPrefixCls
        });
      }
      return h(Icon$1, {
        attrs: { type: "close-circle", theme: "filled" },
        "class": clearIconPrefixCls
      });
    },
    renderTimePicker: function renderTimePicker(locale3) {
      var h = this.$createElement;
      var props2 = getOptionProps(this);
      props2 = omit$2(props2, ["defaultValue", "suffixIcon", "allowEmpty", "allowClear"]);
      var _props = props2, customizePrefixCls = _props.prefixCls, getPopupContainer = _props.getPopupContainer, placeholder = _props.placeholder, size = _props.size;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("time-picker", customizePrefixCls);
      var format3 = this.getDefaultFormat();
      var pickerClassName = _default$8({}, prefixCls2 + "-" + size, !!size);
      var tempAddon = getComponentFromProp(this, "addon", {}, false);
      var pickerAddon = function pickerAddon2(panel) {
        return tempAddon ? h(
          "div",
          { "class": prefixCls2 + "-panel-addon" },
          [typeof tempAddon === "function" ? tempAddon(panel) : tempAddon]
        ) : null;
      };
      var inputIcon = this.renderInputIcon(prefixCls2);
      var clearIcon = this.renderClearIcon(prefixCls2);
      var getContextPopupContainer = this.configProvider.getPopupContainer;
      var timeProps = {
        props: _default$6({}, generateShowHourMinuteSecond(format3), props2, {
          allowEmpty: this.getAllowClear(),
          prefixCls: prefixCls2,
          getPopupContainer: getPopupContainer || getContextPopupContainer,
          format: format3,
          value: this.sValue,
          placeholder: placeholder === void 0 ? locale3.placeholder : placeholder,
          addon: pickerAddon,
          inputIcon,
          clearIcon
        }),
        "class": pickerClassName,
        ref: "timePicker",
        on: _default$6({}, getListeners(this), {
          change: this.handleChange,
          open: this.handleOpenClose,
          close: this.handleOpenClose
        })
      };
      return h(VcTimePicker, timeProps);
    }
  },
  render: function render116() {
    var h = arguments[0];
    return h(LocaleReceiver, {
      attrs: {
        componentName: "TimePicker",
        defaultLocale: this.getDefaultLocale()
      },
      scopedSlots: { "default": this.renderTimePicker }
    });
  }
};
TimePicker.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(TimePicker.name, TimePicker);
};
var TimePicker$1 = TimePicker;
var DEFAULT_FORMAT = {
  date: "YYYY-MM-DD",
  dateTime: "YYYY-MM-DD HH:mm:ss",
  week: "gggg-wo",
  month: "YYYY-MM"
};
var LOCALE_FORMAT_MAPPING = {
  date: "dateFormat",
  dateTime: "dateTimeFormat",
  week: "weekFormat",
  month: "monthFormat"
};
function getColumns(_ref) {
  var showHour = _ref.showHour, showMinute = _ref.showMinute, showSecond = _ref.showSecond, use12Hours = _ref.use12Hours;
  var column = 0;
  if (showHour) {
    column += 1;
  }
  if (showMinute) {
    column += 1;
  }
  if (showSecond) {
    column += 1;
  }
  if (use12Hours) {
    column += 1;
  }
  return column;
}
function wrapPicker(Picker2, props2, pickerType) {
  return {
    name: Picker2.name,
    props: initDefaultProps(props2, {
      transitionName: "slide-up",
      popupStyle: {},
      locale: {}
    }),
    model: {
      prop: "value",
      event: "change"
    },
    inject: {
      configProvider: { "default": function _default130() {
        return ConfigConsumerProps;
      } }
    },
    provide: function provide31() {
      return {
        savePopupRef: this.savePopupRef
      };
    },
    mounted: function mounted70() {
      var _this = this;
      var autoFocus = this.autoFocus, disabled = this.disabled, value27 = this.value, defaultValue = this.defaultValue, valueFormat = this.valueFormat;
      checkValidate("DatePicker", defaultValue, "defaultValue", valueFormat);
      checkValidate("DatePicker", value27, "value", valueFormat);
      if (autoFocus && !disabled) {
        this.$nextTick(function() {
          _this.focus();
        });
      }
    },
    watch: {
      value: function value27(val) {
        checkValidate("DatePicker", val, "value", this.valueFormat);
      }
    },
    methods: {
      getDefaultLocale: function getDefaultLocale3() {
        var result = _default$6({}, enUS, this.locale);
        result.lang = _default$6({}, result.lang, (this.locale || {}).lang);
        return result;
      },
      savePopupRef: function savePopupRef7(ref) {
        this.popupRef = ref;
      },
      handleOpenChange: function handleOpenChange4(open6) {
        this.$emit("openChange", open6);
      },
      handleFocus: function handleFocus(e) {
        this.$emit("focus", e);
      },
      handleBlur: function handleBlur3(e) {
        this.$emit("blur", e);
      },
      handleMouseEnter: function handleMouseEnter3(e) {
        this.$emit("mouseenter", e);
      },
      handleMouseLeave: function handleMouseLeave2(e) {
        this.$emit("mouseleave", e);
      },
      handleChange: function handleChange15(date3, dateString) {
        this.$emit("change", this.valueFormat ? momentToString(date3, this.valueFormat) : date3, dateString);
      },
      handleOk: function handleOk2(val) {
        this.$emit("ok", this.valueFormat ? momentToString(val, this.valueFormat) : val);
      },
      handleCalendarChange: function handleCalendarChange(date3, dateString) {
        this.$emit("calendarChange", this.valueFormat ? momentToString(date3, this.valueFormat) : date3, dateString);
      },
      focus: function focus35() {
        this.$refs.picker.focus();
      },
      blur: function blur32() {
        this.$refs.picker.blur();
      },
      transformValue: function transformValue(props3) {
        if ("value" in props3) {
          props3.value = stringToMoment(props3.value, this.valueFormat);
        }
        if ("defaultValue" in props3) {
          props3.defaultValue = stringToMoment(props3.defaultValue, this.valueFormat);
        }
        if ("defaultPickerValue" in props3) {
          props3.defaultPickerValue = stringToMoment(props3.defaultPickerValue, this.valueFormat);
        }
      },
      renderPicker: function renderPicker(locale3, localeCode) {
        var _classNames2, _this2 = this;
        var h = this.$createElement;
        var props3 = getOptionProps(this);
        this.transformValue(props3);
        var customizePrefixCls = props3.prefixCls, customizeInputPrefixCls = props3.inputPrefixCls, getCalendarContainer = props3.getCalendarContainer, size = props3.size, showTime = props3.showTime, disabled = props3.disabled, format3 = props3.format;
        var mergedPickerType = showTime ? pickerType + "Time" : pickerType;
        var mergedFormat = format3 || locale3[LOCALE_FORMAT_MAPPING[mergedPickerType]] || DEFAULT_FORMAT[mergedPickerType];
        var _configProvider = this.configProvider, getPrefixCls5 = _configProvider.getPrefixCls, getContextPopupContainer = _configProvider.getPopupContainer;
        var getPopupContainer = getCalendarContainer || getContextPopupContainer;
        var prefixCls2 = getPrefixCls5("calendar", customizePrefixCls);
        var inputPrefixCls = getPrefixCls5("input", customizeInputPrefixCls);
        var pickerClass = classNames(prefixCls2 + "-picker", _default$8({}, prefixCls2 + "-picker-" + size, !!size));
        var pickerInputClass = classNames(prefixCls2 + "-picker-input", inputPrefixCls, (_classNames2 = {}, _default$8(_classNames2, inputPrefixCls + "-lg", size === "large"), _default$8(_classNames2, inputPrefixCls + "-sm", size === "small"), _default$8(_classNames2, inputPrefixCls + "-disabled", disabled), _classNames2));
        var timeFormat = showTime && showTime.format || "HH:mm:ss";
        var vcTimePickerProps = _default$6({}, generateShowHourMinuteSecond(timeFormat), {
          format: timeFormat,
          use12Hours: showTime && showTime.use12Hours
        });
        var columns3 = getColumns(vcTimePickerProps);
        var timePickerCls = prefixCls2 + "-time-picker-column-" + columns3;
        var timePickerPanelProps = {
          props: _default$6({}, vcTimePickerProps, showTime, {
            prefixCls: prefixCls2 + "-time-picker",
            placeholder: locale3.timePickerLocale.placeholder,
            transitionName: "slide-up"
          }),
          "class": timePickerCls,
          on: {
            esc: function esc() {
            }
          }
        };
        var timePicker = showTime ? h(TimePickerPanel, timePickerPanelProps) : null;
        var pickerProps = {
          props: _default$6({}, props3, {
            getCalendarContainer: getPopupContainer,
            format: mergedFormat,
            pickerClass,
            pickerInputClass,
            locale: locale3,
            localeCode,
            timePicker
          }),
          on: _default$6({}, getListeners(this), {
            openChange: this.handleOpenChange,
            focus: this.handleFocus,
            blur: this.handleBlur,
            mouseenter: this.handleMouseEnter,
            mouseleave: this.handleMouseLeave,
            change: this.handleChange,
            ok: this.handleOk,
            calendarChange: this.handleCalendarChange
          }),
          ref: "picker",
          scopedSlots: this.$scopedSlots || {}
        };
        return h(
          Picker2,
          pickerProps,
          [this.$slots && Object.keys(this.$slots).map(function(key2) {
            return h(
              "template",
              { slot: key2, key: key2 },
              [_this2.$slots[key2]]
            );
          })]
        );
      }
    },
    render: function render249() {
      var h = arguments[0];
      return h(LocaleReceiver, {
        attrs: {
          componentName: "DatePicker",
          defaultLocale: this.getDefaultLocale
        },
        scopedSlots: { "default": this.renderPicker }
      });
    }
  };
}
function noop$s() {
}
var CalendarPart = {
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    value: PropTypes.any,
    hoverValue: PropTypes.any,
    selectedValue: PropTypes.any,
    direction: PropTypes.any,
    locale: PropTypes.any,
    showDateInput: PropTypes.bool,
    showTimePicker: PropTypes.bool,
    showWeekNumber: PropTypes.bool,
    format: PropTypes.any,
    placeholder: PropTypes.any,
    disabledDate: PropTypes.any,
    timePicker: PropTypes.any,
    disabledTime: PropTypes.any,
    disabledMonth: PropTypes.any,
    mode: PropTypes.any,
    timePickerDisabledTime: PropTypes.object,
    enableNext: PropTypes.any,
    enablePrev: PropTypes.any,
    clearIcon: PropTypes.any,
    dateRender: PropTypes.func,
    inputMode: PropTypes.string,
    inputReadOnly: PropTypes.bool
  },
  render: function render117() {
    var h = arguments[0];
    var props2 = this.$props;
    var prefixCls2 = props2.prefixCls, value27 = props2.value, hoverValue2 = props2.hoverValue, selectedValue6 = props2.selectedValue, mode5 = props2.mode, direction = props2.direction, locale3 = props2.locale, format3 = props2.format, placeholder = props2.placeholder, disabledDate = props2.disabledDate, timePicker = props2.timePicker, disabledTime = props2.disabledTime, timePickerDisabledTime = props2.timePickerDisabledTime, showTimePicker = props2.showTimePicker, enablePrev = props2.enablePrev, enableNext = props2.enableNext, disabledMonth = props2.disabledMonth, showDateInput = props2.showDateInput, dateRender = props2.dateRender, showWeekNumber = props2.showWeekNumber, showClear = props2.showClear, inputMode = props2.inputMode, inputReadOnly = props2.inputReadOnly;
    var clearIcon = getComponentFromProp(this, "clearIcon");
    var _getListeners = getListeners(this), _getListeners$inputCh = _getListeners.inputChange, inputChange = _getListeners$inputCh === void 0 ? noop$s : _getListeners$inputCh, _getListeners$inputSe = _getListeners.inputSelect, inputSelect = _getListeners$inputSe === void 0 ? noop$s : _getListeners$inputSe, _getListeners$valueCh = _getListeners.valueChange, valueChange = _getListeners$valueCh === void 0 ? noop$s : _getListeners$valueCh, _getListeners$panelCh = _getListeners.panelChange, panelChange = _getListeners$panelCh === void 0 ? noop$s : _getListeners$panelCh, _getListeners$select = _getListeners.select, select2 = _getListeners$select === void 0 ? noop$s : _getListeners$select, _getListeners$dayHove = _getListeners.dayHover, dayHover = _getListeners$dayHove === void 0 ? noop$s : _getListeners$dayHove;
    var shouldShowTimePicker = showTimePicker && timePicker;
    var disabledTimeConfig = shouldShowTimePicker && disabledTime ? getTimeConfig(selectedValue6, disabledTime) : null;
    var rangeClassName = prefixCls2 + "-range";
    var newProps = {
      locale: locale3,
      value: value27,
      prefixCls: prefixCls2,
      showTimePicker
    };
    var index2 = direction === "left" ? 0 : 1;
    var timePickerEle = null;
    if (shouldShowTimePicker) {
      var timePickerProps = getOptionProps(timePicker);
      timePickerEle = cloneElement(timePicker, {
        props: _default$6({
          showHour: true,
          showMinute: true,
          showSecond: true
        }, timePickerProps, disabledTimeConfig, timePickerDisabledTime, {
          defaultOpenValue: value27,
          value: selectedValue6[index2]
        }),
        on: {
          change: inputChange
        }
      });
    }
    var dateInputElement = showDateInput && h(DateInput$1, {
      attrs: {
        format: format3,
        locale: locale3,
        prefixCls: prefixCls2,
        timePicker,
        disabledDate,
        placeholder,
        disabledTime,
        value: value27,
        showClear: showClear || false,
        selectedValue: selectedValue6[index2],
        clearIcon,
        inputMode,
        inputReadOnly
      },
      on: {
        "change": inputChange,
        "select": inputSelect
      }
    });
    var headerProps = {
      props: _default$6({}, newProps, {
        mode: mode5,
        enableNext,
        enablePrev,
        disabledMonth
      }),
      on: {
        valueChange,
        panelChange
      }
    };
    var tableProps = {
      props: _default$6({}, newProps, {
        hoverValue: hoverValue2,
        selectedValue: selectedValue6,
        dateRender,
        disabledDate,
        showWeekNumber
      }),
      on: {
        select: select2,
        dayHover
      }
    };
    return h(
      "div",
      { "class": rangeClassName + "-part " + rangeClassName + "-" + direction },
      [dateInputElement, h(
        "div",
        { style: { outline: "none" } },
        [h(CalendarHeader$1, headerProps), showTimePicker ? h(
          "div",
          { "class": prefixCls2 + "-time-picker" },
          [h(
            "div",
            { "class": prefixCls2 + "-time-picker-panel" },
            [timePickerEle]
          )]
        ) : null, h(
          "div",
          { "class": prefixCls2 + "-body" },
          [h(DateTable, tableProps)]
        )]
      )]
    );
  }
};
var CalendarPart$1 = CalendarPart;
function noop$r() {
}
function isEmptyArray$1(arr) {
  return Array.isArray(arr) && (arr.length === 0 || arr.every(function(i) {
    return !i;
  }));
}
function isArraysEqual(a, b) {
  if (a === b)
    return true;
  if (a === null || typeof a === "undefined" || b === null || typeof b === "undefined") {
    return false;
  }
  if (a.length !== b.length)
    return false;
  for (var i = 0; i < a.length; ++i) {
    if (a[i] !== b[i])
      return false;
  }
  return true;
}
function getValueFromSelectedValue(selectedValue6) {
  var _selectedValue = _default$4(selectedValue6, 2), start = _selectedValue[0], end = _selectedValue[1];
  if (end && (start === void 0 || start === null)) {
    start = end.clone().subtract(1, "month");
  }
  if (start && (end === void 0 || end === null)) {
    end = start.clone().add(1, "month");
  }
  return [start, end];
}
function normalizeAnchor(props2, init) {
  var selectedValue6 = props2.selectedValue || init && props2.defaultSelectedValue;
  var value27 = props2.value || init && props2.defaultValue;
  var normalizedValue = value27 ? getValueFromSelectedValue(value27) : getValueFromSelectedValue(selectedValue6);
  return !isEmptyArray$1(normalizedValue) ? normalizedValue : init && [hooks(), hooks().add(1, "months")];
}
function generateOptions(length, extraOptionGen) {
  var arr = extraOptionGen ? extraOptionGen().concat() : [];
  for (var value27 = 0; value27 < length; value27++) {
    if (arr.indexOf(value27) === -1) {
      arr.push(value27);
    }
  }
  return arr;
}
function onInputSelect(direction, value27, cause) {
  if (!value27) {
    return;
  }
  var originalValue = this.sSelectedValue;
  var selectedValue6 = originalValue.concat();
  var index2 = direction === "left" ? 0 : 1;
  selectedValue6[index2] = value27;
  if (selectedValue6[0] && this.compare(selectedValue6[0], selectedValue6[1]) > 0) {
    selectedValue6[1 - index2] = this.sShowTimePicker ? selectedValue6[index2] : void 0;
  }
  this.__emit("inputSelect", selectedValue6);
  this.fireSelectValueChange(selectedValue6, null, cause || { source: "dateInput" });
}
var RangeCalendar = {
  props: {
    locale: PropTypes.object.def(enUs),
    visible: PropTypes.bool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    dateInputPlaceholder: PropTypes.any,
    seperator: PropTypes.string.def("~"),
    defaultValue: PropTypes.any,
    value: PropTypes.any,
    hoverValue: PropTypes.any,
    mode: PropTypes.arrayOf(PropTypes.oneOf(["time", "date", "month", "year", "decade"])),
    showDateInput: PropTypes.bool.def(true),
    timePicker: PropTypes.any,
    showOk: PropTypes.bool,
    showToday: PropTypes.bool.def(true),
    defaultSelectedValue: PropTypes.array.def([]),
    selectedValue: PropTypes.array,
    showClear: PropTypes.bool,
    showWeekNumber: PropTypes.bool,
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.func]),
    type: PropTypes.any.def("both"),
    disabledDate: PropTypes.func,
    disabledTime: PropTypes.func.def(noop$r),
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    }),
    dateRender: PropTypes.func,
    clearIcon: PropTypes.any,
    inputReadOnly: PropTypes.bool
  },
  mixins: [BaseMixin, CommonMixin],
  data: function data55() {
    var props2 = this.$props;
    var selectedValue6 = props2.selectedValue || props2.defaultSelectedValue;
    var value27 = normalizeAnchor(props2, 1);
    return {
      sSelectedValue: selectedValue6,
      prevSelectedValue: selectedValue6,
      firstSelectedValue: null,
      sHoverValue: props2.hoverValue || [],
      sValue: value27,
      sShowTimePicker: false,
      sMode: props2.mode || ["date", "date"],
      sPanelTriggerSource: ""
    };
  },
  watch: {
    value: function value22() {
      var newState = {};
      newState.sValue = normalizeAnchor(this.$props, 0);
      this.setState(newState);
    },
    hoverValue: function hoverValue(val) {
      if (!isArraysEqual(this.sHoverValue, val)) {
        this.setState({ sHoverValue: val });
      }
    },
    selectedValue: function selectedValue5(val) {
      var newState = {};
      newState.sSelectedValue = val;
      newState.prevSelectedValue = val;
      this.setState(newState);
    },
    mode: function mode4(val) {
      if (!isArraysEqual(this.sMode, val)) {
        this.setState({ sMode: val });
      }
    }
  },
  methods: {
    onDatePanelEnter: function onDatePanelEnter() {
      if (this.hasSelectedValue()) {
        this.fireHoverValueChange(this.sSelectedValue.concat());
      }
    },
    onDatePanelLeave: function onDatePanelLeave() {
      if (this.hasSelectedValue()) {
        this.fireHoverValueChange([]);
      }
    },
    onSelect: function onSelect7(value27) {
      var type3 = this.type, sSelectedValue = this.sSelectedValue, prevSelectedValue = this.prevSelectedValue, firstSelectedValue = this.firstSelectedValue;
      var nextSelectedValue = void 0;
      if (type3 === "both") {
        if (!firstSelectedValue) {
          syncTime(prevSelectedValue[0], value27);
          nextSelectedValue = [value27];
        } else if (this.compare(firstSelectedValue, value27) < 0) {
          syncTime(prevSelectedValue[1], value27);
          nextSelectedValue = [firstSelectedValue, value27];
        } else {
          syncTime(prevSelectedValue[0], value27);
          syncTime(prevSelectedValue[1], firstSelectedValue);
          nextSelectedValue = [value27, firstSelectedValue];
        }
      } else if (type3 === "start") {
        syncTime(prevSelectedValue[0], value27);
        var endValue = sSelectedValue[1];
        nextSelectedValue = endValue && this.compare(endValue, value27) > 0 ? [value27, endValue] : [value27];
      } else {
        var startValue = sSelectedValue[0];
        if (startValue && this.compare(startValue, value27) <= 0) {
          syncTime(prevSelectedValue[1], value27);
          nextSelectedValue = [startValue, value27];
        } else {
          syncTime(prevSelectedValue[0], value27);
          nextSelectedValue = [value27];
        }
      }
      this.fireSelectValueChange(nextSelectedValue);
    },
    onKeyDown: function onKeyDown16(event) {
      var _this = this;
      if (event.target.nodeName.toLowerCase() === "input") {
        return;
      }
      var keyCode = event.keyCode;
      var ctrlKey = event.ctrlKey || event.metaKey;
      var _$data = this.$data, selectedValue6 = _$data.sSelectedValue, hoverValue2 = _$data.sHoverValue, firstSelectedValue = _$data.firstSelectedValue, value27 = _$data.sValue;
      var disabledDate = this.$props.disabledDate;
      var updateHoverPoint = function updateHoverPoint2(func) {
        var currentHoverTime = void 0;
        var nextHoverTime = void 0;
        var nextHoverValue = void 0;
        if (!firstSelectedValue) {
          currentHoverTime = hoverValue2[0] || selectedValue6[0] || value27[0] || hooks();
          nextHoverTime = func(currentHoverTime);
          nextHoverValue = [nextHoverTime];
          _this.fireHoverValueChange(nextHoverValue);
        } else {
          if (hoverValue2.length === 1) {
            currentHoverTime = hoverValue2[0].clone();
            nextHoverTime = func(currentHoverTime);
            nextHoverValue = _this.onDayHover(nextHoverTime);
          } else {
            currentHoverTime = hoverValue2[0].isSame(firstSelectedValue, "day") ? hoverValue2[1] : hoverValue2[0];
            nextHoverTime = func(currentHoverTime);
            nextHoverValue = _this.onDayHover(nextHoverTime);
          }
        }
        if (nextHoverValue.length >= 2) {
          var miss = nextHoverValue.some(function(ht) {
            return !includesTime(value27, ht, "month");
          });
          if (miss) {
            var newValue = nextHoverValue.slice().sort(function(t1, t2) {
              return t1.valueOf() - t2.valueOf();
            });
            if (newValue[0].isSame(newValue[1], "month")) {
              newValue[1] = newValue[0].clone().add(1, "month");
            }
            _this.fireValueChange(newValue);
          }
        } else if (nextHoverValue.length === 1) {
          var oriValueIndex = value27.findIndex(function(time) {
            return time.isSame(currentHoverTime, "month");
          });
          if (oriValueIndex === -1)
            oriValueIndex = 0;
          if (value27.every(function(time) {
            return !time.isSame(nextHoverTime, "month");
          })) {
            var _newValue = value27.slice();
            _newValue[oriValueIndex] = nextHoverTime.clone();
            _this.fireValueChange(_newValue);
          }
        }
        event.preventDefault();
        return nextHoverTime;
      };
      switch (keyCode) {
        case KeyCode$2.DOWN:
          updateHoverPoint(function(time) {
            return goTime(time, 1, "weeks");
          });
          return;
        case KeyCode$2.UP:
          updateHoverPoint(function(time) {
            return goTime(time, -1, "weeks");
          });
          return;
        case KeyCode$2.LEFT:
          if (ctrlKey) {
            updateHoverPoint(function(time) {
              return goTime(time, -1, "years");
            });
          } else {
            updateHoverPoint(function(time) {
              return goTime(time, -1, "days");
            });
          }
          return;
        case KeyCode$2.RIGHT:
          if (ctrlKey) {
            updateHoverPoint(function(time) {
              return goTime(time, 1, "years");
            });
          } else {
            updateHoverPoint(function(time) {
              return goTime(time, 1, "days");
            });
          }
          return;
        case KeyCode$2.HOME:
          updateHoverPoint(function(time) {
            return goStartMonth(time);
          });
          return;
        case KeyCode$2.END:
          updateHoverPoint(function(time) {
            return goEndMonth(time);
          });
          return;
        case KeyCode$2.PAGE_DOWN:
          updateHoverPoint(function(time) {
            return goTime(time, 1, "month");
          });
          return;
        case KeyCode$2.PAGE_UP:
          updateHoverPoint(function(time) {
            return goTime(time, -1, "month");
          });
          return;
        case KeyCode$2.ENTER: {
          var lastValue = void 0;
          if (hoverValue2.length === 0) {
            lastValue = updateHoverPoint(function(time) {
              return time;
            });
          } else if (hoverValue2.length === 1) {
            lastValue = hoverValue2[0];
          } else {
            lastValue = hoverValue2[0].isSame(firstSelectedValue, "day") ? hoverValue2[1] : hoverValue2[0];
          }
          if (lastValue && (!disabledDate || !disabledDate(lastValue))) {
            this.onSelect(lastValue);
          }
          event.preventDefault();
          return;
        }
        default:
          this.__emit("keydown", event);
      }
    },
    onDayHover: function onDayHover(value27) {
      var hoverValue2 = [];
      var sSelectedValue = this.sSelectedValue, firstSelectedValue = this.firstSelectedValue, type3 = this.type;
      if (type3 === "start" && sSelectedValue[1]) {
        hoverValue2 = this.compare(value27, sSelectedValue[1]) < 0 ? [value27, sSelectedValue[1]] : [value27];
      } else if (type3 === "end" && sSelectedValue[0]) {
        hoverValue2 = this.compare(value27, sSelectedValue[0]) > 0 ? [sSelectedValue[0], value27] : [];
      } else {
        if (!firstSelectedValue) {
          if (this.sHoverValue.length) {
            this.setState({ sHoverValue: [] });
          }
          return hoverValue2;
        }
        hoverValue2 = this.compare(value27, firstSelectedValue) < 0 ? [value27, firstSelectedValue] : [firstSelectedValue, value27];
      }
      this.fireHoverValueChange(hoverValue2);
      return hoverValue2;
    },
    onToday: function onToday2() {
      var startValue = getTodayTime(this.sValue[0]);
      var endValue = startValue.clone().add(1, "months");
      this.setState({ sValue: [startValue, endValue] });
    },
    onOpenTimePicker: function onOpenTimePicker() {
      this.setState({
        sShowTimePicker: true
      });
    },
    onCloseTimePicker: function onCloseTimePicker() {
      this.setState({
        sShowTimePicker: false
      });
    },
    onOk: function onOk2() {
      var sSelectedValue = this.sSelectedValue;
      if (this.isAllowedDateAndTime(sSelectedValue)) {
        this.__emit("ok", sSelectedValue);
      }
    },
    onStartInputChange: function onStartInputChange() {
      for (var _len = arguments.length, oargs = Array(_len), _key = 0; _key < _len; _key++) {
        oargs[_key] = arguments[_key];
      }
      var args = ["left"].concat(oargs);
      return onInputSelect.apply(this, args);
    },
    onEndInputChange: function onEndInputChange() {
      for (var _len2 = arguments.length, oargs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        oargs[_key2] = arguments[_key2];
      }
      var args = ["right"].concat(oargs);
      return onInputSelect.apply(this, args);
    },
    onStartInputSelect: function onStartInputSelect(value27) {
      var args = ["left", value27, { source: "dateInputSelect" }];
      return onInputSelect.apply(this, args);
    },
    onEndInputSelect: function onEndInputSelect(value27) {
      var args = ["right", value27, { source: "dateInputSelect" }];
      return onInputSelect.apply(this, args);
    },
    onStartValueChange: function onStartValueChange(leftValue) {
      var value27 = [].concat(_default$5(this.sValue));
      value27[0] = leftValue;
      return this.fireValueChange(value27);
    },
    onEndValueChange: function onEndValueChange(rightValue) {
      var value27 = [].concat(_default$5(this.sValue));
      value27[1] = rightValue;
      return this.fireValueChange(value27);
    },
    onStartPanelChange: function onStartPanelChange(value27, mode5) {
      var sMode = this.sMode, sValue = this.sValue;
      var newMode = [mode5, sMode[1]];
      var newValue = [value27 || sValue[0], sValue[1]];
      this.__emit("panelChange", newValue, newMode);
      var newState = {
        sPanelTriggerSource: "start"
      };
      if (!hasProp(this, "mode")) {
        newState.sMode = newMode;
      }
      this.setState(newState);
    },
    onEndPanelChange: function onEndPanelChange(value27, mode5) {
      var sMode = this.sMode, sValue = this.sValue;
      var newMode = [sMode[0], mode5];
      var newValue = [sValue[0], value27 || sValue[1]];
      this.__emit("panelChange", newValue, newMode);
      var newState = {
        sPanelTriggerSource: "end"
      };
      if (!hasProp(this, "mode")) {
        newState.sMode = newMode;
      }
      this.setState(newState);
    },
    getStartValue: function getStartValue() {
      var _$data2 = this.$data, selectedValue6 = _$data2.sSelectedValue, showTimePicker = _$data2.sShowTimePicker, value27 = _$data2.sValue, mode5 = _$data2.sMode, panelTriggerSource = _$data2.sPanelTriggerSource;
      var startValue = value27[0];
      if (selectedValue6[0] && this.$props.timePicker) {
        startValue = startValue.clone();
        syncTime(selectedValue6[0], startValue);
      }
      if (showTimePicker && selectedValue6[0]) {
        startValue = selectedValue6[0];
      }
      if (panelTriggerSource === "end" && mode5[0] === "date" && mode5[1] === "date" && startValue.isSame(value27[1], "month")) {
        startValue = startValue.clone().subtract(1, "month");
      }
      return startValue;
    },
    getEndValue: function getEndValue() {
      var _$data3 = this.$data, selectedValue6 = _$data3.sSelectedValue, showTimePicker = _$data3.sShowTimePicker, value27 = _$data3.sValue, mode5 = _$data3.sMode, panelTriggerSource = _$data3.sPanelTriggerSource;
      var endValue = value27[1] ? value27[1].clone() : value27[0].clone().add(1, "month");
      if (selectedValue6[1] && this.$props.timePicker) {
        syncTime(selectedValue6[1], endValue);
      }
      if (showTimePicker) {
        endValue = selectedValue6[1] ? selectedValue6[1] : this.getStartValue();
      }
      if (!showTimePicker && panelTriggerSource !== "end" && mode5[0] === "date" && mode5[1] === "date" && endValue.isSame(value27[0], "month")) {
        endValue = endValue.clone().add(1, "month");
      }
      return endValue;
    },
    getEndDisableTime: function getEndDisableTime() {
      var sSelectedValue = this.sSelectedValue, sValue = this.sValue, disabledTime = this.disabledTime;
      var userSettingDisabledTime = disabledTime(sSelectedValue, "end") || {};
      var startValue = sSelectedValue && sSelectedValue[0] || sValue[0].clone();
      if (!sSelectedValue[1] || startValue.isSame(sSelectedValue[1], "day")) {
        var hours2 = startValue.hour();
        var minutes2 = startValue.minute();
        var second = startValue.second();
        var _disabledHours = userSettingDisabledTime.disabledHours, _disabledMinutes = userSettingDisabledTime.disabledMinutes, _disabledSeconds = userSettingDisabledTime.disabledSeconds;
        var oldDisabledMinutes = _disabledMinutes ? _disabledMinutes() : [];
        var olddisabledSeconds = _disabledSeconds ? _disabledSeconds() : [];
        _disabledHours = generateOptions(hours2, _disabledHours);
        _disabledMinutes = generateOptions(minutes2, _disabledMinutes);
        _disabledSeconds = generateOptions(second, _disabledSeconds);
        return {
          disabledHours: function disabledHours3() {
            return _disabledHours;
          },
          disabledMinutes: function disabledMinutes2(hour) {
            if (hour === hours2) {
              return _disabledMinutes;
            }
            return oldDisabledMinutes;
          },
          disabledSeconds: function disabledSeconds2(hour, minute) {
            if (hour === hours2 && minute === minutes2) {
              return _disabledSeconds;
            }
            return olddisabledSeconds;
          }
        };
      }
      return userSettingDisabledTime;
    },
    isAllowedDateAndTime: function isAllowedDateAndTime(selectedValue6) {
      return isAllowedDate(selectedValue6[0], this.disabledDate, this.disabledStartTime) && isAllowedDate(selectedValue6[1], this.disabledDate, this.disabledEndTime);
    },
    isMonthYearPanelShow: function isMonthYearPanelShow(mode5) {
      return ["month", "year", "decade"].indexOf(mode5) > -1;
    },
    hasSelectedValue: function hasSelectedValue() {
      var sSelectedValue = this.sSelectedValue;
      return !!sSelectedValue[1] && !!sSelectedValue[0];
    },
    compare: function compare(v1, v2) {
      if (this.timePicker) {
        return v1.diff(v2);
      }
      return v1.diff(v2, "days");
    },
    fireSelectValueChange: function fireSelectValueChange(selectedValue6, direct, cause) {
      var timePicker = this.timePicker, prevSelectedValue = this.prevSelectedValue;
      if (timePicker) {
        var timePickerProps = getOptionProps(timePicker);
        if (timePickerProps.defaultValue) {
          var timePickerDefaultValue = timePickerProps.defaultValue;
          if (!prevSelectedValue[0] && selectedValue6[0]) {
            syncTime(timePickerDefaultValue[0], selectedValue6[0]);
          }
          if (!prevSelectedValue[1] && selectedValue6[1]) {
            syncTime(timePickerDefaultValue[1], selectedValue6[1]);
          }
        }
      }
      if (!this.sSelectedValue[0] || !this.sSelectedValue[1]) {
        var startValue = selectedValue6[0] || hooks();
        var endValue = selectedValue6[1] || startValue.clone().add(1, "months");
        this.setState({
          sSelectedValue: selectedValue6,
          sValue: selectedValue6 && selectedValue6.length === 2 ? getValueFromSelectedValue([startValue, endValue]) : this.sValue
        });
      }
      if (selectedValue6[0] && !selectedValue6[1]) {
        this.setState({ firstSelectedValue: selectedValue6[0] });
        this.fireHoverValueChange(selectedValue6.concat());
      }
      this.__emit("change", selectedValue6);
      if (direct || selectedValue6[0] && selectedValue6[1]) {
        this.setState({
          prevSelectedValue: selectedValue6,
          firstSelectedValue: null
        });
        this.fireHoverValueChange([]);
        this.__emit("select", selectedValue6, cause);
      }
      if (!hasProp(this, "selectedValue")) {
        this.setState({
          sSelectedValue: selectedValue6
        });
      }
    },
    fireValueChange: function fireValueChange(value27) {
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value27
        });
      }
      this.__emit("valueChange", value27);
    },
    fireHoverValueChange: function fireHoverValueChange(hoverValue2) {
      if (!hasProp(this, "hoverValue")) {
        this.setState({ sHoverValue: hoverValue2 });
      }
      this.__emit("hoverChange", hoverValue2);
    },
    clear: function clear2() {
      this.fireSelectValueChange([], true);
      this.__emit("clear");
    },
    disabledStartTime: function disabledStartTime(time) {
      return this.disabledTime(time, "start");
    },
    disabledEndTime: function disabledEndTime(time) {
      return this.disabledTime(time, "end");
    },
    disabledStartMonth: function disabledStartMonth(month) {
      var sValue = this.sValue;
      return month.isAfter(sValue[1], "month");
    },
    disabledEndMonth: function disabledEndMonth(month) {
      var sValue = this.sValue;
      return month.isBefore(sValue[0], "month");
    }
  },
  render: function render118() {
    var _className, _cls;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var prefixCls2 = props2.prefixCls, dateInputPlaceholder = props2.dateInputPlaceholder, timePicker = props2.timePicker, showOk = props2.showOk, locale3 = props2.locale, showClear = props2.showClear, showToday = props2.showToday, type3 = props2.type, seperator = props2.seperator;
    var clearIcon = getComponentFromProp(this, "clearIcon");
    var sHoverValue = this.sHoverValue, sSelectedValue = this.sSelectedValue, mode5 = this.sMode, sShowTimePicker = this.sShowTimePicker, sValue = this.sValue;
    var className = (_className = {}, _default$8(_className, prefixCls2, 1), _default$8(_className, prefixCls2 + "-hidden", !props2.visible), _default$8(_className, prefixCls2 + "-range", 1), _default$8(_className, prefixCls2 + "-show-time-picker", sShowTimePicker), _default$8(_className, prefixCls2 + "-week-number", props2.showWeekNumber), _className);
    var baseProps = {
      props: props2,
      on: getListeners(this)
    };
    var newProps = {
      props: {
        selectedValue: sSelectedValue
      },
      on: {
        select: this.onSelect,
        dayHover: type3 === "start" && sSelectedValue[1] || type3 === "end" && sSelectedValue[0] || !!sHoverValue.length ? this.onDayHover : noop$r
      }
    };
    var placeholder1 = void 0;
    var placeholder2 = void 0;
    if (dateInputPlaceholder) {
      if (Array.isArray(dateInputPlaceholder)) {
        var _dateInputPlaceholder = _default$4(dateInputPlaceholder, 2);
        placeholder1 = _dateInputPlaceholder[0];
        placeholder2 = _dateInputPlaceholder[1];
      } else {
        placeholder1 = placeholder2 = dateInputPlaceholder;
      }
    }
    var showOkButton = showOk === true || showOk !== false && !!timePicker;
    var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-footer", true), _default$8(_cls, prefixCls2 + "-range-bottom", true), _default$8(_cls, prefixCls2 + "-footer-show-ok", showOkButton), _cls);
    var startValue = this.getStartValue();
    var endValue = this.getEndValue();
    var todayTime = getTodayTime(startValue);
    var thisMonth = todayTime.month();
    var thisYear = todayTime.year();
    var isTodayInView = startValue.year() === thisYear && startValue.month() === thisMonth || endValue.year() === thisYear && endValue.month() === thisMonth;
    var nextMonthOfStart = startValue.clone().add(1, "months");
    var isClosestMonths = nextMonthOfStart.year() === endValue.year() && nextMonthOfStart.month() === endValue.month();
    var leftPartProps = mergeProps(baseProps, newProps, {
      props: {
        hoverValue: sHoverValue,
        direction: "left",
        disabledTime: this.disabledStartTime,
        disabledMonth: this.disabledStartMonth,
        format: this.getFormat(),
        value: startValue,
        mode: mode5[0],
        placeholder: placeholder1,
        showDateInput: this.showDateInput,
        timePicker,
        showTimePicker: sShowTimePicker || mode5[0] === "time",
        enablePrev: true,
        enableNext: !isClosestMonths || this.isMonthYearPanelShow(mode5[1]),
        clearIcon
      },
      on: {
        inputChange: this.onStartInputChange,
        inputSelect: this.onStartInputSelect,
        valueChange: this.onStartValueChange,
        panelChange: this.onStartPanelChange
      }
    });
    var rightPartProps = mergeProps(baseProps, newProps, {
      props: {
        hoverValue: sHoverValue,
        direction: "right",
        format: this.getFormat(),
        timePickerDisabledTime: this.getEndDisableTime(),
        placeholder: placeholder2,
        value: endValue,
        mode: mode5[1],
        showDateInput: this.showDateInput,
        timePicker,
        showTimePicker: sShowTimePicker || mode5[1] === "time",
        disabledTime: this.disabledEndTime,
        disabledMonth: this.disabledEndMonth,
        enablePrev: !isClosestMonths || this.isMonthYearPanelShow(mode5[0]),
        enableNext: true,
        clearIcon
      },
      on: {
        inputChange: this.onEndInputChange,
        inputSelect: this.onEndInputSelect,
        valueChange: this.onEndValueChange,
        panelChange: this.onEndPanelChange
      }
    });
    var TodayButtonNode = null;
    if (showToday) {
      var todayButtonProps = mergeProps(baseProps, {
        props: {
          disabled: isTodayInView,
          value: sValue[0],
          text: locale3.backToToday
        },
        on: {
          today: this.onToday
        }
      });
      TodayButtonNode = h(TodayButton, _mergeJSXProps([{ key: "todayButton" }, todayButtonProps]));
    }
    var TimePickerButtonNode = null;
    if (props2.timePicker) {
      var timePickerButtonProps = mergeProps(baseProps, {
        props: {
          showTimePicker: sShowTimePicker || mode5[0] === "time" && mode5[1] === "time",
          timePickerDisabled: !this.hasSelectedValue() || sHoverValue.length
        },
        on: {
          openTimePicker: this.onOpenTimePicker,
          closeTimePicker: this.onCloseTimePicker
        }
      });
      TimePickerButtonNode = h(TimePickerButton, _mergeJSXProps([{ key: "timePickerButton" }, timePickerButtonProps]));
    }
    var OkButtonNode = null;
    if (showOkButton) {
      var okButtonProps = mergeProps(baseProps, {
        props: {
          okDisabled: !this.isAllowedDateAndTime(sSelectedValue) || !this.hasSelectedValue() || sHoverValue.length
        },
        on: {
          ok: this.onOk
        }
      });
      OkButtonNode = h(OkButton, _mergeJSXProps([{ key: "okButtonNode" }, okButtonProps]));
    }
    var extraFooter = this.renderFooter(mode5);
    return h(
      "div",
      {
        ref: "rootInstance",
        "class": className,
        attrs: { tabIndex: "0" },
        on: {
          "keydown": this.onKeyDown
        }
      },
      [props2.renderSidebar(), h(
        "div",
        { "class": prefixCls2 + "-panel" },
        [showClear && sSelectedValue[0] && sSelectedValue[1] ? h(
          "a",
          {
            attrs: { role: "button", title: locale3.clear },
            on: {
              "click": this.clear
            }
          },
          [clearIcon || h("span", { "class": prefixCls2 + "-clear-btn" })]
        ) : null, h(
          "div",
          {
            "class": prefixCls2 + "-date-panel",
            on: {
              "mouseleave": type3 !== "both" ? this.onDatePanelLeave : noop$r,
              "mouseenter": type3 !== "both" ? this.onDatePanelEnter : noop$r
            }
          },
          [h(CalendarPart$1, leftPartProps), h(
            "span",
            { "class": prefixCls2 + "-range-middle" },
            [seperator]
          ), h(CalendarPart$1, rightPartProps)]
        ), h(
          "div",
          { "class": cls },
          [showToday || props2.timePicker || showOkButton || extraFooter ? h(
            "div",
            { "class": prefixCls2 + "-footer-btn" },
            [extraFooter, TodayButtonNode, TimePickerButtonNode, OkButtonNode]
          ) : null]
        )]
      )]
    );
  }
};
var RangeCalendar$1 = RangeCalendar;
var PresetColorTypes = ["pink", "red", "yellow", "orange", "cyan", "green", "blue", "purple", "geekblue", "magenta", "volcano", "gold", "lime"];
var PresetColorRegex = new RegExp("^(" + PresetColorTypes.join("|") + ")(-inverse)?$");
var Tag = {
  name: "ATag",
  mixins: [BaseMixin],
  model: {
    prop: "visible",
    event: "close.visible"
  },
  props: {
    prefixCls: PropTypes.string,
    color: PropTypes.string,
    closable: PropTypes.bool.def(false),
    visible: PropTypes.bool,
    afterClose: PropTypes.func
  },
  inject: {
    configProvider: { "default": function _default64() {
      return ConfigConsumerProps;
    } }
  },
  data: function data56() {
    var _visible = true;
    var props2 = getOptionProps(this);
    if ("visible" in props2) {
      _visible = this.visible;
    }
    warning$4(!("afterClose" in props2), "Tag", "'afterClose' will be deprecated, please use 'close' event, we will remove this in the next version.");
    return {
      _visible
    };
  },
  watch: {
    visible: function visible5(val) {
      this.setState({
        _visible: val
      });
    }
  },
  methods: {
    setVisible: function setVisible(visible11, e) {
      this.$emit("close", e);
      this.$emit("close.visible", false);
      var afterClose = this.afterClose;
      if (afterClose) {
        afterClose();
      }
      if (e.defaultPrevented) {
        return;
      }
      if (!hasProp(this, "visible")) {
        this.setState({ _visible: visible11 });
      }
    },
    handleIconClick: function handleIconClick(e) {
      e.stopPropagation();
      this.setVisible(false, e);
    },
    isPresetColor: function isPresetColor2() {
      var color = this.$props.color;
      if (!color) {
        return false;
      }
      return PresetColorRegex.test(color);
    },
    getTagStyle: function getTagStyle() {
      var color = this.$props.color;
      var isPresetColor3 = this.isPresetColor();
      return {
        backgroundColor: color && !isPresetColor3 ? color : void 0
      };
    },
    getTagClassName: function getTagClassName(prefixCls2) {
      var _ref;
      var color = this.$props.color;
      var isPresetColor3 = this.isPresetColor();
      return _ref = {}, _default$8(_ref, prefixCls2, true), _default$8(_ref, prefixCls2 + "-" + color, isPresetColor3), _default$8(_ref, prefixCls2 + "-has-color", color && !isPresetColor3), _ref;
    },
    renderCloseIcon: function renderCloseIcon() {
      var h = this.$createElement;
      var closable = this.$props.closable;
      return closable ? h(Icon$1, {
        attrs: { type: "close" },
        on: {
          "click": this.handleIconClick
        }
      }) : null;
    }
  },
  render: function render119() {
    var h = arguments[0];
    var customizePrefixCls = this.$props.prefixCls;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("tag", customizePrefixCls);
    var visible11 = this.$data._visible;
    var tag = h(
      "span",
      _mergeJSXProps([{
        directives: [{
          name: "show",
          value: visible11
        }]
      }, { on: omit$2(getListeners(this), ["close"]) }, {
        "class": this.getTagClassName(prefixCls2),
        style: this.getTagStyle()
      }]),
      [this.$slots["default"], this.renderCloseIcon()]
    );
    var transitionProps = getTransitionProps$1(prefixCls2 + "-zoom", {
      appear: false
    });
    return h(Wave, [h(
      "transition",
      transitionProps,
      [tag]
    )]);
  }
};
var CheckableTag = {
  name: "ACheckableTag",
  model: {
    prop: "checked"
  },
  props: {
    prefixCls: PropTypes.string,
    checked: Boolean
  },
  inject: {
    configProvider: { "default": function _default65() {
      return ConfigConsumerProps;
    } }
  },
  computed: {
    classes: function classes5() {
      var _ref;
      var checked4 = this.checked, customizePrefixCls = this.prefixCls;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("tag", customizePrefixCls);
      return _ref = {}, _default$8(_ref, "" + prefixCls2, true), _default$8(_ref, prefixCls2 + "-checkable", true), _default$8(_ref, prefixCls2 + "-checkable-checked", checked4), _ref;
    }
  },
  methods: {
    handleClick: function handleClick4() {
      var checked4 = this.checked;
      this.$emit("input", !checked4);
      this.$emit("change", !checked4);
    }
  },
  render: function render120() {
    var h = arguments[0];
    var classes6 = this.classes, handleClick8 = this.handleClick, $slots = this.$slots;
    return h(
      "div",
      {
        "class": classes6,
        on: {
          "click": handleClick8
        }
      },
      [$slots["default"]]
    );
  }
};
Tag.CheckableTag = CheckableTag;
Tag.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Tag.name, Tag);
  Vue2.component(Tag.CheckableTag.name, Tag.CheckableTag);
};
var PickerProps = function PickerProps2() {
  return {
    name: PropTypes.string,
    transitionName: PropTypes.string,
    prefixCls: PropTypes.string,
    inputPrefixCls: PropTypes.string,
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.func]),
    disabled: PropTypes.bool,
    allowClear: PropTypes.bool,
    suffixIcon: PropTypes.any,
    popupStyle: PropTypes.object,
    dropdownClassName: PropTypes.string,
    locale: PropTypes.any,
    localeCode: PropTypes.string,
    size: PropTypes.oneOf(["large", "small", "default"]),
    getCalendarContainer: PropTypes.func,
    open: PropTypes.bool,
    disabledDate: PropTypes.func,
    showToday: PropTypes.bool,
    dateRender: PropTypes.any,
    pickerClass: PropTypes.string,
    pickerInputClass: PropTypes.string,
    timePicker: PropTypes.any,
    autoFocus: PropTypes.bool,
    tagPrefixCls: PropTypes.string,
    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    align: PropTypes.object.def(function() {
      return {};
    }),
    inputReadOnly: PropTypes.bool,
    valueFormat: PropTypes.string
  };
};
var SinglePickerProps = function SinglePickerProps2() {
  return {
    value: TimeType$1,
    defaultValue: TimeType$1,
    defaultPickerValue: TimeType$1,
    renderExtraFooter: PropTypes.any,
    placeholder: PropTypes.string
  };
};
var DatePickerProps = function DatePickerProps2() {
  return _default$6({}, PickerProps(), SinglePickerProps(), {
    showTime: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),
    open: PropTypes.bool,
    disabledTime: PropTypes.func,
    mode: PropTypes.oneOf(["time", "date", "month", "year", "decade"])
  });
};
var MonthPickerProps = function MonthPickerProps2() {
  return _default$6({}, PickerProps(), SinglePickerProps(), {
    placeholder: PropTypes.string,
    monthCellContentRender: PropTypes.func
  });
};
var RangePickerProps = function RangePickerProps2() {
  return _default$6({}, PickerProps(), {
    tagPrefixCls: PropTypes.string,
    value: TimesType,
    defaultValue: TimesType,
    defaultPickerValue: TimesType,
    timePicker: PropTypes.any,
    showTime: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),
    ranges: PropTypes.object,
    placeholder: PropTypes.arrayOf(String),
    mode: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(String)]),
    separator: PropTypes.any,
    disabledTime: PropTypes.func,
    showToday: PropTypes.bool,
    renderExtraFooter: PropTypes.any
  });
};
var WeekPickerProps = function WeekPickerProps2() {
  return _default$6({}, PickerProps(), SinglePickerProps(), {
    placeholder: PropTypes.string
  });
};
var InputIcon = {
  functional: true,
  render: function render121(h, context) {
    var props2 = context.props;
    var suffixIcon = props2.suffixIcon, prefixCls2 = props2.prefixCls;
    return (suffixIcon && isValidElement(suffixIcon) ? cloneElement(suffixIcon, {
      "class": prefixCls2 + "-picker-icon"
    }) : h(
      "span",
      { "class": prefixCls2 + "-picker-icon" },
      [suffixIcon]
    )) || h(Icon$1, {
      attrs: { type: "calendar" },
      "class": prefixCls2 + "-picker-icon"
    });
  }
};
function noop$q() {
}
function getShowDateFromValue(value27, mode5) {
  var _value = _default$4(value27, 2), start = _value[0], end = _value[1];
  if (!start && !end) {
    return;
  }
  if (mode5 && mode5[0] === "month") {
    return [start, end];
  }
  var newEnd = end && end.isSame(start, "month") ? end.clone().add(1, "month") : end;
  return [start, newEnd];
}
function pickerValueAdapter(value27) {
  if (!value27) {
    return;
  }
  if (Array.isArray(value27)) {
    return value27;
  }
  return [value27, value27.clone().add(1, "month")];
}
function isEmptyArray(arr) {
  if (Array.isArray(arr)) {
    return arr.length === 0 || arr.every(function(i) {
      return !i;
    });
  }
  return false;
}
function fixLocale(value27, localeCode) {
  if (!localeCode) {
    return;
  }
  if (!value27 || value27.length === 0) {
    return;
  }
  var _value2 = _default$4(value27, 2), start = _value2[0], end = _value2[1];
  if (start) {
    start.locale(localeCode);
  }
  if (end) {
    end.locale(localeCode);
  }
}
var RangePicker = {
  name: "ARangePicker",
  mixins: [BaseMixin],
  model: {
    prop: "value",
    event: "change"
  },
  props: initDefaultProps(RangePickerProps(), {
    allowClear: true,
    showToday: false,
    separator: "~"
  }),
  inject: {
    configProvider: { "default": function _default66() {
      return ConfigConsumerProps;
    } }
  },
  data: function data57() {
    var value27 = this.value || this.defaultValue || [];
    var _value3 = _default$4(value27, 2), start = _value3[0], end = _value3[1];
    if (start && !interopDefault(moment).isMoment(start) || end && !interopDefault(moment).isMoment(end)) {
      throw new Error("The value/defaultValue of RangePicker must be a moment object array after `antd@2.0`, see: https://u.ant.design/date-picker-value");
    }
    var pickerValue = !value27 || isEmptyArray(value27) ? this.defaultPickerValue : value27;
    return {
      sValue: value27,
      sShowDate: pickerValueAdapter(pickerValue || interopDefault(moment)()),
      sOpen: this.open,
      sHoverValue: []
    };
  },
  watch: {
    value: function value23(val) {
      var value27 = val || [];
      var state = { sValue: value27 };
      if (!shallowEqual2(val, this.sValue)) {
        state = _default$6({}, state, {
          sShowDate: getShowDateFromValue(value27, this.mode) || this.sShowDate
        });
      }
      this.setState(state);
    },
    open: function open4(val) {
      var state = { sOpen: val };
      this.setState(state);
    },
    sOpen: function sOpen(val, oldVal) {
      var _this = this;
      this.$nextTick(function() {
        if (!hasProp(_this, "open") && oldVal && !val) {
          _this.focus();
        }
      });
    }
  },
  methods: {
    setValue: function setValue8(value27, hidePanel) {
      this.handleChange(value27);
      if ((hidePanel || !this.showTime) && !hasProp(this, "open")) {
        this.setState({ sOpen: false });
      }
    },
    clearSelection: function clearSelection2(e) {
      e.preventDefault();
      e.stopPropagation();
      this.setState({ sValue: [] });
      this.handleChange([]);
    },
    clearHoverValue: function clearHoverValue() {
      this.setState({ sHoverValue: [] });
    },
    handleChange: function handleChange10(value27) {
      if (!hasProp(this, "value")) {
        this.setState(function(_ref) {
          var sShowDate = _ref.sShowDate;
          return {
            sValue: value27,
            sShowDate: getShowDateFromValue(value27) || sShowDate
          };
        });
      }
      if (value27[0] && value27[1] && value27[0].diff(value27[1]) > 0) {
        value27[1] = void 0;
      }
      var _value4 = _default$4(value27, 2), start = _value4[0], end = _value4[1];
      this.$emit("change", value27, [formatDate(start, this.format), formatDate(end, this.format)]);
    },
    handleOpenChange: function handleOpenChange2(open6) {
      if (!hasProp(this, "open")) {
        this.setState({ sOpen: open6 });
      }
      if (open6 === false) {
        this.clearHoverValue();
      }
      this.$emit("openChange", open6);
    },
    handleShowDateChange: function handleShowDateChange(showDate) {
      this.setState({ sShowDate: showDate });
    },
    handleHoverChange: function handleHoverChange(hoverValue2) {
      this.setState({ sHoverValue: hoverValue2 });
    },
    handleRangeMouseLeave: function handleRangeMouseLeave() {
      if (this.sOpen) {
        this.clearHoverValue();
      }
    },
    handleCalendarInputSelect: function handleCalendarInputSelect(value27) {
      var _value5 = _default$4(value27, 1), start = _value5[0];
      if (!start) {
        return;
      }
      this.setState(function(_ref2) {
        var sShowDate = _ref2.sShowDate;
        return {
          sValue: value27,
          sShowDate: getShowDateFromValue(value27) || sShowDate
        };
      });
    },
    handleRangeClick: function handleRangeClick(value27) {
      if (typeof value27 === "function") {
        value27 = value27();
      }
      this.setValue(value27, true);
      this.$emit("ok", value27);
      this.$emit("openChange", false);
    },
    onMouseEnter: function onMouseEnter3(e) {
      this.$emit("mouseenter", e);
    },
    onMouseLeave: function onMouseLeave3(e) {
      this.$emit("mouseleave", e);
    },
    focus: function focus17() {
      this.$refs.picker.focus();
    },
    blur: function blur14() {
      this.$refs.picker.blur();
    },
    renderFooter: function renderFooter() {
      var _this2 = this;
      var h = this.$createElement;
      var ranges = this.ranges, $scopedSlots = this.$scopedSlots, $slots = this.$slots;
      var prefixCls2 = this._prefixCls, tagPrefixCls = this._tagPrefixCls;
      var renderExtraFooter = this.renderExtraFooter || $scopedSlots.renderExtraFooter || $slots.renderExtraFooter;
      if (!ranges && !renderExtraFooter) {
        return null;
      }
      var customFooter = renderExtraFooter ? h(
        "div",
        { "class": prefixCls2 + "-footer-extra", key: "extra" },
        [typeof renderExtraFooter === "function" ? renderExtraFooter() : renderExtraFooter]
      ) : null;
      var operations = ranges && Object.keys(ranges).map(function(range2) {
        var value27 = ranges[range2];
        var hoverValue2 = typeof value27 === "function" ? value27.call(_this2) : value27;
        return h(
          Tag,
          {
            key: range2,
            attrs: {
              prefixCls: tagPrefixCls,
              color: "blue"
            },
            on: {
              "click": function click() {
                return _this2.handleRangeClick(value27);
              },
              "mouseenter": function mouseenter() {
                return _this2.setState({ sHoverValue: hoverValue2 });
              },
              "mouseleave": _this2.handleRangeMouseLeave
            }
          },
          [range2]
        );
      });
      var rangeNode = operations && operations.length > 0 ? h(
        "div",
        { "class": prefixCls2 + "-footer-extra " + prefixCls2 + "-range-quick-selector", key: "range" },
        [operations]
      ) : null;
      return [rangeNode, customFooter];
    }
  },
  render: function render122() {
    var _classNames, _this3 = this;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var suffixIcon = getComponentFromProp(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var value27 = this.sValue, showDate = this.sShowDate, hoverValue2 = this.sHoverValue, open6 = this.sOpen, $scopedSlots = this.$scopedSlots;
    var listeners = getListeners(this);
    var _listeners$calendarCh = listeners.calendarChange, calendarChange = _listeners$calendarCh === void 0 ? noop$q : _listeners$calendarCh, _listeners$ok = listeners.ok, ok = _listeners$ok === void 0 ? noop$q : _listeners$ok, _listeners$focus = listeners.focus, focus35 = _listeners$focus === void 0 ? noop$q : _listeners$focus, _listeners$blur = listeners.blur, blur32 = _listeners$blur === void 0 ? noop$q : _listeners$blur, _listeners$panelChang = listeners.panelChange, panelChange = _listeners$panelChang === void 0 ? noop$q : _listeners$panelChang;
    var customizePrefixCls = props2.prefixCls, customizeTagPrefixCls = props2.tagPrefixCls, popupStyle = props2.popupStyle, disabledDate = props2.disabledDate, disabledTime = props2.disabledTime, showTime = props2.showTime, showToday = props2.showToday, ranges = props2.ranges, locale3 = props2.locale, localeCode = props2.localeCode, format3 = props2.format, separator = props2.separator, inputReadOnly = props2.inputReadOnly;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("calendar", customizePrefixCls);
    var tagPrefixCls = getPrefixCls5("tag", customizeTagPrefixCls);
    this._prefixCls = prefixCls2;
    this._tagPrefixCls = tagPrefixCls;
    var dateRender = props2.dateRender || $scopedSlots.dateRender;
    fixLocale(value27, localeCode);
    fixLocale(showDate, localeCode);
    var calendarClassName = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-time", showTime), _default$8(_classNames, prefixCls2 + "-range-with-ranges", ranges), _classNames));
    var pickerChangeHandler = {
      on: {
        change: this.handleChange
      }
    };
    var calendarProps = {
      on: {
        ok: this.handleChange
      },
      props: {}
    };
    if (props2.timePicker) {
      pickerChangeHandler.on.change = function(changedValue) {
        return _this3.handleChange(changedValue);
      };
    } else {
      calendarProps = { on: {}, props: {} };
    }
    if ("mode" in props2) {
      calendarProps.props.mode = props2.mode;
    }
    var startPlaceholder = Array.isArray(props2.placeholder) ? props2.placeholder[0] : locale3.lang.rangePlaceholder[0];
    var endPlaceholder = Array.isArray(props2.placeholder) ? props2.placeholder[1] : locale3.lang.rangePlaceholder[1];
    var rangeCalendarProps = mergeProps(calendarProps, {
      props: {
        separator,
        format: format3,
        prefixCls: prefixCls2,
        renderFooter: this.renderFooter,
        timePicker: props2.timePicker,
        disabledDate,
        disabledTime,
        dateInputPlaceholder: [startPlaceholder, endPlaceholder],
        locale: locale3.lang,
        dateRender,
        value: showDate,
        hoverValue: hoverValue2,
        showToday,
        inputReadOnly
      },
      on: {
        change: calendarChange,
        ok,
        valueChange: this.handleShowDateChange,
        hoverChange: this.handleHoverChange,
        panelChange,
        inputSelect: this.handleCalendarInputSelect
      },
      "class": calendarClassName,
      scopedSlots: $scopedSlots
    });
    var calendar2 = h(RangeCalendar$1, rangeCalendarProps);
    var pickerStyle = {};
    if (props2.showTime) {
      pickerStyle.width = "350px";
    }
    var _value6 = _default$4(value27, 2), startValue = _value6[0], endValue = _value6[1];
    var clearIcon = !props2.disabled && props2.allowClear && value27 && (startValue || endValue) ? h(Icon$1, {
      attrs: {
        type: "close-circle",
        theme: "filled"
      },
      "class": prefixCls2 + "-picker-clear",
      on: {
        "click": this.clearSelection
      }
    }) : null;
    var inputIcon = h(InputIcon, {
      attrs: { suffixIcon, prefixCls: prefixCls2 }
    });
    var input = function input2(_ref3) {
      var inputValue = _ref3.value;
      var _inputValue = _default$4(inputValue, 2), start = _inputValue[0], end = _inputValue[1];
      return h(
        "span",
        { "class": props2.pickerInputClass },
        [h("input", {
          attrs: {
            disabled: props2.disabled,
            readOnly: true,
            placeholder: startPlaceholder,
            tabIndex: -1
          },
          domProps: {
            "value": formatDate(start, props2.format)
          },
          "class": prefixCls2 + "-range-picker-input"
        }), h(
          "span",
          { "class": prefixCls2 + "-range-picker-separator" },
          [" ", separator, " "]
        ), h("input", {
          attrs: {
            disabled: props2.disabled,
            readOnly: true,
            placeholder: endPlaceholder,
            tabIndex: -1
          },
          domProps: {
            "value": formatDate(end, props2.format)
          },
          "class": prefixCls2 + "-range-picker-input"
        }), clearIcon, inputIcon]
      );
    };
    var vcDatePickerProps = mergeProps({
      props: props2,
      on: listeners
    }, pickerChangeHandler, {
      props: {
        calendar: calendar2,
        value: value27,
        open: open6,
        prefixCls: prefixCls2 + "-picker-container"
      },
      on: {
        openChange: this.handleOpenChange
      },
      style: popupStyle,
      scopedSlots: _default$6({ "default": input }, $scopedSlots)
    });
    return h(
      "span",
      {
        ref: "picker",
        "class": props2.pickerClass,
        style: pickerStyle,
        attrs: {
          tabIndex: props2.disabled ? -1 : 0
        },
        on: {
          "focus": focus35,
          "blur": blur32,
          "mouseenter": this.onMouseEnter,
          "mouseleave": this.onMouseLeave
        }
      },
      [h(VcDatePicker, vcDatePickerProps)]
    );
  }
};
function formatValue(value27, format3) {
  return value27 && value27.format(format3) || "";
}
function noop$p() {
}
var WeekPicker = {
  name: "AWeekPicker",
  mixins: [BaseMixin],
  model: {
    prop: "value",
    event: "change"
  },
  props: initDefaultProps(WeekPickerProps(), {
    format: "gggg-wo",
    allowClear: true
  }),
  inject: {
    configProvider: { "default": function _default67() {
      return ConfigConsumerProps;
    } }
  },
  data: function data58() {
    var value27 = this.value || this.defaultValue;
    if (value27 && !interopDefault(moment).isMoment(value27)) {
      throw new Error("The value/defaultValue of WeekPicker or MonthPicker must be a moment object");
    }
    return {
      _value: value27,
      _open: this.open
    };
  },
  watch: {
    value: function value24(val) {
      var state = { _value: val };
      this.setState(state);
      this.prevState = _default$6({}, this.$data, state);
    },
    open: function open5(val) {
      var state = { _open: val };
      this.setState(state);
      this.prevState = _default$6({}, this.$data, state);
    },
    _open: function _open(val, oldVal) {
      var _this = this;
      this.$nextTick(function() {
        if (!hasProp(_this, "open") && oldVal && !val) {
          _this.focus();
        }
      });
    }
  },
  mounted: function mounted37() {
    this.prevState = _default$6({}, this.$data);
  },
  updated: function updated24() {
    var _this2 = this;
    this.$nextTick(function() {
      if (!hasProp(_this2, "open") && _this2.prevState._open && !_this2._open) {
        _this2.focus();
      }
    });
  },
  methods: {
    weekDateRender: function weekDateRender(current2) {
      var h = this.$createElement;
      var selectedValue6 = this.$data._value;
      var prefixCls2 = this._prefixCls, $scopedSlots = this.$scopedSlots;
      var dateRender = this.dateRender || $scopedSlots.dateRender;
      var dateNode = dateRender ? dateRender(current2) : current2.date();
      if (selectedValue6 && current2.year() === selectedValue6.year() && current2.week() === selectedValue6.week()) {
        return h(
          "div",
          { "class": prefixCls2 + "-selected-day" },
          [h(
            "div",
            { "class": prefixCls2 + "-date" },
            [dateNode]
          )]
        );
      }
      return h(
        "div",
        { "class": prefixCls2 + "-date" },
        [dateNode]
      );
    },
    handleChange: function handleChange11(value27) {
      if (!hasProp(this, "value")) {
        this.setState({ _value: value27 });
      }
      this.$emit("change", value27, formatValue(value27, this.format));
    },
    handleOpenChange: function handleOpenChange3(open6) {
      if (!hasProp(this, "open")) {
        this.setState({ _open: open6 });
      }
      this.$emit("openChange", open6);
    },
    clearSelection: function clearSelection3(e) {
      e.preventDefault();
      e.stopPropagation();
      this.handleChange(null);
    },
    focus: function focus18() {
      this.$refs.input.focus();
    },
    blur: function blur15() {
      this.$refs.input.blur();
    },
    renderFooter: function renderFooter2() {
      var h = this.$createElement;
      var prefixCls2 = this._prefixCls, $scopedSlots = this.$scopedSlots;
      var renderExtraFooter = this.renderExtraFooter || $scopedSlots.renderExtraFooter;
      return renderExtraFooter ? h(
        "div",
        { "class": prefixCls2 + "-footer-extra" },
        [renderExtraFooter.apply(void 0, arguments)]
      ) : null;
    }
  },
  render: function render123() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var suffixIcon = getComponentFromProp(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var customizePrefixCls = this.prefixCls, disabled = this.disabled, pickerClass = this.pickerClass, popupStyle = this.popupStyle, pickerInputClass = this.pickerInputClass, format3 = this.format, allowClear = this.allowClear, locale3 = this.locale, localeCode = this.localeCode, disabledDate = this.disabledDate, defaultPickerValue = this.defaultPickerValue, $data = this.$data, $scopedSlots = this.$scopedSlots;
    var listeners = getListeners(this);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("calendar", customizePrefixCls);
    this._prefixCls = prefixCls2;
    var pickerValue = $data._value, open6 = $data._open;
    var _listeners$focus = listeners.focus, focus35 = _listeners$focus === void 0 ? noop$p : _listeners$focus, _listeners$blur = listeners.blur, blur32 = _listeners$blur === void 0 ? noop$p : _listeners$blur;
    if (pickerValue && localeCode) {
      pickerValue.locale(localeCode);
    }
    var placeholder = hasProp(this, "placeholder") ? this.placeholder : locale3.lang.placeholder;
    var weekDateRender2 = this.dateRender || $scopedSlots.dateRender || this.weekDateRender;
    var calendar2 = h(Calendar$1, {
      attrs: {
        showWeekNumber: true,
        dateRender: weekDateRender2,
        prefixCls: prefixCls2,
        format: format3,
        locale: locale3.lang,
        showDateInput: false,
        showToday: false,
        disabledDate,
        renderFooter: this.renderFooter,
        defaultValue: defaultPickerValue
      }
    });
    var clearIcon = !disabled && allowClear && $data._value ? h(Icon$1, {
      attrs: {
        type: "close-circle",
        theme: "filled"
      },
      "class": prefixCls2 + "-picker-clear",
      on: {
        "click": this.clearSelection
      }
    }) : null;
    var inputIcon = h(InputIcon, {
      attrs: { suffixIcon, prefixCls: prefixCls2 }
    });
    var input = function input2(_ref) {
      var value27 = _ref.value;
      return h(
        "span",
        { style: { display: "inline-block", width: "100%" } },
        [h("input", {
          ref: "input",
          attrs: {
            disabled,
            readOnly: true,
            placeholder
          },
          domProps: {
            "value": value27 && value27.format(format3) || ""
          },
          "class": pickerInputClass,
          on: {
            "focus": focus35,
            "blur": blur32
          }
        }), clearIcon, inputIcon]
      );
    };
    var vcDatePickerProps = {
      props: _default$6({}, props2, {
        calendar: calendar2,
        prefixCls: prefixCls2 + "-picker-container",
        value: pickerValue,
        open: open6
      }),
      on: _default$6({}, listeners, {
        change: this.handleChange,
        openChange: this.handleOpenChange
      }),
      style: popupStyle,
      scopedSlots: _default$6({ "default": input }, $scopedSlots)
    };
    return h(
      "span",
      { "class": pickerClass },
      [h(VcDatePicker, vcDatePickerProps)]
    );
  }
};
var DatePicker = wrapPicker(_default$6({}, createPicker(Calendar$1, DatePickerProps()), { name: "ADatePicker" }), DatePickerProps(), "date");
var MonthPicker = wrapPicker(_default$6({}, createPicker(MonthCalendar$1, MonthPickerProps()), { name: "AMonthPicker" }), MonthPickerProps(), "month");
_default$6(DatePicker, {
  RangePicker: wrapPicker(RangePicker, RangePickerProps(), "date"),
  MonthPicker,
  WeekPicker: wrapPicker(WeekPicker, WeekPickerProps(), "week")
});
DatePicker.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(DatePicker.name, DatePicker);
  Vue2.component(DatePicker.RangePicker.name, DatePicker.RangePicker);
  Vue2.component(DatePicker.MonthPicker.name, DatePicker.MonthPicker);
  Vue2.component(DatePicker.WeekPicker.name, DatePicker.WeekPicker);
};
var DatePicker$1 = DatePicker;
var Divider = {
  name: "ADivider",
  props: {
    prefixCls: PropTypes.string,
    type: PropTypes.oneOf(["horizontal", "vertical", ""]).def("horizontal"),
    dashed: PropTypes.bool,
    orientation: PropTypes.oneOf(["left", "right", "center"])
  },
  inject: {
    configProvider: { "default": function _default68() {
      return ConfigConsumerProps;
    } }
  },
  render: function render124() {
    var _classString;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, type3 = this.type, $slots = this.$slots, dashed = this.dashed, _orientation = this.orientation, orientation = _orientation === void 0 ? "center" : _orientation;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("divider", customizePrefixCls);
    var orientationPrefix = orientation.length > 0 ? "-" + orientation : orientation;
    var classString = (_classString = {}, _default$8(_classString, prefixCls2, true), _default$8(_classString, prefixCls2 + "-" + type3, true), _default$8(_classString, prefixCls2 + "-with-text" + orientationPrefix, $slots["default"]), _default$8(_classString, prefixCls2 + "-dashed", !!dashed), _classString);
    return h(
      "div",
      {
        "class": classString,
        attrs: { role: "separator" }
      },
      [$slots["default"] && h(
        "span",
        { "class": prefixCls2 + "-inner-text" },
        [$slots["default"]]
      )]
    );
  }
};
Divider.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Divider.name, Divider);
};
var Divider$1 = Divider;
Dropdown$1.Button = DropdownButton;
Dropdown$1.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Dropdown$1.name, Dropdown$1);
  Vue2.component(DropdownButton.name, DropdownButton);
};
var baseGetTag = _baseGetTag, isObjectLike$2 = isObjectLike_1;
var regexpTag$1 = "[object RegExp]";
function baseIsRegExp$1(value27) {
  return isObjectLike$2(value27) && baseGetTag(value27) == regexpTag$1;
}
var _baseIsRegExp = baseIsRegExp$1;
var baseIsRegExp = _baseIsRegExp, baseUnary = _baseUnary, nodeUtil = _nodeUtil.exports;
var nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;
var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
var isRegExp_1 = isRegExp;
var objectProto$2 = Object.prototype;
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
function baseHas$1(object3, key2) {
  return object3 != null && hasOwnProperty$2.call(object3, key2);
}
var _baseHas = baseHas$1;
var castPath$2 = _castPath, isArguments$1 = isArguments_1, isArray$4 = isArray_1, isIndex$2 = _isIndex, isLength = isLength_1, toKey$3 = _toKey;
function hasPath$2(object3, path, hasFunc) {
  path = castPath$2(path, object3);
  var index2 = -1, length = path.length, result = false;
  while (++index2 < length) {
    var key2 = toKey$3(path[index2]);
    if (!(result = object3 != null && hasFunc(object3, key2))) {
      break;
    }
    object3 = object3[key2];
  }
  if (result || ++index2 != length) {
    return result;
  }
  length = object3 == null ? 0 : object3.length;
  return !!length && isLength(length) && isIndex$2(key2, length) && (isArray$4(object3) || isArguments$1(object3));
}
var _hasPath = hasPath$2;
var baseHas = _baseHas, hasPath$1 = _hasPath;
function has(object3, path) {
  return object3 != null && hasPath$1(object3, path, baseHas);
}
var has_1 = has;
function _extends() {
  _extends = Object.assign || function(target2) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target2[key2] = source[key2];
        }
      }
    }
    return target2;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}
var formatRegExp = /%[sdj%]/g;
var warning$1 = function warning() {
};
if (typeof process !== "undefined" && process.env && false) {
  warning$1 = function warning4(type3, errors) {
    if (typeof console !== "undefined" && console.warn) {
      if (errors.every(function(e) {
        return typeof e === "string";
      })) {
        console.warn(type3, errors);
      }
    }
  };
}
function convertFieldsError(errors) {
  if (!errors || !errors.length)
    return null;
  var fields = {};
  errors.forEach(function(error3) {
    var field = error3.field;
    fields[field] = fields[field] || [];
    fields[field].push(error3);
  });
  return fields;
}
function format2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var i = 1;
  var f = args[0];
  var len = args.length;
  if (typeof f === "function") {
    return f.apply(null, args.slice(1));
  }
  if (typeof f === "string") {
    var str = String(f).replace(formatRegExp, function(x) {
      if (x === "%%") {
        return "%";
      }
      if (i >= len) {
        return x;
      }
      switch (x) {
        case "%s":
          return String(args[i++]);
        case "%d":
          return Number(args[i++]);
        case "%j":
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return "[Circular]";
          }
          break;
        default:
          return x;
      }
    });
    return str;
  }
  return f;
}
function isNativeStringType(type3) {
  return type3 === "string" || type3 === "url" || type3 === "hex" || type3 === "email" || type3 === "date" || type3 === "pattern";
}
function isEmptyValue(value27, type3) {
  if (value27 === void 0 || value27 === null) {
    return true;
  }
  if (type3 === "array" && Array.isArray(value27) && !value27.length) {
    return true;
  }
  if (isNativeStringType(type3) && typeof value27 === "string" && !value27) {
    return true;
  }
  return false;
}
function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total2 = 0;
  var arrLength = arr.length;
  function count2(errors) {
    results.push.apply(results, errors);
    total2++;
    if (total2 === arrLength) {
      callback(results);
    }
  }
  arr.forEach(function(a) {
    func(a, count2);
  });
}
function asyncSerialArray(arr, func, callback) {
  var index2 = 0;
  var arrLength = arr.length;
  function next3(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index2;
    index2 = index2 + 1;
    if (original < arrLength) {
      func(arr[original], next3);
    } else {
      callback([]);
    }
  }
  next3([]);
}
function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function(k) {
    ret.push.apply(ret, objArr[k]);
  });
  return ret;
}
var AsyncValidationError = /* @__PURE__ */ function(_Error) {
  _inheritsLoose(AsyncValidationError2, _Error);
  function AsyncValidationError2(errors, fields) {
    var _this;
    _this = _Error.call(this, "Async Validation Error") || this;
    _this.errors = errors;
    _this.fields = fields;
    return _this;
  }
  return AsyncValidationError2;
}(/* @__PURE__ */ _wrapNativeSuper(Error));
function asyncMap(objArr, option, func, callback) {
  if (option.first) {
    var _pending = new Promise(function(resolve, reject) {
      var next3 = function next4(errors) {
        callback(errors);
        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve();
      };
      var flattenArr = flattenObjArr(objArr);
      asyncSerialArray(flattenArr, func, next3);
    });
    _pending["catch"](function(e) {
      return e;
    });
    return _pending;
  }
  var firstFields = option.firstFields || [];
  if (firstFields === true) {
    firstFields = Object.keys(objArr);
  }
  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total2 = 0;
  var results = [];
  var pending = new Promise(function(resolve, reject) {
    var next3 = function next4(errors) {
      results.push.apply(results, errors);
      total2++;
      if (total2 === objArrLength) {
        callback(results);
        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve();
      }
    };
    if (!objArrKeys.length) {
      callback(results);
      resolve();
    }
    objArrKeys.forEach(function(key2) {
      var arr = objArr[key2];
      if (firstFields.indexOf(key2) !== -1) {
        asyncSerialArray(arr, func, next3);
      } else {
        asyncParallelArray(arr, func, next3);
      }
    });
  });
  pending["catch"](function(e) {
    return e;
  });
  return pending;
}
function complementError(rule) {
  return function(oe) {
    if (oe && oe.message) {
      oe.field = oe.field || rule.fullField;
      return oe;
    }
    return {
      message: typeof oe === "function" ? oe() : oe,
      field: oe.field || rule.fullField
    };
  };
}
function deepMerge(target2, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value27 = source[s];
        if (typeof value27 === "object" && typeof target2[s] === "object") {
          target2[s] = _extends({}, target2[s], value27);
        } else {
          target2[s] = value27;
        }
      }
    }
  }
  return target2;
}
function required(rule, value27, source, errors, options2, type3) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value27, type3 || rule.type))) {
    errors.push(format2(options2.messages.required, rule.fullField));
  }
}
function whitespace(rule, value27, source, errors, options2) {
  if (/^\s+$/.test(value27) || value27 === "") {
    errors.push(format2(options2.messages.whitespace, rule.fullField));
  }
}
var pattern = {
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  url: new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$", "i"),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};
var types = {
  integer: function integer(value27) {
    return types.number(value27) && parseInt(value27, 10) === value27;
  },
  "float": function float(value27) {
    return types.number(value27) && !types.integer(value27);
  },
  array: function array(value27) {
    return Array.isArray(value27);
  },
  regexp: function regexp(value27) {
    if (value27 instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value27);
    } catch (e) {
      return false;
    }
  },
  date: function date(value27) {
    return typeof value27.getTime === "function" && typeof value27.getMonth === "function" && typeof value27.getYear === "function" && !isNaN(value27.getTime());
  },
  number: function number(value27) {
    if (isNaN(value27)) {
      return false;
    }
    return typeof value27 === "number";
  },
  object: function object(value27) {
    return typeof value27 === "object" && !types.array(value27);
  },
  method: function method(value27) {
    return typeof value27 === "function";
  },
  email: function email(value27) {
    return typeof value27 === "string" && !!value27.match(pattern.email) && value27.length < 255;
  },
  url: function url(value27) {
    return typeof value27 === "string" && !!value27.match(pattern.url);
  },
  hex: function hex(value27) {
    return typeof value27 === "string" && !!value27.match(pattern.hex);
  }
};
function type2(rule, value27, source, errors, options2) {
  if (rule.required && value27 === void 0) {
    required(rule, value27, source, errors, options2);
    return;
  }
  var custom2 = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"];
  var ruleType = rule.type;
  if (custom2.indexOf(ruleType) > -1) {
    if (!types[ruleType](value27)) {
      errors.push(format2(options2.messages.types[ruleType], rule.fullField, rule.type));
    }
  } else if (ruleType && typeof value27 !== rule.type) {
    errors.push(format2(options2.messages.types[ruleType], rule.fullField, rule.type));
  }
}
function range(rule, value27, source, errors, options2) {
  var len = typeof rule.len === "number";
  var min4 = typeof rule.min === "number";
  var max4 = typeof rule.max === "number";
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value27;
  var key2 = null;
  var num = typeof value27 === "number";
  var str = typeof value27 === "string";
  var arr = Array.isArray(value27);
  if (num) {
    key2 = "number";
  } else if (str) {
    key2 = "string";
  } else if (arr) {
    key2 = "array";
  }
  if (!key2) {
    return false;
  }
  if (arr) {
    val = value27.length;
  }
  if (str) {
    val = value27.replace(spRegexp, "_").length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(format2(options2.messages[key2].len, rule.fullField, rule.len));
    }
  } else if (min4 && !max4 && val < rule.min) {
    errors.push(format2(options2.messages[key2].min, rule.fullField, rule.min));
  } else if (max4 && !min4 && val > rule.max) {
    errors.push(format2(options2.messages[key2].max, rule.fullField, rule.max));
  } else if (min4 && max4 && (val < rule.min || val > rule.max)) {
    errors.push(format2(options2.messages[key2].range, rule.fullField, rule.min, rule.max));
  }
}
var ENUM = "enum";
function enumerable(rule, value27, source, errors, options2) {
  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
  if (rule[ENUM].indexOf(value27) === -1) {
    errors.push(format2(options2.messages[ENUM], rule.fullField, rule[ENUM].join(", ")));
  }
}
function pattern$1(rule, value27, source, errors, options2) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value27)) {
        errors.push(format2(options2.messages.pattern.mismatch, rule.fullField, value27, rule.pattern));
      }
    } else if (typeof rule.pattern === "string") {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value27)) {
        errors.push(format2(options2.messages.pattern.mismatch, rule.fullField, value27, rule.pattern));
      }
    }
  }
}
var rules = {
  required,
  whitespace,
  type: type2,
  range,
  "enum": enumerable,
  pattern: pattern$1
};
function string(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2, "string");
    if (!isEmptyValue(value27, "string")) {
      rules.type(rule, value27, source, errors, options2);
      rules.range(rule, value27, source, errors, options2);
      rules.pattern(rule, value27, source, errors, options2);
      if (rule.whitespace === true) {
        rules.whitespace(rule, value27, source, errors, options2);
      }
    }
  }
  callback(errors);
}
function method2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (value27 !== void 0) {
      rules.type(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function number2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (value27 === "") {
      value27 = void 0;
    }
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (value27 !== void 0) {
      rules.type(rule, value27, source, errors, options2);
      rules.range(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function _boolean(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (value27 !== void 0) {
      rules.type(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function regexp2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (!isEmptyValue(value27)) {
      rules.type(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function integer2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (value27 !== void 0) {
      rules.type(rule, value27, source, errors, options2);
      rules.range(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function floatFn(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (value27 !== void 0) {
      rules.type(rule, value27, source, errors, options2);
      rules.range(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function array2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if ((value27 === void 0 || value27 === null) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2, "array");
    if (value27 !== void 0 && value27 !== null) {
      rules.type(rule, value27, source, errors, options2);
      rules.range(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function object2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (value27 !== void 0) {
      rules.type(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
var ENUM$1 = "enum";
function enumerable$1(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (value27 !== void 0) {
      rules[ENUM$1](rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function pattern$2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (!isEmptyValue(value27, "string")) {
      rules.pattern(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function date2(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27, "date") && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
    if (!isEmptyValue(value27, "date")) {
      var dateObject;
      if (value27 instanceof Date) {
        dateObject = value27;
      } else {
        dateObject = new Date(value27);
      }
      rules.type(rule, dateObject, source, errors, options2);
      if (dateObject) {
        rules.range(rule, dateObject.getTime(), source, errors, options2);
      }
    }
  }
  callback(errors);
}
function required$1(rule, value27, callback, source, options2) {
  var errors = [];
  var type3 = Array.isArray(value27) ? "array" : typeof value27;
  rules.required(rule, value27, source, errors, options2, type3);
  callback(errors);
}
function type$1(rule, value27, callback, source, options2) {
  var ruleType = rule.type;
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27, ruleType) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2, ruleType);
    if (!isEmptyValue(value27, ruleType)) {
      rules.type(rule, value27, source, errors, options2);
    }
  }
  callback(errors);
}
function any(rule, value27, callback, source, options2) {
  var errors = [];
  var validate4 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate4) {
    if (isEmptyValue(value27) && !rule.required) {
      return callback();
    }
    rules.required(rule, value27, source, errors, options2);
  }
  callback(errors);
}
var validators = {
  string,
  method: method2,
  number: number2,
  "boolean": _boolean,
  regexp: regexp2,
  integer: integer2,
  "float": floatFn,
  array: array2,
  object: object2,
  "enum": enumerable$1,
  pattern: pattern$2,
  date: date2,
  url: type$1,
  hex: type$1,
  email: type$1,
  required: required$1,
  any
};
function newMessages() {
  return {
    "default": "Validation error on field %s",
    required: "%s is required",
    "enum": "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid"
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      "boolean": "%s is not a %s",
      integer: "%s is not an %s",
      "float": "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s"
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters"
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s"
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length"
    },
    pattern: {
      mismatch: "%s value %s does not match pattern %s"
    },
    clone: function clone4() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}
var messages = newMessages();
function Schema(descriptor2) {
  this.rules = null;
  this._messages = messages;
  this.define(descriptor2);
}
Schema.prototype = {
  messages: function messages2(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }
    return this._messages;
  },
  define: function define(rules3) {
    if (!rules3) {
      throw new Error("Cannot configure a schema with no rules");
    }
    if (typeof rules3 !== "object" || Array.isArray(rules3)) {
      throw new Error("Rules must be an object");
    }
    this.rules = {};
    var z;
    var item;
    for (z in rules3) {
      if (rules3.hasOwnProperty(z)) {
        item = rules3[z];
        this.rules[z] = Array.isArray(item) ? item : [item];
      }
    }
  },
  validate: function validate(source_, o, oc) {
    var _this = this;
    if (o === void 0) {
      o = {};
    }
    if (oc === void 0) {
      oc = function oc2() {
      };
    }
    var source = source_;
    var options2 = o;
    var callback = oc;
    if (typeof options2 === "function") {
      callback = options2;
      options2 = {};
    }
    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback();
      }
      return Promise.resolve();
    }
    function complete(results) {
      var i;
      var errors = [];
      var fields = {};
      function add4(e) {
        if (Array.isArray(e)) {
          var _errors;
          errors = (_errors = errors).concat.apply(_errors, e);
        } else {
          errors.push(e);
        }
      }
      for (i = 0; i < results.length; i++) {
        add4(results[i]);
      }
      if (!errors.length) {
        errors = null;
        fields = null;
      } else {
        fields = convertFieldsError(errors);
      }
      callback(errors, fields);
    }
    if (options2.messages) {
      var messages$1 = this.messages();
      if (messages$1 === messages) {
        messages$1 = newMessages();
      }
      deepMerge(messages$1, options2.messages);
      options2.messages = messages$1;
    } else {
      options2.messages = this.messages();
    }
    var arr;
    var value27;
    var series = {};
    var keys3 = options2.keys || Object.keys(this.rules);
    keys3.forEach(function(z) {
      arr = _this.rules[z];
      value27 = source[z];
      arr.forEach(function(r) {
        var rule = r;
        if (typeof rule.transform === "function") {
          if (source === source_) {
            source = _extends({}, source);
          }
          value27 = source[z] = rule.transform(value27);
        }
        if (typeof rule === "function") {
          rule = {
            validator: rule
          };
        } else {
          rule = _extends({}, rule);
        }
        rule.validator = _this.getValidationMethod(rule);
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this.getType(rule);
        if (!rule.validator) {
          return;
        }
        series[z] = series[z] || [];
        series[z].push({
          rule,
          value: value27,
          source,
          field: z
        });
      });
    });
    var errorFields = {};
    return asyncMap(series, options2, function(data109, doIt) {
      var rule = data109.rule;
      var deep = (rule.type === "object" || rule.type === "array") && (typeof rule.fields === "object" || typeof rule.defaultField === "object");
      deep = deep && (rule.required || !rule.required && data109.value);
      rule.field = data109.field;
      function addFullfield(key2, schema) {
        return _extends({}, schema, {
          fullField: rule.fullField + "." + key2
        });
      }
      function cb(e) {
        if (e === void 0) {
          e = [];
        }
        var errors = e;
        if (!Array.isArray(errors)) {
          errors = [errors];
        }
        if (!options2.suppressWarning && errors.length) {
          Schema.warning("async-validator:", errors);
        }
        if (errors.length && rule.message !== void 0) {
          errors = [].concat(rule.message);
        }
        errors = errors.map(complementError(rule));
        if (options2.first && errors.length) {
          errorFields[rule.field] = 1;
          return doIt(errors);
        }
        if (!deep) {
          doIt(errors);
        } else {
          if (rule.required && !data109.value) {
            if (rule.message !== void 0) {
              errors = [].concat(rule.message).map(complementError(rule));
            } else if (options2.error) {
              errors = [options2.error(rule, format2(options2.messages.required, rule.field))];
            }
            return doIt(errors);
          }
          var fieldsSchema = {};
          if (rule.defaultField) {
            for (var k in data109.value) {
              if (data109.value.hasOwnProperty(k)) {
                fieldsSchema[k] = rule.defaultField;
              }
            }
          }
          fieldsSchema = _extends({}, fieldsSchema, data109.rule.fields);
          for (var f in fieldsSchema) {
            if (fieldsSchema.hasOwnProperty(f)) {
              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];
              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
            }
          }
          var schema = new Schema(fieldsSchema);
          schema.messages(options2.messages);
          if (data109.rule.options) {
            data109.rule.options.messages = options2.messages;
            data109.rule.options.error = options2.error;
          }
          schema.validate(data109.value, data109.rule.options || options2, function(errs) {
            var finalErrors = [];
            if (errors && errors.length) {
              finalErrors.push.apply(finalErrors, errors);
            }
            if (errs && errs.length) {
              finalErrors.push.apply(finalErrors, errs);
            }
            doIt(finalErrors.length ? finalErrors : null);
          });
        }
      }
      var res;
      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data109.value, cb, data109.source, options2);
      } else if (rule.validator) {
        res = rule.validator(rule, data109.value, cb, data109.source, options2);
        if (res === true) {
          cb();
        } else if (res === false) {
          cb(rule.message || rule.field + " fails");
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }
      if (res && res.then) {
        res.then(function() {
          return cb();
        }, function(e) {
          return cb(e);
        });
      }
    }, function(results) {
      complete(results);
    });
  },
  getType: function getType3(rule) {
    if (rule.type === void 0 && rule.pattern instanceof RegExp) {
      rule.type = "pattern";
    }
    if (typeof rule.validator !== "function" && rule.type && !validators.hasOwnProperty(rule.type)) {
      throw new Error(format2("Unknown rule type %s", rule.type));
    }
    return rule.type || "string";
  },
  getValidationMethod: function getValidationMethod(rule) {
    if (typeof rule.validator === "function") {
      return rule.validator;
    }
    var keys3 = Object.keys(rule);
    var messageIndex = keys3.indexOf("message");
    if (messageIndex !== -1) {
      keys3.splice(messageIndex, 1);
    }
    if (keys3.length === 1 && keys3[0] === "required") {
      return validators.required;
    }
    return validators[this.getType(rule)] || false;
  }
};
Schema.register = function register2(type3, validator10) {
  if (typeof validator10 !== "function") {
    throw new Error("Cannot register a validator by type, validator is not a function");
  }
  validators[type3] = validator10;
};
Schema.warning = warning$1;
Schema.messages = messages;
Schema.validators = validators;
var baseGet$2 = _baseGet;
function get$1(object3, path, defaultValue) {
  var result = object3 == null ? void 0 : baseGet$2(object3, path);
  return result === void 0 ? defaultValue : result;
}
var get_1 = get$1;
var assignValue = _assignValue, castPath$1 = _castPath, isIndex$1 = _isIndex, isObject$5 = isObject_1, toKey$2 = _toKey;
function baseSet$2(object3, path, value27, customizer) {
  if (!isObject$5(object3)) {
    return object3;
  }
  path = castPath$1(path, object3);
  var index2 = -1, length = path.length, lastIndex = length - 1, nested = object3;
  while (nested != null && ++index2 < length) {
    var key2 = toKey$2(path[index2]), newValue = value27;
    if (key2 === "__proto__" || key2 === "constructor" || key2 === "prototype") {
      return object3;
    }
    if (index2 != lastIndex) {
      var objValue = nested[key2];
      newValue = customizer ? customizer(objValue, key2, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject$5(objValue) ? objValue : isIndex$1(path[index2 + 1]) ? [] : {};
      }
    }
    assignValue(nested, key2, newValue);
    nested = nested[key2];
  }
  return object3;
}
var _baseSet = baseSet$2;
var baseSet$1 = _baseSet;
function set2(object3, path, value27) {
  return object3 == null ? object3 : baseSet$1(object3, path, value27);
}
var set_1 = set2;
var Field = function Field2(fields) {
  _default$1(this, Field2);
  _default$6(this, fields);
};
function isFormField(obj) {
  return obj instanceof Field;
}
function createFormField(field) {
  if (isFormField(field)) {
    return field;
  }
  return new Field(field);
}
function getDisplayName(WrappedComponent) {
  return WrappedComponent.name || "WrappedComponent";
}
function argumentContainer(Container, WrappedComponent) {
  Container.name = "Form_" + getDisplayName(WrappedComponent);
  Container.WrappedComponent = WrappedComponent;
  Container.props = _default$6({}, Container.props, WrappedComponent.props);
  return Container;
}
function identity$2(obj) {
  return obj;
}
function flattenArray(arr) {
  return Array.prototype.concat.apply([], arr);
}
function treeTraverse() {
  var path = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var tree = arguments[1];
  var isLeafNode = arguments[2];
  var errorMessage = arguments[3];
  var callback = arguments[4];
  if (isLeafNode(path, tree)) {
    callback(path, tree);
  } else if (tree === void 0 || tree === null)
    ;
  else if (Array.isArray(tree)) {
    tree.forEach(function(subTree, index2) {
      return treeTraverse(path + "[" + index2 + "]", subTree, isLeafNode, errorMessage, callback);
    });
  } else {
    if ((typeof tree === "undefined" ? "undefined" : _default$7(tree)) !== "object") {
      warning$3();
      return;
    }
    Object.keys(tree).forEach(function(subTreeKey) {
      var subTree = tree[subTreeKey];
      treeTraverse("" + path + (path ? "." : "") + subTreeKey, subTree, isLeafNode, errorMessage, callback);
    });
  }
}
function flattenFields(maybeNestedFields, isLeafNode, errorMessage) {
  var fields = {};
  treeTraverse(void 0, maybeNestedFields, isLeafNode, errorMessage, function(path, node) {
    fields[path] = node;
  });
  return fields;
}
function normalizeValidateRules(validate4, rules3, validateTrigger) {
  var validateRules = validate4.map(function(item) {
    var newItem = _default$6({}, item, {
      trigger: item.trigger || []
    });
    if (typeof newItem.trigger === "string") {
      newItem.trigger = [newItem.trigger];
    }
    return newItem;
  });
  if (rules3) {
    validateRules.push({
      trigger: validateTrigger ? [].concat(validateTrigger) : [],
      rules: rules3
    });
  }
  return validateRules;
}
function getValidateTriggers(validateRules) {
  return validateRules.filter(function(item) {
    return !!item.rules && item.rules.length;
  }).map(function(item) {
    return item.trigger;
  }).reduce(function(pre, curr) {
    return pre.concat(curr);
  }, []);
}
function getValueFromEvent(e) {
  if (!e || !e.target) {
    return e;
  }
  var target2 = e.target;
  return target2.type === "checkbox" ? target2.checked : target2.value;
}
function getErrorStrs(errors) {
  if (errors) {
    return errors.map(function(e) {
      if (e && e.message) {
        return e.message;
      }
      return e;
    });
  }
  return errors;
}
function getParams(ns, opt, cb) {
  var names = ns;
  var options2 = opt;
  var callback = cb;
  if (cb === void 0) {
    if (typeof names === "function") {
      callback = names;
      options2 = {};
      names = void 0;
    } else if (Array.isArray(names)) {
      if (typeof options2 === "function") {
        callback = options2;
        options2 = {};
      } else {
        options2 = options2 || {};
      }
    } else {
      callback = options2;
      options2 = names || {};
      names = void 0;
    }
  }
  return {
    names,
    options: options2,
    callback
  };
}
function isEmptyObject(obj) {
  return Object.keys(obj).length === 0;
}
function hasRules(validate4) {
  if (validate4) {
    return validate4.some(function(item) {
      return item.rules && item.rules.length;
    });
  }
  return false;
}
function startsWith(str, prefix) {
  return str.lastIndexOf(prefix, 0) === 0;
}
function partOf(a, b) {
  return b.indexOf(a) === 0 && [".", "["].indexOf(b[a.length]) !== -1;
}
function internalFlattenFields(fields) {
  return flattenFields(fields, function(_, node) {
    return isFormField(node);
  }, "You must wrap field data with `createFormField`.");
}
var FieldsStore = function() {
  function FieldsStore2(fields) {
    _default$1(this, FieldsStore2);
    _initialiseProps.call(this);
    this.fields = internalFlattenFields(fields);
    this.fieldsMeta = {};
  }
  _default12(FieldsStore2, [{
    key: "updateFields",
    value: function updateFields(fields) {
      this.fields = internalFlattenFields(fields);
    }
  }, {
    key: "flattenRegisteredFields",
    value: function flattenRegisteredFields(fields) {
      var validFieldsName = this.getAllFieldsName();
      return flattenFields(fields, function(path) {
        return validFieldsName.indexOf(path) >= 0;
      }, 'You cannot set a form field before rendering a field associated with the value. You can use `getFieldDecorator(id, options)` instead `v-decorator="[id, options]"` to register it before render.');
    }
  }, {
    key: "setFields",
    value: function setFields(fields) {
      var _this = this;
      var fieldsMeta = this.fieldsMeta;
      var nowFields = _default$6({}, this.fields, fields);
      var nowValues = {};
      Object.keys(fieldsMeta).forEach(function(f) {
        nowValues[f] = _this.getValueFromFields(f, nowFields);
      });
      Object.keys(nowValues).forEach(function(f) {
        var value27 = nowValues[f];
        var fieldMeta = _this.getFieldMeta(f);
        if (fieldMeta && fieldMeta.normalize) {
          var nowValue = fieldMeta.normalize(value27, _this.getValueFromFields(f, _this.fields), nowValues);
          if (nowValue !== value27) {
            nowFields[f] = _default$6({}, nowFields[f], {
              value: nowValue
            });
          }
        }
      });
      this.fields = nowFields;
    }
  }, {
    key: "resetFields",
    value: function resetFields2(ns) {
      var fields = this.fields;
      var names = ns ? this.getValidFieldsFullName(ns) : this.getAllFieldsName();
      return names.reduce(function(acc, name) {
        var field = fields[name];
        if (field && "value" in field) {
          acc[name] = {};
        }
        return acc;
      }, {});
    }
  }, {
    key: "setFieldMeta",
    value: function setFieldMeta(name, meta2) {
      this.fieldsMeta[name] = meta2;
    }
  }, {
    key: "setFieldsAsDirty",
    value: function setFieldsAsDirty() {
      var _this2 = this;
      Object.keys(this.fields).forEach(function(name) {
        var field = _this2.fields[name];
        var fieldMeta = _this2.fieldsMeta[name];
        if (field && fieldMeta && hasRules(fieldMeta.validate)) {
          _this2.fields[name] = _default$6({}, field, {
            dirty: true
          });
        }
      });
    }
  }, {
    key: "getFieldMeta",
    value: function getFieldMeta(name) {
      this.fieldsMeta[name] = this.fieldsMeta[name] || {};
      return this.fieldsMeta[name];
    }
  }, {
    key: "getValueFromFields",
    value: function getValueFromFields(name, fields) {
      var field = fields[name];
      if (field && "value" in field) {
        return field.value;
      }
      var fieldMeta = this.getFieldMeta(name);
      return fieldMeta && fieldMeta.initialValue;
    }
  }, {
    key: "getValidFieldsName",
    value: function getValidFieldsName() {
      var _this3 = this;
      var fieldsMeta = this.fieldsMeta;
      return fieldsMeta ? Object.keys(fieldsMeta).filter(function(name) {
        return !_this3.getFieldMeta(name).hidden;
      }) : [];
    }
  }, {
    key: "getAllFieldsName",
    value: function getAllFieldsName() {
      var fieldsMeta = this.fieldsMeta;
      return fieldsMeta ? Object.keys(fieldsMeta) : [];
    }
  }, {
    key: "getValidFieldsFullName",
    value: function getValidFieldsFullName(maybePartialName) {
      var maybePartialNames = Array.isArray(maybePartialName) ? maybePartialName : [maybePartialName];
      return this.getValidFieldsName().filter(function(fullName) {
        return maybePartialNames.some(function(partialName) {
          return fullName === partialName || startsWith(fullName, partialName) && [".", "["].indexOf(fullName[partialName.length]) >= 0;
        });
      });
    }
  }, {
    key: "getFieldValuePropValue",
    value: function getFieldValuePropValue(fieldMeta) {
      var name = fieldMeta.name, getValueProps = fieldMeta.getValueProps, valuePropName = fieldMeta.valuePropName;
      var field = this.getField(name);
      var fieldValue2 = "value" in field ? field.value : fieldMeta.initialValue;
      if (getValueProps) {
        return getValueProps(fieldValue2);
      }
      return _default$8({}, valuePropName, fieldValue2);
    }
  }, {
    key: "getField",
    value: function getField2(name) {
      return _default$6({}, this.fields[name], {
        name
      });
    }
  }, {
    key: "getNotCollectedFields",
    value: function getNotCollectedFields() {
      var _this4 = this;
      var fieldsName = this.getValidFieldsName();
      return fieldsName.filter(function(name) {
        return !_this4.fields[name];
      }).map(function(name) {
        return {
          name,
          dirty: false,
          value: _this4.getFieldMeta(name).initialValue
        };
      }).reduce(function(acc, field) {
        return set_1(acc, field.name, createFormField(field));
      }, {});
    }
  }, {
    key: "getNestedAllFields",
    value: function getNestedAllFields() {
      var _this5 = this;
      return Object.keys(this.fields).reduce(function(acc, name) {
        return set_1(acc, name, createFormField(_this5.fields[name]));
      }, this.getNotCollectedFields());
    }
  }, {
    key: "getFieldMember",
    value: function getFieldMember(name, member) {
      return this.getField(name)[member];
    }
  }, {
    key: "getNestedFields",
    value: function getNestedFields(names, getter) {
      var fields = names || this.getValidFieldsName();
      return fields.reduce(function(acc, f) {
        return set_1(acc, f, getter(f));
      }, {});
    }
  }, {
    key: "getNestedField",
    value: function getNestedField(name, getter) {
      var fullNames = this.getValidFieldsFullName(name);
      if (fullNames.length === 0 || fullNames.length === 1 && fullNames[0] === name) {
        return getter(name);
      }
      var isArrayValue = fullNames[0][name.length] === "[";
      var suffixNameStartIndex = isArrayValue ? name.length : name.length + 1;
      return fullNames.reduce(function(acc, fullName) {
        return set_1(acc, fullName.slice(suffixNameStartIndex), getter(fullName));
      }, isArrayValue ? [] : {});
    }
  }, {
    key: "isValidNestedFieldName",
    value: function isValidNestedFieldName(name) {
      var names = this.getAllFieldsName();
      return names.every(function(n) {
        return !partOf(n, name) && !partOf(name, n);
      });
    }
  }, {
    key: "clearField",
    value: function clearField(name) {
      delete this.fields[name];
      delete this.fieldsMeta[name];
    }
  }]);
  return FieldsStore2;
}();
var _initialiseProps = function _initialiseProps2() {
  var _this6 = this;
  this.setFieldsInitialValue = function(initialValues) {
    var flattenedInitialValues = _this6.flattenRegisteredFields(initialValues);
    var fieldsMeta = _this6.fieldsMeta;
    Object.keys(flattenedInitialValues).forEach(function(name) {
      if (fieldsMeta[name]) {
        _this6.setFieldMeta(name, _default$6({}, _this6.getFieldMeta(name), {
          initialValue: flattenedInitialValues[name]
        }));
      }
    });
  };
  this.getAllValues = function() {
    var fieldsMeta = _this6.fieldsMeta, fields = _this6.fields;
    return Object.keys(fieldsMeta).reduce(function(acc, name) {
      return set_1(acc, name, _this6.getValueFromFields(name, fields));
    }, {});
  };
  this.getFieldsValue = function(names) {
    return _this6.getNestedFields(names, _this6.getFieldValue);
  };
  this.getFieldValue = function(name) {
    var fields = _this6.fields;
    return _this6.getNestedField(name, function(fullName) {
      return _this6.getValueFromFields(fullName, fields);
    });
  };
  this.getFieldsError = function(names) {
    return _this6.getNestedFields(names, _this6.getFieldError);
  };
  this.getFieldError = function(name) {
    return _this6.getNestedField(name, function(fullName) {
      return getErrorStrs(_this6.getFieldMember(fullName, "errors"));
    });
  };
  this.isFieldValidating = function(name) {
    return _this6.getFieldMember(name, "validating");
  };
  this.isFieldsValidating = function(ns) {
    var names = ns || _this6.getValidFieldsName();
    return names.some(function(n) {
      return _this6.isFieldValidating(n);
    });
  };
  this.isFieldTouched = function(name) {
    return _this6.getFieldMember(name, "touched");
  };
  this.isFieldsTouched = function(ns) {
    var names = ns || _this6.getValidFieldsName();
    return names.some(function(n) {
      return _this6.isFieldTouched(n);
    });
  };
};
function createFieldsStore(fields) {
  return new FieldsStore(fields);
}
var DEFAULT_TRIGGER = "change";
function createBaseForm() {
  var option = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var mixins = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var validateMessages = option.validateMessages, onFieldsChange = option.onFieldsChange, onValuesChange = option.onValuesChange, _option$mapProps = option.mapProps, mapProps = _option$mapProps === void 0 ? identity$2 : _option$mapProps, mapPropsToFields = option.mapPropsToFields, fieldNameProp = option.fieldNameProp, fieldMetaProp = option.fieldMetaProp, fieldDataProp = option.fieldDataProp, _option$formPropName = option.formPropName, formPropName = _option$formPropName === void 0 ? "form" : _option$formPropName, formName = option.name, _option$props = option.props, props2 = _option$props === void 0 ? {} : _option$props, templateContext = option.templateContext;
  return function decorate(WrappedComponent) {
    var formProps = {};
    if (Array.isArray(props2)) {
      props2.forEach(function(prop) {
        formProps[prop] = PropTypes.any;
      });
    } else {
      formProps = props2;
    }
    var Form2 = {
      mixins: [BaseMixin].concat(_default$5(mixins)),
      props: _default$6({}, formProps, {
        wrappedComponentRef: PropTypes.func.def(function() {
        })
      }),
      data: function data109() {
        var _this = this;
        var fields = mapPropsToFields && mapPropsToFields(this.$props);
        this.fieldsStore = createFieldsStore(fields || {});
        this.templateContext = templateContext;
        this.instances = {};
        this.cachedBind = {};
        this.clearedFieldMetaCache = {};
        this.formItems = {};
        this.renderFields = {};
        this.domFields = {};
        ["getFieldsValue", "getFieldValue", "setFieldsInitialValue", "getFieldsError", "getFieldError", "isFieldValidating", "isFieldsValidating", "isFieldsTouched", "isFieldTouched"].forEach(function(key2) {
          _this[key2] = function() {
            var _fieldsStore;
            return (_fieldsStore = _this.fieldsStore)[key2].apply(_fieldsStore, arguments);
          };
        });
        return {
          submitting: false
        };
      },
      watch: templateContext ? {} : {
        $props: {
          handler: function handler8(nextProps) {
            if (mapPropsToFields) {
              this.fieldsStore.updateFields(mapPropsToFields(nextProps));
            }
          },
          deep: true
        }
      },
      mounted: function mounted70() {
        this.cleanUpUselessFields();
      },
      updated: function updated46() {
        this.cleanUpUselessFields();
      },
      methods: {
        updateFields: function updateFields() {
          var fields = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          this.fieldsStore.updateFields(mapPropsToFields(fields));
          if (templateContext) {
            templateContext.$forceUpdate();
          }
        },
        onCollectCommon: function onCollectCommon(name, action, args) {
          var fieldMeta = this.fieldsStore.getFieldMeta(name);
          if (fieldMeta[action]) {
            fieldMeta[action].apply(fieldMeta, _default$5(args));
          } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {
            var _fieldMeta$originalPr;
            (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _default$5(args));
          }
          var value27 = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _default$5(args)) : getValueFromEvent.apply(void 0, _default$5(args));
          if (onValuesChange && value27 !== this.fieldsStore.getFieldValue(name)) {
            var valuesAll = this.fieldsStore.getAllValues();
            var valuesAllSet = {};
            valuesAll[name] = value27;
            Object.keys(valuesAll).forEach(function(key2) {
              return set_1(valuesAllSet, key2, valuesAll[key2]);
            });
            onValuesChange(_default$6(_default$8({}, formPropName, this.getForm()), this.$props), set_1({}, name, value27), valuesAllSet);
          }
          var field = this.fieldsStore.getField(name);
          return { name, field: _default$6({}, field, { value: value27, touched: true }), fieldMeta };
        },
        onCollect: function onCollect(name_, action) {
          for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = arguments[_key];
          }
          var _onCollectCommon = this.onCollectCommon(name_, action, args), name = _onCollectCommon.name, field = _onCollectCommon.field, fieldMeta = _onCollectCommon.fieldMeta;
          var validate4 = fieldMeta.validate;
          this.fieldsStore.setFieldsAsDirty();
          var newField = _default$6({}, field, {
            dirty: hasRules(validate4)
          });
          this.setFields(_default$8({}, name, newField));
        },
        onCollectValidate: function onCollectValidate(name_, action) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }
          var _onCollectCommon2 = this.onCollectCommon(name_, action, args), field = _onCollectCommon2.field, fieldMeta = _onCollectCommon2.fieldMeta;
          var newField = _default$6({}, field, {
            dirty: true
          });
          this.fieldsStore.setFieldsAsDirty();
          this.validateFieldsInternal([newField], {
            action,
            options: {
              firstFields: !!fieldMeta.validateFirst
            }
          });
        },
        getCacheBind: function getCacheBind(name, action, fn) {
          if (!this.cachedBind[name]) {
            this.cachedBind[name] = {};
          }
          var cache = this.cachedBind[name];
          if (!cache[action] || cache[action].oriFn !== fn) {
            cache[action] = {
              fn: fn.bind(this, name, action),
              oriFn: fn
            };
          }
          return cache[action].fn;
        },
        getFieldDecorator: function getFieldDecorator(name, fieldOption, formItem) {
          var _this2 = this;
          var _getFieldProps = this.getFieldProps(name, fieldOption), props3 = _getFieldProps.props, restProps = _default$2(_getFieldProps, ["props"]);
          this.formItems[name] = formItem;
          return function(fieldElem) {
            _this2.renderFields[name] = true;
            var fieldMeta = _this2.fieldsStore.getFieldMeta(name);
            var originalProps = getOptionProps(fieldElem);
            var originalEvents = getEvents(fieldElem);
            fieldMeta.originalProps = originalProps;
            var newProps2 = _default$6({
              props: _default$6({}, props3, _this2.fieldsStore.getFieldValuePropValue(fieldMeta))
            }, restProps);
            newProps2.domProps.value = newProps2.props.value;
            var newEvents = {};
            Object.keys(newProps2.on).forEach(function(key2) {
              if (originalEvents[key2]) {
                var triggerEvents = newProps2.on[key2];
                newEvents[key2] = function() {
                  originalEvents[key2].apply(originalEvents, arguments);
                  triggerEvents.apply(void 0, arguments);
                };
              } else {
                newEvents[key2] = newProps2.on[key2];
              }
            });
            return cloneElement(fieldElem, _default$6({}, newProps2, { on: newEvents }));
          };
        },
        getFieldProps: function getFieldProps(name) {
          var _this3 = this;
          var usersFieldOption = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (!name) {
            throw new Error("Must call `getFieldProps` with valid name string!");
          }
          delete this.clearedFieldMetaCache[name];
          var fieldOption = _default$6({
            name,
            trigger: DEFAULT_TRIGGER,
            valuePropName: "value",
            validate: []
          }, usersFieldOption);
          var rules3 = fieldOption.rules, trigger2 = fieldOption.trigger, _fieldOption$validate = fieldOption.validateTrigger, validateTrigger = _fieldOption$validate === void 0 ? trigger2 : _fieldOption$validate, validate4 = fieldOption.validate;
          var fieldMeta = this.fieldsStore.getFieldMeta(name);
          if ("initialValue" in fieldOption) {
            fieldMeta.initialValue = fieldOption.initialValue;
          }
          var inputProps2 = _default$6({}, this.fieldsStore.getFieldValuePropValue(fieldOption));
          var inputListeners = {};
          var inputAttrs = {};
          if (fieldNameProp) {
            inputProps2[fieldNameProp] = formName ? formName + "_" + name : name;
          }
          var validateRules = normalizeValidateRules(validate4, rules3, validateTrigger);
          var validateTriggers = getValidateTriggers(validateRules);
          validateTriggers.forEach(function(action) {
            if (inputListeners[action])
              return;
            inputListeners[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);
          });
          if (trigger2 && validateTriggers.indexOf(trigger2) === -1) {
            inputListeners[trigger2] = this.getCacheBind(name, trigger2, this.onCollect);
          }
          var meta2 = _default$6({}, fieldMeta, fieldOption, {
            validate: validateRules
          });
          this.fieldsStore.setFieldMeta(name, meta2);
          if (fieldMetaProp) {
            inputAttrs[fieldMetaProp] = meta2;
          }
          if (fieldDataProp) {
            inputAttrs[fieldDataProp] = this.fieldsStore.getField(name);
          }
          this.renderFields[name] = true;
          return {
            props: omit$1(inputProps2, ["id"]),
            domProps: {
              value: inputProps2.value
            },
            attrs: _default$6({}, inputAttrs, {
              id: inputProps2.id
            }),
            directives: [{
              name: "ant-ref",
              value: this.getCacheBind(name, name + "__ref", this.saveRef)
            }],
            on: inputListeners
          };
        },
        getFieldInstance: function getFieldInstance(name) {
          return this.instances[name];
        },
        getRules: function getRules2(fieldMeta, action) {
          var actionRules = fieldMeta.validate.filter(function(item) {
            return !action || item.trigger.indexOf(action) >= 0;
          }).map(function(item) {
            return item.rules;
          });
          return flattenArray(actionRules);
        },
        setFields: function setFields(maybeNestedFields, callback) {
          var _this4 = this;
          var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);
          this.fieldsStore.setFields(fields);
          var changedFields = Object.keys(fields).reduce(function(acc, name) {
            return set_1(acc, name, _this4.fieldsStore.getField(name));
          }, {});
          if (onFieldsChange) {
            var _changedFields = Object.keys(fields).reduce(function(acc, name) {
              return set_1(acc, name, _this4.fieldsStore.getField(name));
            }, {});
            onFieldsChange(this, _changedFields, this.fieldsStore.getNestedAllFields());
          }
          var formContext = templateContext || this;
          var allUpdate = false;
          Object.keys(changedFields).forEach(function(key2) {
            var formItem = _this4.formItems[key2];
            formItem = typeof formItem === "function" ? formItem() : formItem;
            if (formItem && formItem.itemSelfUpdate) {
              formItem.$forceUpdate();
            } else {
              allUpdate = true;
            }
          });
          if (allUpdate) {
            formContext.$forceUpdate();
          }
          this.$nextTick(function() {
            callback && callback();
          });
        },
        setFieldsValue: function setFieldsValue(changedValues, callback) {
          var fieldsMeta = this.fieldsStore.fieldsMeta;
          var values = this.fieldsStore.flattenRegisteredFields(changedValues);
          var newFields = Object.keys(values).reduce(function(acc, name) {
            var isRegistered = fieldsMeta[name];
            if (isRegistered) {
              var value27 = values[name];
              acc[name] = {
                value: value27
              };
            }
            return acc;
          }, {});
          this.setFields(newFields, callback);
          if (onValuesChange) {
            var allValues = this.fieldsStore.getAllValues();
            onValuesChange(_default$6(_default$8({}, formPropName, this.getForm()), this.$props), changedValues, allValues);
          }
        },
        saveRef: function saveRef4(name, _, component) {
          if (!component) {
            var fieldMeta = this.fieldsStore.getFieldMeta(name);
            if (!fieldMeta.preserve) {
              this.clearedFieldMetaCache[name] = {
                field: this.fieldsStore.getField(name),
                meta: fieldMeta
              };
              this.clearField(name);
            }
            delete this.domFields[name];
            return;
          }
          this.domFields[name] = true;
          this.recoverClearedField(name);
          this.instances[name] = component;
        },
        cleanUpUselessFields: function cleanUpUselessFields() {
          var _this5 = this;
          var fieldList = this.fieldsStore.getAllFieldsName();
          var removedList = fieldList.filter(function(field) {
            var fieldMeta = _this5.fieldsStore.getFieldMeta(field);
            return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;
          });
          if (removedList.length) {
            removedList.forEach(this.clearField);
          }
          this.renderFields = {};
        },
        clearField: function clearField(name) {
          this.fieldsStore.clearField(name);
          delete this.instances[name];
          delete this.cachedBind[name];
        },
        resetFields: function resetFields2(ns) {
          var _this6 = this;
          var newFields = this.fieldsStore.resetFields(ns);
          if (Object.keys(newFields).length > 0) {
            this.setFields(newFields);
          }
          if (ns) {
            var names = Array.isArray(ns) ? ns : [ns];
            names.forEach(function(name) {
              return delete _this6.clearedFieldMetaCache[name];
            });
          } else {
            this.clearedFieldMetaCache = {};
          }
        },
        recoverClearedField: function recoverClearedField(name) {
          if (this.clearedFieldMetaCache[name]) {
            this.fieldsStore.setFields(_default$8({}, name, this.clearedFieldMetaCache[name].field));
            this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);
            delete this.clearedFieldMetaCache[name];
          }
        },
        validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {
          var _this7 = this;
          var fieldNames = _ref.fieldNames, action = _ref.action, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options;
          var allRules = {};
          var allValues = {};
          var allFields = {};
          var alreadyErrors = {};
          fields.forEach(function(field) {
            var name = field.name;
            if (options2.force !== true && field.dirty === false) {
              if (field.errors) {
                set_1(alreadyErrors, name, { errors: field.errors });
              }
              return;
            }
            var fieldMeta = _this7.fieldsStore.getFieldMeta(name);
            var newField = _default$6({}, field);
            newField.errors = void 0;
            newField.validating = true;
            newField.dirty = true;
            allRules[name] = _this7.getRules(fieldMeta, action);
            allValues[name] = newField.value;
            allFields[name] = newField;
          });
          this.setFields(allFields);
          Object.keys(allValues).forEach(function(f) {
            allValues[f] = _this7.fieldsStore.getFieldValue(f);
          });
          if (callback && isEmptyObject(allFields)) {
            callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));
            return;
          }
          var validator10 = new Schema(allRules);
          if (validateMessages) {
            validator10.messages(validateMessages);
          }
          validator10.validate(allValues, options2, function(errors) {
            var errorsGroup = _default$6({}, alreadyErrors);
            if (errors && errors.length) {
              errors.forEach(function(e) {
                var errorFieldName = e.field;
                var fieldName = errorFieldName;
                Object.keys(allRules).some(function(ruleFieldName) {
                  var rules3 = allRules[ruleFieldName] || [];
                  if (ruleFieldName === errorFieldName) {
                    fieldName = ruleFieldName;
                    return true;
                  }
                  if (rules3.every(function(_ref2) {
                    var type3 = _ref2.type;
                    return type3 !== "array";
                  }) && errorFieldName.indexOf(ruleFieldName) !== 0) {
                    return false;
                  }
                  var restPath = errorFieldName.slice(ruleFieldName.length + 1);
                  if (/^\d+$/.test(restPath)) {
                    fieldName = ruleFieldName;
                    return true;
                  }
                  return false;
                });
                var field = get_1(errorsGroup, fieldName);
                if ((typeof field === "undefined" ? "undefined" : _default$7(field)) !== "object" || Array.isArray(field)) {
                  set_1(errorsGroup, fieldName, { errors: [] });
                }
                var fieldErrors = get_1(errorsGroup, fieldName.concat(".errors"));
                fieldErrors.push(e);
              });
            }
            var expired = [];
            var nowAllFields = {};
            Object.keys(allRules).forEach(function(name) {
              var fieldErrors = get_1(errorsGroup, name);
              var nowField = _this7.fieldsStore.getField(name);
              if (!eq_1(nowField.value, allValues[name])) {
                expired.push({
                  name
                });
              } else {
                nowField.errors = fieldErrors && fieldErrors.errors;
                nowField.value = allValues[name];
                nowField.validating = false;
                nowField.dirty = false;
                nowAllFields[name] = nowField;
              }
            });
            _this7.setFields(nowAllFields);
            if (callback) {
              if (expired.length) {
                expired.forEach(function(_ref3) {
                  var name = _ref3.name;
                  var fieldErrors = [{
                    message: name + " need to revalidate",
                    field: name
                  }];
                  set_1(errorsGroup, name, {
                    expired: true,
                    errors: fieldErrors
                  });
                });
              }
              callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));
            }
          });
        },
        validateFields: function validateFields(ns, opt, cb) {
          var _this8 = this;
          var pending = new Promise(function(resolve, reject) {
            var _getParams = getParams(ns, opt, cb), names = _getParams.names, options2 = _getParams.options;
            var _getParams2 = getParams(ns, opt, cb), callback = _getParams2.callback;
            if (!callback || typeof callback === "function") {
              var oldCb = callback;
              callback = function callback2(errors, values) {
                if (oldCb) {
                  oldCb(errors, values);
                } else if (errors) {
                  reject({ errors, values });
                } else {
                  resolve(values);
                }
              };
            }
            var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();
            var fields = fieldNames.filter(function(name) {
              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);
              return hasRules(fieldMeta.validate);
            }).map(function(name) {
              var field = _this8.fieldsStore.getField(name);
              field.value = _this8.fieldsStore.getFieldValue(name);
              return field;
            });
            if (!fields.length) {
              callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));
              return;
            }
            if (!("firstFields" in options2)) {
              options2.firstFields = fieldNames.filter(function(name) {
                var fieldMeta = _this8.fieldsStore.getFieldMeta(name);
                return !!fieldMeta.validateFirst;
              });
            }
            _this8.validateFieldsInternal(fields, {
              fieldNames,
              options: options2
            }, callback);
          });
          pending["catch"](function(e) {
            if (console.error && false) {
              console.error(e);
            }
            return e;
          });
          return pending;
        },
        isSubmitting: function isSubmitting() {
          return this.submitting;
        },
        submit: function submit(callback) {
          var _this9 = this;
          var fn = function fn2() {
            _this9.setState({
              submitting: false
            });
          };
          this.setState({
            submitting: true
          });
          callback(fn);
        }
      },
      render: function render249() {
        var h = arguments[0];
        var $slots = this.$slots, $scopedSlots = this.$scopedSlots;
        var formProps2 = _default$8({}, formPropName, this.getForm());
        var _getOptionProps = getOptionProps(this), wrappedComponentRef = _getOptionProps.wrappedComponentRef, restProps = _default$2(_getOptionProps, ["wrappedComponentRef"]);
        var wrappedComponentProps = {
          props: mapProps.call(this, _default$6({}, formProps2, restProps)),
          on: getListeners(this),
          ref: "WrappedComponent",
          directives: [{
            name: "ant-ref",
            value: wrappedComponentRef
          }]
        };
        if (Object.keys($scopedSlots).length) {
          wrappedComponentProps.scopedSlots = $scopedSlots;
        }
        var slotsKey = Object.keys($slots);
        return WrappedComponent ? h(
          WrappedComponent,
          wrappedComponentProps,
          [slotsKey.length ? slotsKey.map(function(name) {
            return h(
              "template",
              { slot: name },
              [$slots[name]]
            );
          }) : null]
        ) : null;
      }
    };
    if (!WrappedComponent)
      return Form2;
    if (Array.isArray(WrappedComponent.props)) {
      var newProps = {};
      WrappedComponent.props.forEach(function(prop) {
        newProps[prop] = PropTypes.any;
      });
      newProps[formPropName] = Object;
      WrappedComponent.props = newProps;
    } else {
      WrappedComponent.props = WrappedComponent.props || {};
      if (!(formPropName in WrappedComponent.props)) {
        WrappedComponent.props[formPropName] = Object;
      }
    }
    return argumentContainer(Form2, WrappedComponent);
  };
}
var mixin$1 = {
  methods: {
    getForm: function getForm() {
      return {
        getFieldsValue: this.fieldsStore.getFieldsValue,
        getFieldValue: this.fieldsStore.getFieldValue,
        getFieldInstance: this.getFieldInstance,
        setFieldsValue: this.setFieldsValue,
        setFields: this.setFields,
        setFieldsInitialValue: this.fieldsStore.setFieldsInitialValue,
        getFieldDecorator: this.getFieldDecorator,
        getFieldProps: this.getFieldProps,
        getFieldsError: this.fieldsStore.getFieldsError,
        getFieldError: this.fieldsStore.getFieldError,
        isFieldValidating: this.fieldsStore.isFieldValidating,
        isFieldsValidating: this.fieldsStore.isFieldsValidating,
        isFieldsTouched: this.fieldsStore.isFieldsTouched,
        isFieldTouched: this.fieldsStore.isFieldTouched,
        isSubmitting: this.isSubmitting,
        submit: this.submit,
        validateFields: this.validateFields,
        resetFields: this.resetFields
      };
    }
  }
};
function computedStyle(el, prop) {
  var getComputedStyle2 = window.getComputedStyle;
  var style3 = getComputedStyle2 ? getComputedStyle2(el) : el.currentStyle;
  if (style3) {
    return style3[prop.replace(/-(\w)/gi, function(word, letter) {
      return letter.toUpperCase();
    })];
  }
  return void 0;
}
function getScrollableContainer(n) {
  var node = n;
  var nodeName = void 0;
  while ((nodeName = node.nodeName.toLowerCase()) !== "body") {
    var overflowY = computedStyle(node, "overflowY");
    if (node !== n && (overflowY === "auto" || overflowY === "scroll") && node.scrollHeight > node.clientHeight) {
      return node;
    }
    node = node.parentNode;
  }
  return nodeName === "body" ? node.ownerDocument : node;
}
var mixin = {
  methods: {
    getForm: function getForm2() {
      return _default$6({}, mixin$1.methods.getForm.call(this), {
        validateFieldsAndScroll: this.validateFieldsAndScroll
      });
    },
    validateFieldsAndScroll: function validateFieldsAndScroll(ns, opt, cb) {
      var _this = this;
      var _getParams = getParams(ns, opt, cb), names = _getParams.names, callback = _getParams.callback, options2 = _getParams.options;
      var newCb = function newCb2(error3, values) {
        if (error3) {
          var validNames = _this.fieldsStore.getValidFieldsName();
          var firstNode = void 0;
          var firstTop = void 0;
          validNames.forEach(function(name) {
            if (has_1(error3, name)) {
              var instance = _this.getFieldInstance(name);
              if (instance) {
                var node = instance.$el || instance.elm;
                var top = node.getBoundingClientRect().top;
                if (node.type !== "hidden" && (firstTop === void 0 || firstTop > top)) {
                  firstTop = top;
                  firstNode = node;
                }
              }
            }
          });
          if (firstNode) {
            var c = options2.container || getScrollableContainer(firstNode);
            scrollIntoView(firstNode, c, _default$6({
              onlyScrollIfNeeded: true
            }, options2.scroll));
          }
        }
        if (typeof callback === "function") {
          callback(error3, values);
        }
      };
      return this.validateFields(names, options2, newCb);
    }
  }
};
function createDOMForm(option) {
  return createBaseForm(_default$6({}, option), [mixin]);
}
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function setCacheAdd$1(value27) {
  this.__data__.set(value27, HASH_UNDEFINED);
  return this;
}
var _setCacheAdd = setCacheAdd$1;
function setCacheHas$1(value27) {
  return this.__data__.has(value27);
}
var _setCacheHas = setCacheHas$1;
var MapCache = _MapCache, setCacheAdd = _setCacheAdd, setCacheHas = _setCacheHas;
function SetCache$2(values) {
  var index2 = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index2 < length) {
    this.add(values[index2]);
  }
}
SetCache$2.prototype.add = SetCache$2.prototype.push = setCacheAdd;
SetCache$2.prototype.has = setCacheHas;
var _SetCache = SetCache$2;
function arraySome$1(array3, predicate) {
  var index2 = -1, length = array3 == null ? 0 : array3.length;
  while (++index2 < length) {
    if (predicate(array3[index2], index2, array3)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome$1;
function cacheHas$2(cache, key2) {
  return cache.has(key2);
}
var _cacheHas = cacheHas$2;
var SetCache$1 = _SetCache, arraySome = _arraySome, cacheHas$1 = _cacheHas;
var COMPARE_PARTIAL_FLAG$5 = 1, COMPARE_UNORDERED_FLAG$3 = 2;
function equalArrays$2(array3, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5, arrLength = array3.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array3);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array3;
  }
  var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$3 ? new SetCache$1() : void 0;
  stack.set(array3, other);
  stack.set(other, array3);
  while (++index2 < arrLength) {
    var arrValue = array3[index2], othValue = other[index2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index2, other, array3, stack) : customizer(arrValue, othValue, index2, array3, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome(other, function(othValue2, othIndex) {
        if (!cacheHas$1(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array3);
  stack["delete"](other);
  return result;
}
var _equalArrays = equalArrays$2;
function mapToArray$1(map2) {
  var index2 = -1, result = Array(map2.size);
  map2.forEach(function(value27, key2) {
    result[++index2] = [key2, value27];
  });
  return result;
}
var _mapToArray = mapToArray$1;
function setToArray$3(set3) {
  var index2 = -1, result = Array(set3.size);
  set3.forEach(function(value27) {
    result[++index2] = value27;
  });
  return result;
}
var _setToArray = setToArray$3;
var Symbol$1 = _Symbol, Uint8Array = _Uint8Array, eq$2 = eq_1, equalArrays$1 = _equalArrays, mapToArray = _mapToArray, setToArray$2 = _setToArray;
var COMPARE_PARTIAL_FLAG$4 = 1, COMPARE_UNORDERED_FLAG$2 = 2;
var boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", mapTag = "[object Map]", numberTag = "[object Number]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]";
var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]";
var symbolProto = Symbol$1 ? Symbol$1.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag$1(object3, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object3.byteLength != other.byteLength || object3.byteOffset != other.byteOffset) {
        return false;
      }
      object3 = object3.buffer;
      other = other.buffer;
    case arrayBufferTag:
      if (object3.byteLength != other.byteLength || !equalFunc(new Uint8Array(object3), new Uint8Array(other))) {
        return false;
      }
      return true;
    case boolTag:
    case dateTag:
    case numberTag:
      return eq$2(+object3, +other);
    case errorTag:
      return object3.name == other.name && object3.message == other.message;
    case regexpTag:
    case stringTag:
      return object3 == other + "";
    case mapTag:
      var convert = mapToArray;
    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
      convert || (convert = setToArray$2);
      if (object3.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object3);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG$2;
      stack.set(object3, other);
      var result = equalArrays$1(convert(object3), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object3);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object3) == symbolValueOf.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag$1;
var getAllKeys = _getAllKeys;
var COMPARE_PARTIAL_FLAG$3 = 1;
var objectProto$1 = Object.prototype;
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
function equalObjects$1(object3, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, objProps = getAllKeys(object3), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index2 = objLength;
  while (index2--) {
    var key2 = objProps[index2];
    if (!(isPartial ? key2 in other : hasOwnProperty$1.call(other, key2))) {
      return false;
    }
  }
  var objStacked = stack.get(object3);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object3;
  }
  var result = true;
  stack.set(object3, other);
  stack.set(other, object3);
  var skipCtor = isPartial;
  while (++index2 < objLength) {
    key2 = objProps[index2];
    var objValue = object3[key2], othValue = other[key2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key2, other, object3, stack) : customizer(objValue, othValue, key2, object3, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key2 == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object3.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object3 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object3);
  stack["delete"](other);
  return result;
}
var _equalObjects = equalObjects$1;
var Stack$2 = _Stack, equalArrays = _equalArrays, equalByTag = _equalByTag, equalObjects = _equalObjects, getTag = _getTag, isArray$3 = isArray_1, isBuffer$1 = isBuffer$4.exports, isTypedArray$1 = isTypedArray_1;
var COMPARE_PARTIAL_FLAG$2 = 1;
var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
function baseIsEqualDeep$1(object3, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray$3(object3), othIsArr = isArray$3(other), objTag = objIsArr ? arrayTag : getTag(object3), othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer$1(object3)) {
    if (!isBuffer$1(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack$2());
    return objIsArr || isTypedArray$1(object3) ? equalArrays(object3, other, bitmask, customizer, equalFunc, stack) : equalByTag(object3, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object3, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object3.value() : object3, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack$2());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack$2());
  return equalObjects(object3, other, bitmask, customizer, equalFunc, stack);
}
var _baseIsEqualDeep = baseIsEqualDeep$1;
var baseIsEqualDeep = _baseIsEqualDeep, isObjectLike$1 = isObjectLike_1;
function baseIsEqual$2(value27, other, bitmask, customizer, stack) {
  if (value27 === other) {
    return true;
  }
  if (value27 == null || other == null || !isObjectLike$1(value27) && !isObjectLike$1(other)) {
    return value27 !== value27 && other !== other;
  }
  return baseIsEqualDeep(value27, other, bitmask, customizer, baseIsEqual$2, stack);
}
var _baseIsEqual = baseIsEqual$2;
var Stack$1 = _Stack, baseIsEqual$1 = _baseIsEqual;
var COMPARE_PARTIAL_FLAG$1 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
function baseIsMatch$1(object3, source, matchData, customizer) {
  var index2 = matchData.length, length = index2, noCustomizer = !customizer;
  if (object3 == null) {
    return !length;
  }
  object3 = Object(object3);
  while (index2--) {
    var data109 = matchData[index2];
    if (noCustomizer && data109[2] ? data109[1] !== object3[data109[0]] : !(data109[0] in object3)) {
      return false;
    }
  }
  while (++index2 < length) {
    data109 = matchData[index2];
    var key2 = data109[0], objValue = object3[key2], srcValue = data109[1];
    if (noCustomizer && data109[2]) {
      if (objValue === void 0 && !(key2 in object3)) {
        return false;
      }
    } else {
      var stack = new Stack$1();
      if (customizer) {
        var result = customizer(objValue, srcValue, key2, object3, source, stack);
      }
      if (!(result === void 0 ? baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}
var _baseIsMatch = baseIsMatch$1;
var isObject$4 = isObject_1;
function isStrictComparable$2(value27) {
  return value27 === value27 && !isObject$4(value27);
}
var _isStrictComparable = isStrictComparable$2;
var isStrictComparable$1 = _isStrictComparable, keys$2 = keys_1;
function getMatchData$1(object3) {
  var result = keys$2(object3), length = result.length;
  while (length--) {
    var key2 = result[length], value27 = object3[key2];
    result[length] = [key2, value27, isStrictComparable$1(value27)];
  }
  return result;
}
var _getMatchData = getMatchData$1;
function matchesStrictComparable$2(key2, srcValue) {
  return function(object3) {
    if (object3 == null) {
      return false;
    }
    return object3[key2] === srcValue && (srcValue !== void 0 || key2 in Object(object3));
  };
}
var _matchesStrictComparable = matchesStrictComparable$2;
var baseIsMatch = _baseIsMatch, getMatchData = _getMatchData, matchesStrictComparable$1 = _matchesStrictComparable;
function baseMatches$1(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable$1(matchData[0][0], matchData[0][1]);
  }
  return function(object3) {
    return object3 === source || baseIsMatch(object3, source, matchData);
  };
}
var _baseMatches = baseMatches$1;
function baseHasIn$1(object3, key2) {
  return object3 != null && key2 in Object(object3);
}
var _baseHasIn = baseHasIn$1;
var baseHasIn = _baseHasIn, hasPath = _hasPath;
function hasIn$2(object3, path) {
  return object3 != null && hasPath(object3, path, baseHasIn);
}
var hasIn_1 = hasIn$2;
var baseIsEqual = _baseIsEqual, get3 = get_1, hasIn$1 = hasIn_1, isKey$1 = _isKey, isStrictComparable = _isStrictComparable, matchesStrictComparable = _matchesStrictComparable, toKey$1 = _toKey;
var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
function baseMatchesProperty$1(path, srcValue) {
  if (isKey$1(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey$1(path), srcValue);
  }
  return function(object3) {
    var objValue = get3(object3, path);
    return objValue === void 0 && objValue === srcValue ? hasIn$1(object3, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}
var _baseMatchesProperty = baseMatchesProperty$1;
function baseProperty$2(key2) {
  return function(object3) {
    return object3 == null ? void 0 : object3[key2];
  };
}
var _baseProperty = baseProperty$2;
var baseGet$1 = _baseGet;
function basePropertyDeep$1(path) {
  return function(object3) {
    return baseGet$1(object3, path);
  };
}
var _basePropertyDeep = basePropertyDeep$1;
var baseProperty$1 = _baseProperty, basePropertyDeep = _basePropertyDeep, isKey = _isKey, toKey = _toKey;
function property$1(path) {
  return isKey(path) ? baseProperty$1(toKey(path)) : basePropertyDeep(path);
}
var property_1 = property$1;
var baseMatches = _baseMatches, baseMatchesProperty = _baseMatchesProperty, identity$1 = identity_1, isArray$2 = isArray_1, property = property_1;
function baseIteratee$4(value27) {
  if (typeof value27 == "function") {
    return value27;
  }
  if (value27 == null) {
    return identity$1;
  }
  if (typeof value27 == "object") {
    return isArray$2(value27) ? baseMatchesProperty(value27[0], value27[1]) : baseMatches(value27);
  }
  return property(value27);
}
var _baseIteratee = baseIteratee$4;
var baseIteratee$3 = _baseIteratee, isArrayLike$3 = isArrayLike_1, keys$1 = keys_1;
function createFind$1(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike$3(collection)) {
      var iteratee = baseIteratee$3(predicate);
      collection = keys$1(collection);
      predicate = function(key2) {
        return iteratee(iterable[key2], key2, iterable);
      };
    }
    var index2 = findIndexFunc(collection, predicate, fromIndex);
    return index2 > -1 ? iterable[iteratee ? collection[index2] : index2] : void 0;
  };
}
var _createFind = createFind$1;
function baseFindIndex$2(array3, predicate, fromIndex, fromRight) {
  var length = array3.length, index2 = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index2-- : ++index2 < length) {
    if (predicate(array3[index2], index2, array3)) {
      return index2;
    }
  }
  return -1;
}
var _baseFindIndex = baseFindIndex$2;
var toNumber = toNumber_1;
var INFINITY$1 = 1 / 0, MAX_INTEGER = 17976931348623157e292;
function toFinite$1(value27) {
  if (!value27) {
    return value27 === 0 ? value27 : 0;
  }
  value27 = toNumber(value27);
  if (value27 === INFINITY$1 || value27 === -INFINITY$1) {
    var sign2 = value27 < 0 ? -1 : 1;
    return sign2 * MAX_INTEGER;
  }
  return value27 === value27 ? value27 : 0;
}
var toFinite_1 = toFinite$1;
var toFinite = toFinite_1;
function toInteger$3(value27) {
  var result = toFinite(value27), remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}
var toInteger_1 = toInteger$3;
var baseFindIndex$1 = _baseFindIndex, baseIteratee$2 = _baseIteratee, toInteger$2 = toInteger_1;
var nativeMax = Math.max;
function findIndex$1(array3, predicate, fromIndex) {
  var length = array3 == null ? 0 : array3.length;
  if (!length) {
    return -1;
  }
  var index2 = fromIndex == null ? 0 : toInteger$2(fromIndex);
  if (index2 < 0) {
    index2 = nativeMax(length + index2, 0);
  }
  return baseFindIndex$1(array3, baseIteratee$2(predicate), index2);
}
var findIndex_1 = findIndex$1;
var findIndex$2 = findIndex_1;
var createFind = _createFind, findIndex = findIndex_1;
var find = createFind(findIndex);
var find_1 = find;
var find$1 = find_1;
var FIELD_META_PROP = "data-__meta";
var FIELD_DATA_PROP = "data-__field";
function noop$o() {
}
function intersperseSpace(list) {
  return list.reduce(function(current2, item) {
    return [].concat(_default$5(current2), [" ", item]);
  }, []).slice(1);
}
var FormItemProps$1 = {
  id: PropTypes.string,
  htmlFor: PropTypes.string,
  prefixCls: PropTypes.string,
  label: PropTypes.any,
  labelCol: PropTypes.shape(ColProps$1).loose,
  wrapperCol: PropTypes.shape(ColProps$1).loose,
  help: PropTypes.any,
  extra: PropTypes.any,
  validateStatus: PropTypes.oneOf(["", "success", "warning", "error", "validating"]),
  hasFeedback: PropTypes.bool,
  required: PropTypes.bool,
  colon: PropTypes.bool,
  fieldDecoratorId: PropTypes.string,
  fieldDecoratorOptions: PropTypes.object,
  selfUpdate: PropTypes.bool,
  labelAlign: PropTypes.oneOf(["left", "right"])
};
function comeFromSlot() {
  var vnodes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var itemVnode = arguments[1];
  var isSlot = false;
  for (var i = 0, len = vnodes.length; i < len; i++) {
    var vnode = vnodes[i];
    if (vnode && (vnode === itemVnode || vnode.$vnode === itemVnode)) {
      isSlot = true;
    } else {
      var componentOptions = vnode.componentOptions || vnode.$vnode && vnode.$vnode.componentOptions;
      var children = componentOptions ? componentOptions.children : vnode.$children;
      isSlot = comeFromSlot(children, itemVnode);
    }
    if (isSlot) {
      break;
    }
  }
  return isSlot;
}
var FormItem$1 = {
  name: "AFormItem",
  __ANT_FORM_ITEM: true,
  mixins: [BaseMixin],
  props: initDefaultProps(FormItemProps$1, {
    hasFeedback: false
  }),
  provide: function provide15() {
    return {
      isFormItemChildren: true
    };
  },
  inject: {
    isFormItemChildren: { "default": false },
    FormContext: { "default": function _default69() {
      return {};
    } },
    decoratorFormProps: { "default": function _default70() {
      return {};
    } },
    collectFormItemContext: { "default": function _default71() {
      return noop$o;
    } },
    configProvider: { "default": function _default72() {
      return ConfigConsumerProps;
    } }
  },
  data: function data59() {
    return { helpShow: false };
  },
  computed: {
    itemSelfUpdate: function itemSelfUpdate() {
      return !!(this.selfUpdate === void 0 ? this.FormContext.selfUpdate : this.selfUpdate);
    }
  },
  created: function created7() {
    this.collectContext();
  },
  beforeUpdate: function beforeUpdate() {
  },
  beforeDestroy: function beforeDestroy27() {
    this.collectFormItemContext(this.$vnode && this.$vnode.context, "delete");
  },
  mounted: function mounted38() {
    var _$props = this.$props, help = _$props.help, validateStatus2 = _$props.validateStatus;
    warning$4(this.getControls(this.slotDefault, true).length <= 1 || help !== void 0 || validateStatus2 !== void 0, "Form.Item", "Cannot generate `validateStatus` and `help` automatically, while there are more than one `getFieldDecorator` in it.");
    warning$4(!this.fieldDecoratorId, "Form.Item", "`fieldDecoratorId` is deprecated. please use `v-decorator={id, options}` instead.");
  },
  methods: {
    collectContext: function collectContext() {
      if (this.FormContext.form && this.FormContext.form.templateContext) {
        var templateContext = this.FormContext.form.templateContext;
        var vnodes = Object.values(templateContext.$slots || {}).reduce(function(a, b) {
          return [].concat(_default$5(a), _default$5(b));
        }, []);
        var isSlot = comeFromSlot(vnodes, this.$vnode);
        warning$4(!isSlot, "You can not set FormItem from slot, please use slot-scope instead slot");
        var isSlotScope = false;
        if (!isSlot && this.$vnode.context !== templateContext) {
          isSlotScope = comeFromSlot(this.$vnode.context.$children, templateContext.$vnode);
        }
        if (!isSlotScope && !isSlot) {
          this.collectFormItemContext(this.$vnode.context);
        }
      }
    },
    getHelpMessage: function getHelpMessage() {
      var help = getComponentFromProp(this, "help");
      var onlyControl = this.getOnlyControl();
      if (help === void 0 && onlyControl) {
        var errors = this.getField().errors;
        if (errors) {
          return intersperseSpace(errors.map(function(e, index2) {
            var node = null;
            if (isValidElement(e)) {
              node = e;
            } else if (isValidElement(e.message)) {
              node = e.message;
            }
            return node ? cloneElement(node, { key: index2 }) : e.message;
          }));
        } else {
          return "";
        }
      }
      return help;
    },
    getControls: function getControls() {
      var childrenArray = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var recursively = arguments[1];
      var controls = [];
      for (var i = 0; i < childrenArray.length; i++) {
        if (!recursively && controls.length > 0) {
          break;
        }
        var child = childrenArray[i];
        if (!child.tag && child.text.trim() === "") {
          continue;
        }
        if (getSlotOptions(child).__ANT_FORM_ITEM) {
          continue;
        }
        var children = getAllChildren(child);
        var attrs = child.data && child.data.attrs || {};
        if (FIELD_META_PROP in attrs) {
          controls.push(child);
        } else if (children) {
          controls = controls.concat(this.getControls(children, recursively));
        }
      }
      return controls;
    },
    getOnlyControl: function getOnlyControl() {
      var child = this.getControls(this.slotDefault, false)[0];
      return child !== void 0 ? child : null;
    },
    getChildAttr: function getChildAttr(prop) {
      var child = this.getOnlyControl();
      var data109 = {};
      if (!child) {
        return void 0;
      }
      if (child.data) {
        data109 = child.data;
      } else if (child.$vnode && child.$vnode.data) {
        data109 = child.$vnode.data;
      }
      return data109[prop] || data109.attrs[prop];
    },
    getId: function getId() {
      return this.getChildAttr("id");
    },
    getMeta: function getMeta() {
      return this.getChildAttr(FIELD_META_PROP);
    },
    getField: function getField() {
      return this.getChildAttr(FIELD_DATA_PROP);
    },
    getValidateStatus: function getValidateStatus() {
      var onlyControl = this.getOnlyControl();
      if (!onlyControl) {
        return "";
      }
      var field = this.getField();
      if (field.validating) {
        return "validating";
      }
      if (field.errors) {
        return "error";
      }
      var fieldValue2 = "value" in field ? field.value : this.getMeta().initialValue;
      if (fieldValue2 !== void 0 && fieldValue2 !== null && fieldValue2 !== "") {
        return "success";
      }
      return "";
    },
    onLabelClick: function onLabelClick() {
      var id2 = this.id || this.getId();
      if (!id2) {
        return;
      }
      var formItemNode = this.$el;
      var control = formItemNode.querySelector('[id="' + id2 + '"]');
      if (control && control.focus) {
        control.focus();
      }
    },
    onHelpAnimEnd: function onHelpAnimEnd(_key, helpShow) {
      this.helpShow = helpShow;
      if (!helpShow) {
        this.$forceUpdate();
      }
    },
    isRequired: function isRequired() {
      var required2 = this.required;
      if (required2 !== void 0) {
        return required2;
      }
      if (this.getOnlyControl()) {
        var meta2 = this.getMeta() || {};
        var validate4 = meta2.validate || [];
        return validate4.filter(function(item) {
          return !!item.rules;
        }).some(function(item) {
          return item.rules.some(function(rule) {
            return rule.required;
          });
        });
      }
      return false;
    },
    renderHelp: function renderHelp(prefixCls2) {
      var _this = this;
      var h = this.$createElement;
      var help = this.getHelpMessage();
      var children = help ? h(
        "div",
        { "class": prefixCls2 + "-explain", key: "help" },
        [help]
      ) : null;
      if (children) {
        this.helpShow = !!children;
      }
      var transitionProps = getTransitionProps$1("show-help", {
        afterEnter: function afterEnter() {
          return _this.onHelpAnimEnd("help", true);
        },
        afterLeave: function afterLeave() {
          return _this.onHelpAnimEnd("help", false);
        }
      });
      return h(
        "transition",
        _mergeJSXProps([transitionProps, { key: "help" }]),
        [children]
      );
    },
    renderExtra: function renderExtra(prefixCls2) {
      var h = this.$createElement;
      var extra = getComponentFromProp(this, "extra");
      return extra ? h(
        "div",
        { "class": prefixCls2 + "-extra" },
        [extra]
      ) : null;
    },
    renderValidateWrapper: function renderValidateWrapper(prefixCls2, c1, c2, c3) {
      var h = this.$createElement;
      var props2 = this.$props;
      var onlyControl = this.getOnlyControl;
      var validateStatus2 = props2.validateStatus === void 0 && onlyControl ? this.getValidateStatus() : props2.validateStatus;
      var classes6 = prefixCls2 + "-item-control";
      if (validateStatus2) {
        classes6 = classNames(prefixCls2 + "-item-control", {
          "has-feedback": validateStatus2 && props2.hasFeedback,
          "has-success": validateStatus2 === "success",
          "has-warning": validateStatus2 === "warning",
          "has-error": validateStatus2 === "error",
          "is-validating": validateStatus2 === "validating"
        });
      }
      var iconType = "";
      switch (validateStatus2) {
        case "success":
          iconType = "check-circle";
          break;
        case "warning":
          iconType = "exclamation-circle";
          break;
        case "error":
          iconType = "close-circle";
          break;
        case "validating":
          iconType = "loading";
          break;
        default:
          iconType = "";
          break;
      }
      var icon = props2.hasFeedback && iconType ? h(
        "span",
        { "class": prefixCls2 + "-item-children-icon" },
        [h(Icon$1, {
          attrs: { type: iconType, theme: iconType === "loading" ? "outlined" : "filled" }
        })]
      ) : null;
      return h(
        "div",
        { "class": classes6 },
        [h(
          "span",
          { "class": prefixCls2 + "-item-children" },
          [c1, icon]
        ), c2, c3]
      );
    },
    renderWrapper: function renderWrapper(prefixCls2, children) {
      var h = this.$createElement;
      var _ref = this.isFormItemChildren ? {} : this.FormContext, contextWrapperCol = _ref.wrapperCol;
      var wrapperCol = this.wrapperCol;
      var mergedWrapperCol = wrapperCol || contextWrapperCol || {};
      var style3 = mergedWrapperCol.style, id2 = mergedWrapperCol.id, on = mergedWrapperCol.on, restProps = _default$2(mergedWrapperCol, ["style", "id", "on"]);
      var className = classNames(prefixCls2 + "-item-control-wrapper", mergedWrapperCol["class"]);
      var colProps = {
        props: restProps,
        "class": className,
        key: "wrapper",
        style: style3,
        id: id2,
        on
      };
      return h(
        Col$2,
        colProps,
        [children]
      );
    },
    renderLabel: function renderLabel(prefixCls2) {
      var _classNames;
      var h = this.$createElement;
      var _FormContext = this.FormContext, vertical3 = _FormContext.vertical, contextLabelAlign = _FormContext.labelAlign, contextLabelCol = _FormContext.labelCol, contextColon = _FormContext.colon;
      var labelAlign = this.labelAlign, labelCol = this.labelCol, colon = this.colon, id2 = this.id, htmlFor = this.htmlFor;
      var label = getComponentFromProp(this, "label");
      var required2 = this.isRequired();
      var mergedLabelCol = labelCol || contextLabelCol || {};
      var mergedLabelAlign = labelAlign || contextLabelAlign;
      var labelClsBasic = prefixCls2 + "-item-label";
      var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === "left" && labelClsBasic + "-left", mergedLabelCol["class"]);
      mergedLabelCol["class"];
      var labelColStyle = mergedLabelCol.style, labelColId = mergedLabelCol.id, on = mergedLabelCol.on, restProps = _default$2(mergedLabelCol, ["class", "style", "id", "on"]);
      var labelChildren = label;
      var computedColon = colon === true || contextColon !== false && colon !== false;
      var haveColon = computedColon && !vertical3;
      if (haveColon && typeof label === "string" && label.trim() !== "") {
        labelChildren = label.replace(/[：:]\s*$/, "");
      }
      var labelClassName = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-item-required", required2), _default$8(_classNames, prefixCls2 + "-item-no-colon", !computedColon), _classNames));
      var colProps = {
        props: restProps,
        "class": labelColClassName,
        key: "label",
        style: labelColStyle,
        id: labelColId,
        on
      };
      return label ? h(
        Col$2,
        colProps,
        [h(
          "label",
          {
            attrs: {
              "for": htmlFor || id2 || this.getId(),
              title: typeof label === "string" ? label : ""
            },
            "class": labelClassName,
            on: {
              "click": this.onLabelClick
            }
          },
          [labelChildren]
        )]
      ) : null;
    },
    renderChildren: function renderChildren4(prefixCls2) {
      return [this.renderLabel(prefixCls2), this.renderWrapper(prefixCls2, this.renderValidateWrapper(prefixCls2, this.slotDefault, this.renderHelp(prefixCls2), this.renderExtra(prefixCls2)))];
    },
    renderFormItem: function renderFormItem() {
      var _itemClassName;
      var h = this.$createElement;
      var customizePrefixCls = this.$props.prefixCls;
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("form", customizePrefixCls);
      var children = this.renderChildren(prefixCls2);
      var itemClassName = (_itemClassName = {}, _default$8(_itemClassName, prefixCls2 + "-item", true), _default$8(_itemClassName, prefixCls2 + "-item-with-help", this.helpShow), _itemClassName);
      return h(
        Row,
        { "class": classNames(itemClassName), key: "row" },
        [children]
      );
    },
    decoratorOption: function decoratorOption(vnode) {
      if (vnode.data && vnode.data.directives) {
        var directive = find$1(vnode.data.directives, ["name", "decorator"]);
        warning$4(!directive || directive && Array.isArray(directive.value), "Form", 'Invalid directive: type check failed for directive "decorator". Expected Array, got ' + _default$7(directive ? directive.value : directive) + ". At " + vnode.tag + ".");
        return directive ? directive.value : null;
      } else {
        return null;
      }
    },
    decoratorChildren: function decoratorChildren(vnodes) {
      var FormContext = this.FormContext;
      var getFieldDecorator = FormContext.form.getFieldDecorator;
      for (var i = 0, len = vnodes.length; i < len; i++) {
        var vnode = vnodes[i];
        if (getSlotOptions(vnode).__ANT_FORM_ITEM) {
          break;
        }
        if (vnode.children) {
          vnode.children = this.decoratorChildren(cloneVNodes(vnode.children));
        } else if (vnode.componentOptions && vnode.componentOptions.children) {
          vnode.componentOptions.children = this.decoratorChildren(cloneVNodes(vnode.componentOptions.children));
        }
        var option = this.decoratorOption(vnode);
        if (option && option[0]) {
          vnodes[i] = getFieldDecorator(option[0], option[1], this)(vnode);
        }
      }
      return vnodes;
    }
  },
  render: function render125() {
    var $slots = this.$slots, decoratorFormProps = this.decoratorFormProps, fieldDecoratorId = this.fieldDecoratorId, _fieldDecoratorOption = this.fieldDecoratorOptions, fieldDecoratorOptions = _fieldDecoratorOption === void 0 ? {} : _fieldDecoratorOption, FormContext = this.FormContext;
    var child = filterEmpty($slots["default"] || []);
    if (decoratorFormProps.form && fieldDecoratorId && child.length) {
      var getFieldDecorator = decoratorFormProps.form.getFieldDecorator;
      child[0] = getFieldDecorator(fieldDecoratorId, fieldDecoratorOptions, this)(child[0]);
      warning$4(!(child.length > 1), "Form", "`autoFormCreate` just `decorator` then first children. but you can use JSX to support multiple children");
      this.slotDefault = child;
    } else if (FormContext.form) {
      child = cloneVNodes(child);
      this.slotDefault = this.decoratorChildren(child);
    } else {
      this.slotDefault = child;
    }
    return this.renderFormItem();
  }
};
({
  onFieldsChange: PropTypes.func,
  onValuesChange: PropTypes.func,
  mapPropsToFields: PropTypes.func,
  validateMessages: PropTypes.any,
  withRef: PropTypes.bool,
  name: PropTypes.string
});
({
  getFieldsValue: PropTypes.func,
  getFieldValue: PropTypes.func,
  setFieldsValue: PropTypes.func,
  setFields: PropTypes.func,
  validateFields: PropTypes.func,
  validateFieldsAndScroll: PropTypes.func,
  getFieldError: PropTypes.func,
  getFieldsError: PropTypes.func,
  isFieldValidating: PropTypes.func,
  isFieldTouched: PropTypes.func,
  isFieldsTouched: PropTypes.func,
  resetFields: PropTypes.func,
  getFieldDecorator: PropTypes.func
});
var FormProps$1 = {
  layout: PropTypes.oneOf(["horizontal", "inline", "vertical"]),
  labelCol: PropTypes.shape(ColProps$1).loose,
  wrapperCol: PropTypes.shape(ColProps$1).loose,
  colon: PropTypes.bool,
  labelAlign: PropTypes.oneOf(["left", "right"]),
  form: PropTypes.object,
  prefixCls: PropTypes.string,
  hideRequiredMark: PropTypes.bool,
  autoFormCreate: PropTypes.func,
  options: PropTypes.object,
  selfUpdate: PropTypes.bool
};
({
  message: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  type: PropTypes.string,
  required: PropTypes.boolean,
  whitespace: PropTypes.boolean,
  len: PropTypes.number,
  min: PropTypes.number,
  max: PropTypes.number,
  "enum": PropTypes.oneOfType([String, PropTypes.arrayOf(String)]),
  pattern: PropTypes.custom(isRegExp_1),
  transform: PropTypes.func,
  validator: PropTypes.func
});
var Form$2 = {
  name: "AForm",
  props: initDefaultProps(FormProps$1, {
    layout: "horizontal",
    hideRequiredMark: false,
    colon: true
  }),
  Item: FormItem$1,
  createFormField,
  create: function create4() {
    var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return createDOMForm(_default$6({
      fieldNameProp: "id"
    }, options2, {
      fieldMetaProp: FIELD_META_PROP,
      fieldDataProp: FIELD_DATA_PROP
    }));
  },
  createForm: function createForm(context) {
    var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var V = Base.Vue || Vue;
    return new V(Form$2.create(_default$6({}, options2, { templateContext: context }))());
  },
  created: function created8() {
    this.formItemContexts = /* @__PURE__ */ new Map();
  },
  provide: function provide16() {
    var _this = this;
    return {
      FormContext: this,
      collectFormItemContext: this.form && this.form.templateContext ? function(c) {
        var type3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "add";
        var formItemContexts = _this.formItemContexts;
        var number3 = formItemContexts.get(c) || 0;
        if (type3 === "delete") {
          if (number3 <= 1) {
            formItemContexts["delete"](c);
          } else {
            formItemContexts.set(c, number3 - 1);
          }
        } else {
          if (c !== _this.form.templateContext) {
            formItemContexts.set(c, number3 + 1);
          }
        }
      } : function() {
      }
    };
  },
  inject: {
    configProvider: { "default": function _default73() {
      return ConfigConsumerProps;
    } }
  },
  watch: {
    form: function form() {
      this.$forceUpdate();
    }
  },
  computed: {
    vertical: function vertical() {
      return this.layout === "vertical";
    }
  },
  beforeUpdate: function beforeUpdate2() {
    this.formItemContexts.forEach(function(number3, c) {
      if (c.$forceUpdate) {
        c.$forceUpdate();
      }
    });
  },
  updated: function updated25() {
    if (this.form && this.form.cleanUpUselessFields) {
      this.form.cleanUpUselessFields();
    }
  },
  methods: {
    onSubmit: function onSubmit(e) {
      if (!getListeners(this).submit) {
        e.preventDefault();
      } else {
        this.$emit("submit", e);
      }
    }
  },
  render: function render126() {
    var _classNames, _this2 = this;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, hideRequiredMark = this.hideRequiredMark, layout = this.layout, onSubmit3 = this.onSubmit, $slots = this.$slots, autoFormCreate = this.autoFormCreate, _options = this.options, options2 = _options === void 0 ? {} : _options;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("form", customizePrefixCls);
    var formClassName = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-horizontal", layout === "horizontal"), _default$8(_classNames, prefixCls2 + "-vertical", layout === "vertical"), _default$8(_classNames, prefixCls2 + "-inline", layout === "inline"), _default$8(_classNames, prefixCls2 + "-hide-required-mark", hideRequiredMark), _classNames));
    if (autoFormCreate) {
      warning$4(false, "Form", "`autoFormCreate` is deprecated. please use `form` instead.");
      var DomForm = this.DomForm || createDOMForm(_default$6({
        fieldNameProp: "id"
      }, options2, {
        fieldMetaProp: FIELD_META_PROP,
        fieldDataProp: FIELD_DATA_PROP,
        templateContext: this.$vnode.context
      }))({
        provide: function provide31() {
          return {
            decoratorFormProps: this.$props
          };
        },
        data: function data109() {
          return {
            children: $slots["default"],
            formClassName,
            submit: onSubmit3
          };
        },
        created: function created22() {
          autoFormCreate(this.form);
        },
        render: function render249() {
          var h2 = arguments[0];
          var children = this.children, formClassName2 = this.formClassName, submit = this.submit;
          return h2(
            "form",
            {
              on: {
                "submit": submit
              },
              "class": formClassName2
            },
            [children]
          );
        }
      });
      if (this.domForm) {
        this.domForm.children = $slots["default"];
        this.domForm.submit = onSubmit3;
        this.domForm.formClassName = formClassName;
      }
      this.DomForm = DomForm;
      return h(DomForm, {
        attrs: {
          wrappedComponentRef: function wrappedComponentRef(inst) {
            _this2.domForm = inst;
          }
        }
      });
    }
    return h(
      "form",
      {
        on: {
          "submit": onSubmit3
        },
        "class": formClassName
      },
      [$slots["default"]]
    );
  }
};
var Form$3 = Form$2;
Vue.use(_default$3, { name: "ant-ref" });
Vue.use(FormDecoratorDirective);
Vue.prototype.$form = Form$3;
Form$3.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Form$3.name, Form$3);
  Vue2.component(Form$3.Item.name, Form$3.Item);
  Vue2.prototype.$form = Form$3;
};
function noop$n() {
}
function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  path = path.replace(/\[(\w+)\]/g, ".$1");
  path = path.replace(/^\./, "");
  var keyArr = path.split(".");
  var i = 0;
  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict)
      break;
    var key2 = keyArr[i];
    if (key2 in tempObj) {
      tempObj = tempObj[key2];
    } else {
      if (strict) {
        throw new Error("please transfer a valid prop path to form item!");
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
}
var FormItemProps = {
  id: PropTypes.string,
  htmlFor: PropTypes.string,
  prefixCls: PropTypes.string,
  label: PropTypes.any,
  help: PropTypes.any,
  extra: PropTypes.any,
  labelCol: PropTypes.shape(ColProps$1).loose,
  wrapperCol: PropTypes.shape(ColProps$1).loose,
  hasFeedback: PropTypes.bool,
  colon: PropTypes.bool,
  labelAlign: PropTypes.oneOf(["left", "right"]),
  prop: PropTypes.string,
  rules: PropTypes.oneOfType([Array, Object]),
  autoLink: PropTypes.bool,
  required: PropTypes.bool,
  validateStatus: PropTypes.oneOf(["", "success", "warning", "error", "validating"])
};
var FormItem = {
  name: "AFormModelItem",
  __ANT_NEW_FORM_ITEM: true,
  mixins: [BaseMixin],
  props: initDefaultProps(FormItemProps, {
    hasFeedback: false,
    autoLink: true
  }),
  inject: {
    configProvider: { "default": function _default74() {
      return ConfigConsumerProps;
    } },
    FormContext: { "default": function _default75() {
      return {};
    } }
  },
  data: function data60() {
    return {
      validateState: this.validateStatus,
      validateMessage: "",
      validateDisabled: false,
      validator: {}
    };
  },
  computed: {
    fieldValue: function fieldValue() {
      var model = this.FormContext.model;
      if (!model || !this.prop) {
        return;
      }
      var path = this.prop;
      if (path.indexOf(":") !== -1) {
        path = path.replace(/:/g, ".");
      }
      return getPropByPath(model, path, true).v;
    },
    isRequired: function isRequired2() {
      var rules3 = this.getRules();
      var isRequired3 = false;
      if (rules3 && rules3.length) {
        rules3.every(function(rule) {
          if (rule.required) {
            isRequired3 = true;
            return false;
          }
          return true;
        });
      }
      return isRequired3;
    }
  },
  watch: {
    validateStatus: function validateStatus(val) {
      this.validateState = val;
    }
  },
  mounted: function mounted39() {
    if (this.prop) {
      var addField2 = this.FormContext.addField;
      addField2 && addField2(this);
      this.initialValue = cloneDeep$1(this.fieldValue);
    }
  },
  beforeDestroy: function beforeDestroy28() {
    var removeField2 = this.FormContext.removeField;
    removeField2 && removeField2(this);
  },
  methods: {
    validate: function validate2(trigger2) {
      var _this = this;
      var callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$n;
      this.validateDisabled = false;
      var rules3 = this.getFilteredRule(trigger2);
      if (!rules3 || rules3.length === 0) {
        callback();
        return true;
      }
      this.validateState = "validating";
      var descriptor2 = {};
      if (rules3 && rules3.length > 0) {
        rules3.forEach(function(rule) {
          delete rule.trigger;
        });
      }
      descriptor2[this.prop] = rules3;
      var validator10 = new Schema(descriptor2);
      if (this.FormContext && this.FormContext.validateMessages) {
        validator10.messages(this.FormContext.validateMessages);
      }
      var model = {};
      model[this.prop] = this.fieldValue;
      validator10.validate(model, { firstFields: true }, function(errors, invalidFields) {
        _this.validateState = errors ? "error" : "success";
        _this.validateMessage = errors ? errors[0].message : "";
        callback(_this.validateMessage, invalidFields);
        _this.FormContext && _this.FormContext.$emit && _this.FormContext.$emit("validate", _this.prop, !errors, _this.validateMessage || null);
      });
    },
    getRules: function getRules() {
      var formRules = this.FormContext.rules;
      var selfRules = this.rules;
      var requiredRule = this.required !== void 0 ? { required: !!this.required, trigger: "change" } : [];
      var prop = getPropByPath(formRules, this.prop || "");
      formRules = formRules ? prop.o[this.prop || ""] || prop.v : [];
      return [].concat(selfRules || formRules || []).concat(requiredRule);
    },
    getFilteredRule: function getFilteredRule(trigger2) {
      var rules3 = this.getRules();
      return rules3.filter(function(rule) {
        if (!rule.trigger || trigger2 === "")
          return true;
        if (Array.isArray(rule.trigger)) {
          return rule.trigger.indexOf(trigger2) > -1;
        } else {
          return rule.trigger === trigger2;
        }
      }).map(function(rule) {
        return _default$6({}, rule);
      });
    },
    onFieldBlur: function onFieldBlur() {
      this.validate("blur");
    },
    onFieldChange: function onFieldChange() {
      if (this.validateDisabled) {
        this.validateDisabled = false;
        return;
      }
      this.validate("change");
    },
    clearValidate: function clearValidate() {
      this.validateState = "";
      this.validateMessage = "";
      this.validateDisabled = false;
    },
    resetField: function resetField() {
      var _this2 = this;
      this.validateState = "";
      this.validateMessage = "";
      var model = this.FormContext.model || {};
      var value27 = this.fieldValue;
      var path = this.prop;
      if (path.indexOf(":") !== -1) {
        path = path.replace(/:/, ".");
      }
      var prop = getPropByPath(model, path, true);
      this.validateDisabled = true;
      if (Array.isArray(value27)) {
        prop.o[prop.k] = [].concat(this.initialValue);
      } else {
        prop.o[prop.k] = this.initialValue;
      }
      this.$nextTick(function() {
        _this2.validateDisabled = false;
      });
    }
  },
  render: function render127() {
    var _this3 = this;
    var h = arguments[0];
    var $slots = this.$slots, $scopedSlots = this.$scopedSlots;
    var props2 = getOptionProps(this);
    var label = getComponentFromProp(this, "label");
    var extra = getComponentFromProp(this, "extra");
    var help = getComponentFromProp(this, "help");
    var formProps = {
      props: _default$6({}, props2, {
        label,
        extra,
        validateStatus: this.validateState,
        help: this.validateMessage || help,
        required: this.isRequired || props2.required
      })
    };
    var children = filterEmpty($scopedSlots["default"] ? $scopedSlots["default"]() : $slots["default"]);
    var firstChildren = children[0];
    if (this.prop && this.autoLink && isValidElement(firstChildren)) {
      var originalEvents = getEvents(firstChildren);
      var originalBlur = originalEvents.blur;
      var originalChange = originalEvents.change;
      firstChildren = cloneElement(firstChildren, {
        on: {
          blur: function blur32() {
            originalBlur && originalBlur.apply(void 0, arguments);
            _this3.onFieldBlur();
          },
          change: function change() {
            if (Array.isArray(originalChange)) {
              for (var i = 0, l = originalChange.length; i < l; i++) {
                originalChange[i].apply(originalChange, arguments);
              }
            } else if (originalChange) {
              originalChange.apply(void 0, arguments);
            }
            _this3.onFieldChange();
          }
        }
      });
    }
    return h(
      FormItem$1,
      formProps,
      [firstChildren, children.slice(1)]
    );
  }
};
var FormProps = {
  layout: PropTypes.oneOf(["horizontal", "inline", "vertical"]),
  labelCol: PropTypes.shape(ColProps$1).loose,
  wrapperCol: PropTypes.shape(ColProps$1).loose,
  colon: PropTypes.bool,
  labelAlign: PropTypes.oneOf(["left", "right"]),
  prefixCls: PropTypes.string,
  hideRequiredMark: PropTypes.bool,
  model: PropTypes.object,
  rules: PropTypes.object,
  validateMessages: PropTypes.any,
  validateOnRuleChange: PropTypes.bool
};
({
  message: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  type: PropTypes.string,
  required: PropTypes.boolean,
  whitespace: PropTypes.boolean,
  len: PropTypes.number,
  min: PropTypes.number,
  max: PropTypes.number,
  "enum": PropTypes.oneOfType([String, PropTypes.arrayOf(String)]),
  pattern: PropTypes.custom(isRegExp_1),
  transform: PropTypes.func,
  validator: PropTypes.func
});
var Form = {
  name: "AFormModel",
  props: initDefaultProps(FormProps, {
    layout: "horizontal",
    hideRequiredMark: false,
    colon: true,
    validateOnRuleChange: false
  }),
  Item: FormItem,
  created: function created9() {
    this.fields = [];
  },
  provide: function provide17() {
    return {
      FormContext: this
    };
  },
  inject: {
    configProvider: { "default": function _default76() {
      return ConfigConsumerProps;
    } }
  },
  watch: {
    rules: function rules2() {
      if (this.validateOnRuleChange) {
        this.validate(function() {
        });
      }
    }
  },
  computed: {
    vertical: function vertical2() {
      return this.layout === "vertical";
    }
  },
  methods: {
    addField: function addField(field) {
      if (field) {
        this.fields.push(field);
      }
    },
    removeField: function removeField(field) {
      if (field.prop) {
        this.fields.splice(this.fields.indexOf(field), 1);
      }
    },
    onSubmit: function onSubmit2(e) {
      if (!getListeners(this).submit) {
        e.preventDefault();
      } else {
        this.$emit("submit", e);
      }
    },
    resetFields: function resetFields() {
      if (!this.model) {
        warning$4(false, "FormModel", "model is required for resetFields to work.");
        return;
      }
      this.fields.forEach(function(field) {
        field.resetField();
      });
    },
    clearValidate: function clearValidate2() {
      var props2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var fields = props2.length ? typeof props2 === "string" ? this.fields.filter(function(field) {
        return props2 === field.prop;
      }) : this.fields.filter(function(field) {
        return props2.indexOf(field.prop) > -1;
      }) : this.fields;
      fields.forEach(function(field) {
        field.clearValidate();
      });
    },
    validate: function validate3(callback) {
      var _this = this;
      if (!this.model) {
        warning$4(false, "FormModel", "model is required for resetFields to work.");
        return;
      }
      var promise = void 0;
      if (typeof callback !== "function" && window.Promise) {
        promise = new window.Promise(function(resolve, reject) {
          callback = function callback2(valid2) {
            valid2 ? resolve(valid2) : reject(valid2);
          };
        });
      }
      var valid = true;
      var count2 = 0;
      if (this.fields.length === 0 && callback) {
        callback(true);
      }
      var invalidFields = {};
      this.fields.forEach(function(field) {
        field.validate("", function(message2, field2) {
          if (message2) {
            valid = false;
          }
          invalidFields = _default$6({}, invalidFields, field2);
          if (typeof callback === "function" && ++count2 === _this.fields.length) {
            callback(valid, invalidFields);
          }
        });
      });
      if (promise) {
        return promise;
      }
    },
    validateField: function validateField(props2, cb) {
      props2 = [].concat(props2);
      var fields = this.fields.filter(function(field) {
        return props2.indexOf(field.prop) !== -1;
      });
      if (!fields.length) {
        warning$4(false, "FormModel", "please pass correct props!");
        return;
      }
      fields.forEach(function(field) {
        field.validate("", cb);
      });
    }
  },
  render: function render128() {
    var _classNames;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, hideRequiredMark = this.hideRequiredMark, layout = this.layout, onSubmit3 = this.onSubmit, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("form", customizePrefixCls);
    var formClassName = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-horizontal", layout === "horizontal"), _default$8(_classNames, prefixCls2 + "-vertical", layout === "vertical"), _default$8(_classNames, prefixCls2 + "-inline", layout === "inline"), _default$8(_classNames, prefixCls2 + "-hide-required-mark", hideRequiredMark), _classNames));
    return h(
      "form",
      {
        on: {
          "submit": onSubmit3
        },
        "class": formClassName
      },
      [$slots["default"]]
    );
  }
};
var Form$1 = Form;
Vue.use(_default$3, { name: "ant-ref" });
Vue.use(FormDecoratorDirective);
Form$1.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Form$1.name, Form$1);
  Vue2.component(Form$1.Item.name, Form$1.Item);
};
var ITouchProps = {
  disabled: PropTypes.bool,
  activeClassName: PropTypes.string,
  activeStyle: PropTypes.any
};
var TouchFeedback = {
  name: "TouchFeedback",
  mixins: [BaseMixin],
  props: initDefaultProps(ITouchProps, {
    disabled: false
  }),
  data: function data61() {
    return {
      active: false
    };
  },
  mounted: function mounted40() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.disabled && _this.active) {
        _this.setState({
          active: false
        });
      }
    });
  },
  methods: {
    triggerEvent: function triggerEvent(type3, isActive, ev) {
      this.$emit(type3, ev);
      if (isActive !== this.active) {
        this.setState({
          active: isActive
        });
      }
    },
    onTouchStart: function onTouchStart(e) {
      this.triggerEvent("touchstart", true, e);
    },
    onTouchMove: function onTouchMove(e) {
      this.triggerEvent("touchmove", false, e);
    },
    onTouchEnd: function onTouchEnd(e) {
      this.triggerEvent("touchend", false, e);
    },
    onTouchCancel: function onTouchCancel(e) {
      this.triggerEvent("touchcancel", false, e);
    },
    onMouseDown: function onMouseDown(e) {
      this.triggerEvent("mousedown", true, e);
    },
    onMouseUp: function onMouseUp(e) {
      this.triggerEvent("mouseup", false, e);
    },
    onMouseLeave: function onMouseLeave4(e) {
      this.triggerEvent("mouseleave", false, e);
    }
  },
  render: function render129() {
    var _$props = this.$props, disabled = _$props.disabled, _$props$activeClassNa = _$props.activeClassName, activeClassName = _$props$activeClassNa === void 0 ? "" : _$props$activeClassNa, _$props$activeStyle = _$props.activeStyle, activeStyle = _$props$activeStyle === void 0 ? {} : _$props$activeStyle;
    var child = this.$slots["default"];
    if (child.length !== 1) {
      warning$4(false, "m-feedback\u7EC4\u4EF6\u53EA\u80FD\u5305\u542B\u4E00\u4E2A\u5B50\u5143\u7D20");
      return null;
    }
    var childProps = {
      on: disabled ? {} : {
        touchstart: this.onTouchStart,
        touchmove: this.onTouchMove,
        touchend: this.onTouchEnd,
        touchcancel: this.onTouchCancel,
        mousedown: this.onMouseDown,
        mouseup: this.onMouseUp,
        mouseleave: this.onMouseLeave
      }
    };
    if (!disabled && this.active) {
      childProps = _default$6({}, childProps, {
        style: activeStyle,
        "class": activeClassName
      });
    }
    return cloneElement(child, childProps);
  }
};
var InputHandler = {
  name: "InputHandler",
  props: {
    prefixCls: PropTypes.string,
    disabled: PropTypes.bool
  },
  render: function render130() {
    var h = arguments[0];
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, disabled = _$props.disabled;
    var touchableProps = {
      props: {
        disabled,
        activeClassName: prefixCls2 + "-handler-active"
      },
      on: getListeners(this)
    };
    return h(
      TouchFeedback,
      touchableProps,
      [h("span", [this.$slots["default"]])]
    );
  }
};
var InputHandler$1 = InputHandler;
function noop$m() {
}
function preventDefault(e) {
  e.preventDefault();
}
function defaultParser(input) {
  return input.replace(/[^\w\.-]+/g, "");
}
var SPEED = 200;
var DELAY = 600;
var MAX_SAFE_INTEGER$1 = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
var isValidProps = function isValidProps2(value27) {
  return value27 !== void 0 && value27 !== null;
};
var isEqual = function isEqual2(oldValue, newValue) {
  return newValue === oldValue || typeof newValue === "number" && typeof oldValue === "number" && isNaN(newValue) && isNaN(oldValue);
};
var inputNumberProps = {
  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  focusOnUpDown: PropTypes.bool,
  autoFocus: PropTypes.bool,
  prefixCls: PropTypes.string,
  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  placeholder: PropTypes.string,
  disabled: PropTypes.bool,
  readonly: PropTypes.bool,
  max: PropTypes.number,
  min: PropTypes.number,
  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  upHandler: PropTypes.any,
  downHandler: PropTypes.any,
  useTouch: PropTypes.bool,
  formatter: PropTypes.func,
  parser: PropTypes.func,
  precision: PropTypes.number,
  required: PropTypes.bool,
  pattern: PropTypes.string,
  decimalSeparator: PropTypes.string,
  autoComplete: PropTypes.string,
  title: PropTypes.string,
  name: PropTypes.string,
  type: PropTypes.string,
  id: PropTypes.string
};
var VcInputNumber = {
  name: "VCInputNumber",
  mixins: [BaseMixin],
  model: {
    prop: "value",
    event: "change"
  },
  props: initDefaultProps(inputNumberProps, {
    focusOnUpDown: true,
    useTouch: false,
    prefixCls: "rc-input-number",
    min: -MAX_SAFE_INTEGER$1,
    step: 1,
    parser: defaultParser,
    required: false,
    autoComplete: "off"
  }),
  data: function data62() {
    var props2 = getOptionProps(this);
    this.prevProps = _default$6({}, props2);
    var value27 = void 0;
    if ("value" in props2) {
      value27 = this.value;
    } else {
      value27 = this.defaultValue;
    }
    var validValue = this.getValidValue(this.toNumber(value27));
    return {
      inputValue: this.toPrecisionAsStep(validValue),
      sValue: validValue,
      focused: this.autoFocus
    };
  },
  mounted: function mounted41() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus && !_this.disabled) {
        _this.focus();
      }
      _this.updatedFunc();
    });
  },
  updated: function updated26() {
    var _this2 = this;
    var _$props = this.$props, value27 = _$props.value, max4 = _$props.max, min4 = _$props.min;
    var focused = this.$data.focused;
    var prevProps = this.prevProps;
    var props2 = getOptionProps(this);
    if (prevProps) {
      if (!isEqual(prevProps.value, value27) || !isEqual(prevProps.max, max4) || !isEqual(prevProps.min, min4)) {
        var validValue = focused ? value27 : this.getValidValue(value27);
        var nextInputValue = void 0;
        if (this.pressingUpOrDown) {
          nextInputValue = validValue;
        } else if (this.inputting) {
          nextInputValue = this.rawInput;
        } else {
          nextInputValue = this.toPrecisionAsStep(validValue);
        }
        this.setState({
          sValue: validValue,
          inputValue: nextInputValue
        });
      }
      var nextValue = "value" in props2 ? value27 : this.sValue;
      if ("max" in props2 && prevProps.max !== max4 && typeof nextValue === "number" && nextValue > max4) {
        this.$emit("change", max4);
      }
      if ("min" in props2 && prevProps.min !== min4 && typeof nextValue === "number" && nextValue < min4) {
        this.$emit("change", min4);
      }
    }
    this.prevProps = _default$6({}, props2);
    this.$nextTick(function() {
      _this2.updatedFunc();
    });
  },
  beforeDestroy: function beforeDestroy29() {
    this.stop();
  },
  methods: {
    updatedFunc: function updatedFunc() {
      var inputElem = this.$refs.inputRef;
      try {
        if (this.cursorStart !== void 0 && this.focused) {
          if (!this.partRestoreByAfter(this.cursorAfter) && this.sValue !== this.value) {
            var pos = this.cursorStart + 1;
            if (!this.cursorAfter) {
              pos = inputElem.value.length;
            } else if (this.lastKeyCode === KeyCode$2.BACKSPACE) {
              pos = this.cursorStart - 1;
            } else if (this.lastKeyCode === KeyCode$2.DELETE) {
              pos = this.cursorStart;
            }
            this.fixCaret(pos, pos);
          } else if (this.currentValue === inputElem.value) {
            switch (this.lastKeyCode) {
              case KeyCode$2.BACKSPACE:
                this.fixCaret(this.cursorStart - 1, this.cursorStart - 1);
                break;
              case KeyCode$2.DELETE:
                this.fixCaret(this.cursorStart + 1, this.cursorStart + 1);
                break;
              default:
            }
          }
        }
      } catch (e) {
      }
      this.lastKeyCode = null;
      if (!this.pressingUpOrDown) {
        return;
      }
      if (this.focusOnUpDown && this.focused) {
        if (document.activeElement !== inputElem) {
          this.focus();
        }
      }
      this.pressingUpOrDown = false;
    },
    onKeyDown: function onKeyDown17(e) {
      if (e.keyCode === KeyCode$2.UP) {
        var ratio = this.getRatio(e);
        this.up(e, ratio);
        this.stop();
      } else if (e.keyCode === KeyCode$2.DOWN) {
        var _ratio = this.getRatio(e);
        this.down(e, _ratio);
        this.stop();
      } else if (e.keyCode === KeyCode$2.ENTER) {
        this.$emit("pressEnter", e);
      }
      this.recordCursorPosition();
      this.lastKeyCode = e.keyCode;
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      this.$emit.apply(this, ["keydown", e].concat(_default$5(args)));
    },
    onKeyUp: function onKeyUp(e) {
      this.stop();
      this.recordCursorPosition();
      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      this.$emit.apply(this, ["keyup", e].concat(_default$5(args)));
    },
    onTrigger: function onTrigger(e) {
      if (e.target.composing)
        return false;
      this.onChange(e);
    },
    onChange: function onChange6(e) {
      if (this.focused) {
        this.inputting = true;
      }
      this.rawInput = this.parser(this.getValueFromEvent(e));
      this.setState({ inputValue: this.rawInput });
      this.$emit("change", this.toNumber(this.rawInput));
    },
    onFocus: function onFocus4() {
      this.setState({
        focused: true
      });
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      this.$emit.apply(this, ["focus"].concat(_default$5(args)));
    },
    onBlur: function onBlur6() {
      this.inputting = false;
      this.setState({
        focused: false
      });
      var value27 = this.getCurrentValidValue(this.inputValue);
      var newValue = this.setValue(value27);
      if (this.$listeners.blur) {
        var originValue = this.$refs.inputRef.value;
        var inputValue = this.getInputDisplayValue({ focused: false, sValue: newValue });
        this.$refs.inputRef.value = inputValue;
        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        this.$emit.apply(this, ["blur"].concat(_default$5(args)));
        this.$refs.inputRef.value = originValue;
      }
    },
    getCurrentValidValue: function getCurrentValidValue(value27) {
      var val = value27;
      if (val === "") {
        val = "";
      } else if (!this.isNotCompleteNumber(parseFloat(val, 10))) {
        val = this.getValidValue(val);
      } else {
        val = this.sValue;
      }
      return this.toNumber(val);
    },
    getRatio: function getRatio(e) {
      var ratio = 1;
      if (e.metaKey || e.ctrlKey) {
        ratio = 0.1;
      } else if (e.shiftKey) {
        ratio = 10;
      }
      return ratio;
    },
    getValueFromEvent: function getValueFromEvent2(e) {
      var value27 = e.target.value.trim().replace(/。/g, ".");
      if (isValidProps(this.decimalSeparator)) {
        value27 = value27.replace(this.decimalSeparator, ".");
      }
      return value27;
    },
    getValidValue: function getValidValue(value27) {
      var min4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.min;
      var max4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.max;
      var val = parseFloat(value27, 10);
      if (isNaN(val)) {
        return value27;
      }
      if (val < min4) {
        val = min4;
      }
      if (val > max4) {
        val = max4;
      }
      return val;
    },
    setValue: function setValue9(v, callback) {
      var precision = this.$props.precision;
      var newValue = this.isNotCompleteNumber(parseFloat(v, 10)) ? null : parseFloat(v, 10);
      var _$data = this.$data, _$data$sValue = _$data.sValue, value27 = _$data$sValue === void 0 ? null : _$data$sValue, _$data$inputValue = _$data.inputValue, inputValue = _$data$inputValue === void 0 ? null : _$data$inputValue;
      var newValueInString = typeof newValue === "number" ? newValue.toFixed(precision) : "" + newValue;
      var changed = newValue !== value27 || newValueInString !== "" + inputValue;
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: newValue,
          inputValue: this.toPrecisionAsStep(v)
        }, callback);
      } else {
        this.setState({
          inputValue: this.toPrecisionAsStep(this.sValue)
        }, callback);
      }
      if (changed) {
        this.$emit("change", newValue);
      }
      return newValue;
    },
    getPrecision: function getPrecision(value27) {
      if (isValidProps(this.precision)) {
        return this.precision;
      }
      var valueString = value27.toString();
      if (valueString.indexOf("e-") >= 0) {
        return parseInt(valueString.slice(valueString.indexOf("e-") + 2), 10);
      }
      var precision = 0;
      if (valueString.indexOf(".") >= 0) {
        precision = valueString.length - valueString.indexOf(".") - 1;
      }
      return precision;
    },
    getMaxPrecision: function getMaxPrecision(currentValue) {
      var ratio = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      if (isValidProps(this.precision)) {
        return this.precision;
      }
      var step3 = this.step;
      var ratioPrecision = this.getPrecision(ratio);
      var stepPrecision = this.getPrecision(step3);
      var currentValuePrecision = this.getPrecision(currentValue);
      if (!currentValue) {
        return ratioPrecision + stepPrecision;
      }
      return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);
    },
    getPrecisionFactor: function getPrecisionFactor(currentValue) {
      var ratio = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      var precision = this.getMaxPrecision(currentValue, ratio);
      return Math.pow(10, precision);
    },
    getInputDisplayValue: function getInputDisplayValue(state) {
      var _ref = state || this.$data, focused = _ref.focused, inputValue = _ref.inputValue, sValue = _ref.sValue;
      var inputDisplayValue = void 0;
      if (focused) {
        inputDisplayValue = inputValue;
      } else {
        inputDisplayValue = this.toPrecisionAsStep(sValue);
      }
      if (inputDisplayValue === void 0 || inputDisplayValue === null) {
        inputDisplayValue = "";
      }
      var inputDisplayValueFormat = this.formatWrapper(inputDisplayValue);
      if (isValidProps(this.$props.decimalSeparator)) {
        inputDisplayValueFormat = inputDisplayValueFormat.toString().replace(".", this.$props.decimalSeparator);
      }
      return inputDisplayValueFormat;
    },
    recordCursorPosition: function recordCursorPosition() {
      try {
        var inputElem = this.$refs.inputRef;
        this.cursorStart = inputElem.selectionStart;
        this.cursorEnd = inputElem.selectionEnd;
        this.currentValue = inputElem.value;
        this.cursorBefore = inputElem.value.substring(0, this.cursorStart);
        this.cursorAfter = inputElem.value.substring(this.cursorEnd);
      } catch (e) {
      }
    },
    fixCaret: function fixCaret(start, end) {
      if (start === void 0 || end === void 0 || !this.$refs.inputRef || !this.$refs.inputRef.value) {
        return;
      }
      try {
        var inputElem = this.$refs.inputRef;
        var currentStart = inputElem.selectionStart;
        var currentEnd = inputElem.selectionEnd;
        if (start !== currentStart || end !== currentEnd) {
          inputElem.setSelectionRange(start, end);
        }
      } catch (e) {
      }
    },
    restoreByAfter: function restoreByAfter(str) {
      if (str === void 0)
        return false;
      var fullStr = this.$refs.inputRef.value;
      var index2 = fullStr.lastIndexOf(str);
      if (index2 === -1)
        return false;
      var prevCursorPos = this.cursorBefore.length;
      if (this.lastKeyCode === KeyCode$2.DELETE && this.cursorBefore.charAt(prevCursorPos - 1) === str[0]) {
        this.fixCaret(prevCursorPos, prevCursorPos);
        return true;
      }
      if (index2 + str.length === fullStr.length) {
        this.fixCaret(index2, index2);
        return true;
      }
      return false;
    },
    partRestoreByAfter: function partRestoreByAfter(str) {
      var _this3 = this;
      if (str === void 0)
        return false;
      return Array.prototype.some.call(str, function(_, start) {
        var partStr = str.substring(start);
        return _this3.restoreByAfter(partStr);
      });
    },
    focus: function focus19() {
      this.$refs.inputRef.focus();
      this.recordCursorPosition();
    },
    blur: function blur16() {
      this.$refs.inputRef.blur();
    },
    formatWrapper: function formatWrapper(num) {
      if (this.formatter) {
        return this.formatter(num);
      }
      return num;
    },
    toPrecisionAsStep: function toPrecisionAsStep(num) {
      if (this.isNotCompleteNumber(num) || num === "") {
        return num;
      }
      var precision = Math.abs(this.getMaxPrecision(num));
      if (!isNaN(precision)) {
        return Number(num).toFixed(precision);
      }
      return num.toString();
    },
    isNotCompleteNumber: function isNotCompleteNumber(num) {
      return isNaN(num) || num === "" || num === null || num && num.toString().indexOf(".") === num.toString().length - 1;
    },
    toNumber: function toNumber2(num) {
      var _$props2 = this.$props, precision = _$props2.precision, autoFocus = _$props2.autoFocus;
      var _focused = this.focused, focused = _focused === void 0 ? autoFocus : _focused;
      var numberIsTooLarge = num && num.length > 16 && focused;
      if (this.isNotCompleteNumber(num) || numberIsTooLarge) {
        return num;
      }
      if (isValidProps(precision)) {
        return Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision);
      }
      return Number(num);
    },
    upStep: function upStep(val, rat) {
      var step3 = this.step;
      var precisionFactor = this.getPrecisionFactor(val, rat);
      var precision = Math.abs(this.getMaxPrecision(val, rat));
      var result = ((precisionFactor * val + precisionFactor * step3 * rat) / precisionFactor).toFixed(precision);
      return this.toNumber(result);
    },
    downStep: function downStep(val, rat) {
      var step3 = this.step;
      var precisionFactor = this.getPrecisionFactor(val, rat);
      var precision = Math.abs(this.getMaxPrecision(val, rat));
      var result = ((precisionFactor * val - precisionFactor * step3 * rat) / precisionFactor).toFixed(precision);
      return this.toNumber(result);
    },
    stepFn: function stepFn(type3, e) {
      var _this4 = this;
      var ratio = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
      var recursive = arguments[3];
      this.stop();
      if (e) {
        e.preventDefault();
      }
      if (this.disabled) {
        return;
      }
      var max4 = this.max, min4 = this.min;
      var value27 = this.getCurrentValidValue(this.inputValue) || 0;
      if (this.isNotCompleteNumber(value27)) {
        return;
      }
      var val = this[type3 + "Step"](value27, ratio);
      var outOfRange = val > max4 || val < min4;
      if (val > max4) {
        val = max4;
      } else if (val < min4) {
        val = min4;
      }
      this.setValue(val);
      this.setState({
        focused: true
      });
      if (outOfRange) {
        return;
      }
      this.autoStepTimer = setTimeout(function() {
        _this4[type3](e, ratio, true);
      }, recursive ? SPEED : DELAY);
    },
    stop: function stop() {
      if (this.autoStepTimer) {
        clearTimeout(this.autoStepTimer);
      }
    },
    down: function down(e, ratio, recursive) {
      this.pressingUpOrDown = true;
      this.stepFn("down", e, ratio, recursive);
    },
    up: function up(e, ratio, recursive) {
      this.pressingUpOrDown = true;
      this.stepFn("up", e, ratio, recursive);
    },
    handleInputClick: function handleInputClick2() {
      this.$emit("click");
    },
    onCompositionstart: function onCompositionstart(e) {
      e.target.composing = true;
    },
    onCompositionend: function onCompositionend(e) {
      this.onChange(e);
      e.target.composing = false;
    }
  },
  render: function render131() {
    var _classNames;
    var h = arguments[0];
    var _$props3 = this.$props, prefixCls2 = _$props3.prefixCls, disabled = _$props3.disabled, readonly = _$props3.readonly, useTouch = _$props3.useTouch, autoComplete = _$props3.autoComplete, upHandler = _$props3.upHandler, downHandler = _$props3.downHandler;
    var classes6 = classNames((_classNames = {}, _default$8(_classNames, prefixCls2, true), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _default$8(_classNames, prefixCls2 + "-focused", this.focused), _classNames));
    var upDisabledClass = "";
    var downDisabledClass = "";
    var sValue = this.sValue;
    if (sValue || sValue === 0) {
      if (!isNaN(sValue)) {
        var val = Number(sValue);
        if (val >= this.max) {
          upDisabledClass = prefixCls2 + "-handler-up-disabled";
        }
        if (val <= this.min) {
          downDisabledClass = prefixCls2 + "-handler-down-disabled";
        }
      } else {
        upDisabledClass = prefixCls2 + "-handler-up-disabled";
        downDisabledClass = prefixCls2 + "-handler-down-disabled";
      }
    }
    var editable = !this.readonly && !this.disabled;
    var inputDisplayValue = this.getInputDisplayValue();
    var upEvents = void 0;
    var downEvents = void 0;
    if (useTouch) {
      upEvents = {
        touchstart: editable && !upDisabledClass ? this.up : noop$m,
        touchend: this.stop
      };
      downEvents = {
        touchstart: editable && !downDisabledClass ? this.down : noop$m,
        touchend: this.stop
      };
    } else {
      upEvents = {
        mousedown: editable && !upDisabledClass ? this.up : noop$m,
        mouseup: this.stop,
        mouseleave: this.stop
      };
      downEvents = {
        mousedown: editable && !downDisabledClass ? this.down : noop$m,
        mouseup: this.stop,
        mouseleave: this.stop
      };
    }
    var isUpDisabled = !!upDisabledClass || disabled || readonly;
    var isDownDisabled = !!downDisabledClass || disabled || readonly;
    var _getListeners = getListeners(this), _getListeners$mouseen = _getListeners.mouseenter, mouseenter = _getListeners$mouseen === void 0 ? noop$m : _getListeners$mouseen, _getListeners$mousele = _getListeners.mouseleave, mouseleave = _getListeners$mousele === void 0 ? noop$m : _getListeners$mousele, _getListeners$mouseov = _getListeners.mouseover, mouseover = _getListeners$mouseov === void 0 ? noop$m : _getListeners$mouseov, _getListeners$mouseou = _getListeners.mouseout, mouseout = _getListeners$mouseou === void 0 ? noop$m : _getListeners$mouseou;
    var contentProps = {
      on: { mouseenter, mouseleave, mouseover, mouseout },
      "class": classes6,
      attrs: { title: this.$props.title }
    };
    var upHandlerProps = {
      props: {
        disabled: isUpDisabled,
        prefixCls: prefixCls2
      },
      attrs: {
        unselectable: "unselectable",
        role: "button",
        "aria-label": "Increase Value",
        "aria-disabled": !!isUpDisabled
      },
      "class": prefixCls2 + "-handler " + prefixCls2 + "-handler-up " + upDisabledClass,
      on: upEvents,
      ref: "up"
    };
    var downHandlerProps = {
      props: {
        disabled: isDownDisabled,
        prefixCls: prefixCls2
      },
      attrs: {
        unselectable: "unselectable",
        role: "button",
        "aria-label": "Decrease Value",
        "aria-disabled": !!isDownDisabled
      },
      "class": prefixCls2 + "-handler " + prefixCls2 + "-handler-down " + downDisabledClass,
      on: downEvents,
      ref: "down"
    };
    return h(
      "div",
      contentProps,
      [h(
        "div",
        { "class": prefixCls2 + "-handler-wrap" },
        [h(
          InputHandler$1,
          upHandlerProps,
          [upHandler || h("span", {
            attrs: {
              unselectable: "unselectable"
            },
            "class": prefixCls2 + "-handler-up-inner",
            on: {
              "click": preventDefault
            }
          })]
        ), h(
          InputHandler$1,
          downHandlerProps,
          [downHandler || h("span", {
            attrs: {
              unselectable: "unselectable"
            },
            "class": prefixCls2 + "-handler-down-inner",
            on: {
              "click": preventDefault
            }
          })]
        )]
      ), h(
        "div",
        { "class": prefixCls2 + "-input-wrap" },
        [h("input", {
          attrs: {
            role: "spinbutton",
            "aria-valuemin": this.min,
            "aria-valuemax": this.max,
            "aria-valuenow": sValue,
            required: this.required,
            type: this.type,
            placeholder: this.placeholder,
            tabIndex: this.tabIndex,
            autoComplete,
            readonly: this.readonly,
            disabled: this.disabled,
            max: this.max,
            min: this.min,
            step: this.step,
            name: this.name,
            title: this.title,
            id: this.id,
            pattern: this.pattern
          },
          on: {
            "click": this.handleInputClick,
            "focus": this.onFocus,
            "blur": this.onBlur,
            "keydown": editable ? this.onKeyDown : noop$m,
            "keyup": editable ? this.onKeyUp : noop$m,
            "input": this.onTrigger,
            "compositionstart": this.onCompositionstart,
            "compositionend": this.onCompositionend
          },
          "class": prefixCls2 + "-input",
          ref: "inputRef",
          domProps: {
            "value": inputDisplayValue
          }
        })]
      )]
    );
  }
};
var InputNumberProps = {
  prefixCls: PropTypes.string,
  min: PropTypes.number,
  max: PropTypes.number,
  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  tabIndex: PropTypes.number,
  disabled: PropTypes.bool,
  size: PropTypes.oneOf(["large", "small", "default"]),
  formatter: PropTypes.func,
  parser: PropTypes.func,
  decimalSeparator: PropTypes.string,
  placeholder: PropTypes.string,
  name: PropTypes.string,
  id: PropTypes.string,
  precision: PropTypes.number,
  autoFocus: PropTypes.bool
};
var InputNumber = {
  name: "AInputNumber",
  model: {
    prop: "value",
    event: "change"
  },
  props: initDefaultProps(InputNumberProps, {
    step: 1
  }),
  inject: {
    configProvider: { "default": function _default77() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    focus: function focus20() {
      this.$refs.inputNumberRef.focus();
    },
    blur: function blur17() {
      this.$refs.inputNumberRef.blur();
    }
  },
  render: function render132() {
    var _classNames;
    var h = arguments[0];
    var _getOptionProps$$attr = _default$6({}, getOptionProps(this), this.$attrs), customizePrefixCls = _getOptionProps$$attr.prefixCls, size = _getOptionProps$$attr.size, others = _default$2(_getOptionProps$$attr, ["prefixCls", "size"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("input-number", customizePrefixCls);
    var inputNumberClass = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-lg", size === "large"), _default$8(_classNames, prefixCls2 + "-sm", size === "small"), _classNames));
    var upIcon = h(Icon$1, {
      attrs: { type: "up" },
      "class": prefixCls2 + "-handler-up-inner"
    });
    var downIcon = h(Icon$1, {
      attrs: { type: "down" },
      "class": prefixCls2 + "-handler-down-inner"
    });
    var vcInputNumberprops = {
      props: _default$6({
        prefixCls: prefixCls2,
        upHandler: upIcon,
        downHandler: downIcon
      }, others),
      "class": inputNumberClass,
      ref: "inputNumberRef",
      on: getListeners(this)
    };
    return h(VcInputNumber, vcInputNumberprops);
  }
};
InputNumber.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(InputNumber.name, InputNumber);
};
var InputNumber$1 = InputNumber;
var BasicProps = {
  prefixCls: PropTypes.string,
  hasSider: PropTypes.boolean,
  tagName: PropTypes.string
};
function generator(_ref) {
  var suffixCls = _ref.suffixCls, tagName = _ref.tagName, name = _ref.name;
  return function(BasicComponent) {
    return {
      name,
      props: BasicComponent.props,
      inject: {
        configProvider: { "default": function _default130() {
          return ConfigConsumerProps;
        } }
      },
      render: function render249() {
        var h = arguments[0];
        var customizePrefixCls = this.$props.prefixCls;
        var getPrefixCls5 = this.configProvider.getPrefixCls;
        var prefixCls2 = getPrefixCls5(suffixCls, customizePrefixCls);
        var basicComponentProps = {
          props: _default$6({
            prefixCls: prefixCls2
          }, getOptionProps(this), {
            tagName
          }),
          on: getListeners(this)
        };
        return h(
          BasicComponent,
          basicComponentProps,
          [this.$slots["default"]]
        );
      }
    };
  };
}
var Basic = {
  props: BasicProps,
  render: function render133() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, Tag2 = this.tagName, $slots = this.$slots;
    var divProps = {
      "class": prefixCls2,
      on: getListeners(this)
    };
    return h(
      Tag2,
      divProps,
      [$slots["default"]]
    );
  }
};
var BasicLayout = {
  props: BasicProps,
  data: function data63() {
    return {
      siders: []
    };
  },
  provide: function provide18() {
    var _this = this;
    return {
      siderHook: {
        addSider: function addSider(id2) {
          _this.siders = [].concat(_default$5(_this.siders), [id2]);
        },
        removeSider: function removeSider(id2) {
          _this.siders = _this.siders.filter(function(currentId) {
            return currentId !== id2;
          });
        }
      }
    };
  },
  render: function render134() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, $slots = this.$slots, hasSider = this.hasSider, Tag2 = this.tagName;
    var divCls = classNames(prefixCls2, _default$8({}, prefixCls2 + "-has-sider", typeof hasSider === "boolean" ? hasSider : this.siders.length > 0));
    var divProps = {
      "class": divCls,
      on: getListeners
    };
    return h(
      Tag2,
      divProps,
      [$slots["default"]]
    );
  }
};
var Layout = generator({
  suffixCls: "layout",
  tagName: "section",
  name: "ALayout"
})(BasicLayout);
var Header = generator({
  suffixCls: "layout-header",
  tagName: "header",
  name: "ALayoutHeader"
})(Basic);
var Footer = generator({
  suffixCls: "layout-footer",
  tagName: "footer",
  name: "ALayoutFooter"
})(Basic);
var Content = generator({
  suffixCls: "layout-content",
  tagName: "main",
  name: "ALayoutContent"
})(Basic);
Layout.Header = Header;
Layout.Footer = Footer;
Layout.Content = Content;
var Layout$1 = Layout;
if (typeof window !== "undefined") {
  var matchMediaPolyfill = function matchMediaPolyfill2(mediaQuery) {
    return {
      media: mediaQuery,
      matches: false,
      addListener: function addListener() {
      },
      removeListener: function removeListener() {
      }
    };
  };
  window.matchMedia = window.matchMedia || matchMediaPolyfill;
}
var dimensionMaxMap = {
  xs: "479.98px",
  sm: "575.98px",
  md: "767.98px",
  lg: "991.98px",
  xl: "1199.98px",
  xxl: "1599.98px"
};
var SiderProps = {
  prefixCls: PropTypes.string,
  collapsible: PropTypes.bool,
  collapsed: PropTypes.bool,
  defaultCollapsed: PropTypes.bool,
  reverseArrow: PropTypes.bool,
  zeroWidthTriggerStyle: PropTypes.object,
  trigger: PropTypes.any,
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  collapsedWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  breakpoint: PropTypes.oneOf(["xs", "sm", "md", "lg", "xl", "xxl"]),
  theme: PropTypes.oneOf(["light", "dark"]).def("dark")
};
var generateId = function() {
  var i = 0;
  return function() {
    var prefix = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    i += 1;
    return "" + prefix + i;
  };
}();
var Sider = {
  name: "ALayoutSider",
  __ANT_LAYOUT_SIDER: true,
  mixins: [BaseMixin],
  model: {
    prop: "collapsed",
    event: "collapse"
  },
  props: initDefaultProps(SiderProps, {
    collapsible: false,
    defaultCollapsed: false,
    reverseArrow: false,
    width: 200,
    collapsedWidth: 80
  }),
  data: function data64() {
    this.uniqueId = generateId("ant-sider-");
    var matchMedia = void 0;
    if (typeof window !== "undefined") {
      matchMedia = window.matchMedia;
    }
    var props2 = getOptionProps(this);
    if (matchMedia && props2.breakpoint && props2.breakpoint in dimensionMaxMap) {
      this.mql = matchMedia("(max-width: " + dimensionMaxMap[props2.breakpoint] + ")");
    }
    var sCollapsed = void 0;
    if ("collapsed" in props2) {
      sCollapsed = props2.collapsed;
    } else {
      sCollapsed = props2.defaultCollapsed;
    }
    return {
      sCollapsed,
      below: false,
      belowShow: false
    };
  },
  provide: function provide19() {
    return {
      layoutSiderContext: this
    };
  },
  inject: {
    siderHook: { "default": function _default78() {
      return {};
    } },
    configProvider: { "default": function _default79() {
      return ConfigConsumerProps;
    } }
  },
  watch: {
    collapsed: function collapsed(val) {
      this.setState({
        sCollapsed: val
      });
    }
  },
  mounted: function mounted42() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.mql) {
        _this.mql.addListener(_this.responsiveHandler);
        _this.responsiveHandler(_this.mql);
      }
      if (_this.siderHook.addSider) {
        _this.siderHook.addSider(_this.uniqueId);
      }
    });
  },
  beforeDestroy: function beforeDestroy30() {
    if (this.mql) {
      this.mql.removeListener(this.responsiveHandler);
    }
    if (this.siderHook.removeSider) {
      this.siderHook.removeSider(this.uniqueId);
    }
  },
  methods: {
    responsiveHandler: function responsiveHandler(mql) {
      this.setState({ below: mql.matches });
      this.$emit("breakpoint", mql.matches);
      if (this.sCollapsed !== mql.matches) {
        this.setCollapsed(mql.matches, "responsive");
      }
    },
    setCollapsed: function setCollapsed(collapsed2, type3) {
      if (!hasProp(this, "collapsed")) {
        this.setState({
          sCollapsed: collapsed2
        });
      }
      this.$emit("collapse", collapsed2, type3);
    },
    toggle: function toggle() {
      var collapsed2 = !this.sCollapsed;
      this.setCollapsed(collapsed2, "clickTrigger");
    },
    belowShowChange: function belowShowChange() {
      this.setState({ belowShow: !this.belowShow });
    }
  },
  render: function render135() {
    var _classNames;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, theme = _getOptionProps.theme, collapsible = _getOptionProps.collapsible, reverseArrow = _getOptionProps.reverseArrow, width = _getOptionProps.width, collapsedWidth = _getOptionProps.collapsedWidth, zeroWidthTriggerStyle = _getOptionProps.zeroWidthTriggerStyle;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("layout-sider", customizePrefixCls);
    var trigger2 = getComponentFromProp(this, "trigger");
    var rawWidth = this.sCollapsed ? collapsedWidth : width;
    var siderWidth = isNumeric$2(rawWidth) ? rawWidth + "px" : String(rawWidth);
    var zeroWidthTrigger = parseFloat(String(collapsedWidth || 0)) === 0 ? h(
      "span",
      {
        on: {
          "click": this.toggle
        },
        "class": prefixCls2 + "-zero-width-trigger " + prefixCls2 + "-zero-width-trigger-" + (reverseArrow ? "right" : "left"),
        style: zeroWidthTriggerStyle
      },
      [h(Icon$1, {
        attrs: { type: "bars" }
      })]
    ) : null;
    var iconObj = {
      expanded: reverseArrow ? h(Icon$1, {
        attrs: { type: "right" }
      }) : h(Icon$1, {
        attrs: { type: "left" }
      }),
      collapsed: reverseArrow ? h(Icon$1, {
        attrs: { type: "left" }
      }) : h(Icon$1, {
        attrs: { type: "right" }
      })
    };
    var status = this.sCollapsed ? "collapsed" : "expanded";
    var defaultTrigger = iconObj[status];
    var triggerDom = trigger2 !== null ? zeroWidthTrigger || h(
      "div",
      {
        "class": prefixCls2 + "-trigger",
        on: {
          "click": this.toggle
        },
        style: { width: siderWidth }
      },
      [trigger2 || defaultTrigger]
    ) : null;
    var divStyle = {
      flex: "0 0 " + siderWidth,
      maxWidth: siderWidth,
      minWidth: siderWidth,
      width: siderWidth
    };
    var siderCls = classNames(prefixCls2, prefixCls2 + "-" + theme, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-collapsed", !!this.sCollapsed), _default$8(_classNames, prefixCls2 + "-has-trigger", collapsible && trigger2 !== null && !zeroWidthTrigger), _default$8(_classNames, prefixCls2 + "-below", !!this.below), _default$8(_classNames, prefixCls2 + "-zero-width", parseFloat(siderWidth) === 0), _classNames));
    var divProps = {
      on: getListeners(this),
      "class": siderCls,
      style: divStyle
    };
    return h(
      "aside",
      divProps,
      [h(
        "div",
        { "class": prefixCls2 + "-children" },
        [this.$slots["default"]]
      ), collapsible || this.below && zeroWidthTrigger ? triggerDom : null]
    );
  }
};
Layout$1.Sider = Sider;
Layout$1.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Layout$1.name, Layout$1);
  Vue2.component(Layout$1.Header.name, Layout$1.Header);
  Vue2.component(Layout$1.Footer.name, Layout$1.Footer);
  Vue2.component(Layout$1.Sider.name, Layout$1.Sider);
  Vue2.component(Layout$1.Content.name, Layout$1.Content);
};
var SpinSize = PropTypes.oneOf(["small", "default", "large"]);
var SpinProps$1 = function SpinProps() {
  return {
    prefixCls: PropTypes.string,
    spinning: PropTypes.bool,
    size: SpinSize,
    wrapperClassName: PropTypes.string,
    tip: PropTypes.string,
    delay: PropTypes.number,
    indicator: PropTypes.any
  };
};
var defaultIndicator = void 0;
function shouldDelay(spinning, delay) {
  return !!spinning && !!delay && !isNaN(Number(delay));
}
function setDefaultIndicator(Content2) {
  defaultIndicator = typeof Content2.indicator === "function" ? Content2.indicator : function(h) {
    return h(Content2.indicator);
  };
}
var Spin = {
  name: "ASpin",
  mixins: [BaseMixin],
  props: initDefaultProps(SpinProps$1(), {
    size: "default",
    spinning: true,
    wrapperClassName: ""
  }),
  inject: {
    configProvider: { "default": function _default80() {
      return ConfigConsumerProps;
    } }
  },
  data: function data65() {
    var spinning = this.spinning, delay = this.delay;
    var shouldBeDelayed = shouldDelay(spinning, delay);
    this.originalUpdateSpinning = this.updateSpinning;
    this.debouncifyUpdateSpinning(this.$props);
    return {
      sSpinning: spinning && !shouldBeDelayed
    };
  },
  mounted: function mounted43() {
    this.updateSpinning();
  },
  updated: function updated27() {
    var _this = this;
    this.$nextTick(function() {
      _this.debouncifyUpdateSpinning();
      _this.updateSpinning();
    });
  },
  beforeDestroy: function beforeDestroy31() {
    this.cancelExistingSpin();
  },
  methods: {
    debouncifyUpdateSpinning: function debouncifyUpdateSpinning(props2) {
      var _ref = props2 || this.$props, delay = _ref.delay;
      if (delay) {
        this.cancelExistingSpin();
        this.updateSpinning = debounce$3(this.originalUpdateSpinning, delay);
      }
    },
    updateSpinning: function updateSpinning() {
      var spinning = this.spinning, sSpinning = this.sSpinning;
      if (sSpinning !== spinning) {
        this.setState({ sSpinning: spinning });
      }
    },
    cancelExistingSpin: function cancelExistingSpin() {
      var updateSpinning2 = this.updateSpinning;
      if (updateSpinning2 && updateSpinning2.cancel) {
        updateSpinning2.cancel();
      }
    },
    getChildren: function getChildren() {
      if (this.$slots && this.$slots["default"]) {
        return filterEmpty(this.$slots["default"]);
      }
      return null;
    },
    renderIndicator: function renderIndicator(h, prefixCls2) {
      var dotClassName = prefixCls2 + "-dot";
      var indicator = getComponentFromProp(this, "indicator");
      if (indicator === null) {
        return null;
      }
      if (Array.isArray(indicator)) {
        indicator = filterEmpty(indicator);
        indicator = indicator.length === 1 ? indicator[0] : indicator;
      }
      if (isValidElement(indicator)) {
        return cloneElement(indicator, { "class": dotClassName });
      }
      if (defaultIndicator && isValidElement(defaultIndicator(h))) {
        return cloneElement(defaultIndicator(h), { "class": dotClassName });
      }
      return h(
        "span",
        { "class": dotClassName + " " + prefixCls2 + "-dot-spin" },
        [h("i", { "class": prefixCls2 + "-dot-item" }), h("i", { "class": prefixCls2 + "-dot-item" }), h("i", { "class": prefixCls2 + "-dot-item" }), h("i", { "class": prefixCls2 + "-dot-item" })]
      );
    }
  },
  render: function render136(h) {
    var _spinClassName;
    var _$props = this.$props, size = _$props.size, customizePrefixCls = _$props.prefixCls, tip = _$props.tip, wrapperClassName = _$props.wrapperClassName, restProps = _default$2(_$props, ["size", "prefixCls", "tip", "wrapperClassName"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("spin", customizePrefixCls);
    var sSpinning = this.sSpinning;
    var spinClassName = (_spinClassName = {}, _default$8(_spinClassName, prefixCls2, true), _default$8(_spinClassName, prefixCls2 + "-sm", size === "small"), _default$8(_spinClassName, prefixCls2 + "-lg", size === "large"), _default$8(_spinClassName, prefixCls2 + "-spinning", sSpinning), _default$8(_spinClassName, prefixCls2 + "-show-text", !!tip), _spinClassName);
    var spinElement = h(
      "div",
      _mergeJSXProps([restProps, { "class": spinClassName }]),
      [this.renderIndicator(h, prefixCls2), tip ? h(
        "div",
        { "class": prefixCls2 + "-text" },
        [tip]
      ) : null]
    );
    var children = this.getChildren();
    if (children) {
      var _containerClassName;
      var containerClassName = (_containerClassName = {}, _default$8(_containerClassName, prefixCls2 + "-container", true), _default$8(_containerClassName, prefixCls2 + "-blur", sSpinning), _containerClassName);
      return h(
        "div",
        _mergeJSXProps([{ on: getListeners(this) }, {
          "class": [prefixCls2 + "-nested-loading", wrapperClassName]
        }]),
        [sSpinning && h(
          "div",
          { key: "loading" },
          [spinElement]
        ), h(
          "div",
          { "class": containerClassName, key: "container" },
          [children]
        )]
      );
    }
    return spinElement;
  }
};
Spin.setDefaultIndicator = setDefaultIndicator;
Spin.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Spin.name, Spin);
};
var MiniSelect = {
  props: _default$6({}, SelectProps),
  Option: Select$5.Option,
  render: function render137() {
    var h = arguments[0];
    var selectOptionsProps = getOptionProps(this);
    var selelctProps = {
      props: _default$6({}, selectOptionsProps, {
        size: "small"
      }),
      on: getListeners(this)
    };
    return h(
      Select$5,
      selelctProps,
      [filterEmpty(this.$slots["default"])]
    );
  }
};
var Pager = {
  name: "Pager",
  props: {
    rootPrefixCls: PropTypes.string,
    page: PropTypes.number,
    active: PropTypes.bool,
    last: PropTypes.bool,
    locale: PropTypes.object,
    showTitle: PropTypes.bool,
    itemRender: {
      type: Function,
      "default": function _default81() {
      }
    }
  },
  methods: {
    handleClick: function handleClick5() {
      this.$emit("click", this.page);
    },
    handleKeyPress: function handleKeyPress2(event) {
      this.$emit("keypress", event, this.handleClick, this.page);
    }
  },
  render: function render138() {
    var _classNames;
    var h = arguments[0];
    var props2 = this.$props;
    var prefixCls2 = props2.rootPrefixCls + "-item";
    var cls = classNames(prefixCls2, prefixCls2 + "-" + props2.page, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-active", props2.active), _default$8(_classNames, prefixCls2 + "-disabled", !props2.page), _classNames));
    return h(
      "li",
      {
        "class": cls,
        on: {
          "click": this.handleClick,
          "keypress": this.handleKeyPress
        },
        attrs: {
          title: this.showTitle ? this.page : null,
          tabIndex: "0"
        }
      },
      [this.itemRender(this.page, "page", h("a", [this.page]))]
    );
  }
};
var KEYCODE = {
  ZERO: 48,
  NINE: 57,
  NUMPAD_ZERO: 96,
  NUMPAD_NINE: 105,
  BACKSPACE: 8,
  DELETE: 46,
  ENTER: 13,
  ARROW_UP: 38,
  ARROW_DOWN: 40
};
var Options = {
  mixins: [BaseMixin],
  props: {
    disabled: PropTypes.bool,
    changeSize: PropTypes.func,
    quickGo: PropTypes.func,
    selectComponentClass: PropTypes.any,
    current: PropTypes.number,
    pageSizeOptions: PropTypes.array.def(["10", "20", "30", "40"]),
    pageSize: PropTypes.number,
    buildOptionText: PropTypes.func,
    locale: PropTypes.object,
    rootPrefixCls: PropTypes.string,
    selectPrefixCls: PropTypes.string,
    goButton: PropTypes.any
  },
  data: function data66() {
    return {
      goInputText: ""
    };
  },
  methods: {
    getValidValue: function getValidValue2() {
      var goInputText = this.goInputText, current2 = this.current;
      return !goInputText || isNaN(goInputText) ? current2 : Number(goInputText);
    },
    defaultBuildOptionText: function defaultBuildOptionText(opt) {
      return opt.value + " " + this.locale.items_per_page;
    },
    handleChange: function handleChange12(e) {
      var _e$target = e.target, value27 = _e$target.value, composing = _e$target.composing;
      if (e.isComposing || composing || this.goInputText === value27)
        return;
      this.setState({
        goInputText: value27
      });
    },
    handleBlur: function handleBlur(e) {
      var _$props = this.$props, goButton = _$props.goButton, quickGo = _$props.quickGo, rootPrefixCls = _$props.rootPrefixCls;
      if (goButton) {
        return;
      }
      if (e.relatedTarget && (e.relatedTarget.className.indexOf(rootPrefixCls + "-prev") >= 0 || e.relatedTarget.className.indexOf(rootPrefixCls + "-next") >= 0)) {
        return;
      }
      quickGo(this.getValidValue());
    },
    go: function go(e) {
      var goInputText = this.goInputText;
      if (goInputText === "") {
        return;
      }
      if (e.keyCode === KEYCODE.ENTER || e.type === "click") {
        this.quickGo(this.getValidValue());
        this.setState({
          goInputText: ""
        });
      }
    }
  },
  render: function render139() {
    var _this = this;
    var h = arguments[0];
    var rootPrefixCls = this.rootPrefixCls, locale3 = this.locale, changeSize = this.changeSize, quickGo = this.quickGo, goButton = this.goButton, Select2 = this.selectComponentClass, defaultBuildOptionText2 = this.defaultBuildOptionText, selectPrefixCls = this.selectPrefixCls, pageSize2 = this.pageSize, pageSizeOptions = this.pageSizeOptions, goInputText = this.goInputText, disabled = this.disabled;
    var prefixCls2 = rootPrefixCls + "-options";
    var changeSelect = null;
    var goInput = null;
    var gotoButton = null;
    if (!changeSize && !quickGo) {
      return null;
    }
    if (changeSize && Select2) {
      var buildOptionText = this.buildOptionText || defaultBuildOptionText2;
      var options2 = pageSizeOptions.map(function(opt, i) {
        return h(
          Select2.Option,
          {
            key: i,
            attrs: { value: opt }
          },
          [buildOptionText({ value: opt })]
        );
      });
      changeSelect = h(
        Select2,
        {
          attrs: {
            disabled,
            prefixCls: selectPrefixCls,
            showSearch: false,
            optionLabelProp: "children",
            dropdownMatchSelectWidth: false,
            value: (pageSize2 || pageSizeOptions[0]).toString(),
            getPopupContainer: function getPopupContainer(triggerNode) {
              return triggerNode.parentNode;
            }
          },
          "class": prefixCls2 + "-size-changer",
          on: {
            "change": function change(value27) {
              return _this.changeSize(Number(value27));
            }
          }
        },
        [options2]
      );
    }
    if (quickGo) {
      if (goButton) {
        gotoButton = typeof goButton === "boolean" ? h(
          "button",
          {
            attrs: { type: "button", disabled },
            on: {
              "click": this.go,
              "keyup": this.go
            }
          },
          [locale3.jump_to_confirm]
        ) : h(
          "span",
          {
            on: {
              "click": this.go,
              "keyup": this.go
            }
          },
          [goButton]
        );
      }
      goInput = h(
        "div",
        { "class": prefixCls2 + "-quick-jumper" },
        [locale3.jump_to, h("input", _mergeJSXProps([{
          attrs: {
            disabled,
            type: "text"
          },
          domProps: {
            "value": goInputText
          },
          on: {
            "input": this.handleChange,
            "keyup": this.go,
            "blur": this.handleBlur
          }
        }, {
          directives: [{
            name: "ant-input"
          }]
        }])), locale3.page, gotoButton]
      );
    }
    return h(
      "li",
      { "class": "" + prefixCls2 },
      [changeSelect, goInput]
    );
  }
};
var LOCALE = {
  items_per_page: "\u6761/\u9875",
  jump_to: "\u8DF3\u81F3",
  jump_to_confirm: "\u786E\u5B9A",
  page: "\u9875",
  prev_page: "\u4E0A\u4E00\u9875",
  next_page: "\u4E0B\u4E00\u9875",
  prev_5: "\u5411\u524D 5 \u9875",
  next_5: "\u5411\u540E 5 \u9875",
  prev_3: "\u5411\u524D 3 \u9875",
  next_3: "\u5411\u540E 3 \u9875"
};
function noop$l() {
}
function isInteger(value27) {
  return typeof value27 === "number" && isFinite(value27) && Math.floor(value27) === value27;
}
function defaultItemRender2(page, type3, element) {
  return element;
}
function calculatePage(p, state, props2) {
  var pageSize2 = p;
  if (typeof pageSize2 === "undefined") {
    pageSize2 = state.statePageSize;
  }
  return Math.floor((props2.total - 1) / pageSize2) + 1;
}
var VcPagination = {
  name: "Pagination",
  mixins: [BaseMixin],
  model: {
    prop: "current",
    event: "change.current"
  },
  props: {
    disabled: PropTypes.bool,
    prefixCls: PropTypes.string.def("rc-pagination"),
    selectPrefixCls: PropTypes.string.def("rc-select"),
    current: PropTypes.number,
    defaultCurrent: PropTypes.number.def(1),
    total: PropTypes.number.def(0),
    pageSize: PropTypes.number,
    defaultPageSize: PropTypes.number.def(10),
    hideOnSinglePage: PropTypes.bool.def(false),
    showSizeChanger: PropTypes.bool.def(false),
    showLessItems: PropTypes.bool.def(false),
    selectComponentClass: PropTypes.any,
    showPrevNextJumpers: PropTypes.bool.def(true),
    showQuickJumper: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).def(false),
    showTitle: PropTypes.bool.def(true),
    pageSizeOptions: PropTypes.arrayOf(PropTypes.string),
    buildOptionText: PropTypes.func,
    showTotal: PropTypes.func,
    simple: PropTypes.bool,
    locale: PropTypes.object.def(LOCALE),
    itemRender: PropTypes.func.def(defaultItemRender2),
    prevIcon: PropTypes.any,
    nextIcon: PropTypes.any,
    jumpPrevIcon: PropTypes.any,
    jumpNextIcon: PropTypes.any
  },
  data: function data67() {
    var props2 = getOptionProps(this);
    var hasOnChange = this.onChange !== noop$l;
    var hasCurrent = "current" in props2;
    if (hasCurrent && !hasOnChange) {
      console.warn("Warning: You provided a `current` prop to a Pagination component without an `onChange` handler. This will render a read-only component.");
    }
    var current2 = this.defaultCurrent;
    if ("current" in props2) {
      current2 = this.current;
    }
    var pageSize2 = this.defaultPageSize;
    if ("pageSize" in props2) {
      pageSize2 = this.pageSize;
    }
    current2 = Math.min(current2, calculatePage(pageSize2, void 0, props2));
    return {
      stateCurrent: current2,
      stateCurrentInputValue: current2,
      statePageSize: pageSize2
    };
  },
  watch: {
    current: function current(val) {
      this.setState({
        stateCurrent: val,
        stateCurrentInputValue: val
      });
    },
    pageSize: function pageSize(val) {
      var newState = {};
      var current2 = this.stateCurrent;
      var newCurrent = calculatePage(val, this.$data, this.$props);
      current2 = current2 > newCurrent ? newCurrent : current2;
      if (!hasProp(this, "current")) {
        newState.stateCurrent = current2;
        newState.stateCurrentInputValue = current2;
      }
      newState.statePageSize = val;
      this.setState(newState);
    },
    stateCurrent: function stateCurrent(val, oldValue) {
      var _this = this;
      this.$nextTick(function() {
        if (_this.$refs.paginationNode) {
          var lastCurrentNode = _this.$refs.paginationNode.querySelector("." + _this.prefixCls + "-item-" + oldValue);
          if (lastCurrentNode && document.activeElement === lastCurrentNode) {
            lastCurrentNode.blur();
          }
        }
      });
    },
    total: function total() {
      var newState = {};
      var newCurrent = calculatePage(this.pageSize, this.$data, this.$props);
      if (hasProp(this, "current")) {
        var current2 = Math.min(this.current, newCurrent);
        newState.stateCurrent = current2;
        newState.stateCurrentInputValue = current2;
      } else {
        var _current = this.stateCurrent;
        if (_current === 0 && newCurrent > 0) {
          _current = 1;
        } else {
          _current = Math.min(this.stateCurrent, newCurrent);
        }
        newState.stateCurrent = _current;
      }
      this.setState(newState);
    }
  },
  methods: {
    getJumpPrevPage: function getJumpPrevPage() {
      return Math.max(1, this.stateCurrent - (this.showLessItems ? 3 : 5));
    },
    getJumpNextPage: function getJumpNextPage() {
      return Math.min(calculatePage(void 0, this.$data, this.$props), this.stateCurrent + (this.showLessItems ? 3 : 5));
    },
    getItemIcon: function getItemIcon(icon) {
      var h = this.$createElement;
      var prefixCls2 = this.$props.prefixCls;
      var iconNode = getComponentFromProp(this, icon, this.$props) || h("a", { "class": prefixCls2 + "-item-link" });
      return iconNode;
    },
    getValidValue: function getValidValue3(e) {
      var inputValue = e.target.value;
      var allPages = calculatePage(void 0, this.$data, this.$props);
      var stateCurrentInputValue = this.$data.stateCurrentInputValue;
      var value27 = void 0;
      if (inputValue === "") {
        value27 = inputValue;
      } else if (isNaN(Number(inputValue))) {
        value27 = stateCurrentInputValue;
      } else if (inputValue >= allPages) {
        value27 = allPages;
      } else {
        value27 = Number(inputValue);
      }
      return value27;
    },
    isValid: function isValid3(page) {
      return isInteger(page) && page !== this.stateCurrent;
    },
    shouldDisplayQuickJumper: function shouldDisplayQuickJumper() {
      var _$props = this.$props, showQuickJumper = _$props.showQuickJumper, pageSize2 = _$props.pageSize, total2 = _$props.total;
      if (total2 <= pageSize2) {
        return false;
      }
      return showQuickJumper;
    },
    handleKeyDown: function handleKeyDown5(event) {
      if (event.keyCode === KEYCODE.ARROW_UP || event.keyCode === KEYCODE.ARROW_DOWN) {
        event.preventDefault();
      }
    },
    handleKeyUp: function handleKeyUp(e) {
      if (e.isComposing || e.target.composing)
        return;
      var value27 = this.getValidValue(e);
      var stateCurrentInputValue = this.stateCurrentInputValue;
      if (value27 !== stateCurrentInputValue) {
        this.setState({
          stateCurrentInputValue: value27
        });
      }
      if (e.keyCode === KEYCODE.ENTER) {
        this.handleChange(value27);
      } else if (e.keyCode === KEYCODE.ARROW_UP) {
        this.handleChange(value27 - 1);
      } else if (e.keyCode === KEYCODE.ARROW_DOWN) {
        this.handleChange(value27 + 1);
      }
    },
    changePageSize: function changePageSize(size) {
      var current2 = this.stateCurrent;
      var preCurrent = current2;
      var newCurrent = calculatePage(size, this.$data, this.$props);
      current2 = current2 > newCurrent ? newCurrent : current2;
      if (newCurrent === 0) {
        current2 = this.stateCurrent;
      }
      if (typeof size === "number") {
        if (!hasProp(this, "pageSize")) {
          this.setState({
            statePageSize: size
          });
        }
        if (!hasProp(this, "current")) {
          this.setState({
            stateCurrent: current2,
            stateCurrentInputValue: current2
          });
        }
      }
      this.$emit("update:pageSize", size);
      this.$emit("showSizeChange", current2, size);
      if (current2 !== preCurrent) {
        this.$emit("change.current", current2, size);
      }
    },
    handleChange: function handleChange13(p) {
      var disabled = this.$props.disabled;
      var page = p;
      if (this.isValid(page) && !disabled) {
        var currentPage = calculatePage(void 0, this.$data, this.$props);
        if (page > currentPage) {
          page = currentPage;
        } else if (page < 1) {
          page = 1;
        }
        if (!hasProp(this, "current")) {
          this.setState({
            stateCurrent: page,
            stateCurrentInputValue: page
          });
        }
        this.$emit("change.current", page, this.statePageSize);
        this.$emit("change", page, this.statePageSize);
        return page;
      }
      return this.stateCurrent;
    },
    prev: function prev2() {
      if (this.hasPrev()) {
        this.handleChange(this.stateCurrent - 1);
      }
    },
    next: function next2() {
      if (this.hasNext()) {
        this.handleChange(this.stateCurrent + 1);
      }
    },
    jumpPrev: function jumpPrev() {
      this.handleChange(this.getJumpPrevPage());
    },
    jumpNext: function jumpNext() {
      this.handleChange(this.getJumpNextPage());
    },
    hasPrev: function hasPrev() {
      return this.stateCurrent > 1;
    },
    hasNext: function hasNext() {
      return this.stateCurrent < calculatePage(void 0, this.$data, this.$props);
    },
    runIfEnter: function runIfEnter(event, callback) {
      if (event.key === "Enter" || event.charCode === 13) {
        for (var _len = arguments.length, restParams = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          restParams[_key - 2] = arguments[_key];
        }
        callback.apply(void 0, _default$5(restParams));
      }
    },
    runIfEnterPrev: function runIfEnterPrev(event) {
      this.runIfEnter(event, this.prev);
    },
    runIfEnterNext: function runIfEnterNext(event) {
      this.runIfEnter(event, this.next);
    },
    runIfEnterJumpPrev: function runIfEnterJumpPrev(event) {
      this.runIfEnter(event, this.jumpPrev);
    },
    runIfEnterJumpNext: function runIfEnterJumpNext(event) {
      this.runIfEnter(event, this.jumpNext);
    },
    handleGoTO: function handleGoTO(event) {
      if (event.keyCode === KEYCODE.ENTER || event.type === "click") {
        this.handleChange(this.stateCurrentInputValue);
      }
    }
  },
  render: function render140() {
    var _ref;
    var h = arguments[0];
    var _$props2 = this.$props, prefixCls2 = _$props2.prefixCls, disabled = _$props2.disabled;
    if (this.hideOnSinglePage === true && this.total <= this.statePageSize) {
      return null;
    }
    var props2 = this.$props;
    var locale3 = this.locale;
    var allPages = calculatePage(void 0, this.$data, this.$props);
    var pagerList = [];
    var jumpPrev2 = null;
    var jumpNext2 = null;
    var firstPager = null;
    var lastPager = null;
    var gotoButton = null;
    var goButton = this.showQuickJumper && this.showQuickJumper.goButton;
    var pageBufferSize = this.showLessItems ? 1 : 2;
    var stateCurrent2 = this.stateCurrent, statePageSize = this.statePageSize;
    var prevPage = stateCurrent2 - 1 > 0 ? stateCurrent2 - 1 : 0;
    var nextPage = stateCurrent2 + 1 < allPages ? stateCurrent2 + 1 : allPages;
    if (this.simple) {
      if (goButton) {
        if (typeof goButton === "boolean") {
          gotoButton = h(
            "button",
            {
              attrs: { type: "button" },
              on: {
                "click": this.handleGoTO,
                "keyup": this.handleGoTO
              }
            },
            [locale3.jump_to_confirm]
          );
        } else {
          gotoButton = h(
            "span",
            {
              on: {
                "click": this.handleGoTO,
                "keyup": this.handleGoTO
              }
            },
            [goButton]
          );
        }
        gotoButton = h(
          "li",
          {
            attrs: {
              title: this.showTitle ? "" + locale3.jump_to + this.stateCurrent + "/" + allPages : null
            },
            "class": prefixCls2 + "-simple-pager"
          },
          [gotoButton]
        );
      }
      var hasPrev2 = this.hasPrev();
      var hasNext2 = this.hasNext();
      return h(
        "ul",
        { "class": prefixCls2 + " " + prefixCls2 + "-simple" },
        [h(
          "li",
          {
            attrs: {
              title: this.showTitle ? locale3.prev_page : null,
              tabIndex: hasPrev2 ? 0 : null,
              "aria-disabled": !this.hasPrev()
            },
            on: {
              "click": this.prev,
              "keypress": this.runIfEnterPrev
            },
            "class": (hasPrev2 ? "" : prefixCls2 + "-disabled") + " " + prefixCls2 + "-prev"
          },
          [this.itemRender(prevPage, "prev", this.getItemIcon("prevIcon"))]
        ), h(
          "li",
          {
            attrs: {
              title: this.showTitle ? stateCurrent2 + "/" + allPages : null
            },
            "class": prefixCls2 + "-simple-pager"
          },
          [h("input", _mergeJSXProps([{
            attrs: {
              type: "text",
              size: "3"
            },
            domProps: {
              "value": this.stateCurrentInputValue
            },
            on: {
              "keydown": this.handleKeyDown,
              "keyup": this.handleKeyUp,
              "input": this.handleKeyUp
            }
          }, {
            directives: [{
              name: "ant-input"
            }]
          }])), h(
            "span",
            { "class": prefixCls2 + "-slash" },
            ["\uFF0F"]
          ), allPages]
        ), h(
          "li",
          {
            attrs: {
              title: this.showTitle ? locale3.next_page : null,
              tabIndex: this.hasNext ? 0 : null,
              "aria-disabled": !this.hasNext()
            },
            on: {
              "click": this.next,
              "keypress": this.runIfEnterNext
            },
            "class": (hasNext2 ? "" : prefixCls2 + "-disabled") + " " + prefixCls2 + "-next"
          },
          [this.itemRender(nextPage, "next", this.getItemIcon("nextIcon"))]
        ), gotoButton]
      );
    }
    if (allPages <= 5 + pageBufferSize * 2) {
      var pagerProps = {
        props: {
          locale: locale3,
          rootPrefixCls: prefixCls2,
          showTitle: props2.showTitle,
          itemRender: props2.itemRender
        },
        on: {
          click: this.handleChange,
          keypress: this.runIfEnter
        }
      };
      if (!allPages) {
        pagerList.push(h(Pager, _mergeJSXProps([pagerProps, {
          key: "noPager",
          attrs: { page: allPages },
          "class": prefixCls2 + "-disabled"
        }])));
      }
      for (var i = 1; i <= allPages; i++) {
        var active = stateCurrent2 === i;
        pagerList.push(h(Pager, _mergeJSXProps([pagerProps, {
          key: i,
          attrs: { page: i, active }
        }])));
      }
    } else {
      var prevItemTitle = this.showLessItems ? locale3.prev_3 : locale3.prev_5;
      var nextItemTitle = this.showLessItems ? locale3.next_3 : locale3.next_5;
      if (this.showPrevNextJumpers) {
        var jumpPrevClassString = prefixCls2 + "-jump-prev";
        if (props2.jumpPrevIcon) {
          jumpPrevClassString += " " + prefixCls2 + "-jump-prev-custom-icon";
        }
        jumpPrev2 = h(
          "li",
          {
            attrs: {
              title: this.showTitle ? prevItemTitle : null,
              tabIndex: "0"
            },
            key: "prev",
            on: {
              "click": this.jumpPrev,
              "keypress": this.runIfEnterJumpPrev
            },
            "class": jumpPrevClassString
          },
          [this.itemRender(this.getJumpPrevPage(), "jump-prev", this.getItemIcon("jumpPrevIcon"))]
        );
        var jumpNextClassString = prefixCls2 + "-jump-next";
        if (props2.jumpNextIcon) {
          jumpNextClassString += " " + prefixCls2 + "-jump-next-custom-icon";
        }
        jumpNext2 = h(
          "li",
          {
            attrs: {
              title: this.showTitle ? nextItemTitle : null,
              tabIndex: "0"
            },
            key: "next",
            on: {
              "click": this.jumpNext,
              "keypress": this.runIfEnterJumpNext
            },
            "class": jumpNextClassString
          },
          [this.itemRender(this.getJumpNextPage(), "jump-next", this.getItemIcon("jumpNextIcon"))]
        );
      }
      lastPager = h(Pager, {
        attrs: {
          locale: locale3,
          last: true,
          rootPrefixCls: prefixCls2,
          page: allPages,
          active: false,
          showTitle: this.showTitle,
          itemRender: this.itemRender
        },
        on: {
          "click": this.handleChange,
          "keypress": this.runIfEnter
        },
        key: allPages
      });
      firstPager = h(Pager, {
        attrs: {
          locale: locale3,
          rootPrefixCls: prefixCls2,
          page: 1,
          active: false,
          showTitle: this.showTitle,
          itemRender: this.itemRender
        },
        on: {
          "click": this.handleChange,
          "keypress": this.runIfEnter
        },
        key: 1
      });
      var left = Math.max(1, stateCurrent2 - pageBufferSize);
      var right = Math.min(stateCurrent2 + pageBufferSize, allPages);
      if (stateCurrent2 - 1 <= pageBufferSize) {
        right = 1 + pageBufferSize * 2;
      }
      if (allPages - stateCurrent2 <= pageBufferSize) {
        left = allPages - pageBufferSize * 2;
      }
      for (var _i = left; _i <= right; _i++) {
        var _active = stateCurrent2 === _i;
        pagerList.push(h(Pager, {
          attrs: {
            locale: locale3,
            rootPrefixCls: prefixCls2,
            page: _i,
            active: _active,
            showTitle: this.showTitle,
            itemRender: this.itemRender
          },
          on: {
            "click": this.handleChange,
            "keypress": this.runIfEnter
          },
          key: _i
        }));
      }
      if (stateCurrent2 - 1 >= pageBufferSize * 2 && stateCurrent2 !== 1 + 2) {
        pagerList[0] = h(Pager, {
          attrs: {
            locale: locale3,
            rootPrefixCls: prefixCls2,
            page: left,
            active: false,
            showTitle: this.showTitle,
            itemRender: this.itemRender
          },
          on: {
            "click": this.handleChange,
            "keypress": this.runIfEnter
          },
          key: left,
          "class": prefixCls2 + "-item-after-jump-prev"
        });
        pagerList.unshift(jumpPrev2);
      }
      if (allPages - stateCurrent2 >= pageBufferSize * 2 && stateCurrent2 !== allPages - 2) {
        pagerList[pagerList.length - 1] = h(Pager, {
          attrs: {
            locale: locale3,
            rootPrefixCls: prefixCls2,
            page: right,
            active: false,
            showTitle: this.showTitle,
            itemRender: this.itemRender
          },
          on: {
            "click": this.handleChange,
            "keypress": this.runIfEnter
          },
          key: right,
          "class": prefixCls2 + "-item-before-jump-next"
        });
        pagerList.push(jumpNext2);
      }
      if (left !== 1) {
        pagerList.unshift(firstPager);
      }
      if (right !== allPages) {
        pagerList.push(lastPager);
      }
    }
    var totalText = null;
    if (this.showTotal) {
      totalText = h(
        "li",
        { "class": prefixCls2 + "-total-text" },
        [this.showTotal(this.total, [this.total === 0 ? 0 : (stateCurrent2 - 1) * statePageSize + 1, stateCurrent2 * statePageSize > this.total ? this.total : stateCurrent2 * statePageSize])]
      );
    }
    var prevDisabled = !this.hasPrev() || !allPages;
    var nextDisabled = !this.hasNext() || !allPages;
    var buildOptionText = this.buildOptionText || this.$scopedSlots.buildOptionText;
    return h(
      "ul",
      {
        "class": (_ref = {}, _default$8(_ref, "" + prefixCls2, true), _default$8(_ref, prefixCls2 + "-disabled", disabled), _ref),
        attrs: {
          unselectable: "unselectable"
        },
        ref: "paginationNode"
      },
      [totalText, h(
        "li",
        {
          attrs: {
            title: this.showTitle ? locale3.prev_page : null,
            tabIndex: prevDisabled ? null : 0,
            "aria-disabled": prevDisabled
          },
          on: {
            "click": this.prev,
            "keypress": this.runIfEnterPrev
          },
          "class": (!prevDisabled ? "" : prefixCls2 + "-disabled") + " " + prefixCls2 + "-prev"
        },
        [this.itemRender(prevPage, "prev", this.getItemIcon("prevIcon"))]
      ), pagerList, h(
        "li",
        {
          attrs: {
            title: this.showTitle ? locale3.next_page : null,
            tabIndex: nextDisabled ? null : 0,
            "aria-disabled": nextDisabled
          },
          on: {
            "click": this.next,
            "keypress": this.runIfEnterNext
          },
          "class": (!nextDisabled ? "" : prefixCls2 + "-disabled") + " " + prefixCls2 + "-next"
        },
        [this.itemRender(nextPage, "next", this.getItemIcon("nextIcon"))]
      ), h(Options, {
        attrs: {
          disabled,
          locale: locale3,
          rootPrefixCls: prefixCls2,
          selectComponentClass: this.selectComponentClass,
          selectPrefixCls: this.selectPrefixCls,
          changeSize: this.showSizeChanger ? this.changePageSize : null,
          current: stateCurrent2,
          pageSize: statePageSize,
          pageSizeOptions: this.pageSizeOptions,
          buildOptionText: buildOptionText || null,
          quickGo: this.shouldDisplayQuickJumper() ? this.handleChange : null,
          goButton
        }
      })]
    );
  }
};
var PaginationProps$1 = function PaginationProps() {
  return {
    total: PropTypes.number,
    defaultCurrent: PropTypes.number,
    disabled: PropTypes.bool,
    current: PropTypes.number,
    defaultPageSize: PropTypes.number,
    pageSize: PropTypes.number,
    hideOnSinglePage: PropTypes.bool,
    showSizeChanger: PropTypes.bool,
    pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),
    buildOptionText: PropTypes.func,
    showSizeChange: PropTypes.func,
    showQuickJumper: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    showTotal: PropTypes.any,
    size: PropTypes.string,
    simple: PropTypes.bool,
    locale: PropTypes.object,
    prefixCls: PropTypes.string,
    selectPrefixCls: PropTypes.string,
    itemRender: PropTypes.any,
    role: PropTypes.string,
    showLessItems: PropTypes.bool
  };
};
var PaginationConfig = function PaginationConfig2() {
  return _default$6({}, PaginationProps$1(), {
    position: PropTypes.oneOf(["top", "bottom", "both"])
  });
};
var Pagination = {
  name: "APagination",
  model: {
    prop: "current",
    event: "change.current"
  },
  props: _default$6({}, PaginationProps$1()),
  inject: {
    configProvider: { "default": function _default82() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    getIconsProps: function getIconsProps(prefixCls2) {
      var h = this.$createElement;
      var prevIcon = h(
        "a",
        { "class": prefixCls2 + "-item-link" },
        [h(Icon$1, {
          attrs: { type: "left" }
        })]
      );
      var nextIcon = h(
        "a",
        { "class": prefixCls2 + "-item-link" },
        [h(Icon$1, {
          attrs: { type: "right" }
        })]
      );
      var jumpPrevIcon = h(
        "a",
        { "class": prefixCls2 + "-item-link" },
        [h(
          "div",
          { "class": prefixCls2 + "-item-container" },
          [h(Icon$1, {
            "class": prefixCls2 + "-item-link-icon",
            attrs: { type: "double-left" }
          }), h(
            "span",
            { "class": prefixCls2 + "-item-ellipsis" },
            ["\u2022\u2022\u2022"]
          )]
        )]
      );
      var jumpNextIcon = h(
        "a",
        { "class": prefixCls2 + "-item-link" },
        [h(
          "div",
          { "class": prefixCls2 + "-item-container" },
          [h(Icon$1, {
            "class": prefixCls2 + "-item-link-icon",
            attrs: { type: "double-right" }
          }), h(
            "span",
            { "class": prefixCls2 + "-item-ellipsis" },
            ["\u2022\u2022\u2022"]
          )]
        )]
      );
      return {
        prevIcon,
        nextIcon,
        jumpPrevIcon,
        jumpNextIcon
      };
    },
    renderPagination: function renderPagination(contextLocale) {
      var h = this.$createElement;
      var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, customizeSelectPrefixCls = _getOptionProps.selectPrefixCls, buildOptionText = _getOptionProps.buildOptionText, size = _getOptionProps.size, customLocale = _getOptionProps.locale, restProps = _default$2(_getOptionProps, ["prefixCls", "selectPrefixCls", "buildOptionText", "size", "locale"]);
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("pagination", customizePrefixCls);
      var selectPrefixCls = getPrefixCls5("select", customizeSelectPrefixCls);
      var isSmall = size === "small";
      var paginationProps = {
        props: _default$6({
          prefixCls: prefixCls2,
          selectPrefixCls
        }, restProps, this.getIconsProps(prefixCls2), {
          selectComponentClass: isSmall ? MiniSelect : Select$5,
          locale: _default$6({}, contextLocale, customLocale),
          buildOptionText: buildOptionText || this.$scopedSlots.buildOptionText
        }),
        "class": {
          mini: isSmall
        },
        on: getListeners(this)
      };
      return h(VcPagination, paginationProps);
    }
  },
  render: function render141() {
    var h = arguments[0];
    return h(LocaleReceiver, {
      attrs: {
        componentName: "Pagination",
        defaultLocale: enUS$2
      },
      scopedSlots: { "default": this.renderPagination }
    });
  }
};
Pagination.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Pagination.name, Pagination);
};
var ListItemProps = {
  prefixCls: PropTypes.string,
  extra: PropTypes.any,
  actions: PropTypes.arrayOf(PropTypes.any),
  grid: ListGridType
};
({
  avatar: PropTypes.any,
  description: PropTypes.any,
  prefixCls: PropTypes.string,
  title: PropTypes.any
});
var Meta = {
  functional: true,
  name: "AListItemMeta",
  __ANT_LIST_ITEM_META: true,
  inject: {
    configProvider: { "default": function _default83() {
      return ConfigConsumerProps;
    } }
  },
  render: function render142(h, context) {
    var props2 = context.props, slots = context.slots, listeners = context.listeners, injections = context.injections;
    var slotsMap = slots();
    var getPrefixCls5 = injections.configProvider.getPrefixCls;
    var customizePrefixCls = props2.prefixCls;
    var prefixCls2 = getPrefixCls5("list", customizePrefixCls);
    var avatar = props2.avatar || slotsMap.avatar;
    var title = props2.title || slotsMap.title;
    var description = props2.description || slotsMap.description;
    var content = h(
      "div",
      { "class": prefixCls2 + "-item-meta-content" },
      [title && h(
        "h4",
        { "class": prefixCls2 + "-item-meta-title" },
        [title]
      ), description && h(
        "div",
        { "class": prefixCls2 + "-item-meta-description" },
        [description]
      )]
    );
    return h(
      "div",
      _mergeJSXProps([{ on: listeners }, { "class": prefixCls2 + "-item-meta" }]),
      [avatar && h(
        "div",
        { "class": prefixCls2 + "-item-meta-avatar" },
        [avatar]
      ), (title || description) && content]
    );
  }
};
function getGrid(grid, t) {
  return grid[t] && Math.floor(24 / grid[t]);
}
var Item = {
  name: "AListItem",
  Meta,
  props: ListItemProps,
  inject: {
    listContext: { "default": function _default84() {
      return {};
    } },
    configProvider: { "default": function _default85() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    isItemContainsTextNodeAndNotSingular: function isItemContainsTextNodeAndNotSingular() {
      var $slots = this.$slots;
      var result = void 0;
      var children = $slots["default"] || [];
      children.forEach(function(element) {
        if (isStringElement(element) && !isEmptyElement(element)) {
          result = true;
        }
      });
      return result && children.length > 1;
    },
    isFlexMode: function isFlexMode() {
      var extra = getComponentFromProp(this, "extra");
      var itemLayout = this.listContext.itemLayout;
      if (itemLayout === "vertical") {
        return !!extra;
      }
      return !this.isItemContainsTextNodeAndNotSingular();
    }
  },
  render: function render143() {
    var h = arguments[0];
    var _listContext = this.listContext, grid = _listContext.grid, itemLayout = _listContext.itemLayout;
    var customizePrefixCls = this.prefixCls, $slots = this.$slots;
    var listeners = getListeners(this);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("list", customizePrefixCls);
    var extra = getComponentFromProp(this, "extra");
    var actions = getComponentFromProp(this, "actions");
    var actionsContent = actions && actions.length > 0 && h(
      "ul",
      { "class": prefixCls2 + "-item-action", key: "actions" },
      [actions.map(function(action, i) {
        return h(
          "li",
          { key: prefixCls2 + "-item-action-" + i },
          [action, i !== actions.length - 1 && h("em", { "class": prefixCls2 + "-item-action-split" })]
        );
      })]
    );
    var Tag2 = grid ? "div" : "li";
    var itemChildren = h(
      Tag2,
      _mergeJSXProps([{ on: listeners }, {
        "class": classNames(prefixCls2 + "-item", _default$8({}, prefixCls2 + "-item-no-flex", !this.isFlexMode()))
      }]),
      [itemLayout === "vertical" && extra ? [h(
        "div",
        { "class": prefixCls2 + "-item-main", key: "content" },
        [$slots["default"], actionsContent]
      ), h(
        "div",
        { "class": prefixCls2 + "-item-extra", key: "extra" },
        [extra]
      )] : [$slots["default"], actionsContent, cloneElement(extra, { key: "extra" })]]
    );
    var mainContent = grid ? h(
      Col$2,
      {
        attrs: {
          span: getGrid(grid, "column"),
          xs: getGrid(grid, "xs"),
          sm: getGrid(grid, "sm"),
          md: getGrid(grid, "md"),
          lg: getGrid(grid, "lg"),
          xl: getGrid(grid, "xl"),
          xxl: getGrid(grid, "xxl")
        }
      },
      [itemChildren]
    ) : itemChildren;
    return mainContent;
  }
};
var ColumnCount = ["", 1, 2, 3, 4, 6, 8, 12, 24];
var ListGridType = {
  gutter: PropTypes.number,
  column: PropTypes.oneOf(ColumnCount),
  xs: PropTypes.oneOf(ColumnCount),
  sm: PropTypes.oneOf(ColumnCount),
  md: PropTypes.oneOf(ColumnCount),
  lg: PropTypes.oneOf(ColumnCount),
  xl: PropTypes.oneOf(ColumnCount),
  xxl: PropTypes.oneOf(ColumnCount)
};
var ListSize = ["small", "default", "large"];
var ListProps = function ListProps2() {
  return {
    bordered: PropTypes.bool,
    dataSource: PropTypes.array,
    extra: PropTypes.any,
    grid: PropTypes.shape(ListGridType).loose,
    itemLayout: PropTypes.string,
    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    loadMore: PropTypes.any,
    pagination: PropTypes.oneOfType([PropTypes.shape(PaginationConfig()).loose, PropTypes.bool]),
    prefixCls: PropTypes.string,
    rowKey: PropTypes.any,
    renderItem: PropTypes.any,
    size: PropTypes.oneOf(ListSize),
    split: PropTypes.bool,
    header: PropTypes.any,
    footer: PropTypes.any,
    locale: PropTypes.object
  };
};
var List$1 = {
  Item,
  name: "AList",
  props: initDefaultProps(ListProps(), {
    dataSource: [],
    bordered: false,
    split: true,
    loading: false,
    pagination: false
  }),
  provide: function provide20() {
    return {
      listContext: this
    };
  },
  inject: {
    configProvider: { "default": function _default86() {
      return ConfigConsumerProps;
    } }
  },
  data: function data68() {
    var _this = this;
    this.keys = [];
    this.defaultPaginationProps = {
      current: 1,
      pageSize: 10,
      onChange: function onChange15(page, pageSize2) {
        var pagination2 = _this.pagination;
        _this.paginationCurrent = page;
        if (pagination2 && pagination2.onChange) {
          pagination2.onChange(page, pageSize2);
        }
      },
      total: 0
    };
    this.onPaginationChange = this.triggerPaginationEvent("onChange");
    this.onPaginationShowSizeChange = this.triggerPaginationEvent("onShowSizeChange");
    var pagination = this.$props.pagination;
    var paginationObj = pagination && (typeof pagination === "undefined" ? "undefined" : _default$7(pagination)) === "object" ? pagination : {};
    return {
      paginationCurrent: paginationObj.defaultCurrent || 1,
      paginationSize: paginationObj.defaultPageSize || 10
    };
  },
  methods: {
    triggerPaginationEvent: function triggerPaginationEvent(eventName) {
      var _this2 = this;
      return function(page, pageSize2) {
        var pagination = _this2.$props.pagination;
        _this2.paginationCurrent = page;
        _this2.paginationSize = pageSize2;
        if (pagination && pagination[eventName]) {
          pagination[eventName](page, pageSize2);
        }
      };
    },
    renderItem2: function renderItem2(item, index2) {
      var $scopedSlots = this.$scopedSlots, rowKey = this.rowKey;
      var renderItem = this.renderItem || $scopedSlots.renderItem;
      if (!renderItem)
        return null;
      var key2 = void 0;
      if (typeof rowKey === "function") {
        key2 = rowKey(item);
      } else if (typeof rowKey === "string") {
        key2 = item[rowKey];
      } else {
        key2 = item.key;
      }
      if (!key2) {
        key2 = "list-item-" + index2;
      }
      this.keys[index2] = key2;
      return renderItem(item, index2);
    },
    isSomethingAfterLastItem: function isSomethingAfterLastItem() {
      var pagination = this.pagination;
      var loadMore = getComponentFromProp(this, "loadMore");
      var footer = getComponentFromProp(this, "footer");
      return !!(loadMore || pagination || footer);
    },
    renderEmpty: function renderEmpty3(prefixCls2, _renderEmpty) {
      var h = this.$createElement;
      var locale3 = this.locale;
      return h(
        "div",
        { "class": prefixCls2 + "-empty-text" },
        [locale3 && locale3.emptyText || _renderEmpty(h, "List")]
      );
    }
  },
  render: function render144() {
    var _classNames, _this3 = this;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, bordered = this.bordered, split = this.split, itemLayout = this.itemLayout, pagination = this.pagination, grid = this.grid, _dataSource = this.dataSource, dataSource3 = _dataSource === void 0 ? [] : _dataSource, size = this.size, loading2 = this.loading, $slots = this.$slots, paginationCurrent = this.paginationCurrent, paginationSize = this.paginationSize;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("list", customizePrefixCls);
    var loadMore = getComponentFromProp(this, "loadMore");
    var footer = getComponentFromProp(this, "footer");
    var header = getComponentFromProp(this, "header");
    var children = filterEmpty($slots["default"] || []);
    var loadingProp = loading2;
    if (typeof loadingProp === "boolean") {
      loadingProp = {
        spinning: loadingProp
      };
    }
    var isLoading = loadingProp && loadingProp.spinning;
    var sizeCls = "";
    switch (size) {
      case "large":
        sizeCls = "lg";
        break;
      case "small":
        sizeCls = "sm";
        break;
    }
    var classString = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-vertical", itemLayout === "vertical"), _default$8(_classNames, prefixCls2 + "-" + sizeCls, sizeCls), _default$8(_classNames, prefixCls2 + "-split", split), _default$8(_classNames, prefixCls2 + "-bordered", bordered), _default$8(_classNames, prefixCls2 + "-loading", isLoading), _default$8(_classNames, prefixCls2 + "-grid", grid), _default$8(_classNames, prefixCls2 + "-something-after-last-item", this.isSomethingAfterLastItem()), _classNames));
    var paginationProps = _default$6({}, this.defaultPaginationProps, {
      total: dataSource3.length,
      current: paginationCurrent,
      pageSize: paginationSize
    }, pagination || {});
    var largestPage = Math.ceil(paginationProps.total / paginationProps.pageSize);
    if (paginationProps.current > largestPage) {
      paginationProps.current = largestPage;
    }
    var cls = paginationProps["class"], style3 = paginationProps.style, restProps = _default$2(paginationProps, ["class", "style"]);
    var paginationContent = pagination ? h(
      "div",
      { "class": prefixCls2 + "-pagination" },
      [h(Pagination, {
        props: omit$2(restProps, ["onChange"]),
        "class": cls,
        style: style3,
        on: {
          change: this.onPaginationChange,
          showSizeChange: this.onPaginationShowSizeChange
        }
      })]
    ) : null;
    var splitDataSource = [].concat(_default$5(dataSource3));
    if (pagination) {
      if (dataSource3.length > (paginationProps.current - 1) * paginationProps.pageSize) {
        splitDataSource = [].concat(_default$5(dataSource3)).splice((paginationProps.current - 1) * paginationProps.pageSize, paginationProps.pageSize);
      }
    }
    var childrenContent = void 0;
    childrenContent = isLoading && h("div", { style: { minHeight: 53 } });
    if (splitDataSource.length > 0) {
      var items = splitDataSource.map(function(item, index2) {
        return _this3.renderItem2(item, index2);
      });
      var childrenList = items.map(function(child, index2) {
        return cloneElement(child, {
          key: _this3.keys[index2]
        });
      });
      childrenContent = grid ? h(
        Row,
        {
          attrs: { gutter: grid.gutter }
        },
        [childrenList]
      ) : h(
        "ul",
        { "class": prefixCls2 + "-items" },
        [childrenList]
      );
    } else if (!children.length && !isLoading) {
      var renderEmpty4 = this.configProvider.renderEmpty;
      childrenContent = this.renderEmpty(prefixCls2, renderEmpty4);
    }
    var paginationPosition = paginationProps.position || "bottom";
    return h(
      "div",
      _mergeJSXProps([{ "class": classString }, { on: getListeners(this) }]),
      [(paginationPosition === "top" || paginationPosition === "both") && paginationContent, header && h(
        "div",
        { "class": prefixCls2 + "-header" },
        [header]
      ), h(
        Spin,
        { props: loadingProp },
        [childrenContent, children]
      ), footer && h(
        "div",
        { "class": prefixCls2 + "-footer" },
        [footer]
      ), loadMore || (paginationPosition === "bottom" || paginationPosition === "both") && paginationContent]
    );
  }
};
List$1.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(List$1.name, List$1);
  Vue2.component(List$1.Item.name, List$1.Item);
  Vue2.component(List$1.Item.Meta.name, List$1.Item.Meta);
};
var List$2 = List$1;
var runtimeLocale = _default$6({}, defaultLocale.Modal);
function changeConfirmLocale(newLocale) {
  if (newLocale) {
    runtimeLocale = _default$6({}, runtimeLocale, newLocale);
  } else {
    runtimeLocale = _default$6({}, defaultLocale.Modal);
  }
}
function getConfirmLocale() {
  return runtimeLocale;
}
var ANT_MARK = "internalMark";
function setMomentLocale(locale3) {
  if (locale3 && locale3.locale) {
    interopDefault(moment).locale(locale3.locale);
  } else {
    interopDefault(moment).locale("en");
  }
}
var LocaleProvider = {
  name: "ALocaleProvider",
  props: {
    locale: PropTypes.object.def(function() {
      return {};
    }),
    _ANT_MARK__: PropTypes.string
  },
  data: function data69() {
    warning$4(this._ANT_MARK__ === ANT_MARK, "LocaleProvider", "`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead");
    return {
      antLocale: _default$6({}, this.locale, {
        exist: true
      })
    };
  },
  provide: function provide21() {
    return {
      localeData: this.$data
    };
  },
  watch: {
    locale: function locale2(val) {
      this.antLocale = _default$6({}, this.locale, {
        exist: true
      });
      setMomentLocale(val);
      changeConfirmLocale(val && val.Modal);
    }
  },
  created: function created10() {
    var locale3 = this.locale;
    setMomentLocale(locale3);
    changeConfirmLocale(locale3 && locale3.Modal);
  },
  beforeDestroy: function beforeDestroy32() {
    changeConfirmLocale();
  },
  render: function render145() {
    return this.$slots["default"] ? this.$slots["default"][0] : null;
  }
};
LocaleProvider.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(LocaleProvider.name, LocaleProvider);
};
var LocaleProvider$1 = LocaleProvider;
function noop$k() {
}
var Notice = {
  mixins: [BaseMixin],
  props: {
    duration: PropTypes.number.def(1.5),
    closable: PropTypes.bool,
    prefixCls: PropTypes.string,
    update: PropTypes.bool,
    closeIcon: PropTypes.any
  },
  watch: {
    duration: function duration() {
      this.restartCloseTimer();
    }
  },
  mounted: function mounted44() {
    this.startCloseTimer();
  },
  updated: function updated28() {
    if (this.update) {
      this.restartCloseTimer();
    }
  },
  beforeDestroy: function beforeDestroy33() {
    this.clearCloseTimer();
    this.willDestroy = true;
  },
  methods: {
    close: function close3(e) {
      if (e) {
        e.stopPropagation();
      }
      this.clearCloseTimer();
      this.__emit("close");
    },
    startCloseTimer: function startCloseTimer() {
      var _this = this;
      this.clearCloseTimer();
      if (!this.willDestroy && this.duration) {
        this.closeTimer = setTimeout(function() {
          _this.close();
        }, this.duration * 1e3);
      }
    },
    clearCloseTimer: function clearCloseTimer() {
      if (this.closeTimer) {
        clearTimeout(this.closeTimer);
        this.closeTimer = null;
      }
    },
    restartCloseTimer: function restartCloseTimer() {
      this.clearCloseTimer();
      this.startCloseTimer();
    }
  },
  render: function render146() {
    var _className;
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, closable = this.closable, clearCloseTimer2 = this.clearCloseTimer, startCloseTimer2 = this.startCloseTimer, $slots = this.$slots, close7 = this.close;
    var componentClass = prefixCls2 + "-notice";
    var className = (_className = {}, _default$8(_className, "" + componentClass, 1), _default$8(_className, componentClass + "-closable", closable), _className);
    var style3 = getStyle$1(this);
    var closeIcon = getComponentFromProp(this, "closeIcon");
    return h(
      "div",
      {
        "class": className,
        style: style3 || { right: "50%" },
        on: {
          "mouseenter": clearCloseTimer2,
          "mouseleave": startCloseTimer2,
          "click": getListeners(this).click || noop$k
        }
      },
      [h(
        "div",
        { "class": componentClass + "-content" },
        [$slots["default"]]
      ), closable ? h(
        "a",
        {
          attrs: { tabIndex: "0" },
          on: {
            "click": close7
          },
          "class": componentClass + "-close"
        },
        [closeIcon || h("span", { "class": componentClass + "-close-x" })]
      ) : null]
    );
  }
};
function noop$j() {
}
var seed = 0;
var now$1 = Date.now();
function getUuid() {
  return "rcNotification_" + now$1 + "_" + seed++;
}
var Notification = {
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string.def("rc-notification"),
    transitionName: PropTypes.string,
    animation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).def("fade"),
    maxCount: PropTypes.number,
    closeIcon: PropTypes.any
  },
  data: function data70() {
    return {
      notices: []
    };
  },
  methods: {
    getTransitionName: function getTransitionName4() {
      var props2 = this.$props;
      var transitionName2 = props2.transitionName;
      if (!transitionName2 && props2.animation) {
        transitionName2 = props2.prefixCls + "-" + props2.animation;
      }
      return transitionName2;
    },
    add: function add3(notice2) {
      var key2 = notice2.key = notice2.key || getUuid();
      var maxCount2 = this.$props.maxCount;
      this.setState(function(previousState) {
        var notices = previousState.notices;
        var noticeIndex = notices.map(function(v) {
          return v.key;
        }).indexOf(key2);
        var updatedNotices = notices.concat();
        if (noticeIndex !== -1) {
          updatedNotices.splice(noticeIndex, 1, notice2);
        } else {
          if (maxCount2 && notices.length >= maxCount2) {
            notice2.updateKey = updatedNotices[0].updateKey || updatedNotices[0].key;
            updatedNotices.shift();
          }
          updatedNotices.push(notice2);
        }
        return {
          notices: updatedNotices
        };
      });
    },
    remove: function remove(key2) {
      this.setState(function(previousState) {
        return {
          notices: previousState.notices.filter(function(notice2) {
            return notice2.key !== key2;
          })
        };
      });
    }
  },
  render: function render147(h) {
    var _this = this;
    var prefixCls2 = this.prefixCls, notices = this.notices, remove3 = this.remove, getTransitionName6 = this.getTransitionName;
    var transitionProps = getTransitionProps$1(getTransitionName6());
    var noticeNodes = notices.map(function(notice2, index2) {
      var update = Boolean(index2 === notices.length - 1 && notice2.updateKey);
      var key2 = notice2.updateKey ? notice2.updateKey : notice2.key;
      var content = notice2.content, duration2 = notice2.duration, closable = notice2.closable, onClose = notice2.onClose, style4 = notice2.style, className2 = notice2["class"];
      var close7 = createChainedFunction(remove3.bind(_this, notice2.key), onClose);
      var noticeProps = {
        props: {
          prefixCls: prefixCls2,
          duration: duration2,
          closable,
          update,
          closeIcon: getComponentFromProp(_this, "closeIcon")
        },
        on: {
          close: close7,
          click: notice2.onClick || noop$j
        },
        style: style4,
        "class": className2,
        key: key2
      };
      return h(
        Notice,
        noticeProps,
        [typeof content === "function" ? content(h) : content]
      );
    });
    var className = _default$8({}, prefixCls2, 1);
    var style3 = getStyle$1(this);
    return h(
      "div",
      {
        "class": className,
        style: style3 || {
          top: "65px",
          left: "50%"
        }
      },
      [h(
        "transition-group",
        transitionProps,
        [noticeNodes]
      )]
    );
  }
};
Notification.newInstance = function newNotificationInstance(properties, callback) {
  var _ref = properties || {}, getContainer5 = _ref.getContainer, style3 = _ref.style, className = _ref["class"], props2 = _default$2(_ref, ["getContainer", "style", "class"]);
  var div = document.createElement("div");
  if (getContainer5) {
    var root2 = getContainer5();
    root2.appendChild(div);
  } else {
    document.body.appendChild(div);
  }
  var V = Base.Vue || Vue;
  new V({
    el: div,
    mounted: function mounted70() {
      var self2 = this;
      this.$nextTick(function() {
        callback({
          notice: function notice2(noticeProps) {
            self2.$refs.notification.add(noticeProps);
          },
          removeNotice: function removeNotice(key2) {
            self2.$refs.notification.remove(key2);
          },
          component: self2,
          destroy: function destroy3() {
            self2.$destroy();
            self2.$el.parentNode.removeChild(self2.$el);
          }
        });
      });
    },
    render: function render249() {
      var h = arguments[0];
      var p = {
        props: props2,
        ref: "notification",
        style: style3,
        "class": className
      };
      return h(Notification, p);
    }
  });
};
var Notification$1 = Notification;
var defaultDuration$1 = 3;
var defaultTop$1 = void 0;
var messageInstance = void 0;
var key = 1;
var prefixCls = "ant-message";
var transitionName = "move-up";
var getContainer2 = function getContainer3() {
  return document.body;
};
var maxCount = void 0;
function getMessageInstance(callback) {
  if (messageInstance) {
    callback(messageInstance);
    return;
  }
  Notification$1.newInstance({
    prefixCls,
    transitionName,
    style: { top: defaultTop$1 },
    getContainer: getContainer2,
    maxCount
  }, function(instance) {
    if (messageInstance) {
      callback(messageInstance);
      return;
    }
    messageInstance = instance;
    callback(instance);
  });
}
function notice$1(args) {
  var duration2 = args.duration !== void 0 ? args.duration : defaultDuration$1;
  var iconType = {
    info: "info-circle",
    success: "check-circle",
    error: "close-circle",
    warning: "exclamation-circle",
    loading: "loading"
  }[args.type];
  var target2 = args.key || key++;
  var closePromise = new Promise(function(resolve) {
    var callback = function callback2() {
      if (typeof args.onClose === "function") {
        args.onClose();
      }
      return resolve(true);
    };
    getMessageInstance(function(instance) {
      instance.notice({
        key: target2,
        duration: duration2,
        style: {},
        content: function content(h) {
          var iconNode = h(Icon$1, {
            attrs: { type: iconType, theme: iconType === "loading" ? "outlined" : "filled" }
          });
          var switchIconNode = iconType ? iconNode : "";
          return h(
            "div",
            {
              "class": prefixCls + "-custom-content" + (args.type ? " " + prefixCls + "-" + args.type : "")
            },
            [args.icon ? typeof args.icon === "function" ? args.icon(h) : args.icon : switchIconNode, h("span", [typeof args.content === "function" ? args.content(h) : args.content])]
          );
        },
        onClose: callback
      });
    });
  });
  var result = function result2() {
    if (messageInstance) {
      messageInstance.removeNotice(target2);
    }
  };
  result.then = function(filled, rejected) {
    return closePromise.then(filled, rejected);
  };
  result.promise = closePromise;
  return result;
}
function isArgsProps(content) {
  return Object.prototype.toString.call(content) === "[object Object]" && !!content.content;
}
var api$1 = {
  open: notice$1,
  config: function config(options2) {
    if (options2.top !== void 0) {
      defaultTop$1 = options2.top;
      messageInstance = null;
    }
    if (options2.duration !== void 0) {
      defaultDuration$1 = options2.duration;
    }
    if (options2.prefixCls !== void 0) {
      prefixCls = options2.prefixCls;
    }
    if (options2.getContainer !== void 0) {
      getContainer2 = options2.getContainer;
    }
    if (options2.transitionName !== void 0) {
      transitionName = options2.transitionName;
      messageInstance = null;
    }
    if (options2.maxCount !== void 0) {
      maxCount = options2.maxCount;
      messageInstance = null;
    }
  },
  destroy: function destroy() {
    if (messageInstance) {
      messageInstance.destroy();
      messageInstance = null;
    }
  }
};
["success", "info", "warning", "error", "loading"].forEach(function(type3) {
  api$1[type3] = function(content, duration2, onClose) {
    if (isArgsProps(content)) {
      return api$1.open(_default$6({}, content, { type: type3 }));
    }
    if (typeof duration2 === "function") {
      onClose = duration2;
      duration2 = void 0;
    }
    return api$1.open({ content, duration: duration2, type: type3, onClose });
  };
});
api$1.warn = api$1.warning;
var message = api$1;
function getBeforeSelectionText(input) {
  var selectionStart = input.selectionStart;
  return input.value.slice(0, selectionStart);
}
function lower(char) {
  return (char || "").toLowerCase();
}
function getLastMeasureIndex(text) {
  var prefix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  var prefixList = Array.isArray(prefix) ? prefix : [prefix];
  return prefixList.reduce(function(lastMatch, prefixStr) {
    var lastIndex = text.lastIndexOf(prefixStr);
    if (lastIndex > lastMatch.location) {
      return {
        location: lastIndex,
        prefix: prefixStr
      };
    }
    return lastMatch;
  }, { location: -1, prefix: "" });
}
function reduceText(text, targetText, split) {
  var firstChar = text[0];
  if (!firstChar || firstChar === split) {
    return text;
  }
  var restText = text;
  var targetTextLen = targetText.length;
  for (var i = 0; i < targetTextLen; i += 1) {
    if (lower(restText[i]) !== lower(targetText[i])) {
      restText = restText.slice(i);
      break;
    } else if (i === targetTextLen - 1) {
      restText = restText.slice(targetTextLen);
    }
  }
  return restText;
}
function replaceWithMeasure(text, measureConfig) {
  var measureLocation = measureConfig.measureLocation, prefix = measureConfig.prefix, targetText = measureConfig.targetText, selectionStart = measureConfig.selectionStart, split = measureConfig.split;
  var beforeMeasureText = text.slice(0, measureLocation);
  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {
    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);
  }
  if (beforeMeasureText) {
    beforeMeasureText = "" + beforeMeasureText + split;
  }
  var restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);
  if (restText.slice(0, split.length) === split) {
    restText = restText.slice(split.length);
  }
  var connectedStartText = "" + beforeMeasureText + prefix + targetText + split;
  return {
    text: "" + connectedStartText + restText,
    selectionLocation: connectedStartText.length
  };
}
function setInputSelection(input, location) {
  input.setSelectionRange(location, location);
  input.blur();
  input.focus();
}
function validateSearch() {
  var text = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var props2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var split = props2.split;
  return !split || text.indexOf(split) === -1;
}
function filterOption() {
  var input = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$value = _ref.value, value27 = _ref$value === void 0 ? "" : _ref$value;
  var lowerCase = input.toLowerCase();
  return value27.toLowerCase().indexOf(lowerCase) !== -1;
}
var OptionProps = {
  value: PropTypes.string,
  disabled: PropTypes.boolean,
  children: PropTypes.any
};
var Option$1 = {
  name: "Option",
  props: OptionProps,
  render: function render148() {
    return null;
  }
};
function noop$i() {
}
var DropdownMenu = {
  name: "DropdownMenu",
  props: {
    prefixCls: PropTypes.string,
    options: PropTypes.arrayOf(OptionProps)
  },
  inject: {
    mentionsContext: { "default": {} }
  },
  render: function render149() {
    var h = arguments[0];
    var _mentionsContext = this.mentionsContext, notFoundContent = _mentionsContext.notFoundContent, activeIndex = _mentionsContext.activeIndex, setActiveIndex2 = _mentionsContext.setActiveIndex, selectOption2 = _mentionsContext.selectOption, _mentionsContext$onFo = _mentionsContext.onFocus, onFocus8 = _mentionsContext$onFo === void 0 ? noop$i : _mentionsContext$onFo, _mentionsContext$onBl = _mentionsContext.onBlur, onBlur10 = _mentionsContext$onBl === void 0 ? noop$i : _mentionsContext$onBl;
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, options2 = _$props.options;
    var activeOption = options2[activeIndex] || {};
    return h(
      Menu$3,
      {
        props: {
          prefixCls: prefixCls2 + "-menu",
          activeKey: activeOption.value
        },
        on: {
          select: function select2(_ref) {
            var key2 = _ref.key;
            var option = options2.find(function(_ref2) {
              var value27 = _ref2.value;
              return value27 === key2;
            });
            selectOption2(option);
          },
          focus: onFocus8,
          blur: onBlur10
        }
      },
      [options2.map(function(option, index2) {
        var value27 = option.value, disabled = option.disabled, children = option.children;
        return h(
          MenuItem$1,
          {
            key: value27,
            attrs: {
              disabled
            },
            on: {
              "mouseenter": function mouseenter() {
                setActiveIndex2(index2);
              }
            }
          },
          [children]
        );
      }), !options2.length && h(
        MenuItem$1,
        {
          attrs: { disabled: true }
        },
        [notFoundContent]
      )]
    );
  }
};
var PlaceMent = ["top", "bottom"];
var BUILT_IN_PLACEMENTS$1 = {
  bottomRight: {
    points: ["tl", "br"],
    offset: [0, 4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  },
  topRight: {
    points: ["bl", "tr"],
    offset: [0, -4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  }
};
var KeywordTrigger = {
  name: "KeywordTrigger",
  props: {
    loading: PropTypes.bool,
    options: PropTypes.arrayOf(OptionProps),
    prefixCls: PropTypes.string,
    placement: PropTypes.oneOf(PlaceMent),
    visible: PropTypes.bool,
    transitionName: PropTypes.string,
    getPopupContainer: PropTypes.func
  },
  methods: {
    getDropdownPrefix: function getDropdownPrefix() {
      return this.$props.prefixCls + "-dropdown";
    },
    getDropdownElement: function getDropdownElement2() {
      var h = this.$createElement;
      var options2 = this.$props.options;
      return h(DropdownMenu, {
        attrs: { prefixCls: this.getDropdownPrefix(), options: options2 }
      });
    }
  },
  render: function render150() {
    var h = arguments[0];
    var _$props = this.$props, visible11 = _$props.visible, placement2 = _$props.placement, transitionName2 = _$props.transitionName, getPopupContainer = _$props.getPopupContainer;
    var $slots = this.$slots;
    var children = $slots["default"];
    var popupElement = this.getDropdownElement();
    return h(
      Trigger,
      {
        attrs: {
          prefixCls: this.getDropdownPrefix(),
          popupVisible: visible11,
          popup: popupElement,
          popupPlacement: placement2 === "top" ? "topRight" : "bottomRight",
          popupTransitionName: transitionName2,
          builtinPlacements: BUILT_IN_PLACEMENTS$1,
          getPopupContainer
        }
      },
      [children]
    );
  }
};
var mentionsProps = {
  autoFocus: PropTypes.bool,
  prefix: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
  prefixCls: PropTypes.string,
  value: PropTypes.string,
  defaultValue: PropTypes.string,
  disabled: PropTypes.bool,
  notFoundContent: PropTypes.any,
  split: PropTypes.string,
  transitionName: PropTypes.string,
  placement: PropTypes.oneOf(PlaceMent),
  character: PropTypes.any,
  characterRender: PropTypes.func,
  filterOption: PropTypes.func,
  validateSearch: PropTypes.func,
  getPopupContainer: PropTypes.func
};
var vcMentionsProps = _default$6({}, mentionsProps, {
  children: PropTypes.any
});
var defaultProps$1 = {
  prefix: "@",
  split: " ",
  validateSearch,
  filterOption
};
initDefaultProps(vcMentionsProps, defaultProps$1);
function noop$h() {
}
var Mentions$2 = {
  name: "Mentions",
  mixins: [BaseMixin],
  inheritAttrs: false,
  model: {
    prop: "value",
    event: "change"
  },
  props: initDefaultProps(vcMentionsProps, defaultProps$1),
  provide: function provide22() {
    return {
      mentionsContext: this
    };
  },
  data: function data71() {
    var _$props = this.$props, _$props$value = _$props.value, value27 = _$props$value === void 0 ? "" : _$props$value, _$props$defaultValue = _$props.defaultValue, defaultValue = _$props$defaultValue === void 0 ? "" : _$props$defaultValue;
    warning$3(this.$props.children);
    return {
      _value: !hasProp(this, "value") ? defaultValue : value27,
      measuring: false,
      measureLocation: 0,
      measureText: null,
      measurePrefix: "",
      activeIndex: 0,
      isFocus: false
    };
  },
  watch: {
    value: function value25(val) {
      this.$data._value = val;
    }
  },
  updated: function updated29() {
    var _this = this;
    this.$nextTick(function() {
      var measuring = _this.$data.measuring;
      if (measuring) {
        _this.$refs.measure.scrollTop = _this.$refs.textarea.scrollTop;
      }
    });
  },
  methods: {
    triggerChange: function triggerChange(value27) {
      var props2 = getOptionProps(this);
      if (!("value" in props2)) {
        this.setState({ _value: value27 });
      } else {
        this.$forceUpdate();
      }
      this.$emit("change", value27);
    },
    onChange: function onChange7(_ref) {
      var _ref$target = _ref.target, value27 = _ref$target.value, composing = _ref$target.composing, isComposing = _ref.isComposing;
      if (isComposing || composing)
        return;
      this.triggerChange(value27);
    },
    onKeyDown: function onKeyDown18(event) {
      var which = event.which;
      var _$data = this.$data, activeIndex = _$data.activeIndex, measuring = _$data.measuring;
      if (!measuring) {
        return;
      }
      if (which === KeyCode$2.UP || which === KeyCode$2.DOWN) {
        var optionLen = this.getOptions().length;
        var offset4 = which === KeyCode$2.UP ? -1 : 1;
        var newActiveIndex = (activeIndex + offset4 + optionLen) % optionLen;
        this.setState({
          activeIndex: newActiveIndex
        });
        event.preventDefault();
      } else if (which === KeyCode$2.ESC) {
        this.stopMeasure();
      } else if (which === KeyCode$2.ENTER) {
        event.preventDefault();
        var options2 = this.getOptions();
        if (!options2.length) {
          this.stopMeasure();
          return;
        }
        var option = options2[activeIndex];
        this.selectOption(option);
      }
    },
    onKeyUp: function onKeyUp2(event) {
      var key2 = event.key, which = event.which;
      var _$data2 = this.$data, prevMeasureText = _$data2.measureText, measuring = _$data2.measuring;
      var _$props2 = this.$props, _$props2$prefix = _$props2.prefix, prefix = _$props2$prefix === void 0 ? "" : _$props2$prefix, validateSearch2 = _$props2.validateSearch;
      var target2 = event.target;
      var selectionStartText = getBeforeSelectionText(target2);
      var _getLastMeasureIndex = getLastMeasureIndex(selectionStartText, prefix), measureIndex = _getLastMeasureIndex.location, measurePrefix = _getLastMeasureIndex.prefix;
      if ([KeyCode$2.ESC, KeyCode$2.UP, KeyCode$2.DOWN, KeyCode$2.ENTER].indexOf(which) !== -1) {
        return;
      }
      if (measureIndex !== -1) {
        var measureText = selectionStartText.slice(measureIndex + measurePrefix.length);
        var validateMeasure = validateSearch2(measureText, this.$props);
        var matchOption = !!this.getOptions(measureText).length;
        if (validateMeasure) {
          if (key2 === measurePrefix || measuring || measureText !== prevMeasureText && matchOption) {
            this.startMeasure(measureText, measurePrefix, measureIndex);
          }
        } else if (measuring) {
          this.stopMeasure();
        }
        if (validateMeasure) {
          this.$emit("search", measureText, measurePrefix);
        }
      } else if (measuring) {
        this.stopMeasure();
      }
    },
    onInputFocus: function onInputFocus(event) {
      this.onFocus(event);
    },
    onInputBlur: function onInputBlur(event) {
      this.onBlur(event);
    },
    onDropdownFocus: function onDropdownFocus() {
      this.onFocus();
    },
    onDropdownBlur: function onDropdownBlur() {
      this.onBlur();
    },
    onFocus: function onFocus5(event) {
      window.clearTimeout(this.focusId);
      var isFocus = this.$data.isFocus;
      if (!isFocus && event) {
        this.$emit("focus", event);
      }
      this.setState({ isFocus: true });
    },
    onBlur: function onBlur7(event) {
      var _this2 = this;
      this.focusId = window.setTimeout(function() {
        _this2.setState({ isFocus: false });
        _this2.stopMeasure();
        _this2.$emit("blur", event);
      }, 0);
    },
    selectOption: function selectOption(option) {
      var _this3 = this;
      var _$data3 = this.$data, value27 = _$data3._value, measureLocation = _$data3.measureLocation, measurePrefix = _$data3.measurePrefix;
      var split = this.$props.split;
      var _option$value = option.value, mentionValue = _option$value === void 0 ? "" : _option$value;
      var _replaceWithMeasure = replaceWithMeasure(value27, {
        measureLocation,
        targetText: mentionValue,
        prefix: measurePrefix,
        selectionStart: this.$refs.textarea.selectionStart,
        split
      }), text = _replaceWithMeasure.text, selectionLocation = _replaceWithMeasure.selectionLocation;
      this.triggerChange(text);
      this.stopMeasure(function() {
        setInputSelection(_this3.$refs.textarea, selectionLocation);
      });
      this.$emit("select", option, measurePrefix);
    },
    setActiveIndex: function setActiveIndex(activeIndex) {
      this.setState({
        activeIndex
      });
    },
    getOptions: function getOptions3(measureText) {
      var targetMeasureText = measureText || this.$data.measureText || "";
      var _$props3 = this.$props, filterOption2 = _$props3.filterOption, _$props3$children = _$props3.children, children = _$props3$children === void 0 ? [] : _$props3$children;
      var list = (Array.isArray(children) ? children : [children]).map(function(item) {
        var children2 = getSlots(item)["default"];
        return _default$6({}, getOptionProps(item), { children: children2 });
      }).filter(function(option) {
        if (filterOption2 === false) {
          return true;
        }
        return filterOption2(targetMeasureText, option);
      });
      return list;
    },
    startMeasure: function startMeasure(measureText, measurePrefix, measureLocation) {
      this.setState({
        measuring: true,
        measureText,
        measurePrefix,
        measureLocation,
        activeIndex: 0
      });
    },
    stopMeasure: function stopMeasure(callback) {
      this.setState({
        measuring: false,
        measureLocation: 0,
        measureText: null
      }, callback);
    },
    focus: function focus21() {
      this.$refs.textarea.focus();
    },
    blur: function blur18() {
      this.$refs.textarea.blur();
    }
  },
  render: function render151() {
    var h = arguments[0];
    var _$data4 = this.$data, value27 = _$data4._value, measureLocation = _$data4.measureLocation, measurePrefix = _$data4.measurePrefix, measuring = _$data4.measuring;
    var _getOptionProps = getOptionProps(this), prefixCls2 = _getOptionProps.prefixCls, placement2 = _getOptionProps.placement, transitionName2 = _getOptionProps.transitionName;
    _getOptionProps.autoFocus;
    _getOptionProps.notFoundContent;
    var getPopupContainer = _getOptionProps.getPopupContainer, restProps = _default$2(_getOptionProps, ["prefixCls", "placement", "transitionName", "autoFocus", "notFoundContent", "getPopupContainer"]);
    var inputProps2 = omit$2(restProps, ["value", "defaultValue", "prefix", "split", "children", "validateSearch", "filterOption"]);
    var options2 = measuring ? this.getOptions() : [];
    return h(
      "div",
      { "class": prefixCls2 },
      [h("textarea", _mergeJSXProps([{
        ref: "textarea"
      }, {
        directives: [{ name: "ant-input" }],
        attrs: _default$6({}, inputProps2, this.$attrs),
        domProps: {
          value: value27
        },
        on: _default$6({}, getListeners(this), {
          select: noop$h,
          change: noop$h,
          input: this.onChange,
          keydown: this.onKeyDown,
          keyup: this.onKeyUp,
          blur: this.onInputBlur
        })
      }])), measuring && h(
        "div",
        { ref: "measure", "class": prefixCls2 + "-measure" },
        [value27.slice(0, measureLocation), h(
          KeywordTrigger,
          {
            attrs: {
              prefixCls: prefixCls2,
              transitionName: transitionName2,
              placement: placement2,
              options: options2,
              visible: true,
              getPopupContainer
            }
          },
          [h("span", [measurePrefix])]
        ), value27.slice(measureLocation + measurePrefix.length)]
      )]
    );
  }
};
var Mentions$3 = Mentions$2;
Mentions$3.Option = Option$1;
var Option = Mentions$3.Option;
function loadingFilterOption() {
  return true;
}
function getMentions() {
  var value27 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var config2 = arguments[1];
  var _ref = config2 || {}, _ref$prefix = _ref.prefix, prefix = _ref$prefix === void 0 ? "@" : _ref$prefix, _ref$split = _ref.split, split = _ref$split === void 0 ? " " : _ref$split;
  var prefixList = Array.isArray(prefix) ? prefix : [prefix];
  return value27.split(split).map(function() {
    var str = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    var hitPrefix = null;
    prefixList.some(function(prefixStr) {
      var startStr = str.slice(0, prefixStr.length);
      if (startStr === prefixStr) {
        hitPrefix = prefixStr;
        return true;
      }
      return false;
    });
    if (hitPrefix !== null) {
      return {
        prefix: hitPrefix,
        value: str.slice(hitPrefix.length)
      };
    }
    return null;
  }).filter(function(entity) {
    return !!entity && !!entity.value;
  });
}
var Mentions = {
  name: "AMentions",
  mixins: [BaseMixin],
  inheritAttrs: false,
  model: {
    prop: "value",
    event: "change"
  },
  Option: _default$6({}, Option, { name: "AMentionsOption" }),
  getMentions,
  props: _default$6({}, mentionsProps, {
    loading: PropTypes.bool
  }),
  inject: {
    configProvider: { "default": function _default87() {
      return ConfigConsumerProps;
    } }
  },
  data: function data72() {
    return {
      focused: false
    };
  },
  mounted: function mounted45() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus) {
        _this.focus();
      }
    });
  },
  methods: {
    onFocus: function onFocus6() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.$emit.apply(this, ["focus"].concat(_default$5(args)));
      this.setState({
        focused: true
      });
    },
    onBlur: function onBlur8() {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      this.$emit.apply(this, ["blur"].concat(_default$5(args)));
      this.setState({
        focused: false
      });
    },
    onSelect: function onSelect8() {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      this.$emit.apply(this, ["select"].concat(_default$5(args)));
      this.setState({
        focused: true
      });
    },
    onChange: function onChange8(val) {
      this.$emit("change", val);
    },
    getNotFoundContent: function getNotFoundContent2(renderEmpty4) {
      var h = this.$createElement;
      var notFoundContent = getComponentFromProp(this, "notFoundContent");
      if (notFoundContent !== void 0) {
        return notFoundContent;
      }
      return renderEmpty4(h, "Select");
    },
    getOptions: function getOptions4() {
      var h = this.$createElement;
      var loading2 = this.$props.loading;
      var children = filterEmpty(this.$slots["default"] || []);
      if (loading2) {
        return h(
          Option,
          {
            attrs: { value: "ANTD_SEARCHING", disabled: true }
          },
          [h(Spin, {
            attrs: { size: "small" }
          })]
        );
      }
      return children;
    },
    getFilterOption: function getFilterOption() {
      var _$props = this.$props, filterOption2 = _$props.filterOption, loading2 = _$props.loading;
      if (loading2) {
        return loadingFilterOption;
      }
      return filterOption2;
    },
    focus: function focus22() {
      this.$refs.vcMentions.focus();
    },
    blur: function blur19() {
      this.$refs.vcMentions.blur();
    }
  },
  render: function render152() {
    var _classNames;
    var h = arguments[0];
    var focused = this.$data.focused;
    var _configProvider = this.configProvider, getPrefixCls5 = _configProvider.getPrefixCls, renderEmpty4 = _configProvider.renderEmpty;
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, disabled = _getOptionProps.disabled, getPopupContainer = _getOptionProps.getPopupContainer, restProps = _default$2(_getOptionProps, ["prefixCls", "disabled", "getPopupContainer"]);
    var prefixCls2 = getPrefixCls5("mentions", customizePrefixCls);
    var otherProps = omit$2(restProps, ["loading"]);
    var mergedClassName = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-disabled", disabled), _default$8(_classNames, prefixCls2 + "-focused", focused), _classNames));
    var mentionsProps2 = {
      props: _default$6({
        prefixCls: prefixCls2,
        notFoundContent: this.getNotFoundContent(renderEmpty4)
      }, otherProps, {
        disabled,
        filterOption: this.getFilterOption(),
        getPopupContainer,
        children: this.getOptions()
      }),
      "class": mergedClassName,
      attrs: _default$6({ rows: 1 }, this.$attrs),
      on: _default$6({}, getListeners(this), {
        change: this.onChange,
        select: this.onSelect,
        focus: this.onFocus,
        blur: this.onBlur
      }),
      ref: "vcMentions"
    };
    return h(Mentions$3, mentionsProps2);
  }
};
Mentions.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Mentions.name, Mentions);
  Vue2.component(Mentions.Option.name, Mentions.Option);
};
var Mentions$1 = Mentions;
var ILazyRenderBoxPropTypes = {
  visible: PropTypes.bool,
  hiddenClassName: PropTypes.string,
  forceRender: PropTypes.bool
};
var LazyRenderBox = {
  props: ILazyRenderBoxPropTypes,
  render: function render153() {
    var h = arguments[0];
    return h(
      "div",
      { on: getListeners(this) },
      [this.$slots["default"]]
    );
  }
};
var cached = void 0;
function getScrollBarSize(fresh) {
  if (fresh || cached === void 0) {
    var inner = document.createElement("div");
    inner.style.width = "100%";
    inner.style.height = "200px";
    var outer = document.createElement("div");
    var outerStyle = outer.style;
    outerStyle.position = "absolute";
    outerStyle.top = 0;
    outerStyle.left = 0;
    outerStyle.pointerEvents = "none";
    outerStyle.visibility = "hidden";
    outerStyle.width = "200px";
    outerStyle.height = "150px";
    outerStyle.overflow = "hidden";
    outer.appendChild(inner);
    document.body.appendChild(outer);
    var widthContained = inner.offsetWidth;
    outer.style.overflow = "scroll";
    var widthScroll = inner.offsetWidth;
    if (widthContained === widthScroll) {
      widthScroll = outer.clientWidth;
    }
    document.body.removeChild(outer);
    cached = widthContained - widthScroll;
  }
  return cached;
}
var _switchScrollingEffect = function(close7) {
  var bodyIsOverflowing = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth;
  if (!bodyIsOverflowing) {
    return;
  }
  if (close7) {
    document.body.style.position = "";
    document.body.style.width = "";
    return;
  }
  var scrollBarSize = getScrollBarSize();
  if (scrollBarSize) {
    document.body.style.position = "relative";
    document.body.style.width = "calc(100% - " + scrollBarSize + "px)";
  }
};
function IDialogPropTypes$2() {
  return {
    keyboard: PropTypes.bool,
    mask: PropTypes.bool,
    afterClose: PropTypes.func,
    closable: PropTypes.bool,
    maskClosable: PropTypes.bool,
    visible: PropTypes.bool,
    destroyOnClose: PropTypes.bool,
    mousePosition: PropTypes.shape({
      x: PropTypes.number,
      y: PropTypes.number
    }).loose,
    title: PropTypes.any,
    footer: PropTypes.any,
    transitionName: PropTypes.string,
    maskTransitionName: PropTypes.string,
    animation: PropTypes.any,
    maskAnimation: PropTypes.any,
    wrapStyle: PropTypes.object,
    bodyStyle: PropTypes.object,
    maskStyle: PropTypes.object,
    prefixCls: PropTypes.string,
    wrapClassName: PropTypes.string,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    zIndex: PropTypes.number,
    bodyProps: PropTypes.any,
    maskProps: PropTypes.any,
    wrapProps: PropTypes.any,
    getContainer: PropTypes.any,
    dialogStyle: PropTypes.object.def(function() {
      return {};
    }),
    dialogClass: PropTypes.string.def(""),
    closeIcon: PropTypes.any,
    forceRender: PropTypes.bool,
    getOpenCount: PropTypes.func,
    focusTriggerAfterClose: PropTypes.bool
  };
}
var IDialogPropTypes$1 = IDialogPropTypes$2();
var uuid = 0;
function noop$g() {
}
function getScroll$1(w, top) {
  var ret = w["page" + (top ? "Y" : "X") + "Offset"];
  var method3 = "scroll" + (top ? "Top" : "Left");
  if (typeof ret !== "number") {
    var d = w.document;
    ret = d.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d.body[method3];
    }
  }
  return ret;
}
function setTransformOrigin(node, value27) {
  var style3 = node.style;
  ["Webkit", "Moz", "Ms", "ms"].forEach(function(prefix) {
    style3[prefix + "TransformOrigin"] = value27;
  });
  style3["transformOrigin"] = value27;
}
function offset3(el) {
  var rect = el.getBoundingClientRect();
  var pos = {
    left: rect.left,
    top: rect.top
  };
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScroll$1(w);
  pos.top += getScroll$1(w, true);
  return pos;
}
var cacheOverflow$1 = {};
var Dialog = {
  mixins: [BaseMixin],
  props: initDefaultProps(IDialogPropTypes$1, {
    mask: true,
    visible: false,
    keyboard: true,
    closable: true,
    maskClosable: true,
    destroyOnClose: false,
    prefixCls: "rc-dialog",
    getOpenCount: function getOpenCount() {
      return null;
    },
    focusTriggerAfterClose: true
  }),
  data: function data73() {
    return {
      destroyPopup: false
    };
  },
  provide: function provide23() {
    return {
      dialogContext: this
    };
  },
  watch: {
    visible: function visible6(val) {
      var _this = this;
      if (val) {
        this.destroyPopup = false;
      }
      this.$nextTick(function() {
        _this.updatedCallback(!val);
      });
    }
  },
  beforeMount: function beforeMount3() {
    this.inTransition = false;
    this.titleId = "rcDialogTitle" + uuid++;
  },
  mounted: function mounted46() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.updatedCallback(false);
      if ((_this2.forceRender || _this2.getContainer === false && !_this2.visible) && _this2.$refs.wrap) {
        _this2.$refs.wrap.style.display = "none";
      }
    });
  },
  beforeDestroy: function beforeDestroy34() {
    var visible11 = this.visible, getOpenCount2 = this.getOpenCount;
    if ((visible11 || this.inTransition) && !getOpenCount2()) {
      this.switchScrollingEffect();
    }
    clearTimeout(this.timeoutId);
  },
  methods: {
    getDialogWrap: function getDialogWrap() {
      return this.$refs.wrap;
    },
    updatedCallback: function updatedCallback(visible11) {
      var mousePosition2 = this.mousePosition;
      var mask = this.mask, focusTriggerAfterClose = this.focusTriggerAfterClose;
      if (this.visible) {
        if (!visible11) {
          this.openTime = Date.now();
          this.switchScrollingEffect();
          this.tryFocus();
          var dialogNode = this.$refs.dialog.$el;
          if (mousePosition2) {
            var elOffset = offset3(dialogNode);
            setTransformOrigin(dialogNode, mousePosition2.x - elOffset.left + "px " + (mousePosition2.y - elOffset.top) + "px");
          } else {
            setTransformOrigin(dialogNode, "");
          }
        }
      } else if (visible11) {
        this.inTransition = true;
        if (mask && this.lastOutSideFocusNode && focusTriggerAfterClose) {
          try {
            this.lastOutSideFocusNode.focus();
          } catch (e) {
            this.lastOutSideFocusNode = null;
          }
          this.lastOutSideFocusNode = null;
        }
      }
    },
    tryFocus: function tryFocus() {
      if (!contains(this.$refs.wrap, document.activeElement)) {
        this.lastOutSideFocusNode = document.activeElement;
        this.$refs.sentinelStart.focus();
      }
    },
    onAnimateLeave: function onAnimateLeave() {
      var afterClose = this.afterClose, destroyOnClose = this.destroyOnClose;
      if (this.$refs.wrap) {
        this.$refs.wrap.style.display = "none";
      }
      if (destroyOnClose) {
        this.destroyPopup = true;
      }
      this.inTransition = false;
      this.switchScrollingEffect();
      if (afterClose) {
        afterClose();
      }
    },
    onDialogMouseDown: function onDialogMouseDown() {
      this.dialogMouseDown = true;
    },
    onMaskMouseUp: function onMaskMouseUp() {
      var _this3 = this;
      if (this.dialogMouseDown) {
        this.timeoutId = setTimeout(function() {
          _this3.dialogMouseDown = false;
        }, 0);
      }
    },
    onMaskClick: function onMaskClick(e) {
      if (Date.now() - this.openTime < 300) {
        return;
      }
      if (e.target === e.currentTarget && !this.dialogMouseDown) {
        this.close(e);
      }
    },
    onKeydown: function onKeydown(e) {
      var props2 = this.$props;
      if (props2.keyboard && e.keyCode === KeyCode$2.ESC) {
        e.stopPropagation();
        this.close(e);
        return;
      }
      if (props2.visible) {
        if (e.keyCode === KeyCode$2.TAB) {
          var activeElement = document.activeElement;
          var sentinelStart = this.$refs.sentinelStart;
          if (e.shiftKey) {
            if (activeElement === sentinelStart) {
              this.$refs.sentinelEnd.focus();
            }
          } else if (activeElement === this.$refs.sentinelEnd) {
            sentinelStart.focus();
          }
        }
      }
    },
    getDialogElement: function getDialogElement() {
      var h = this.$createElement;
      var closable = this.closable, prefixCls2 = this.prefixCls, width = this.width, height3 = this.height, title = this.title, tempFooter = this.footer, bodyStyle = this.bodyStyle, visible11 = this.visible, bodyProps = this.bodyProps, forceRender = this.forceRender, dialogStyle = this.dialogStyle, dialogClass = this.dialogClass;
      var dest = _default$6({}, dialogStyle);
      if (width !== void 0) {
        dest.width = typeof width === "number" ? width + "px" : width;
      }
      if (height3 !== void 0) {
        dest.height = typeof height3 === "number" ? height3 + "px" : height3;
      }
      var footer = void 0;
      if (tempFooter) {
        footer = h(
          "div",
          { key: "footer", "class": prefixCls2 + "-footer", ref: "footer" },
          [tempFooter]
        );
      }
      var header = void 0;
      if (title) {
        header = h(
          "div",
          { key: "header", "class": prefixCls2 + "-header", ref: "header" },
          [h(
            "div",
            {
              "class": prefixCls2 + "-title",
              attrs: { id: this.titleId }
            },
            [title]
          )]
        );
      }
      var closer = void 0;
      if (closable) {
        var closeIcon = getComponentFromProp(this, "closeIcon");
        closer = h(
          "button",
          {
            attrs: {
              type: "button",
              "aria-label": "Close"
            },
            key: "close",
            on: {
              "click": this.close || noop$g
            },
            "class": prefixCls2 + "-close"
          },
          [closeIcon || h("span", { "class": prefixCls2 + "-close-x" })]
        );
      }
      var style3 = dest;
      var sentinelStyle2 = { width: 0, height: 0, overflow: "hidden" };
      var cls = _default$8({}, prefixCls2, true);
      var transitionName2 = this.getTransitionName();
      var dialogElement = h(
        LazyRenderBox,
        {
          directives: [{
            name: "show",
            value: visible11
          }],
          key: "dialog-element",
          attrs: {
            role: "document",
            forceRender
          },
          ref: "dialog",
          style: style3,
          "class": [cls, dialogClass],
          on: {
            "mousedown": this.onDialogMouseDown
          }
        },
        [h("div", {
          attrs: { tabIndex: 0, "aria-hidden": "true" },
          ref: "sentinelStart",
          style: sentinelStyle2
        }), h(
          "div",
          { "class": prefixCls2 + "-content" },
          [closer, header, h(
            "div",
            _mergeJSXProps([{ key: "body", "class": prefixCls2 + "-body", style: bodyStyle, ref: "body" }, bodyProps]),
            [this.$slots["default"]]
          ), footer]
        ), h("div", {
          attrs: { tabIndex: 0, "aria-hidden": "true" },
          ref: "sentinelEnd",
          style: sentinelStyle2
        })]
      );
      var dialogTransitionProps = getTransitionProps$1(transitionName2, {
        afterLeave: this.onAnimateLeave
      });
      return h(
        "transition",
        _mergeJSXProps([{ key: "dialog" }, dialogTransitionProps]),
        [visible11 || !this.destroyPopup ? dialogElement : null]
      );
    },
    getZIndexStyle: function getZIndexStyle2() {
      var style3 = {};
      var props2 = this.$props;
      if (props2.zIndex !== void 0) {
        style3.zIndex = props2.zIndex;
      }
      return style3;
    },
    getWrapStyle: function getWrapStyle() {
      return _default$6({}, this.getZIndexStyle(), this.wrapStyle);
    },
    getMaskStyle: function getMaskStyle() {
      return _default$6({}, this.getZIndexStyle(), this.maskStyle);
    },
    getMaskElement: function getMaskElement2() {
      var h = this.$createElement;
      var props2 = this.$props;
      var maskElement = void 0;
      if (props2.mask) {
        var maskTransition = this.getMaskTransitionName();
        maskElement = h(LazyRenderBox, _mergeJSXProps([{
          directives: [{
            name: "show",
            value: props2.visible
          }],
          style: this.getMaskStyle(),
          key: "mask",
          "class": props2.prefixCls + "-mask"
        }, props2.maskProps]));
        if (maskTransition) {
          var maskTransitionProps = getTransitionProps$1(maskTransition);
          maskElement = h(
            "transition",
            _mergeJSXProps([{ key: "mask" }, maskTransitionProps]),
            [maskElement]
          );
        }
      }
      return maskElement;
    },
    getMaskTransitionName: function getMaskTransitionName2() {
      var props2 = this.$props;
      var transitionName2 = props2.maskTransitionName;
      var animation2 = props2.maskAnimation;
      if (!transitionName2 && animation2) {
        transitionName2 = props2.prefixCls + "-" + animation2;
      }
      return transitionName2;
    },
    getTransitionName: function getTransitionName5() {
      var props2 = this.$props;
      var transitionName2 = props2.transitionName;
      var animation2 = props2.animation;
      if (!transitionName2 && animation2) {
        transitionName2 = props2.prefixCls + "-" + animation2;
      }
      return transitionName2;
    },
    switchScrollingEffect: function switchScrollingEffect() {
      var getOpenCount2 = this.getOpenCount;
      var openCount2 = getOpenCount2();
      if (openCount2 === 1) {
        if (cacheOverflow$1.hasOwnProperty("overflowX")) {
          return;
        }
        cacheOverflow$1 = {
          overflowX: document.body.style.overflowX,
          overflowY: document.body.style.overflowY,
          overflow: document.body.style.overflow
        };
        _switchScrollingEffect();
        document.body.style.overflow = "hidden";
      } else if (!openCount2) {
        if (cacheOverflow$1.overflow !== void 0) {
          document.body.style.overflow = cacheOverflow$1.overflow;
        }
        if (cacheOverflow$1.overflowX !== void 0) {
          document.body.style.overflowX = cacheOverflow$1.overflowX;
        }
        if (cacheOverflow$1.overflowY !== void 0) {
          document.body.style.overflowY = cacheOverflow$1.overflowY;
        }
        cacheOverflow$1 = {};
        _switchScrollingEffect(true);
      }
    },
    close: function close4(e) {
      this.__emit("close", e);
    }
  },
  render: function render154() {
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, maskClosable = this.maskClosable, visible11 = this.visible, wrapClassName = this.wrapClassName, title = this.title, wrapProps = this.wrapProps;
    var style3 = this.getWrapStyle();
    if (visible11) {
      style3.display = null;
    }
    return h(
      "div",
      { "class": prefixCls2 + "-root" },
      [this.getMaskElement(), h(
        "div",
        _mergeJSXProps([{
          attrs: {
            tabIndex: -1,
            role: "dialog",
            "aria-labelledby": title ? this.titleId : null
          },
          on: {
            "keydown": this.onKeydown,
            "click": maskClosable ? this.onMaskClick : noop$g,
            "mouseup": maskClosable ? this.onMaskMouseUp : noop$g
          },
          "class": prefixCls2 + "-wrap " + (wrapClassName || ""),
          ref: "wrap",
          style: style3
        }, wrapProps]),
        [this.getDialogElement()]
      )]
    );
  }
};
function setStyle2(style3) {
  var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _options$element = options2.element, element = _options$element === void 0 ? document.body : _options$element;
  var oldStyle = {};
  var styleKeys = Object.keys(style3);
  styleKeys.forEach(function(key2) {
    oldStyle[key2] = element.style[key2];
  });
  styleKeys.forEach(function(key2) {
    element.style[key2] = style3[key2];
  });
  return oldStyle;
}
var Portal$1 = {
  name: "Portal",
  props: {
    getContainer: PropTypes.func.isRequired,
    children: PropTypes.any.isRequired,
    didUpdate: PropTypes.func
  },
  mounted: function mounted47() {
    this.createContainer();
  },
  updated: function updated30() {
    var _this = this;
    var didUpdate = this.$props.didUpdate;
    if (didUpdate) {
      this.$nextTick(function() {
        didUpdate(_this.$props);
      });
    }
  },
  beforeDestroy: function beforeDestroy35() {
    this.removeContainer();
  },
  methods: {
    createContainer: function createContainer() {
      this._container = this.$props.getContainer();
      this.$forceUpdate();
    },
    removeContainer: function removeContainer2() {
      if (this._container && this._container.parentNode) {
        this._container.parentNode.removeChild(this._container);
      }
    }
  },
  render: function render155() {
    if (this._container) {
      return cloneElement(this.$props.children, {
        directives: [{
          name: "ant-portal",
          value: this._container
        }]
      });
    }
    return null;
  }
};
var openCount = 0;
var windowIsUndefined$1 = !(typeof window !== "undefined" && window.document && window.document.createElement);
var cacheOverflow = {};
var Portal = {
  name: "PortalWrapper",
  props: {
    wrapperClassName: PropTypes.string,
    forceRender: PropTypes.bool,
    getContainer: PropTypes.any,
    children: PropTypes.func,
    visible: PropTypes.bool
  },
  data: function data74() {
    var visible11 = this.$props.visible;
    openCount = visible11 ? openCount + 1 : openCount;
    return {};
  },
  updated: function updated31() {
    this.setWrapperClassName();
  },
  watch: {
    visible: function visible7(val) {
      openCount = val ? openCount + 1 : openCount - 1;
    },
    getContainer: function getContainer4(_getContainer, prevGetContainer) {
      var getContainerIsFunc = typeof _getContainer === "function" && typeof prevGetContainer === "function";
      if (getContainerIsFunc ? _getContainer.toString() !== prevGetContainer.toString() : _getContainer !== prevGetContainer) {
        this.removeCurrentContainer(false);
      }
    }
  },
  beforeDestroy: function beforeDestroy36() {
    var visible11 = this.$props.visible;
    openCount = visible11 && openCount ? openCount - 1 : openCount;
    this.removeCurrentContainer(visible11);
  },
  methods: {
    getParent: function getParent3() {
      var getContainer5 = this.$props.getContainer;
      if (getContainer5) {
        if (typeof getContainer5 === "string") {
          return document.querySelectorAll(getContainer5)[0];
        }
        if (typeof getContainer5 === "function") {
          return getContainer5();
        }
        if ((typeof getContainer5 === "undefined" ? "undefined" : _default$7(getContainer5)) === "object" && getContainer5 instanceof window.HTMLElement) {
          return getContainer5;
        }
      }
      return document.body;
    },
    getDomContainer: function getDomContainer() {
      if (windowIsUndefined$1) {
        return null;
      }
      if (!this.container) {
        this.container = document.createElement("div");
        var parent2 = this.getParent();
        if (parent2) {
          parent2.appendChild(this.container);
        }
      }
      this.setWrapperClassName();
      return this.container;
    },
    setWrapperClassName: function setWrapperClassName() {
      var wrapperClassName = this.$props.wrapperClassName;
      if (this.container && wrapperClassName && wrapperClassName !== this.container.className) {
        this.container.className = wrapperClassName;
      }
    },
    savePortal: function savePortal(c) {
      this._component = c;
    },
    removeCurrentContainer: function removeCurrentContainer() {
      this.container = null;
      this._component = null;
    },
    switchScrollingEffect: function switchScrollingEffect2() {
      if (openCount === 1 && !Object.keys(cacheOverflow).length) {
        _switchScrollingEffect();
        cacheOverflow = setStyle2({
          overflow: "hidden",
          overflowX: "hidden",
          overflowY: "hidden"
        });
      } else if (!openCount) {
        setStyle2(cacheOverflow);
        cacheOverflow = {};
        _switchScrollingEffect(true);
      }
    }
  },
  render: function render156() {
    var h = arguments[0];
    var _$props = this.$props, children = _$props.children, forceRender = _$props.forceRender, visible11 = _$props.visible;
    var portal = null;
    var childProps = {
      getOpenCount: function getOpenCount2() {
        return openCount;
      },
      getContainer: this.getDomContainer,
      switchScrollingEffect: this.switchScrollingEffect
    };
    if (forceRender || visible11 || this._component) {
      portal = h(Portal$1, _mergeJSXProps([{
        attrs: {
          getContainer: this.getDomContainer,
          children: children(childProps)
        }
      }, {
        directives: [{
          name: "ant-ref",
          value: this.savePortal
        }]
      }]));
    }
    return portal;
  }
};
var IDialogPropTypes = IDialogPropTypes$2();
var DialogWrap = {
  inheritAttrs: false,
  props: _default$6({}, IDialogPropTypes, {
    visible: IDialogPropTypes.visible.def(false)
  }),
  render: function render157() {
    var _this = this;
    var h = arguments[0];
    var _$props = this.$props, visible11 = _$props.visible, getContainer5 = _$props.getContainer, forceRender = _$props.forceRender;
    var dialogProps = {
      props: this.$props,
      attrs: this.$attrs,
      ref: "_component",
      key: "dialog",
      on: getListeners(this)
    };
    if (getContainer5 === false) {
      return h(
        Dialog,
        _mergeJSXProps([dialogProps, {
          attrs: {
            getOpenCount: function getOpenCount2() {
              return 2;
            }
          }
        }]),
        [this.$slots["default"]]
      );
    }
    return h(Portal, {
      attrs: {
        visible: visible11,
        forceRender,
        getContainer: getContainer5,
        children: function children(childProps) {
          dialogProps.props = _default$6({}, dialogProps.props, childProps);
          return h(
            Dialog,
            dialogProps,
            [_this.$slots["default"]]
          );
        }
      }
    });
  }
};
var DialogWrap$1 = DialogWrap;
var ButtonType$1 = buttonTypes().type;
var mousePosition = null;
var getClickPosition = function getClickPosition2(e) {
  mousePosition = {
    x: e.pageX,
    y: e.pageY
  };
  setTimeout(function() {
    return mousePosition = null;
  }, 100);
};
if (typeof window !== "undefined" && window.document && window.document.documentElement) {
  addEventListenerWrap(document.documentElement, "click", getClickPosition, true);
}
function noop$f() {
}
var modalProps = function modalProps2() {
  var defaultProps2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var props2 = {
    prefixCls: PropTypes.string,
    visible: PropTypes.bool,
    confirmLoading: PropTypes.bool,
    title: PropTypes.any,
    closable: PropTypes.bool,
    closeIcon: PropTypes.any,
    afterClose: PropTypes.func.def(noop$f),
    centered: PropTypes.bool,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    footer: PropTypes.any,
    okText: PropTypes.any,
    okType: ButtonType$1,
    cancelText: PropTypes.any,
    icon: PropTypes.any,
    maskClosable: PropTypes.bool,
    forceRender: PropTypes.bool,
    okButtonProps: PropTypes.object,
    cancelButtonProps: PropTypes.object,
    destroyOnClose: PropTypes.bool,
    wrapClassName: PropTypes.string,
    maskTransitionName: PropTypes.string,
    transitionName: PropTypes.string,
    getContainer: PropTypes.func,
    zIndex: PropTypes.number,
    bodyStyle: PropTypes.object,
    maskStyle: PropTypes.object,
    mask: PropTypes.bool,
    keyboard: PropTypes.bool,
    wrapProps: PropTypes.object,
    focusTriggerAfterClose: PropTypes.bool,
    dialogStyle: PropTypes.object.def(function() {
      return {};
    })
  };
  return initDefaultProps(props2, defaultProps2);
};
var destroyFns = [];
var Modal = {
  name: "AModal",
  inheritAttrs: false,
  model: {
    prop: "visible",
    event: "change"
  },
  props: modalProps({
    width: 520,
    transitionName: "zoom",
    maskTransitionName: "fade",
    confirmLoading: false,
    visible: false,
    okType: "primary"
  }),
  data: function data75() {
    return {
      sVisible: !!this.visible
    };
  },
  watch: {
    visible: function visible8(val) {
      this.sVisible = val;
    }
  },
  inject: {
    configProvider: { "default": function _default88() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    handleCancel: function handleCancel(e) {
      this.$emit("cancel", e);
      this.$emit("change", false);
    },
    handleOk: function handleOk(e) {
      this.$emit("ok", e);
    },
    renderFooter: function renderFooter3(locale3) {
      var h = this.$createElement;
      var okType = this.okType, confirmLoading = this.confirmLoading;
      var cancelBtnProps = mergeProps({ on: { click: this.handleCancel } }, this.cancelButtonProps || {});
      var okBtnProps = mergeProps({
        on: { click: this.handleOk },
        props: {
          type: okType,
          loading: confirmLoading
        }
      }, this.okButtonProps || {});
      return h("div", [h(
        Button$1,
        cancelBtnProps,
        [getComponentFromProp(this, "cancelText") || locale3.cancelText]
      ), h(
        Button$1,
        okBtnProps,
        [getComponentFromProp(this, "okText") || locale3.okText]
      )]);
    }
  },
  render: function render158() {
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, visible11 = this.sVisible, wrapClassName = this.wrapClassName, centered = this.centered, getContainer5 = this.getContainer, $slots = this.$slots, $scopedSlots = this.$scopedSlots, $attrs = this.$attrs;
    var children = $scopedSlots["default"] ? $scopedSlots["default"]() : $slots["default"];
    var _configProvider = this.configProvider, getPrefixCls5 = _configProvider.getPrefixCls, getContextPopupContainer = _configProvider.getPopupContainer;
    var prefixCls2 = getPrefixCls5("modal", customizePrefixCls);
    var defaultFooter = h(LocaleReceiver, {
      attrs: {
        componentName: "Modal",
        defaultLocale: getConfirmLocale()
      },
      scopedSlots: { "default": this.renderFooter }
    });
    var closeIcon = getComponentFromProp(this, "closeIcon");
    var closeIconToRender = h(
      "span",
      { "class": prefixCls2 + "-close-x" },
      [closeIcon || h(Icon$1, {
        "class": prefixCls2 + "-close-icon",
        attrs: { type: "close" }
      })]
    );
    var footer = getComponentFromProp(this, "footer");
    var title = getComponentFromProp(this, "title");
    var dialogProps = {
      props: _default$6({}, this.$props, {
        getContainer: getContainer5 === void 0 ? getContextPopupContainer : getContainer5,
        prefixCls: prefixCls2,
        wrapClassName: classNames(_default$8({}, prefixCls2 + "-centered", !!centered), wrapClassName),
        title,
        footer: footer === void 0 ? defaultFooter : footer,
        visible: visible11,
        mousePosition,
        closeIcon: closeIconToRender
      }),
      on: _default$6({}, getListeners(this), {
        close: this.handleCancel
      }),
      "class": getClass(this),
      style: getStyle$1(this),
      attrs: $attrs
    };
    return h(
      DialogWrap$1,
      dialogProps,
      [children]
    );
  }
};
var ButtonType = buttonTypes().type;
var ActionButtonProps = {
  type: ButtonType,
  actionFn: PropTypes.func,
  closeModal: PropTypes.func,
  autoFocus: PropTypes.bool,
  buttonProps: PropTypes.object
};
var ActionButton = {
  mixins: [BaseMixin],
  props: ActionButtonProps,
  data: function data76() {
    return {
      loading: false
    };
  },
  mounted: function mounted48() {
    var _this = this;
    if (this.autoFocus) {
      this.timeoutId = setTimeout(function() {
        return _this.$el.focus();
      });
    }
  },
  beforeDestroy: function beforeDestroy37() {
    clearTimeout(this.timeoutId);
  },
  methods: {
    onClick: function onClick9() {
      var _this2 = this;
      var actionFn = this.actionFn, closeModal = this.closeModal;
      if (actionFn) {
        var ret = void 0;
        if (actionFn.length) {
          ret = actionFn(closeModal);
        } else {
          ret = actionFn();
          if (!ret) {
            closeModal();
          }
        }
        if (ret && ret.then) {
          this.setState({ loading: true });
          ret.then(function() {
            closeModal.apply(void 0, arguments);
          }, function(e) {
            console.error(e);
            _this2.setState({ loading: false });
          });
        }
      } else {
        closeModal();
      }
    }
  },
  render: function render159() {
    var h = arguments[0];
    var type3 = this.type, $slots = this.$slots, loading2 = this.loading, buttonProps = this.buttonProps;
    return h(
      Button$1,
      _mergeJSXProps([{
        attrs: { type: type3, loading: loading2 },
        on: {
          "click": this.onClick
        }
      }, buttonProps]),
      [$slots["default"]]
    );
  }
};
var ConfirmDialog = {
  functional: true,
  render: function render160(h, context) {
    var props2 = context.props;
    var onCancel2 = props2.onCancel, onOk3 = props2.onOk, close7 = props2.close, zIndex = props2.zIndex, afterClose = props2.afterClose, visible11 = props2.visible, keyboard = props2.keyboard, centered = props2.centered, getContainer5 = props2.getContainer, maskStyle = props2.maskStyle, okButtonProps = props2.okButtonProps, cancelButtonProps = props2.cancelButtonProps, _props$iconType = props2.iconType, iconType = _props$iconType === void 0 ? "question-circle" : _props$iconType, _props$closable = props2.closable, closable = _props$closable === void 0 ? false : _props$closable;
    warning$4(!("iconType" in props2), "Modal", "The property 'iconType' is deprecated. Use the property 'icon' instead.");
    var icon = props2.icon ? props2.icon : iconType;
    var okType = props2.okType || "primary";
    var prefixCls2 = props2.prefixCls || "ant-modal";
    var contentPrefixCls = prefixCls2 + "-confirm";
    var okCancel = "okCancel" in props2 ? props2.okCancel : true;
    var width = props2.width || 416;
    var style3 = props2.style || {};
    var mask = props2.mask === void 0 ? true : props2.mask;
    var maskClosable = props2.maskClosable === void 0 ? false : props2.maskClosable;
    var runtimeLocale2 = getConfirmLocale();
    var okText = props2.okText || (okCancel ? runtimeLocale2.okText : runtimeLocale2.justOkText);
    var cancelText = props2.cancelText || runtimeLocale2.cancelText;
    var autoFocusButton = props2.autoFocusButton === null ? false : props2.autoFocusButton || "ok";
    var transitionName2 = props2.transitionName || "zoom";
    var maskTransitionName = props2.maskTransitionName || "fade";
    var classString = classNames(contentPrefixCls, contentPrefixCls + "-" + props2.type, prefixCls2 + "-" + props2.type, props2["class"]);
    var cancelButton = okCancel && h(
      ActionButton,
      {
        attrs: {
          actionFn: onCancel2,
          closeModal: close7,
          autoFocus: autoFocusButton === "cancel",
          buttonProps: cancelButtonProps
        }
      },
      [cancelText]
    );
    var iconNode = typeof icon === "string" ? h(Icon$1, {
      attrs: { type: icon }
    }) : icon(h);
    return h(
      Modal,
      {
        attrs: {
          prefixCls: prefixCls2,
          wrapClassName: classNames(_default$8({}, contentPrefixCls + "-centered", !!centered)),
          visible: visible11,
          closable,
          title: "",
          transitionName: transitionName2,
          footer: "",
          maskTransitionName,
          mask,
          maskClosable,
          maskStyle,
          width,
          zIndex,
          afterClose,
          keyboard,
          centered,
          getContainer: getContainer5
        },
        "class": classString,
        on: {
          "cancel": function cancel(e) {
            return close7({ triggerCancel: true }, e);
          }
        },
        style: style3
      },
      [h(
        "div",
        { "class": contentPrefixCls + "-body-wrapper" },
        [h(
          "div",
          { "class": contentPrefixCls + "-body" },
          [iconNode, props2.title === void 0 ? null : h(
            "span",
            { "class": contentPrefixCls + "-title" },
            [typeof props2.title === "function" ? props2.title(h) : props2.title]
          ), h(
            "div",
            { "class": contentPrefixCls + "-content" },
            [typeof props2.content === "function" ? props2.content(h) : props2.content]
          )]
        ), h(
          "div",
          { "class": contentPrefixCls + "-btns" },
          [cancelButton, h(
            ActionButton,
            {
              attrs: {
                type: okType,
                actionFn: onOk3,
                closeModal: close7,
                autoFocus: autoFocusButton === "ok",
                buttonProps: okButtonProps
              }
            },
            [okText]
          )]
        )]
      )]
    );
  }
};
function confirm$1(config2) {
  var div = document.createElement("div");
  var el = document.createElement("div");
  div.appendChild(el);
  document.body.appendChild(div);
  var currentConfig = _default$6({}, omit$2(config2, ["parentContext"]), { close: close7, visible: true });
  var confirmDialogInstance = null;
  var confirmDialogProps = { props: {} };
  function close7() {
    destroy3.apply(void 0, arguments);
  }
  function update(newConfig) {
    currentConfig = _default$6({}, currentConfig, newConfig);
    confirmDialogProps.props = currentConfig;
  }
  function destroy3() {
    if (confirmDialogInstance && div.parentNode) {
      confirmDialogInstance.$destroy();
      confirmDialogInstance = null;
      div.parentNode.removeChild(div);
    }
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var triggerCancel = args.some(function(param) {
      return param && param.triggerCancel;
    });
    if (config2.onCancel && triggerCancel) {
      config2.onCancel.apply(config2, args);
    }
    for (var i = 0; i < destroyFns.length; i++) {
      var fn = destroyFns[i];
      if (fn === close7) {
        destroyFns.splice(i, 1);
        break;
      }
    }
  }
  function render249(props2) {
    confirmDialogProps.props = props2;
    var V = Base.Vue || Vue;
    return new V({
      el,
      parent: config2.parentContext,
      data: function data109() {
        return { confirmDialogProps };
      },
      render: function render250() {
        var h = arguments[0];
        var cdProps = _default$6({}, this.confirmDialogProps);
        return h(ConfirmDialog, cdProps);
      }
    });
  }
  confirmDialogInstance = render249(currentConfig);
  destroyFns.push(close7);
  return {
    destroy: close7,
    update
  };
}
var info = function info2(props2) {
  var config2 = _default$6({
    type: "info",
    icon: function icon(h) {
      return h(Icon$1, {
        attrs: { type: "info-circle" }
      });
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var success = function success2(props2) {
  var config2 = _default$6({
    type: "success",
    icon: function icon(h) {
      return h(Icon$1, {
        attrs: { type: "check-circle" }
      });
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var error = function error2(props2) {
  var config2 = _default$6({
    type: "error",
    icon: function icon(h) {
      return h(Icon$1, {
        attrs: { type: "close-circle" }
      });
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var warning2 = function warning3(props2) {
  var config2 = _default$6({
    type: "warning",
    icon: function icon(h) {
      return h(Icon$1, {
        attrs: { type: "exclamation-circle" }
      });
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var warn = warning2;
var confirm = function confirmFn(props2) {
  var config2 = _default$6({
    type: "confirm",
    okCancel: true
  }, props2);
  return confirm$1(config2);
};
Modal.info = info;
Modal.success = success;
Modal.error = error;
Modal.warning = warning2;
Modal.warn = warn;
Modal.confirm = confirm;
Modal.destroyAll = function destroyAllFn() {
  while (destroyFns.length) {
    var close7 = destroyFns.pop();
    if (close7) {
      close7();
    }
  }
};
Modal.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Modal.name, Modal);
};
var notificationInstance = {};
var defaultDuration = 4.5;
var defaultTop = "24px";
var defaultBottom = "24px";
var defaultPlacement = "topRight";
var defaultGetContainer = function defaultGetContainer2() {
  return document.body;
};
var defaultCloseIcon = null;
function setNotificationConfig(options2) {
  var duration2 = options2.duration, placement2 = options2.placement, bottom = options2.bottom, top = options2.top, getContainer5 = options2.getContainer, closeIcon = options2.closeIcon;
  if (duration2 !== void 0) {
    defaultDuration = duration2;
  }
  if (placement2 !== void 0) {
    defaultPlacement = placement2;
  }
  if (bottom !== void 0) {
    defaultBottom = typeof bottom === "number" ? bottom + "px" : bottom;
  }
  if (top !== void 0) {
    defaultTop = typeof top === "number" ? top + "px" : top;
  }
  if (getContainer5 !== void 0) {
    defaultGetContainer = getContainer5;
  }
  if (closeIcon !== void 0) {
    defaultCloseIcon = closeIcon;
  }
}
function getPlacementStyle(placement2) {
  var top = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultTop;
  var bottom = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultBottom;
  var style3 = void 0;
  switch (placement2) {
    case "topLeft":
      style3 = {
        left: 0,
        top,
        bottom: "auto"
      };
      break;
    case "topRight":
      style3 = {
        right: 0,
        top,
        bottom: "auto"
      };
      break;
    case "bottomLeft":
      style3 = {
        left: 0,
        top: "auto",
        bottom
      };
      break;
    default:
      style3 = {
        right: 0,
        top: "auto",
        bottom
      };
      break;
  }
  return style3;
}
function getNotificationInstance(_ref, callback) {
  var prefixCls2 = _ref.prefixCls, _ref$placement = _ref.placement, placement2 = _ref$placement === void 0 ? defaultPlacement : _ref$placement, _ref$getContainer = _ref.getContainer, getContainer5 = _ref$getContainer === void 0 ? defaultGetContainer : _ref$getContainer, top = _ref.top, bottom = _ref.bottom, _ref$closeIcon = _ref.closeIcon, _closeIcon = _ref$closeIcon === void 0 ? defaultCloseIcon : _ref$closeIcon;
  var cacheKey = prefixCls2 + "-" + placement2;
  if (notificationInstance[cacheKey]) {
    callback(notificationInstance[cacheKey]);
    return;
  }
  Notification$1.newInstance({
    prefixCls: prefixCls2,
    "class": prefixCls2 + "-" + placement2,
    style: getPlacementStyle(placement2, top, bottom),
    getContainer: getContainer5,
    closeIcon: function closeIcon(h) {
      var icon = typeof _closeIcon === "function" ? _closeIcon(h) : _closeIcon;
      var closeIconToRender = h(
        "span",
        { "class": prefixCls2 + "-close-x" },
        [icon || h(Icon$1, {
          "class": prefixCls2 + "-close-icon",
          attrs: { type: "close" }
        })]
      );
      return closeIconToRender;
    }
  }, function(notification2) {
    notificationInstance[cacheKey] = notification2;
    callback(notification2);
  });
}
var typeToIcon = {
  success: "check-circle-o",
  info: "info-circle-o",
  error: "close-circle-o",
  warning: "exclamation-circle-o"
};
function notice(args) {
  var icon = args.icon, type3 = args.type, description = args.description, message2 = args.message, btn = args.btn;
  var outerPrefixCls = args.prefixCls || "ant-notification";
  var prefixCls2 = outerPrefixCls + "-notice";
  var duration2 = args.duration === void 0 ? defaultDuration : args.duration;
  var iconNode = null;
  if (icon) {
    iconNode = function iconNode2(h) {
      return h(
        "span",
        { "class": prefixCls2 + "-icon" },
        [typeof icon === "function" ? icon(h) : icon]
      );
    };
  } else if (type3) {
    var iconType = typeToIcon[type3];
    iconNode = function iconNode2(h) {
      return h(Icon$1, {
        "class": prefixCls2 + "-icon " + prefixCls2 + "-icon-" + type3,
        attrs: { type: iconType }
      });
    };
  }
  var placement2 = args.placement, top = args.top, bottom = args.bottom, getContainer5 = args.getContainer, closeIcon = args.closeIcon;
  getNotificationInstance({
    prefixCls: outerPrefixCls,
    placement: placement2,
    top,
    bottom,
    getContainer: getContainer5,
    closeIcon
  }, function(notification2) {
    notification2.notice({
      content: function content(h) {
        return h(
          "div",
          { "class": iconNode ? prefixCls2 + "-with-icon" : "" },
          [iconNode && iconNode(h), h(
            "div",
            { "class": prefixCls2 + "-message" },
            [!description && iconNode ? h("span", { "class": prefixCls2 + "-message-single-line-auto-margin" }) : null, typeof message2 === "function" ? message2(h) : message2]
          ), h(
            "div",
            { "class": prefixCls2 + "-description" },
            [typeof description === "function" ? description(h) : description]
          ), btn ? h(
            "span",
            { "class": prefixCls2 + "-btn" },
            [typeof btn === "function" ? btn(h) : btn]
          ) : null]
        );
      },
      duration: duration2,
      closable: true,
      onClose: args.onClose,
      onClick: args.onClick,
      key: args.key,
      style: args.style || {},
      "class": args["class"]
    });
  });
}
var api = {
  open: notice,
  close: function close5(key2) {
    Object.keys(notificationInstance).forEach(function(cacheKey) {
      return notificationInstance[cacheKey].removeNotice(key2);
    });
  },
  config: setNotificationConfig,
  destroy: function destroy2() {
    Object.keys(notificationInstance).forEach(function(cacheKey) {
      notificationInstance[cacheKey].destroy();
      delete notificationInstance[cacheKey];
    });
  }
};
["success", "info", "warning", "error"].forEach(function(type3) {
  api[type3] = function(args) {
    return api.open(_default$6({}, args, {
      type: type3
    }));
  };
});
api.warn = api.warning;
var notification = api;
var tooltipProps$1 = abstractTooltipProps();
var btnProps = buttonTypes();
var Popconfirm = {
  name: "APopconfirm",
  props: _default$6({}, tooltipProps$1, {
    prefixCls: PropTypes.string,
    transitionName: PropTypes.string.def("zoom-big"),
    content: PropTypes.any,
    title: PropTypes.any,
    trigger: tooltipProps$1.trigger.def("click"),
    okType: btnProps.type.def("primary"),
    disabled: PropTypes.bool.def(false),
    okText: PropTypes.any,
    cancelText: PropTypes.any,
    icon: PropTypes.any,
    okButtonProps: PropTypes.object,
    cancelButtonProps: PropTypes.object
  }),
  mixins: [BaseMixin],
  model: {
    prop: "visible",
    event: "visibleChange"
  },
  watch: {
    visible: function visible9(val) {
      this.sVisible = val;
    }
  },
  inject: {
    configProvider: { "default": function _default89() {
      return ConfigConsumerProps;
    } }
  },
  data: function data77() {
    var props2 = getOptionProps(this);
    var state = { sVisible: false };
    if ("visible" in props2) {
      state.sVisible = props2.visible;
    }
    if ("defaultVisible" in props2) {
      state.sVisible = props2.defaultVisible;
    }
    return state;
  },
  methods: {
    onConfirm: function onConfirm(e) {
      this.setVisible(false, e);
      this.$emit("confirm", e);
    },
    onCancel: function onCancel(e) {
      this.setVisible(false, e);
      this.$emit("cancel", e);
    },
    onVisibleChange: function onVisibleChange7(sVisible) {
      var disabled = this.$props.disabled;
      if (disabled) {
        return;
      }
      this.setVisible(sVisible);
    },
    setVisible: function setVisible2(sVisible, e) {
      if (!hasProp(this, "visible")) {
        this.setState({ sVisible });
      }
      this.$emit("visibleChange", sVisible, e);
    },
    getPopupDomNode: function getPopupDomNode6() {
      return this.$refs.tooltip.getPopupDomNode();
    },
    renderOverlay: function renderOverlay2(prefixCls2, popconfirmLocale) {
      var h = this.$createElement;
      var okType = this.okType, okButtonProps = this.okButtonProps, cancelButtonProps = this.cancelButtonProps;
      var icon = getComponentFromProp(this, "icon") || h(Icon$1, {
        attrs: { type: "exclamation-circle", theme: "filled" }
      });
      var cancelBtnProps = mergeProps({
        props: {
          size: "small"
        },
        on: {
          click: this.onCancel
        }
      }, cancelButtonProps);
      var okBtnProps = mergeProps({
        props: {
          type: okType,
          size: "small"
        },
        on: {
          click: this.onConfirm
        }
      }, okButtonProps);
      return h(
        "div",
        { "class": prefixCls2 + "-inner-content" },
        [h(
          "div",
          { "class": prefixCls2 + "-message" },
          [icon, h(
            "div",
            { "class": prefixCls2 + "-message-title" },
            [getComponentFromProp(this, "title")]
          )]
        ), h(
          "div",
          { "class": prefixCls2 + "-buttons" },
          [h(
            Button$1,
            cancelBtnProps,
            [getComponentFromProp(this, "cancelText") || popconfirmLocale.cancelText]
          ), h(
            Button$1,
            okBtnProps,
            [getComponentFromProp(this, "okText") || popconfirmLocale.okText]
          )]
        )]
      );
    }
  },
  render: function render161() {
    var _this = this;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("popover", customizePrefixCls);
    var otherProps = omit$2(props2, ["title", "content", "cancelText", "okText"]);
    var tooltipProps2 = {
      props: _default$6({}, otherProps, {
        prefixCls: prefixCls2,
        visible: this.sVisible
      }),
      ref: "tooltip",
      on: {
        visibleChange: this.onVisibleChange
      }
    };
    var overlay = h(LocaleReceiver, {
      attrs: {
        componentName: "Popconfirm",
        defaultLocale: defaultLocale.Popconfirm
      },
      scopedSlots: {
        "default": function _default130(popconfirmLocale) {
          return _this.renderOverlay(prefixCls2, popconfirmLocale);
        }
      }
    });
    return h(
      ToolTip,
      tooltipProps2,
      [h(
        "template",
        { slot: "title" },
        [overlay]
      ), this.$slots["default"]]
    );
  }
};
Popconfirm.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Popconfirm.name, Popconfirm);
};
var Popconfirm$1 = Popconfirm;
var props = abstractTooltipProps();
var Popover = {
  name: "APopover",
  props: _default$6({}, props, {
    prefixCls: PropTypes.string,
    transitionName: PropTypes.string.def("zoom-big"),
    content: PropTypes.any,
    title: PropTypes.any
  }),
  model: {
    prop: "visible",
    event: "visibleChange"
  },
  inject: {
    configProvider: { "default": function _default90() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    getPopupDomNode: function getPopupDomNode7() {
      return this.$refs.tooltip.getPopupDomNode();
    }
  },
  render: function render162() {
    var h = arguments[0];
    var title = this.title, customizePrefixCls = this.prefixCls, $slots = this.$slots;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("popover", customizePrefixCls);
    var props2 = getOptionProps(this);
    delete props2.title;
    delete props2.content;
    var tooltipProps2 = {
      props: _default$6({}, props2, {
        prefixCls: prefixCls2
      }),
      ref: "tooltip",
      on: getListeners(this)
    };
    return h(
      ToolTip,
      tooltipProps2,
      [h(
        "template",
        { slot: "title" },
        [h("div", [(title || $slots.title) && h(
          "div",
          { "class": prefixCls2 + "-title" },
          [getComponentFromProp(this, "title")]
        ), h(
          "div",
          { "class": prefixCls2 + "-inner-content" },
          [getComponentFromProp(this, "content")]
        )])]
      ), this.$slots["default"]]
    );
  }
};
Popover.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Popover.name, Popover);
};
var Popover$1 = Popover;
function validProgress(progress) {
  if (!progress || progress < 0) {
    return 0;
  }
  if (progress > 100) {
    return 100;
  }
  return progress;
}
var sortGradient = function sortGradient2(gradients) {
  var tempArr = [];
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = void 0;
  try {
    for (var _iterator3 = Object.entries(gradients)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator3.next()).done); _iteratorNormalCompletion = true) {
      var _ref = _step.value;
      var _ref2 = _default$4(_ref, 2);
      var key2 = _ref2[0];
      var value27 = _ref2[1];
      var formatKey = parseFloat(key2.replace(/%/g, ""));
      if (isNaN(formatKey)) {
        return {};
      }
      tempArr.push({
        key: formatKey,
        value: value27
      });
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator3["return"]) {
        _iterator3["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
  tempArr = tempArr.sort(function(a, b) {
    return a.key - b.key;
  });
  return tempArr.map(function(_ref3) {
    var key3 = _ref3.key, value28 = _ref3.value;
    return value28 + " " + key3 + "%";
  }).join(", ");
};
var handleGradient = function handleGradient2(strokeColor) {
  var _strokeColor$from = strokeColor.from, from3 = _strokeColor$from === void 0 ? "#1890ff" : _strokeColor$from, _strokeColor$to = strokeColor.to, to2 = _strokeColor$to === void 0 ? "#1890ff" : _strokeColor$to, _strokeColor$directio = strokeColor.direction, direction = _strokeColor$directio === void 0 ? "to right" : _strokeColor$directio, rest = _default$2(strokeColor, ["from", "to", "direction"]);
  if (Object.keys(rest).length !== 0) {
    var sortedGradients = sortGradient(rest);
    return { backgroundImage: "linear-gradient(" + direction + ", " + sortedGradients + ")" };
  }
  return { backgroundImage: "linear-gradient(" + direction + ", " + from3 + ", " + to2 + ")" };
};
var Line = {
  functional: true,
  render: function render163(h, context) {
    var props2 = context.props, children = context.children;
    var prefixCls2 = props2.prefixCls, percent = props2.percent, successPercent = props2.successPercent, strokeWidth = props2.strokeWidth, size = props2.size, strokeColor = props2.strokeColor, strokeLinecap = props2.strokeLinecap;
    var backgroundProps = void 0;
    if (strokeColor && typeof strokeColor !== "string") {
      backgroundProps = handleGradient(strokeColor);
    } else {
      backgroundProps = {
        background: strokeColor
      };
    }
    var percentStyle = _default$6({
      width: validProgress(percent) + "%",
      height: (strokeWidth || (size === "small" ? 6 : 8)) + "px",
      background: strokeColor,
      borderRadius: strokeLinecap === "square" ? 0 : "100px"
    }, backgroundProps);
    var successPercentStyle = {
      width: validProgress(successPercent) + "%",
      height: (strokeWidth || (size === "small" ? 6 : 8)) + "px",
      borderRadius: strokeLinecap === "square" ? 0 : ""
    };
    var successSegment = successPercent !== void 0 ? h("div", { "class": prefixCls2 + "-success-bg", style: successPercentStyle }) : null;
    return h("div", [h(
      "div",
      { "class": prefixCls2 + "-outer" },
      [h(
        "div",
        { "class": prefixCls2 + "-inner" },
        [h("div", { "class": prefixCls2 + "-bg", style: percentStyle }), successSegment]
      )]
    ), children]);
  }
};
var Line$1 = Line;
function enhancer(Component) {
  return {
    mixins: [Component],
    updated: function updated46() {
      var _this = this;
      var now2 = Date.now();
      var updated47 = false;
      Object.keys(this.paths).forEach(function(key2) {
        var path = _this.paths[key2];
        if (!path) {
          return;
        }
        updated47 = true;
        var pathStyle = path.style;
        pathStyle.transitionDuration = ".3s, .3s, .3s, .06s";
        if (_this.prevTimeStamp && now2 - _this.prevTimeStamp < 100) {
          pathStyle.transitionDuration = "0s, 0s";
        }
      });
      if (updated47) {
        this.prevTimeStamp = Date.now();
      }
    }
  };
}
var defaultProps = {
  percent: 0,
  prefixCls: "rc-progress",
  strokeColor: "#2db7f5",
  strokeLinecap: "round",
  strokeWidth: 1,
  trailColor: "#D9D9D9",
  trailWidth: 1
};
var mixedType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);
var propTypes = {
  percent: PropTypes.oneOfType([mixedType, PropTypes.arrayOf(mixedType)]),
  prefixCls: PropTypes.string,
  strokeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])), PropTypes.object]),
  strokeLinecap: PropTypes.oneOf(["butt", "round", "square"]),
  strokeWidth: mixedType,
  trailColor: PropTypes.string,
  trailWidth: mixedType
};
var circlePropTypes = _default$6({}, propTypes, {
  gapPosition: PropTypes.oneOf(["top", "bottom", "left", "right"]),
  gapDegree: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool])
});
var circleDefaultProps = _default$6({}, defaultProps, {
  gapPosition: "top"
});
Vue.use(_default$3, { name: "ant-ref" });
var gradientSeed = 0;
function stripPercentToNumber(percent) {
  return +percent.replace("%", "");
}
function toArray$2(symArray) {
  return Array.isArray(symArray) ? symArray : [symArray];
}
function getPathStyles(offset4, percent, strokeColor, strokeWidth) {
  var gapDegree = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
  var gapPosition = arguments[5];
  var radius = 50 - strokeWidth / 2;
  var beginPositionX = 0;
  var beginPositionY = -radius;
  var endPositionX = 0;
  var endPositionY = -2 * radius;
  switch (gapPosition) {
    case "left":
      beginPositionX = -radius;
      beginPositionY = 0;
      endPositionX = 2 * radius;
      endPositionY = 0;
      break;
    case "right":
      beginPositionX = radius;
      beginPositionY = 0;
      endPositionX = -2 * radius;
      endPositionY = 0;
      break;
    case "bottom":
      beginPositionY = radius;
      endPositionY = 2 * radius;
      break;
  }
  var pathString = "M 50,50 m " + beginPositionX + "," + beginPositionY + "\n   a " + radius + "," + radius + " 0 1 1 " + endPositionX + "," + -endPositionY + "\n   a " + radius + "," + radius + " 0 1 1 " + -endPositionX + "," + endPositionY;
  var len = Math.PI * 2 * radius;
  var pathStyle = {
    stroke: strokeColor,
    strokeDasharray: percent / 100 * (len - gapDegree) + "px " + len + "px",
    strokeDashoffset: "-" + (gapDegree / 2 + offset4 / 100 * (len - gapDegree)) + "px",
    transition: "stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s"
  };
  return {
    pathString,
    pathStyle
  };
}
var Circle$2 = {
  props: initDefaultProps(circlePropTypes, circleDefaultProps),
  created: function created11() {
    this.paths = {};
    this.gradientId = gradientSeed;
    gradientSeed += 1;
  },
  methods: {
    getStokeList: function getStokeList() {
      var _this = this;
      var h = this.$createElement;
      var _$props = this.$props, prefixCls2 = _$props.prefixCls, percent = _$props.percent, strokeColor = _$props.strokeColor, strokeWidth = _$props.strokeWidth, strokeLinecap = _$props.strokeLinecap, gapDegree = _$props.gapDegree, gapPosition = _$props.gapPosition;
      var percentList = toArray$2(percent);
      var strokeColorList = toArray$2(strokeColor);
      var stackPtg = 0;
      return percentList.map(function(ptg, index2) {
        var color = strokeColorList[index2] || strokeColorList[strokeColorList.length - 1];
        var stroke = Object.prototype.toString.call(color) === "[object Object]" ? "url(#" + prefixCls2 + "-gradient-" + _this.gradientId + ")" : "";
        var _getPathStyles = getPathStyles(stackPtg, ptg, color, strokeWidth, gapDegree, gapPosition), pathString = _getPathStyles.pathString, pathStyle = _getPathStyles.pathStyle;
        stackPtg += ptg;
        var pathProps = {
          key: index2,
          attrs: {
            d: pathString,
            stroke,
            "stroke-linecap": strokeLinecap,
            "stroke-width": strokeWidth,
            opacity: ptg === 0 ? 0 : 1,
            "fill-opacity": "0"
          },
          "class": prefixCls2 + "-circle-path",
          style: pathStyle,
          directives: [{
            name: "ant-ref",
            value: function value27(c) {
              _this.paths[index2] = c;
            }
          }]
        };
        return h("path", pathProps);
      });
    }
  },
  render: function render164() {
    var h = arguments[0];
    var _$props2 = this.$props, prefixCls2 = _$props2.prefixCls, strokeWidth = _$props2.strokeWidth, trailWidth = _$props2.trailWidth, gapDegree = _$props2.gapDegree, gapPosition = _$props2.gapPosition, trailColor = _$props2.trailColor, strokeLinecap = _$props2.strokeLinecap, strokeColor = _$props2.strokeColor, restProps = _default$2(_$props2, ["prefixCls", "strokeWidth", "trailWidth", "gapDegree", "gapPosition", "trailColor", "strokeLinecap", "strokeColor"]);
    var _getPathStyles2 = getPathStyles(0, 100, trailColor, strokeWidth, gapDegree, gapPosition), pathString = _getPathStyles2.pathString, pathStyle = _getPathStyles2.pathStyle;
    delete restProps.percent;
    var strokeColorList = toArray$2(strokeColor);
    var gradient = strokeColorList.find(function(color) {
      return Object.prototype.toString.call(color) === "[object Object]";
    });
    var pathFirst = {
      attrs: {
        d: pathString,
        stroke: trailColor,
        "stroke-linecap": strokeLinecap,
        "stroke-width": trailWidth || strokeWidth,
        "fill-opacity": "0"
      },
      "class": prefixCls2 + "-circle-trail",
      style: pathStyle
    };
    return h(
      "svg",
      _mergeJSXProps([{
        "class": prefixCls2 + "-circle",
        attrs: { viewBox: "0 0 100 100" }
      }, restProps]),
      [gradient && h("defs", [h(
        "linearGradient",
        {
          attrs: {
            id: prefixCls2 + "-gradient-" + this.gradientId,
            x1: "100%",
            y1: "0%",
            x2: "0%",
            y2: "0%"
          }
        },
        [Object.keys(gradient).sort(function(a, b) {
          return stripPercentToNumber(a) - stripPercentToNumber(b);
        }).map(function(key2, index2) {
          return h("stop", {
            key: index2,
            attrs: { offset: key2, "stop-color": gradient[key2] }
          });
        })]
      )]), h("path", pathFirst), this.getStokeList().reverse()]
    );
  }
};
var VCCircle = enhancer(Circle$2);
var statusColorMap = {
  normal: "#108ee9",
  exception: "#ff5500",
  success: "#87d068"
};
function getPercentage(_ref) {
  var percent = _ref.percent, successPercent = _ref.successPercent;
  var ptg = validProgress(percent);
  if (!successPercent)
    return ptg;
  var successPtg = validProgress(successPercent);
  return [successPercent, validProgress(ptg - successPtg)];
}
function getStrokeColor(_ref2) {
  var progressStatus = _ref2.progressStatus, successPercent = _ref2.successPercent, strokeColor = _ref2.strokeColor;
  var color = strokeColor || statusColorMap[progressStatus];
  if (!successPercent)
    return color;
  return [statusColorMap.success, color];
}
var Circle = {
  functional: true,
  render: function render165(h, context) {
    var _wrapperClassName;
    var props2 = context.props, children = context.children;
    var prefixCls2 = props2.prefixCls, width = props2.width, strokeWidth = props2.strokeWidth, trailColor = props2.trailColor, strokeLinecap = props2.strokeLinecap, gapPosition = props2.gapPosition, gapDegree = props2.gapDegree, type3 = props2.type;
    var circleSize = width || 120;
    var circleStyle = {
      width: typeof circleSize === "number" ? circleSize + "px" : circleSize,
      height: typeof circleSize === "number" ? circleSize + "px" : circleSize,
      fontSize: circleSize * 0.15 + 6
    };
    var circleWidth = strokeWidth || 6;
    var gapPos = gapPosition || type3 === "dashboard" && "bottom" || "top";
    var gapDeg = gapDegree || type3 === "dashboard" && 75;
    var strokeColor = getStrokeColor(props2);
    var isGradient = Object.prototype.toString.call(strokeColor) === "[object Object]";
    var wrapperClassName = (_wrapperClassName = {}, _default$8(_wrapperClassName, prefixCls2 + "-inner", true), _default$8(_wrapperClassName, prefixCls2 + "-circle-gradient", isGradient), _wrapperClassName);
    return h(
      "div",
      { "class": wrapperClassName, style: circleStyle },
      [h(VCCircle, {
        attrs: {
          percent: getPercentage(props2),
          strokeWidth: circleWidth,
          trailWidth: circleWidth,
          strokeColor,
          strokeLinecap,
          trailColor,
          prefixCls: prefixCls2,
          gapDegree: gapDeg,
          gapPosition: gapPos
        }
      }), children]
    );
  }
};
var Circle$1 = Circle;
var ProgressStatuses = ["normal", "exception", "active", "success"];
var ProgressType = PropTypes.oneOf(["line", "circle", "dashboard"]);
var ProgressSize = PropTypes.oneOf(["default", "small"]);
var ProgressProps = {
  prefixCls: PropTypes.string,
  type: ProgressType,
  percent: PropTypes.number,
  successPercent: PropTypes.number,
  format: PropTypes.func,
  status: PropTypes.oneOf(ProgressStatuses),
  showInfo: PropTypes.bool,
  strokeWidth: PropTypes.number,
  strokeLinecap: PropTypes.oneOf(["butt", "round", "square"]),
  strokeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  trailColor: PropTypes.string,
  width: PropTypes.number,
  gapDegree: PropTypes.number,
  gapPosition: PropTypes.oneOf(["top", "bottom", "left", "right"]),
  size: ProgressSize
};
var Progress = {
  name: "AProgress",
  props: initDefaultProps(ProgressProps, {
    type: "line",
    percent: 0,
    showInfo: true,
    trailColor: "#f3f3f3",
    size: "default",
    gapDegree: 0,
    strokeLinecap: "round"
  }),
  inject: {
    configProvider: { "default": function _default91() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    getPercentNumber: function getPercentNumber() {
      var _$props = this.$props, successPercent = _$props.successPercent, _$props$percent = _$props.percent, percent = _$props$percent === void 0 ? 0 : _$props$percent;
      return parseInt(successPercent !== void 0 ? successPercent.toString() : percent.toString(), 10);
    },
    getProgressStatus: function getProgressStatus() {
      var status = this.$props.status;
      if (ProgressStatuses.indexOf(status) < 0 && this.getPercentNumber() >= 100) {
        return "success";
      }
      return status || "normal";
    },
    renderProcessInfo: function renderProcessInfo(prefixCls2, progressStatus) {
      var h = this.$createElement;
      var _$props2 = this.$props, showInfo = _$props2.showInfo, format3 = _$props2.format, type3 = _$props2.type, percent = _$props2.percent, successPercent = _$props2.successPercent;
      if (!showInfo)
        return null;
      var text = void 0;
      var textFormatter = format3 || this.$scopedSlots.format || function(percentNumber) {
        return percentNumber + "%";
      };
      var iconType = type3 === "circle" || type3 === "dashboard" ? "" : "-circle";
      if (format3 || this.$scopedSlots.format || progressStatus !== "exception" && progressStatus !== "success") {
        text = textFormatter(validProgress(percent), validProgress(successPercent));
      } else if (progressStatus === "exception") {
        text = h(Icon$1, {
          attrs: { type: "close" + iconType, theme: type3 === "line" ? "filled" : "outlined" }
        });
      } else if (progressStatus === "success") {
        text = h(Icon$1, {
          attrs: { type: "check" + iconType, theme: type3 === "line" ? "filled" : "outlined" }
        });
      }
      return h(
        "span",
        {
          "class": prefixCls2 + "-text",
          attrs: { title: typeof text === "string" ? text : void 0 }
        },
        [text]
      );
    }
  },
  render: function render166() {
    var _classNames;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, size = props2.size, type3 = props2.type, showInfo = props2.showInfo;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("progress", customizePrefixCls);
    var progressStatus = this.getProgressStatus();
    var progressInfo = this.renderProcessInfo(prefixCls2, progressStatus);
    var progress = void 0;
    if (type3 === "line") {
      var lineProps = {
        props: _default$6({}, props2, {
          prefixCls: prefixCls2
        })
      };
      progress = h(
        Line$1,
        lineProps,
        [progressInfo]
      );
    } else if (type3 === "circle" || type3 === "dashboard") {
      var circleProps = {
        props: _default$6({}, props2, {
          prefixCls: prefixCls2,
          progressStatus
        })
      };
      progress = h(
        Circle$1,
        circleProps,
        [progressInfo]
      );
    }
    var classString = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-" + (type3 === "dashboard" && "circle" || type3), true), _default$8(_classNames, prefixCls2 + "-status-" + progressStatus, true), _default$8(_classNames, prefixCls2 + "-show-info", showInfo), _default$8(_classNames, prefixCls2 + "-" + size, size), _classNames));
    var progressProps = {
      on: getListeners(this),
      "class": classString
    };
    return h(
      "div",
      progressProps,
      [progress]
    );
  }
};
Progress.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Progress.name, Progress);
};
function getScroll(w, top) {
  var ret = top ? w.pageYOffset : w.pageXOffset;
  var method3 = top ? "scrollTop" : "scrollLeft";
  if (typeof ret !== "number") {
    var d = w.document;
    ret = d.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d.body[method3];
    }
  }
  return ret;
}
function getClientPosition(elem) {
  var x = void 0;
  var y = void 0;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  var box = elem.getBoundingClientRect();
  x = box.left;
  y = box.top;
  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x,
    top: y
  };
}
function getOffsetLeft(el) {
  var pos = getClientPosition(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScroll(w);
  return pos.left;
}
function noop$e() {
}
var Star = {
  name: "Star",
  mixins: [BaseMixin],
  props: {
    value: PropTypes.number,
    index: PropTypes.number,
    prefixCls: PropTypes.string,
    allowHalf: PropTypes.bool,
    disabled: PropTypes.bool,
    character: PropTypes.any,
    characterRender: PropTypes.func,
    focused: PropTypes.bool,
    count: PropTypes.number
  },
  methods: {
    onHover: function onHover(e) {
      var index2 = this.index;
      this.$emit("hover", e, index2);
    },
    onClick: function onClick10(e) {
      var index2 = this.index;
      this.$emit("click", e, index2);
    },
    onKeyDown: function onKeyDown19(e) {
      var index2 = this.$props.index;
      if (e.keyCode === 13) {
        this.__emit("click", e, index2);
      }
    },
    getClassName: function getClassName2() {
      var prefixCls2 = this.prefixCls, index2 = this.index, value27 = this.value, allowHalf = this.allowHalf, focused = this.focused;
      var starValue = index2 + 1;
      var className = prefixCls2;
      if (value27 === 0 && index2 === 0 && focused) {
        className += " " + prefixCls2 + "-focused";
      } else if (allowHalf && value27 + 0.5 === starValue) {
        className += " " + prefixCls2 + "-half " + prefixCls2 + "-active";
        if (focused) {
          className += " " + prefixCls2 + "-focused";
        }
      } else {
        className += starValue <= value27 ? " " + prefixCls2 + "-full" : " " + prefixCls2 + "-zero";
        if (starValue === value27 && focused) {
          className += " " + prefixCls2 + "-focused";
        }
      }
      return className;
    }
  },
  render: function render167() {
    var h = arguments[0];
    var onHover3 = this.onHover, onClick15 = this.onClick, onKeyDown25 = this.onKeyDown, disabled = this.disabled, prefixCls2 = this.prefixCls, characterRender2 = this.characterRender, index2 = this.index, count2 = this.count, value27 = this.value;
    var character = getComponentFromProp(this, "character");
    var star = h(
      "li",
      { "class": this.getClassName() },
      [h(
        "div",
        {
          on: {
            "click": disabled ? noop$e : onClick15,
            "keydown": disabled ? noop$e : onKeyDown25,
            "mousemove": disabled ? noop$e : onHover3
          },
          attrs: {
            role: "radio",
            "aria-checked": value27 > index2 ? "true" : "false",
            "aria-posinset": index2 + 1,
            "aria-setsize": count2,
            tabIndex: 0
          }
        },
        [h(
          "div",
          { "class": prefixCls2 + "-first" },
          [character]
        ), h(
          "div",
          { "class": prefixCls2 + "-second" },
          [character]
        )]
      )]
    );
    if (characterRender2) {
      star = characterRender2(star, this.$props);
    }
    return star;
  }
};
var rateProps = {
  disabled: PropTypes.bool,
  value: PropTypes.number,
  defaultValue: PropTypes.number,
  count: PropTypes.number,
  allowHalf: PropTypes.bool,
  allowClear: PropTypes.bool,
  prefixCls: PropTypes.string,
  character: PropTypes.any,
  characterRender: PropTypes.func,
  tabIndex: PropTypes.number,
  autoFocus: PropTypes.bool
};
function noop$d() {
}
var Rate$2 = {
  name: "Rate",
  mixins: [BaseMixin],
  model: {
    prop: "value",
    event: "change"
  },
  props: initDefaultProps(rateProps, {
    defaultValue: 0,
    count: 5,
    allowHalf: false,
    allowClear: true,
    prefixCls: "rc-rate",
    tabIndex: 0,
    character: "\u2605"
  }),
  data: function data78() {
    var value27 = this.value;
    if (!hasProp(this, "value")) {
      value27 = this.defaultValue;
    }
    return {
      sValue: value27,
      focused: false,
      cleanedValue: null,
      hoverValue: void 0
    };
  },
  watch: {
    value: function value26(val) {
      this.setState({
        sValue: val
      });
    }
  },
  mounted: function mounted49() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autoFocus && !_this.disabled) {
        _this.focus();
      }
    });
  },
  methods: {
    onHover: function onHover2(event, index2) {
      var hoverValue2 = this.getStarValue(index2, event.pageX);
      var cleanedValue = this.cleanedValue;
      if (hoverValue2 !== cleanedValue) {
        this.setState({
          hoverValue: hoverValue2,
          cleanedValue: null
        });
      }
      this.$emit("hoverChange", hoverValue2);
    },
    onMouseLeave: function onMouseLeave5() {
      this.setState({
        hoverValue: void 0,
        cleanedValue: null
      });
      this.$emit("hoverChange", void 0);
    },
    onClick: function onClick11(event, index2) {
      var allowClear = this.allowClear, value27 = this.sValue;
      var newValue = this.getStarValue(index2, event.pageX);
      var isReset = false;
      if (allowClear) {
        isReset = newValue === value27;
      }
      this.onMouseLeave(true);
      this.changeValue(isReset ? 0 : newValue);
      this.setState({
        cleanedValue: isReset ? newValue : null
      });
    },
    onFocus: function onFocus7() {
      this.setState({
        focused: true
      });
      this.$emit("focus");
    },
    onBlur: function onBlur9() {
      this.setState({
        focused: false
      });
      this.$emit("blur");
    },
    onKeyDown: function onKeyDown20(event) {
      var keyCode = event.keyCode;
      var count2 = this.count, allowHalf = this.allowHalf;
      var sValue = this.sValue;
      if (keyCode === KeyCode$2.RIGHT && sValue < count2) {
        if (allowHalf) {
          sValue += 0.5;
        } else {
          sValue += 1;
        }
        this.changeValue(sValue);
        event.preventDefault();
      } else if (keyCode === KeyCode$2.LEFT && sValue > 0) {
        if (allowHalf) {
          sValue -= 0.5;
        } else {
          sValue -= 1;
        }
        this.changeValue(sValue);
        event.preventDefault();
      }
      this.$emit("keydown", event);
    },
    getStarDOM: function getStarDOM(index2) {
      return this.$refs["stars" + index2].$el;
    },
    getStarValue: function getStarValue(index2, x) {
      var value27 = index2 + 1;
      if (this.allowHalf) {
        var starEle = this.getStarDOM(index2);
        var leftDis = getOffsetLeft(starEle);
        var width = starEle.clientWidth;
        if (x - leftDis < width / 2) {
          value27 -= 0.5;
        }
      }
      return value27;
    },
    focus: function focus23() {
      if (!this.disabled) {
        this.$refs.rateRef.focus();
      }
    },
    blur: function blur20() {
      if (!this.disabled) {
        this.$refs.rateRef.blur();
      }
    },
    changeValue: function changeValue(value27) {
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value27
        });
      }
      this.$emit("change", value27);
    }
  },
  render: function render168() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), count2 = _getOptionProps.count, allowHalf = _getOptionProps.allowHalf, prefixCls2 = _getOptionProps.prefixCls, disabled = _getOptionProps.disabled, tabIndex = _getOptionProps.tabIndex;
    var sValue = this.sValue, hoverValue2 = this.hoverValue, focused = this.focused;
    var stars = [];
    var disabledClass = disabled ? prefixCls2 + "-disabled" : "";
    var character = getComponentFromProp(this, "character");
    var characterRender2 = this.characterRender || this.$scopedSlots.characterRender;
    for (var index2 = 0; index2 < count2; index2++) {
      var starProps = {
        props: {
          index: index2,
          count: count2,
          disabled,
          prefixCls: prefixCls2 + "-star",
          allowHalf,
          value: hoverValue2 === void 0 ? sValue : hoverValue2,
          character,
          characterRender: characterRender2,
          focused
        },
        on: {
          click: this.onClick,
          hover: this.onHover
        },
        key: index2,
        ref: "stars" + index2
      };
      stars.push(h(Star, starProps));
    }
    return h(
      "ul",
      {
        "class": classNames(prefixCls2, disabledClass),
        on: {
          "mouseleave": disabled ? noop$d : this.onMouseLeave,
          "focus": disabled ? noop$d : this.onFocus,
          "blur": disabled ? noop$d : this.onBlur,
          "keydown": disabled ? noop$d : this.onKeyDown
        },
        attrs: {
          tabIndex: disabled ? -1 : tabIndex,
          role: "radiogroup"
        },
        ref: "rateRef"
      },
      [stars]
    );
  }
};
var RateProps = {
  prefixCls: PropTypes.string,
  count: PropTypes.number,
  value: PropTypes.value,
  defaultValue: PropTypes.value,
  allowHalf: PropTypes.bool,
  allowClear: PropTypes.bool,
  tooltips: PropTypes.arrayOf(PropTypes.string),
  disabled: PropTypes.bool,
  character: PropTypes.any,
  autoFocus: PropTypes.bool
};
var Rate = {
  name: "ARate",
  model: {
    prop: "value",
    event: "change"
  },
  props: RateProps,
  inject: {
    configProvider: { "default": function _default92() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    characterRender: function characterRender(node, _ref) {
      var index2 = _ref.index;
      var h = this.$createElement;
      var tooltips = this.$props.tooltips;
      if (!tooltips)
        return node;
      return h(
        ToolTip,
        {
          attrs: { title: tooltips[index2] }
        },
        [node]
      );
    },
    focus: function focus24() {
      this.$refs.refRate.focus();
    },
    blur: function blur21() {
      this.$refs.refRate.blur();
    }
  },
  render: function render169() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, restProps = _default$2(_getOptionProps, ["prefixCls"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("rate", customizePrefixCls);
    var character = getComponentFromProp(this, "character") || h(Icon$1, {
      attrs: { type: "star", theme: "filled" }
    });
    var rateProps2 = {
      props: _default$6({
        character,
        characterRender: this.characterRender,
        prefixCls: prefixCls2
      }, omit$2(restProps, ["tooltips"])),
      on: getListeners(this),
      ref: "refRate"
    };
    return h(Rate$2, rateProps2);
  }
};
Rate.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Rate.name, Rate);
};
var Rate$1 = Rate;
var Track = {
  functional: true,
  render: function render170(h, context) {
    var _ref, _ref2;
    var _context$props = context.props, included = _context$props.included, vertical3 = _context$props.vertical, offset4 = _context$props.offset, length = _context$props.length, reverse = _context$props.reverse;
    var _context$data = context.data, style3 = _context$data.style, className = _context$data["class"];
    var positonStyle = vertical3 ? (_ref = {}, _default$8(_ref, reverse ? "top" : "bottom", offset4 + "%"), _default$8(_ref, reverse ? "bottom" : "top", "auto"), _default$8(_ref, "height", length + "%"), _ref) : (_ref2 = {}, _default$8(_ref2, reverse ? "right" : "left", offset4 + "%"), _default$8(_ref2, reverse ? "left" : "right", "auto"), _default$8(_ref2, "width", length + "%"), _ref2);
    var elStyle = _default$6({}, style3, positonStyle);
    return included ? h("div", { "class": className, style: elStyle }) : null;
  }
};
var Track$1 = Track;
var calcPoints = function calcPoints2(vertical3, marks, dots, step3, min4, max4) {
  warning$4(dots ? step3 > 0 : true, "Slider", "`Slider[step]` should be a positive number in order to make Slider[dots] work.");
  var points = Object.keys(marks).map(parseFloat).sort(function(a, b) {
    return a - b;
  });
  if (dots && step3) {
    for (var i = min4; i <= max4; i += step3) {
      if (points.indexOf(i) === -1) {
        points.push(i);
      }
    }
  }
  return points;
};
var Steps$3 = {
  functional: true,
  render: function render171(h, context) {
    var _context$props = context.props, prefixCls2 = _context$props.prefixCls, vertical3 = _context$props.vertical, reverse = _context$props.reverse, marks = _context$props.marks, dots = _context$props.dots, step3 = _context$props.step, included = _context$props.included, lowerBound = _context$props.lowerBound, upperBound = _context$props.upperBound, max4 = _context$props.max, min4 = _context$props.min, dotStyle = _context$props.dotStyle, activeDotStyle = _context$props.activeDotStyle;
    var range2 = max4 - min4;
    var elements = calcPoints(vertical3, marks, dots, step3, min4, max4).map(function(point) {
      var _classNames;
      var offset4 = Math.abs(point - min4) / range2 * 100 + "%";
      var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
      var style3 = vertical3 ? _default$6({}, dotStyle, _default$8({}, reverse ? "top" : "bottom", offset4)) : _default$6({}, dotStyle, _default$8({}, reverse ? "right" : "left", offset4));
      if (isActived) {
        style3 = _default$6({}, style3, activeDotStyle);
      }
      var pointClassName = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-dot", true), _default$8(_classNames, prefixCls2 + "-dot-active", isActived), _default$8(_classNames, prefixCls2 + "-dot-reverse", reverse), _classNames));
      return h("span", { "class": pointClassName, style: style3, key: point });
    });
    return h(
      "div",
      { "class": prefixCls2 + "-step" },
      [elements]
    );
  }
};
var Steps$4 = Steps$3;
var Marks = {
  functional: true,
  render: function render172(h, context) {
    var _context$props = context.props, className = _context$props.className, vertical3 = _context$props.vertical, reverse = _context$props.reverse, marks = _context$props.marks, included = _context$props.included, upperBound = _context$props.upperBound, lowerBound = _context$props.lowerBound, max4 = _context$props.max, min4 = _context$props.min;
    var clickLabel = context.listeners.clickLabel;
    var marksKeys = Object.keys(marks);
    var range2 = max4 - min4;
    var elements = marksKeys.map(parseFloat).sort(function(a, b) {
      return a - b;
    }).map(function(point) {
      var _classNames;
      var markPoint = typeof marks[point] === "function" ? marks[point](h) : marks[point];
      var markPointIsObject = (typeof markPoint === "undefined" ? "undefined" : _default$7(markPoint)) === "object" && !isValidElement(markPoint);
      var markLabel = markPointIsObject ? markPoint.label : markPoint;
      if (!markLabel && markLabel !== 0) {
        return null;
      }
      var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
      var markClassName = classNames((_classNames = {}, _default$8(_classNames, className + "-text", true), _default$8(_classNames, className + "-text-active", isActive), _classNames));
      var bottomStyle = _default$8({
        marginBottom: "-50%"
      }, reverse ? "top" : "bottom", (point - min4) / range2 * 100 + "%");
      var leftStyle = _default$8({
        transform: "translateX(-50%)",
        msTransform: "translateX(-50%)"
      }, reverse ? "right" : "left", reverse ? (point - min4 / 4) / range2 * 100 + "%" : (point - min4) / range2 * 100 + "%");
      var style3 = vertical3 ? bottomStyle : leftStyle;
      var markStyle = markPointIsObject ? _default$6({}, style3, markPoint.style) : style3;
      return h(
        "span",
        {
          "class": markClassName,
          style: markStyle,
          key: point,
          on: {
            "mousedown": function mousedown(e) {
              return clickLabel(e, point);
            },
            "touchstart": function touchstart(e) {
              return clickLabel(e, point);
            }
          }
        },
        [markLabel]
      );
    });
    return h(
      "div",
      { "class": className },
      [elements]
    );
  }
};
var Marks$1 = Marks;
var VcHandle = {
  name: "Handle",
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    vertical: PropTypes.bool,
    offset: PropTypes.number,
    disabled: PropTypes.bool,
    min: PropTypes.number,
    max: PropTypes.number,
    value: PropTypes.number,
    tabIndex: PropTypes.number,
    className: PropTypes.string,
    reverse: PropTypes.bool
  },
  data: function data79() {
    return {
      clickFocused: false
    };
  },
  mounted: function mounted50() {
    this.onMouseUpListener = addEventListenerWrap(document, "mouseup", this.handleMouseUp);
  },
  beforeDestroy: function beforeDestroy38() {
    if (this.onMouseUpListener) {
      this.onMouseUpListener.remove();
    }
  },
  methods: {
    setClickFocus: function setClickFocus(focused) {
      this.setState({ clickFocused: focused });
    },
    handleMouseUp: function handleMouseUp() {
      if (document.activeElement === this.$refs.handle) {
        this.setClickFocus(true);
      }
    },
    handleBlur: function handleBlur2(e) {
      this.setClickFocus(false);
      this.__emit("blur", e);
    },
    handleKeyDown: function handleKeyDown6() {
      this.setClickFocus(false);
    },
    clickFocus: function clickFocus() {
      this.setClickFocus(true);
      this.focus();
    },
    focus: function focus25() {
      this.$refs.handle.focus();
    },
    blur: function blur22() {
      this.$refs.handle.blur();
    },
    handleMousedown: function handleMousedown(e) {
      this.focus();
      this.__emit("mousedown", e);
    }
  },
  render: function render173() {
    var _ref, _ref2;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), prefixCls2 = _getOptionProps.prefixCls, vertical3 = _getOptionProps.vertical, reverse = _getOptionProps.reverse, offset4 = _getOptionProps.offset, disabled = _getOptionProps.disabled, min4 = _getOptionProps.min, max4 = _getOptionProps.max, value27 = _getOptionProps.value, tabIndex = _getOptionProps.tabIndex;
    var className = classNames(this.$props.className, _default$8({}, prefixCls2 + "-handle-click-focused", this.clickFocused));
    var positionStyle = vertical3 ? (_ref = {}, _default$8(_ref, reverse ? "top" : "bottom", offset4 + "%"), _default$8(_ref, reverse ? "bottom" : "top", "auto"), _default$8(_ref, "transform", "translateY(+50%)"), _ref) : (_ref2 = {}, _default$8(_ref2, reverse ? "right" : "left", offset4 + "%"), _default$8(_ref2, reverse ? "left" : "right", "auto"), _default$8(_ref2, "transform", "translateX(" + (reverse ? "+" : "-") + "50%)"), _ref2);
    var ariaProps = {
      "aria-valuemin": min4,
      "aria-valuemax": max4,
      "aria-valuenow": value27,
      "aria-disabled": !!disabled
    };
    var _tabIndex = tabIndex || 0;
    if (disabled || tabIndex === null) {
      _tabIndex = null;
    }
    var handleProps = {
      attrs: _default$6({
        role: "slider",
        tabIndex: _tabIndex
      }, ariaProps),
      "class": className,
      on: _default$6({}, getListeners(this), {
        blur: this.handleBlur,
        keydown: this.handleKeyDown,
        mousedown: this.handleMousedown
      }),
      ref: "handle",
      style: positionStyle
    };
    return h("div", handleProps);
  }
};
function isEventFromHandle(e, handles) {
  try {
    return Object.keys(handles).some(function(key2) {
      return e.target === handles[key2].$el || e.target === handles[key2];
    });
  } catch (error3) {
    return false;
  }
}
function isValueOutOfRange(value27, _ref) {
  var min4 = _ref.min, max4 = _ref.max;
  return value27 < min4 || value27 > max4;
}
function isNotTouchEvent(e) {
  return e.touches.length > 1 || e.type.toLowerCase() === "touchend" && e.touches.length > 0;
}
function getClosestPoint(val, _ref2) {
  var marks = _ref2.marks, step3 = _ref2.step, min4 = _ref2.min, max4 = _ref2.max;
  var points = Object.keys(marks).map(parseFloat);
  if (step3 !== null) {
    var base2 = Math.pow(10, getPrecision2(step3));
    var maxSteps = Math.floor((max4 * base2 - min4 * base2) / (step3 * base2));
    var steps = Math.min((val - min4) / step3, maxSteps);
    var closestStep = Math.round(steps) * step3 + min4;
    points.push(closestStep);
  }
  var diffs = points.map(function(point) {
    return Math.abs(val - point);
  });
  return points[diffs.indexOf(Math.min.apply(Math, _default$5(diffs)))];
}
function getPrecision2(step3) {
  var stepString = step3.toString();
  var precision = 0;
  if (stepString.indexOf(".") >= 0) {
    precision = stepString.length - stepString.indexOf(".") - 1;
  }
  return precision;
}
function getMousePosition(vertical3, e) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical3 ? e.clientY : e.pageX) / zoom;
}
function getTouchPosition(vertical3, e) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical3 ? e.touches[0].clientY : e.touches[0].pageX) / zoom;
}
function getHandleCenterPosition(vertical3, handle) {
  var coords = handle.getBoundingClientRect();
  return vertical3 ? coords.top + coords.height * 0.5 : window.pageXOffset + coords.left + coords.width * 0.5;
}
function ensureValueInRange(val, _ref3) {
  var max4 = _ref3.max, min4 = _ref3.min;
  if (val <= min4) {
    return min4;
  }
  if (val >= max4) {
    return max4;
  }
  return val;
}
function ensureValuePrecision(val, props2) {
  var step3 = props2.step;
  var closestPoint = isFinite(getClosestPoint(val, props2)) ? getClosestPoint(val, props2) : 0;
  return step3 === null ? closestPoint : parseFloat(closestPoint.toFixed(getPrecision2(step3)));
}
function pauseEvent(e) {
  e.stopPropagation();
  e.preventDefault();
}
function calculateNextValue(func, value27, props2) {
  var operations = {
    increase: function increase(a, b) {
      return a + b;
    },
    decrease: function decrease(a, b) {
      return a - b;
    }
  };
  var indexToGet = operations[func](Object.keys(props2.marks).indexOf(JSON.stringify(value27)), 1);
  var keyToGet = Object.keys(props2.marks)[indexToGet];
  if (props2.step) {
    return operations[func](value27, props2.step);
  } else if (!!Object.keys(props2.marks).length && !!props2.marks[keyToGet]) {
    return props2.marks[keyToGet];
  }
  return value27;
}
function getKeyboardValueMutator(e, vertical3, reverse) {
  var increase = "increase";
  var decrease = "decrease";
  var method3 = increase;
  switch (e.keyCode) {
    case KeyCode$2.UP:
      method3 = vertical3 && reverse ? decrease : increase;
      break;
    case KeyCode$2.RIGHT:
      method3 = !vertical3 && reverse ? decrease : increase;
      break;
    case KeyCode$2.DOWN:
      method3 = vertical3 && reverse ? increase : decrease;
      break;
    case KeyCode$2.LEFT:
      method3 = !vertical3 && reverse ? increase : decrease;
      break;
    case KeyCode$2.END:
      return function(value27, props2) {
        return props2.max;
      };
    case KeyCode$2.HOME:
      return function(value27, props2) {
        return props2.min;
      };
    case KeyCode$2.PAGE_UP:
      return function(value27, props2) {
        return value27 + props2.step * 2;
      };
    case KeyCode$2.PAGE_DOWN:
      return function(value27, props2) {
        return value27 - props2.step * 2;
      };
    default:
      return void 0;
  }
  return function(value27, props2) {
    return calculateNextValue(method3, value27, props2);
  };
}
function noop$c() {
}
function createSlider(Component) {
  var propTypes2 = {
    min: PropTypes.number,
    max: PropTypes.number,
    step: PropTypes.number,
    marks: PropTypes.object,
    included: PropTypes.bool,
    prefixCls: PropTypes.string,
    disabled: PropTypes.bool,
    handle: PropTypes.func,
    dots: PropTypes.bool,
    vertical: PropTypes.bool,
    reverse: PropTypes.bool,
    minimumTrackStyle: PropTypes.object,
    maximumTrackStyle: PropTypes.object,
    handleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),
    trackStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),
    railStyle: PropTypes.object,
    dotStyle: PropTypes.object,
    activeDotStyle: PropTypes.object,
    autoFocus: PropTypes.bool
  };
  return {
    name: "createSlider",
    mixins: [Component],
    model: {
      prop: "value",
      event: "change"
    },
    props: initDefaultProps(propTypes2, {
      prefixCls: "rc-slider",
      min: 0,
      max: 100,
      step: 1,
      marks: {},
      included: true,
      disabled: false,
      dots: false,
      vertical: false,
      reverse: false,
      trackStyle: [{}],
      handleStyle: [{}],
      railStyle: {},
      dotStyle: {},
      activeDotStyle: {}
    }),
    data: function data109() {
      var step3 = this.step, max4 = this.max, min4 = this.min;
      var isPointDiffEven = isFinite(max4 - min4) ? (max4 - min4) % step3 === 0 : true;
      warning$4(step3 && Math.floor(step3) === step3 ? isPointDiffEven : true, "Slider", "Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)", max4 - min4, step3);
      this.handlesRefs = {};
      return {};
    },
    mounted: function mounted70() {
      var _this = this;
      this.$nextTick(function() {
        _this.document = _this.$refs.sliderRef && _this.$refs.sliderRef.ownerDocument;
        var autoFocus = _this.autoFocus, disabled = _this.disabled;
        if (autoFocus && !disabled) {
          _this.focus();
        }
      });
    },
    beforeDestroy: function beforeDestroy52() {
      var _this2 = this;
      this.$nextTick(function() {
        _this2.removeDocumentEvents();
      });
    },
    methods: {
      defaultHandle: function defaultHandle(_ref) {
        var index2 = _ref.index, directives = _ref.directives, className = _ref.className, style3 = _ref.style, on = _ref.on, restProps = _default$2(_ref, ["index", "directives", "className", "style", "on"]);
        var h = this.$createElement;
        delete restProps.dragging;
        if (restProps.value === null) {
          return null;
        }
        var handleProps = {
          props: _default$6({}, restProps),
          "class": className,
          style: style3,
          key: index2,
          directives,
          on
        };
        return h(VcHandle, handleProps);
      },
      onMouseDown: function onMouseDown2(e) {
        if (e.button !== 0) {
          return;
        }
        var isVertical2 = this.vertical;
        var position = getMousePosition(isVertical2, e);
        if (!isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical2, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.removeDocumentEvents();
        this.onStart(position);
        this.addDocumentMouseEvents();
        pauseEvent(e);
      },
      onTouchStart: function onTouchStart2(e) {
        if (isNotTouchEvent(e))
          return;
        var isVertical2 = this.vertical;
        var position = getTouchPosition(isVertical2, e);
        if (!isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical2, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.onStart(position);
        this.addDocumentTouchEvents();
        pauseEvent(e);
      },
      onFocus: function onFocus8(e) {
        var vertical3 = this.vertical;
        if (isEventFromHandle(e, this.handlesRefs)) {
          var handlePosition = getHandleCenterPosition(vertical3, e.target);
          this.dragOffset = 0;
          this.onStart(handlePosition);
          pauseEvent(e);
          this.$emit("focus", e);
        }
      },
      onBlur: function onBlur10(e) {
        this.onEnd();
        this.$emit("blur", e);
      },
      onMouseUp: function onMouseUp2() {
        if (this.handlesRefs[this.prevMovedHandleIndex]) {
          this.handlesRefs[this.prevMovedHandleIndex].clickFocus();
        }
      },
      onMouseMove: function onMouseMove2(e) {
        if (!this.$refs.sliderRef) {
          this.onEnd();
          return;
        }
        var position = getMousePosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onTouchMove: function onTouchMove2(e) {
        if (isNotTouchEvent(e) || !this.$refs.sliderRef) {
          this.onEnd();
          return;
        }
        var position = getTouchPosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onKeyDown: function onKeyDown25(e) {
        if (this.$refs.sliderRef && isEventFromHandle(e, this.handlesRefs)) {
          this.onKeyboard(e);
        }
      },
      onClickMarkLabel: function onClickMarkLabel(e, value27) {
        var _this3 = this;
        e.stopPropagation();
        this.onChange({ sValue: value27 });
        this.setState({ sValue: value27 }, function() {
          return _this3.onEnd(true);
        });
      },
      getSliderStart: function getSliderStart() {
        var slider = this.$refs.sliderRef;
        var vertical3 = this.vertical, reverse = this.reverse;
        var rect = slider.getBoundingClientRect();
        if (vertical3) {
          return reverse ? rect.bottom : rect.top;
        }
        return window.pageXOffset + (reverse ? rect.right : rect.left);
      },
      getSliderLength: function getSliderLength() {
        var slider = this.$refs.sliderRef;
        if (!slider) {
          return 0;
        }
        var coords = slider.getBoundingClientRect();
        return this.vertical ? coords.height : coords.width;
      },
      addDocumentTouchEvents: function addDocumentTouchEvents() {
        this.onTouchMoveListener = addEventListenerWrap(this.document, "touchmove", this.onTouchMove);
        this.onTouchUpListener = addEventListenerWrap(this.document, "touchend", this.onEnd);
      },
      addDocumentMouseEvents: function addDocumentMouseEvents() {
        this.onMouseMoveListener = addEventListenerWrap(this.document, "mousemove", this.onMouseMove);
        this.onMouseUpListener = addEventListenerWrap(this.document, "mouseup", this.onEnd);
      },
      removeDocumentEvents: function removeDocumentEvents() {
        this.onTouchMoveListener && this.onTouchMoveListener.remove();
        this.onTouchUpListener && this.onTouchUpListener.remove();
        this.onMouseMoveListener && this.onMouseMoveListener.remove();
        this.onMouseUpListener && this.onMouseUpListener.remove();
      },
      focus: function focus35() {
        if (!this.disabled) {
          this.handlesRefs[0].focus();
        }
      },
      blur: function blur32() {
        var _this4 = this;
        if (!this.disabled) {
          Object.keys(this.handlesRefs).forEach(function(key2) {
            if (_this4.handlesRefs[key2] && _this4.handlesRefs[key2].blur) {
              _this4.handlesRefs[key2].blur();
            }
          });
        }
      },
      calcValue: function calcValue(offset4) {
        var vertical3 = this.vertical, min4 = this.min, max4 = this.max;
        var ratio = Math.abs(Math.max(offset4, 0) / this.getSliderLength());
        var value27 = vertical3 ? (1 - ratio) * (max4 - min4) + min4 : ratio * (max4 - min4) + min4;
        return value27;
      },
      calcValueByPos: function calcValueByPos(position) {
        var sign2 = this.reverse ? -1 : 1;
        var pixelOffset = sign2 * (position - this.getSliderStart());
        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
        return nextValue;
      },
      calcOffset: function calcOffset(value27) {
        var min4 = this.min, max4 = this.max;
        var ratio = (value27 - min4) / (max4 - min4);
        return ratio * 100;
      },
      saveHandle: function saveHandle(index2, handle) {
        this.handlesRefs[index2] = handle;
      }
    },
    render: function render249(h) {
      var _classNames;
      var prefixCls2 = this.prefixCls, marks = this.marks, dots = this.dots, step3 = this.step, included = this.included, disabled = this.disabled, vertical3 = this.vertical, reverse = this.reverse, min4 = this.min, max4 = this.max, maximumTrackStyle = this.maximumTrackStyle, railStyle = this.railStyle, dotStyle = this.dotStyle, activeDotStyle = this.activeDotStyle;
      var _renderSlider = this.renderSlider(h), tracks = _renderSlider.tracks, handles = _renderSlider.handles;
      var sliderClassName = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-with-marks", Object.keys(marks).length), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _default$8(_classNames, prefixCls2 + "-vertical", vertical3), _classNames));
      var markProps = {
        props: {
          vertical: vertical3,
          marks,
          included,
          lowerBound: this.getLowerBound(),
          upperBound: this.getUpperBound(),
          max: max4,
          min: min4,
          reverse,
          className: prefixCls2 + "-mark"
        },
        on: {
          clickLabel: disabled ? noop$c : this.onClickMarkLabel
        }
      };
      return h(
        "div",
        {
          ref: "sliderRef",
          attrs: {
            tabIndex: "-1"
          },
          "class": sliderClassName,
          on: {
            "touchstart": disabled ? noop$c : this.onTouchStart,
            "mousedown": disabled ? noop$c : this.onMouseDown,
            "mouseup": disabled ? noop$c : this.onMouseUp,
            "keydown": disabled ? noop$c : this.onKeyDown,
            "focus": disabled ? noop$c : this.onFocus,
            "blur": disabled ? noop$c : this.onBlur
          }
        },
        [h("div", {
          "class": prefixCls2 + "-rail",
          style: _default$6({}, maximumTrackStyle, railStyle)
        }), tracks, h(Steps$4, {
          attrs: {
            prefixCls: prefixCls2,
            vertical: vertical3,
            reverse,
            marks,
            dots,
            step: step3,
            included,
            lowerBound: this.getLowerBound(),
            upperBound: this.getUpperBound(),
            max: max4,
            min: min4,
            dotStyle,
            activeDotStyle
          }
        }), handles, h(Marks$1, markProps), this.$slots["default"]]
      );
    }
  };
}
var Slider$2 = {
  name: "Slider",
  mixins: [BaseMixin],
  props: {
    defaultValue: PropTypes.number,
    value: PropTypes.number,
    disabled: PropTypes.bool,
    autoFocus: PropTypes.bool,
    tabIndex: PropTypes.number,
    reverse: PropTypes.bool,
    min: PropTypes.number,
    max: PropTypes.number
  },
  data: function data80() {
    var defaultValue = this.defaultValue !== void 0 ? this.defaultValue : this.min;
    var value27 = this.value !== void 0 ? this.value : defaultValue;
    warning$4(!hasProp(this, "minimumTrackStyle"), "Slider", "minimumTrackStyle will be deprecate, please use trackStyle instead.");
    warning$4(!hasProp(this, "maximumTrackStyle"), "Slider", "maximumTrackStyle will be deprecate, please use railStyle instead.");
    return {
      sValue: this.trimAlignValue(value27),
      dragging: false
    };
  },
  watch: {
    value: {
      handler: function handler(val) {
        this.setChangeValue(val);
      },
      deep: true
    },
    min: function min2() {
      var sValue = this.sValue;
      this.setChangeValue(sValue);
    },
    max: function max2() {
      var sValue = this.sValue;
      this.setChangeValue(sValue);
    }
  },
  methods: {
    setChangeValue: function setChangeValue(value27) {
      var newValue = value27 !== void 0 ? value27 : this.sValue;
      var nextValue = this.trimAlignValue(newValue, this.$props);
      if (nextValue === this.sValue)
        return;
      this.setState({ sValue: nextValue });
      if (isValueOutOfRange(newValue, this.$props)) {
        this.$emit("change", nextValue);
      }
    },
    onChange: function onChange9(state) {
      var isNotControlled = !hasProp(this, "value");
      var nextState = state.sValue > this.max ? _default$6({}, state, { sValue: this.max }) : state;
      if (isNotControlled) {
        this.setState(nextState);
      }
      var changedValue = nextState.sValue;
      this.$emit("change", changedValue);
    },
    onStart: function onStart(position) {
      this.setState({ dragging: true });
      var sValue = this.sValue;
      this.$emit("beforeChange", sValue);
      var value27 = this.calcValueByPos(position);
      this.startValue = value27;
      this.startPosition = position;
      if (value27 === sValue)
        return;
      this.prevMovedHandleIndex = 0;
      this.onChange({ sValue: value27 });
    },
    onEnd: function onEnd(force) {
      var dragging = this.dragging;
      this.removeDocumentEvents();
      if (dragging || force) {
        this.$emit("afterChange", this.sValue);
      }
      this.setState({ dragging: false });
    },
    onMove: function onMove(e, position) {
      pauseEvent(e);
      var sValue = this.sValue;
      var value27 = this.calcValueByPos(position);
      if (value27 === sValue)
        return;
      this.onChange({ sValue: value27 });
    },
    onKeyboard: function onKeyboard(e) {
      var _$props = this.$props, reverse = _$props.reverse, vertical3 = _$props.vertical;
      var valueMutator = getKeyboardValueMutator(e, vertical3, reverse);
      if (valueMutator) {
        pauseEvent(e);
        var sValue = this.sValue;
        var mutatedValue = valueMutator(sValue, this.$props);
        var value27 = this.trimAlignValue(mutatedValue);
        if (value27 === sValue)
          return;
        this.onChange({ sValue: value27 });
        this.$emit("afterChange", value27);
        this.onEnd();
      }
    },
    getLowerBound: function getLowerBound() {
      return this.min;
    },
    getUpperBound: function getUpperBound() {
      return this.sValue;
    },
    trimAlignValue: function trimAlignValue(v) {
      var nextProps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (v === null) {
        return null;
      }
      var mergedProps = _default$6({}, this.$props, nextProps);
      var val = ensureValueInRange(v, mergedProps);
      return ensureValuePrecision(val, mergedProps);
    },
    getTrack: function getTrack(_ref) {
      var prefixCls2 = _ref.prefixCls, reverse = _ref.reverse, vertical3 = _ref.vertical, included = _ref.included, offset4 = _ref.offset, minimumTrackStyle = _ref.minimumTrackStyle, _trackStyle = _ref._trackStyle;
      var h = this.$createElement;
      return h(Track$1, {
        "class": prefixCls2 + "-track",
        attrs: {
          vertical: vertical3,
          included,
          offset: 0,
          reverse,
          length: offset4
        },
        style: _default$6({}, minimumTrackStyle, _trackStyle)
      });
    },
    renderSlider: function renderSlider() {
      var _this = this;
      var prefixCls2 = this.prefixCls, vertical3 = this.vertical, included = this.included, disabled = this.disabled, minimumTrackStyle = this.minimumTrackStyle, trackStyle = this.trackStyle, handleStyle = this.handleStyle, tabIndex = this.tabIndex, min4 = this.min, max4 = this.max, reverse = this.reverse, handle = this.handle, defaultHandle = this.defaultHandle;
      var handleGenerator = handle || defaultHandle;
      var sValue = this.sValue, dragging = this.dragging;
      var offset4 = this.calcOffset(sValue);
      var handles = handleGenerator({
        className: prefixCls2 + "-handle",
        prefixCls: prefixCls2,
        vertical: vertical3,
        offset: offset4,
        value: sValue,
        dragging,
        disabled,
        min: min4,
        max: max4,
        reverse,
        index: 0,
        tabIndex,
        style: handleStyle[0] || handleStyle,
        directives: [{
          name: "ant-ref",
          value: function value27(h) {
            return _this.saveHandle(0, h);
          }
        }],
        on: {
          focus: this.onFocus,
          blur: this.onBlur
        }
      });
      var _trackStyle = trackStyle[0] || trackStyle;
      return {
        tracks: this.getTrack({
          prefixCls: prefixCls2,
          reverse,
          vertical: vertical3,
          included,
          offset: offset4,
          minimumTrackStyle,
          _trackStyle
        }),
        handles
      };
    }
  }
};
var VcSlider = createSlider(Slider$2);
var _trimAlignValue = function _trimAlignValue2(_ref) {
  var value27 = _ref.value, handle = _ref.handle, bounds = _ref.bounds, props2 = _ref.props;
  var allowCross = props2.allowCross, pushable = props2.pushable;
  var thershold = Number(pushable);
  var valInRange = ensureValueInRange(value27, props2);
  var valNotConflict = valInRange;
  if (!allowCross && handle != null && bounds !== void 0) {
    if (handle > 0 && valInRange <= bounds[handle - 1] + thershold) {
      valNotConflict = bounds[handle - 1] + thershold;
    }
    if (handle < bounds.length - 1 && valInRange >= bounds[handle + 1] - thershold) {
      valNotConflict = bounds[handle + 1] - thershold;
    }
  }
  return ensureValuePrecision(valNotConflict, props2);
};
var rangeProps = {
  defaultValue: PropTypes.arrayOf(PropTypes.number),
  value: PropTypes.arrayOf(PropTypes.number),
  count: PropTypes.number,
  pushable: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),
  allowCross: PropTypes.bool,
  disabled: PropTypes.bool,
  reverse: PropTypes.bool,
  tabIndex: PropTypes.arrayOf(PropTypes.number),
  prefixCls: PropTypes.string,
  min: PropTypes.number,
  max: PropTypes.number,
  autoFocus: PropTypes.bool
};
var Range = {
  name: "Range",
  displayName: "Range",
  mixins: [BaseMixin],
  props: initDefaultProps(rangeProps, {
    count: 1,
    allowCross: true,
    pushable: false,
    tabIndex: []
  }),
  data: function data81() {
    var _this = this;
    var count2 = this.count, min4 = this.min, max4 = this.max;
    var initialValue = Array.apply(void 0, _default$5(Array(count2 + 1))).map(function() {
      return min4;
    });
    var defaultValue = hasProp(this, "defaultValue") ? this.defaultValue : initialValue;
    var value27 = this.value;
    if (value27 === void 0) {
      value27 = defaultValue;
    }
    var bounds = value27.map(function(v, i) {
      return _trimAlignValue({
        value: v,
        handle: i,
        props: _this.$props
      });
    });
    var recent = bounds[0] === max4 ? 0 : bounds.length - 1;
    return {
      sHandle: null,
      recent,
      bounds
    };
  },
  watch: {
    value: {
      handler: function handler2(val) {
        var bounds = this.bounds;
        this.setChangeValue(val || bounds);
      },
      deep: true
    },
    min: function min3() {
      var value27 = this.value;
      this.setChangeValue(value27 || this.bounds);
    },
    max: function max3() {
      var value27 = this.value;
      this.setChangeValue(value27 || this.bounds);
    }
  },
  methods: {
    setChangeValue: function setChangeValue2(value27) {
      var _this2 = this;
      var bounds = this.bounds;
      var nextBounds = value27.map(function(v, i) {
        return _trimAlignValue({
          value: v,
          handle: i,
          bounds,
          props: _this2.$props
        });
      });
      if (nextBounds.length === bounds.length && nextBounds.every(function(v, i) {
        return v === bounds[i];
      }))
        return;
      this.setState({ bounds: nextBounds });
      if (value27.some(function(v) {
        return isValueOutOfRange(v, _this2.$props);
      })) {
        var newValues = value27.map(function(v) {
          return ensureValueInRange(v, _this2.$props);
        });
        this.$emit("change", newValues);
      }
    },
    onChange: function onChange10(state) {
      var isNotControlled = !hasProp(this, "value");
      if (isNotControlled) {
        this.setState(state);
      } else {
        var controlledState = {};
        ["sHandle", "recent"].forEach(function(item) {
          if (state[item] !== void 0) {
            controlledState[item] = state[item];
          }
        });
        if (Object.keys(controlledState).length) {
          this.setState(controlledState);
        }
      }
      var data109 = _default$6({}, this.$data, state);
      var changedValue = data109.bounds;
      this.$emit("change", changedValue);
    },
    onStart: function onStart2(position) {
      var bounds = this.bounds;
      this.$emit("beforeChange", bounds);
      var value27 = this.calcValueByPos(position);
      this.startValue = value27;
      this.startPosition = position;
      var closestBound = this.getClosestBound(value27);
      this.prevMovedHandleIndex = this.getBoundNeedMoving(value27, closestBound);
      this.setState({
        sHandle: this.prevMovedHandleIndex,
        recent: this.prevMovedHandleIndex
      });
      var prevValue = bounds[this.prevMovedHandleIndex];
      if (value27 === prevValue)
        return;
      var nextBounds = [].concat(_default$5(bounds));
      nextBounds[this.prevMovedHandleIndex] = value27;
      this.onChange({ bounds: nextBounds });
    },
    onEnd: function onEnd2(force) {
      var sHandle = this.sHandle;
      this.removeDocumentEvents();
      if (sHandle !== null || force) {
        this.$emit("afterChange", this.bounds);
      }
      this.setState({ sHandle: null });
    },
    onMove: function onMove2(e, position) {
      pauseEvent(e);
      var bounds = this.bounds, sHandle = this.sHandle;
      var value27 = this.calcValueByPos(position);
      var oldValue = bounds[sHandle];
      if (value27 === oldValue)
        return;
      this.moveTo(value27);
    },
    onKeyboard: function onKeyboard2(e) {
      var _$props = this.$props, reverse = _$props.reverse, vertical3 = _$props.vertical;
      var valueMutator = getKeyboardValueMutator(e, vertical3, reverse);
      if (valueMutator) {
        pauseEvent(e);
        var bounds = this.bounds, sHandle = this.sHandle;
        var oldValue = bounds[sHandle === null ? this.recent : sHandle];
        var mutatedValue = valueMutator(oldValue, this.$props);
        var value27 = _trimAlignValue({
          value: mutatedValue,
          handle: sHandle,
          bounds,
          props: this.$props
        });
        if (value27 === oldValue)
          return;
        var isFromKeyboardEvent = true;
        this.moveTo(value27, isFromKeyboardEvent);
      }
    },
    getClosestBound: function getClosestBound(value27) {
      var bounds = this.bounds;
      var closestBound = 0;
      for (var i = 1; i < bounds.length - 1; ++i) {
        if (value27 > bounds[i]) {
          closestBound = i;
        }
      }
      if (Math.abs(bounds[closestBound + 1] - value27) < Math.abs(bounds[closestBound] - value27)) {
        closestBound += 1;
      }
      return closestBound;
    },
    getBoundNeedMoving: function getBoundNeedMoving(value27, closestBound) {
      var bounds = this.bounds, recent = this.recent;
      var boundNeedMoving = closestBound;
      var isAtTheSamePoint = bounds[closestBound + 1] === bounds[closestBound];
      if (isAtTheSamePoint && bounds[recent] === bounds[closestBound]) {
        boundNeedMoving = recent;
      }
      if (isAtTheSamePoint && value27 !== bounds[closestBound + 1]) {
        boundNeedMoving = value27 < bounds[closestBound + 1] ? closestBound : closestBound + 1;
      }
      return boundNeedMoving;
    },
    getLowerBound: function getLowerBound2() {
      return this.bounds[0];
    },
    getUpperBound: function getUpperBound2() {
      var bounds = this.bounds;
      return bounds[bounds.length - 1];
    },
    getPoints: function getPoints() {
      var marks = this.marks, step3 = this.step, min4 = this.min, max4 = this.max;
      var cache = this._getPointsCache;
      if (!cache || cache.marks !== marks || cache.step !== step3) {
        var pointsObject = _default$6({}, marks);
        if (step3 !== null) {
          for (var point = min4; point <= max4; point += step3) {
            pointsObject[point] = point;
          }
        }
        var points = Object.keys(pointsObject).map(parseFloat);
        points.sort(function(a, b) {
          return a - b;
        });
        this._getPointsCache = { marks, step: step3, points };
      }
      return this._getPointsCache.points;
    },
    moveTo: function moveTo(value27, isFromKeyboardEvent) {
      var _this3 = this;
      var nextBounds = [].concat(_default$5(this.bounds));
      var sHandle = this.sHandle, recent = this.recent;
      var handle = sHandle === null ? recent : sHandle;
      nextBounds[handle] = value27;
      var nextHandle = handle;
      if (this.$props.pushable !== false) {
        this.pushSurroundingHandles(nextBounds, nextHandle);
      } else if (this.$props.allowCross) {
        nextBounds.sort(function(a, b) {
          return a - b;
        });
        nextHandle = nextBounds.indexOf(value27);
      }
      this.onChange({
        recent: nextHandle,
        sHandle: nextHandle,
        bounds: nextBounds
      });
      if (isFromKeyboardEvent) {
        this.$emit("afterChange", nextBounds);
        this.setState({}, function() {
          _this3.handlesRefs[nextHandle].focus();
        });
        this.onEnd();
      }
    },
    pushSurroundingHandles: function pushSurroundingHandles(bounds, handle) {
      var value27 = bounds[handle];
      var threshold = this.pushable;
      threshold = Number(threshold);
      var direction = 0;
      if (bounds[handle + 1] - value27 < threshold) {
        direction = 1;
      }
      if (value27 - bounds[handle - 1] < threshold) {
        direction = -1;
      }
      if (direction === 0) {
        return;
      }
      var nextHandle = handle + direction;
      var diffToNext = direction * (bounds[nextHandle] - value27);
      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        bounds[handle] = bounds[nextHandle] - direction * threshold;
      }
    },
    pushHandle: function pushHandle(bounds, handle, direction, amount) {
      var originalValue = bounds[handle];
      var currentValue = bounds[handle];
      while (direction * (currentValue - originalValue) < amount) {
        if (!this.pushHandleOnePoint(bounds, handle, direction)) {
          bounds[handle] = originalValue;
          return false;
        }
        currentValue = bounds[handle];
      }
      return true;
    },
    pushHandleOnePoint: function pushHandleOnePoint(bounds, handle, direction) {
      var points = this.getPoints();
      var pointIndex = points.indexOf(bounds[handle]);
      var nextPointIndex = pointIndex + direction;
      if (nextPointIndex >= points.length || nextPointIndex < 0) {
        return false;
      }
      var nextHandle = handle + direction;
      var nextValue = points[nextPointIndex];
      var threshold = this.pushable;
      var diffToNext = direction * (bounds[nextHandle] - nextValue);
      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        return false;
      }
      bounds[handle] = nextValue;
      return true;
    },
    trimAlignValue: function trimAlignValue2(value27) {
      var sHandle = this.sHandle, bounds = this.bounds;
      return _trimAlignValue({
        value: value27,
        handle: sHandle,
        bounds,
        props: this.$props
      });
    },
    ensureValueNotConflict: function ensureValueNotConflict(handle, val, _ref2) {
      var allowCross = _ref2.allowCross, thershold = _ref2.pushable;
      var state = this.$data || {};
      var bounds = state.bounds;
      handle = handle === void 0 ? state.sHandle : handle;
      thershold = Number(thershold);
      if (!allowCross && handle != null && bounds !== void 0) {
        if (handle > 0 && val <= bounds[handle - 1] + thershold) {
          return bounds[handle - 1] + thershold;
        }
        if (handle < bounds.length - 1 && val >= bounds[handle + 1] - thershold) {
          return bounds[handle + 1] - thershold;
        }
      }
      return val;
    },
    getTrack: function getTrack2(_ref3) {
      var bounds = _ref3.bounds, prefixCls2 = _ref3.prefixCls, reverse = _ref3.reverse, vertical3 = _ref3.vertical, included = _ref3.included, offsets = _ref3.offsets, trackStyle = _ref3.trackStyle;
      var h = this.$createElement;
      return bounds.slice(0, -1).map(function(_, index2) {
        var _classNames;
        var i = index2 + 1;
        var trackClassName = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-track", true), _default$8(_classNames, prefixCls2 + "-track-" + i, true), _classNames));
        return h(Track$1, {
          "class": trackClassName,
          attrs: {
            vertical: vertical3,
            reverse,
            included,
            offset: offsets[i - 1],
            length: offsets[i] - offsets[i - 1]
          },
          style: trackStyle[index2],
          key: i
        });
      });
    },
    renderSlider: function renderSlider2() {
      var _this4 = this;
      var sHandle = this.sHandle, bounds = this.bounds, prefixCls2 = this.prefixCls, vertical3 = this.vertical, included = this.included, disabled = this.disabled, min4 = this.min, max4 = this.max, reverse = this.reverse, handle = this.handle, defaultHandle = this.defaultHandle, trackStyle = this.trackStyle, handleStyle = this.handleStyle, tabIndex = this.tabIndex;
      var handleGenerator = handle || defaultHandle;
      var offsets = bounds.map(function(v) {
        return _this4.calcOffset(v);
      });
      var handleClassName = prefixCls2 + "-handle";
      var handles = bounds.map(function(v, i) {
        var _classNames2;
        var _tabIndex = tabIndex[i] || 0;
        if (disabled || tabIndex[i] === null) {
          _tabIndex = null;
        }
        return handleGenerator({
          className: classNames((_classNames2 = {}, _default$8(_classNames2, handleClassName, true), _default$8(_classNames2, handleClassName + "-" + (i + 1), true), _classNames2)),
          prefixCls: prefixCls2,
          vertical: vertical3,
          offset: offsets[i],
          value: v,
          dragging: sHandle === i,
          index: i,
          tabIndex: _tabIndex,
          min: min4,
          max: max4,
          reverse,
          disabled,
          style: handleStyle[i],
          directives: [{
            name: "ant-ref",
            value: function value27(h) {
              return _this4.saveHandle(i, h);
            }
          }],
          on: {
            focus: _this4.onFocus,
            blur: _this4.onBlur
          }
        });
      });
      return {
        tracks: this.getTrack({
          bounds,
          prefixCls: prefixCls2,
          reverse,
          vertical: vertical3,
          included,
          offsets,
          trackStyle
        }),
        handles
      };
    }
  }
};
var VcRange = createSlider(Range);
var tooltipProps = abstractTooltipProps();
var SliderProps = function SliderProps2() {
  return {
    prefixCls: PropTypes.string,
    tooltipPrefixCls: PropTypes.string,
    range: PropTypes.bool,
    reverse: PropTypes.bool,
    min: PropTypes.number,
    max: PropTypes.number,
    step: PropTypes.oneOfType([PropTypes.number, PropTypes.any]),
    marks: PropTypes.object,
    dots: PropTypes.bool,
    value: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),
    defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),
    included: PropTypes.bool,
    disabled: PropTypes.bool,
    vertical: PropTypes.bool,
    tipFormatter: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
    tooltipVisible: PropTypes.bool,
    tooltipPlacement: tooltipProps.placement,
    getTooltipPopupContainer: PropTypes.func
  };
};
var Slider = {
  name: "ASlider",
  model: {
    prop: "value",
    event: "change"
  },
  mixins: [BaseMixin],
  inject: {
    configProvider: { "default": function _default93() {
      return ConfigConsumerProps;
    } }
  },
  props: _default$6({}, SliderProps(), {
    tipFormatter: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).def(function(value27) {
      return value27.toString();
    })
  }),
  data: function data82() {
    return {
      visibles: {}
    };
  },
  methods: {
    toggleTooltipVisible: function toggleTooltipVisible(index2, visible11) {
      this.setState(function(_ref) {
        var visibles = _ref.visibles;
        return {
          visibles: _default$6({}, visibles, _default$8({}, index2, visible11))
        };
      });
    },
    handleWithTooltip: function handleWithTooltip(tooltipPrefixCls, prefixCls2, _ref2) {
      var _this = this;
      var value27 = _ref2.value, dragging = _ref2.dragging, index2 = _ref2.index, directives = _ref2.directives, on = _ref2.on, restProps = _default$2(_ref2, ["value", "dragging", "index", "directives", "on"]);
      var h = this.$createElement;
      var _$props = this.$props, tipFormatter = _$props.tipFormatter, tooltipVisible = _$props.tooltipVisible, tooltipPlacement = _$props.tooltipPlacement, getTooltipPopupContainer = _$props.getTooltipPopupContainer;
      var visibles = this.visibles;
      var isTipFormatter = tipFormatter ? visibles[index2] || dragging : false;
      var visible11 = tooltipVisible || tooltipVisible === void 0 && isTipFormatter;
      var tooltipProps2 = {
        props: {
          prefixCls: tooltipPrefixCls,
          title: tipFormatter ? tipFormatter(value27) : "",
          visible: visible11,
          placement: tooltipPlacement || "top",
          transitionName: "zoom-down",
          overlayClassName: prefixCls2 + "-tooltip",
          getPopupContainer: getTooltipPopupContainer || function() {
            return document.body;
          }
        },
        key: index2
      };
      var handleProps = {
        props: _default$6({
          value: value27
        }, restProps),
        directives,
        on: _default$6({}, on, {
          mouseenter: function mouseenter() {
            return _this.toggleTooltipVisible(index2, true);
          },
          mouseleave: function mouseleave() {
            return _this.toggleTooltipVisible(index2, false);
          }
        })
      };
      return h(
        ToolTip,
        tooltipProps2,
        [h(VcHandle, handleProps)]
      );
    },
    focus: function focus26() {
      this.$refs.sliderRef.focus();
    },
    blur: function blur23() {
      this.$refs.sliderRef.blur();
    }
  },
  render: function render174() {
    var _this2 = this;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), range2 = _getOptionProps.range, customizePrefixCls = _getOptionProps.prefixCls, customizeTooltipPrefixCls = _getOptionProps.tooltipPrefixCls, restProps = _default$2(_getOptionProps, ["range", "prefixCls", "tooltipPrefixCls"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("slider", customizePrefixCls);
    var tooltipPrefixCls = getPrefixCls5("tooltip", customizeTooltipPrefixCls);
    var listeners = getListeners(this);
    if (range2) {
      var vcRangeProps = {
        props: _default$6({}, restProps, {
          prefixCls: prefixCls2,
          tooltipPrefixCls,
          handle: function handle(info3) {
            return _this2.handleWithTooltip(tooltipPrefixCls, prefixCls2, info3);
          }
        }),
        ref: "sliderRef",
        on: listeners
      };
      return h(VcRange, vcRangeProps);
    }
    var vcSliderProps = {
      props: _default$6({}, restProps, {
        prefixCls: prefixCls2,
        tooltipPrefixCls,
        handle: function handle(info3) {
          return _this2.handleWithTooltip(tooltipPrefixCls, prefixCls2, info3);
        }
      }),
      ref: "sliderRef",
      on: listeners
    };
    return h(VcSlider, vcSliderProps);
  }
};
Slider.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Slider.name, Slider);
};
var Slider$1 = Slider;
var MAX_SAFE_INTEGER = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat$1(string2, n) {
  var result = "";
  if (!string2 || n < 1 || n > MAX_SAFE_INTEGER) {
    return result;
  }
  do {
    if (n % 2) {
      result += string2;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string2 += string2;
    }
  } while (n);
  return result;
}
var _baseRepeat = baseRepeat$1;
var baseSlice = _baseSlice;
function castSlice$1(array3, start, end) {
  var length = array3.length;
  end = end === void 0 ? length : end;
  return !start && end >= length ? array3 : baseSlice(array3, start, end);
}
var _castSlice = castSlice$1;
var rsAstralRange$2 = "\\ud800-\\udfff", rsComboMarksRange$2 = "\\u0300-\\u036f", reComboHalfMarksRange$2 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$2 = "\\u20d0-\\u20ff", rsComboRange$2 = rsComboMarksRange$2 + reComboHalfMarksRange$2 + rsComboSymbolsRange$2, rsVarRange$2 = "\\ufe0e\\ufe0f";
var rsZWJ$2 = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ$2 + rsAstralRange$2 + rsComboRange$2 + rsVarRange$2 + "]");
function hasUnicode$3(string2) {
  return reHasUnicode.test(string2);
}
var _hasUnicode = hasUnicode$3;
var baseProperty = _baseProperty;
var asciiSize$1 = baseProperty("length");
var _asciiSize = asciiSize$1;
var rsAstralRange$1 = "\\ud800-\\udfff", rsComboMarksRange$1 = "\\u0300-\\u036f", reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$1 = "\\u20d0-\\u20ff", rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1, rsVarRange$1 = "\\ufe0e\\ufe0f";
var rsAstral$1 = "[" + rsAstralRange$1 + "]", rsCombo$1 = "[" + rsComboRange$1 + "]", rsFitz$1 = "\\ud83c[\\udffb-\\udfff]", rsModifier$1 = "(?:" + rsCombo$1 + "|" + rsFitz$1 + ")", rsNonAstral$1 = "[^" + rsAstralRange$1 + "]", rsRegional$1 = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair$1 = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsZWJ$1 = "\\u200d";
var reOptMod$1 = rsModifier$1 + "?", rsOptVar$1 = "[" + rsVarRange$1 + "]?", rsOptJoin$1 = "(?:" + rsZWJ$1 + "(?:" + [rsNonAstral$1, rsRegional$1, rsSurrPair$1].join("|") + ")" + rsOptVar$1 + reOptMod$1 + ")*", rsSeq$1 = rsOptVar$1 + reOptMod$1 + rsOptJoin$1, rsSymbol$1 = "(?:" + [rsNonAstral$1 + rsCombo$1 + "?", rsCombo$1, rsRegional$1, rsSurrPair$1, rsAstral$1].join("|") + ")";
var reUnicode$1 = RegExp(rsFitz$1 + "(?=" + rsFitz$1 + ")|" + rsSymbol$1 + rsSeq$1, "g");
function unicodeSize$1(string2) {
  var result = reUnicode$1.lastIndex = 0;
  while (reUnicode$1.test(string2)) {
    ++result;
  }
  return result;
}
var _unicodeSize = unicodeSize$1;
var asciiSize = _asciiSize, hasUnicode$2 = _hasUnicode, unicodeSize = _unicodeSize;
function stringSize$3(string2) {
  return hasUnicode$2(string2) ? unicodeSize(string2) : asciiSize(string2);
}
var _stringSize = stringSize$3;
function asciiToArray$1(string2) {
  return string2.split("");
}
var _asciiToArray = asciiToArray$1;
var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsVarRange = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange + "]", rsCombo = "[" + rsComboRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsZWJ = "\\u200d";
var reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray$1(string2) {
  return string2.match(reUnicode) || [];
}
var _unicodeToArray = unicodeToArray$1;
var asciiToArray = _asciiToArray, hasUnicode$1 = _hasUnicode, unicodeToArray = _unicodeToArray;
function stringToArray$1(string2) {
  return hasUnicode$1(string2) ? unicodeToArray(string2) : asciiToArray(string2);
}
var _stringToArray = stringToArray$1;
var baseRepeat = _baseRepeat, baseToString = _baseToString, castSlice = _castSlice, hasUnicode = _hasUnicode, stringSize$2 = _stringSize, stringToArray = _stringToArray;
var nativeCeil = Math.ceil;
function createPadding$2(length, chars) {
  chars = chars === void 0 ? " " : baseToString(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat(chars, length) : chars;
  }
  var result = baseRepeat(chars, nativeCeil(length / stringSize$2(chars)));
  return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join("") : result.slice(0, length);
}
var _createPadding = createPadding$2;
var createPadding$1 = _createPadding, stringSize$1 = _stringSize, toInteger$1 = toInteger_1, toString$1 = toString_1;
function padEnd(string2, length, chars) {
  string2 = toString$1(string2);
  length = toInteger$1(length);
  var strLength = length ? stringSize$1(string2) : 0;
  return length && strLength < length ? string2 + createPadding$1(length - strLength, chars) : string2;
}
var padEnd_1 = padEnd;
var padEnd$1 = padEnd_1;
var StatisticNumber = {
  name: "AStatisticNumber",
  functional: true,
  render: function render175(h, context) {
    var _context$props = context.props, value27 = _context$props.value, formatter = _context$props.formatter, precision = _context$props.precision, decimalSeparator = _context$props.decimalSeparator, _context$props$groupS = _context$props.groupSeparator, groupSeparator = _context$props$groupS === void 0 ? "" : _context$props$groupS, prefixCls2 = _context$props.prefixCls;
    var valueNode = void 0;
    if (typeof formatter === "function") {
      valueNode = formatter({ value: value27, h });
    } else {
      var val = String(value27);
      var cells = val.match(/^(-?)(\d*)(\.(\d+))?$/);
      if (!cells) {
        valueNode = val;
      } else {
        var negative = cells[1];
        var int = cells[2] || "0";
        var decimal = cells[4] || "";
        int = int.replace(/\B(?=(\d{3})+(?!\d))/g, groupSeparator);
        if (typeof precision === "number") {
          decimal = padEnd$1(decimal, precision, "0").slice(0, precision);
        }
        if (decimal) {
          decimal = "" + decimalSeparator + decimal;
        }
        valueNode = [h(
          "span",
          { key: "int", "class": prefixCls2 + "-content-value-int" },
          [negative, int]
        ), decimal && h(
          "span",
          { key: "decimal", "class": prefixCls2 + "-content-value-decimal" },
          [decimal]
        )];
      }
    }
    return h(
      "span",
      { "class": prefixCls2 + "-content-value" },
      [valueNode]
    );
  }
};
var StatisticProps = {
  prefixCls: PropTypes.string,
  decimalSeparator: PropTypes.string,
  groupSeparator: PropTypes.string,
  format: PropTypes.string,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),
  valueStyle: PropTypes.any,
  valueRender: PropTypes.any,
  formatter: PropTypes.any,
  precision: PropTypes.number,
  prefix: PropTypes.any,
  suffix: PropTypes.any,
  title: PropTypes.any
};
var Statistic = {
  name: "AStatistic",
  props: initDefaultProps(StatisticProps, {
    decimalSeparator: ".",
    groupSeparator: ","
  }),
  inject: {
    configProvider: { "default": function _default94() {
      return ConfigConsumerProps;
    } }
  },
  render: function render176() {
    var h = arguments[0];
    var _$props = this.$props, customizePrefixCls = _$props.prefixCls, _$props$value = _$props.value, value27 = _$props$value === void 0 ? 0 : _$props$value, valueStyle = _$props.valueStyle, valueRender = _$props.valueRender;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("statistic", customizePrefixCls);
    var title = getComponentFromProp(this, "title");
    var prefix = getComponentFromProp(this, "prefix");
    var suffix2 = getComponentFromProp(this, "suffix");
    var formatter = getComponentFromProp(this, "formatter", {}, false);
    var valueNode = h(StatisticNumber, { props: _default$6({}, this.$props, { prefixCls: prefixCls2, value: value27, formatter }) });
    if (valueRender) {
      valueNode = valueRender(valueNode);
    }
    return h(
      "div",
      { "class": prefixCls2 },
      [title && h(
        "div",
        { "class": prefixCls2 + "-title" },
        [title]
      ), h(
        "div",
        { style: valueStyle, "class": prefixCls2 + "-content" },
        [prefix && h(
          "span",
          { "class": prefixCls2 + "-content-prefix" },
          [prefix]
        ), valueNode, suffix2 && h(
          "span",
          { "class": prefixCls2 + "-content-suffix" },
          [suffix2]
        )]
      )]
    );
  }
};
var createPadding = _createPadding, stringSize = _stringSize, toInteger = toInteger_1, toString = toString_1;
function padStart(string2, length, chars) {
  string2 = toString(string2);
  length = toInteger(length);
  var strLength = length ? stringSize(string2) : 0;
  return length && strLength < length ? createPadding(length - strLength, chars) + string2 : string2;
}
var padStart_1 = padStart;
var timeUnits = [
  ["Y", 1e3 * 60 * 60 * 24 * 365],
  ["M", 1e3 * 60 * 60 * 24 * 30],
  ["D", 1e3 * 60 * 60 * 24],
  ["H", 1e3 * 60 * 60],
  ["m", 1e3 * 60],
  ["s", 1e3],
  ["S", 1]
];
function formatTimeStr(duration2, format3) {
  var leftDuration = duration2;
  var escapeRegex = /\[[^\]]*\]/g;
  var keepList = (format3.match(escapeRegex) || []).map(function(str) {
    return str.slice(1, -1);
  });
  var templateText = format3.replace(escapeRegex, "[]");
  var replacedText = timeUnits.reduce(function(current2, _ref) {
    var _ref2 = _default$4(_ref, 2), name = _ref2[0], unit = _ref2[1];
    if (current2.indexOf(name) !== -1) {
      var value27 = Math.floor(leftDuration / unit);
      leftDuration -= value27 * unit;
      return current2.replace(new RegExp(name + "+", "g"), function(match5) {
        var len = match5.length;
        return padStart_1(value27.toString(), len, "0");
      });
    }
    return current2;
  }, templateText);
  var index2 = 0;
  return replacedText.replace(escapeRegex, function() {
    var match5 = keepList[index2];
    index2 += 1;
    return match5;
  });
}
function formatCountdown(value27, config2) {
  var _config$format = config2.format, format3 = _config$format === void 0 ? "" : _config$format;
  var target2 = interopDefault(moment)(value27).valueOf();
  var current2 = interopDefault(moment)().valueOf();
  var diff2 = Math.max(target2 - current2, 0);
  return formatTimeStr(diff2, format3);
}
var REFRESH_INTERVAL = 1e3 / 30;
function getTime(value27) {
  return interopDefault(moment)(value27).valueOf();
}
var Countdown = {
  name: "AStatisticCountdown",
  props: initDefaultProps(StatisticProps, {
    format: "HH:mm:ss"
  }),
  created: function created12() {
    this.countdownId = void 0;
  },
  mounted: function mounted51() {
    this.syncTimer();
  },
  updated: function updated32() {
    this.syncTimer();
  },
  beforeDestroy: function beforeDestroy39() {
    this.stopTimer();
  },
  methods: {
    syncTimer: function syncTimer() {
      var value27 = this.$props.value;
      var timestamp = getTime(value27);
      if (timestamp >= Date.now()) {
        this.startTimer();
      } else {
        this.stopTimer();
      }
    },
    startTimer: function startTimer() {
      var _this = this;
      if (this.countdownId)
        return;
      this.countdownId = window.setInterval(function() {
        _this.$refs.statistic.$forceUpdate();
        _this.syncTimer();
      }, REFRESH_INTERVAL);
    },
    stopTimer: function stopTimer() {
      var value27 = this.$props.value;
      if (this.countdownId) {
        clearInterval(this.countdownId);
        this.countdownId = void 0;
        var timestamp = getTime(value27);
        if (timestamp < Date.now()) {
          this.$emit("finish");
        }
      }
    },
    formatCountdown: function formatCountdown$1(_ref) {
      var value27 = _ref.value, config2 = _ref.config;
      var format3 = this.$props.format;
      return formatCountdown(value27, _default$6({}, config2, { format: format3 }));
    },
    valueRenderHtml: function valueRenderHtml(node) {
      return node;
    }
  },
  render: function render177() {
    var h = arguments[0];
    return h(Statistic, _mergeJSXProps([{
      ref: "statistic"
    }, {
      props: _default$6({}, this.$props, {
        valueRender: this.valueRenderHtml,
        formatter: this.formatCountdown
      }),
      on: getListeners(this)
    }]));
  }
};
Statistic.Countdown = Countdown;
Statistic.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Statistic.name, Statistic);
  Vue2.component(Statistic.Countdown.name, Statistic.Countdown);
};
function isFlexSupported() {
  if (typeof window !== "undefined" && window.document && window.document.documentElement) {
    var documentElement = window.document.documentElement;
    return "flex" in documentElement.style || "webkitFlex" in documentElement.style || "Flex" in documentElement.style || "msFlex" in documentElement.style;
  }
  return false;
}
var Steps$2 = {
  name: "Steps",
  mixins: [BaseMixin],
  props: {
    type: PropTypes.string.def("default"),
    prefixCls: PropTypes.string.def("rc-steps"),
    iconPrefix: PropTypes.string.def("rc"),
    direction: PropTypes.string.def("horizontal"),
    labelPlacement: PropTypes.string.def("horizontal"),
    status: PropTypes.string.def("process"),
    size: PropTypes.string.def(""),
    progressDot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),
    initial: PropTypes.number.def(0),
    current: PropTypes.number.def(0),
    icons: PropTypes.shape({
      finish: PropTypes.any,
      error: PropTypes.any
    }).loose
  },
  data: function data83() {
    this.calcStepOffsetWidth = debounce$3(this.calcStepOffsetWidth, 150);
    return {
      flexSupported: true,
      lastStepOffsetWidth: 0
    };
  },
  mounted: function mounted52() {
    var _this = this;
    this.$nextTick(function() {
      _this.calcStepOffsetWidth();
      if (!isFlexSupported()) {
        _this.setState({
          flexSupported: false
        });
      }
    });
  },
  updated: function updated33() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.calcStepOffsetWidth();
    });
  },
  beforeDestroy: function beforeDestroy40() {
    if (this.calcTimeout) {
      clearTimeout(this.calcTimeout);
    }
    if (this.calcStepOffsetWidth && this.calcStepOffsetWidth.cancel) {
      this.calcStepOffsetWidth.cancel();
    }
  },
  methods: {
    onStepClick: function onStepClick(next3) {
      var current2 = this.$props.current;
      if (current2 !== next3) {
        this.$emit("change", next3);
      }
    },
    calcStepOffsetWidth: function calcStepOffsetWidth() {
      var _this3 = this;
      if (isFlexSupported()) {
        return;
      }
      var lastStepOffsetWidth = this.$data.lastStepOffsetWidth;
      var domNode = this.$refs.vcStepsRef;
      if (domNode.children.length > 0) {
        if (this.calcTimeout) {
          clearTimeout(this.calcTimeout);
        }
        this.calcTimeout = setTimeout(function() {
          var offsetWidth = (domNode.lastChild.offsetWidth || 0) + 1;
          if (lastStepOffsetWidth === offsetWidth || Math.abs(lastStepOffsetWidth - offsetWidth) <= 3) {
            return;
          }
          _this3.setState({ lastStepOffsetWidth: offsetWidth });
        });
      }
    }
  },
  render: function render178() {
    var _classString, _this4 = this;
    var h = arguments[0];
    var prefixCls2 = this.prefixCls, direction = this.direction, type3 = this.type, labelPlacement = this.labelPlacement, iconPrefix = this.iconPrefix, status = this.status, size = this.size, current2 = this.current, $scopedSlots = this.$scopedSlots, initial = this.initial, icons = this.icons;
    var isNav = type3 === "navigation";
    var progressDot = this.progressDot;
    if (progressDot === void 0) {
      progressDot = $scopedSlots.progressDot;
    }
    var lastStepOffsetWidth = this.lastStepOffsetWidth, flexSupported = this.flexSupported;
    var filteredChildren = filterEmpty(this.$slots["default"]);
    var lastIndex = filteredChildren.length - 1;
    var adjustedlabelPlacement = progressDot ? "vertical" : labelPlacement;
    var classString = (_classString = {}, _default$8(_classString, prefixCls2, true), _default$8(_classString, prefixCls2 + "-" + direction, true), _default$8(_classString, prefixCls2 + "-" + size, size), _default$8(_classString, prefixCls2 + "-label-" + adjustedlabelPlacement, direction === "horizontal"), _default$8(_classString, prefixCls2 + "-dot", !!progressDot), _default$8(_classString, prefixCls2 + "-navigation", isNav), _default$8(_classString, prefixCls2 + "-flex-not-supported", !flexSupported), _classString);
    var listeners = getListeners(this);
    var stepsProps = {
      "class": classString,
      ref: "vcStepsRef",
      on: listeners
    };
    return h(
      "div",
      stepsProps,
      [filteredChildren.map(function(child, index2) {
        var childProps = getPropsData(child);
        var stepNumber = initial + index2;
        var stepProps = {
          props: _default$6({
            stepNumber: "" + (stepNumber + 1),
            stepIndex: stepNumber,
            prefixCls: prefixCls2,
            iconPrefix,
            progressDot: _this4.progressDot,
            icons
          }, childProps),
          on: getEvents(child),
          scopedSlots: $scopedSlots
        };
        if (listeners.change) {
          stepProps.on.stepClick = _this4.onStepClick;
        }
        if (!flexSupported && direction !== "vertical") {
          if (isNav) {
            stepProps.props.itemWidth = 100 / (lastIndex + 1) + "%";
            stepProps.props.adjustMarginRight = 0;
          } else if (index2 !== lastIndex) {
            stepProps.props.itemWidth = 100 / lastIndex + "%";
            stepProps.props.adjustMarginRight = -Math.round(lastStepOffsetWidth / lastIndex + 1) + "px";
          }
        }
        if (status === "error" && index2 === current2 - 1) {
          stepProps["class"] = prefixCls2 + "-next-error";
        }
        if (!childProps.status) {
          if (stepNumber === current2) {
            stepProps.props.status = status;
          } else if (stepNumber < current2) {
            stepProps.props.status = "finish";
          } else {
            stepProps.props.status = "wait";
          }
        }
        stepProps.props.active = stepNumber === current2;
        return cloneElement(child, stepProps);
      })]
    );
  }
};
function isString(str) {
  return typeof str === "string";
}
function noop$b() {
}
var Step = {
  name: "Step",
  props: {
    prefixCls: PropTypes.string,
    wrapperStyle: PropTypes.object,
    itemWidth: PropTypes.string,
    active: PropTypes.bool,
    disabled: PropTypes.bool,
    status: PropTypes.string,
    iconPrefix: PropTypes.string,
    icon: PropTypes.any,
    adjustMarginRight: PropTypes.string,
    stepNumber: PropTypes.string,
    stepIndex: PropTypes.number,
    description: PropTypes.any,
    title: PropTypes.any,
    subTitle: PropTypes.any,
    progressDot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),
    tailContent: PropTypes.any,
    icons: PropTypes.shape({
      finish: PropTypes.any,
      error: PropTypes.any
    }).loose
  },
  methods: {
    onClick: function onClick12() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.$emit.apply(this, ["click"].concat(_default$5(args)));
      this.$emit("stepClick", this.stepIndex);
    },
    renderIconNode: function renderIconNode() {
      var _iconClassName;
      var h = this.$createElement;
      var _getOptionProps = getOptionProps(this), prefixCls2 = _getOptionProps.prefixCls, stepNumber = _getOptionProps.stepNumber, status = _getOptionProps.status, iconPrefix = _getOptionProps.iconPrefix, icons = _getOptionProps.icons;
      var progressDot = this.progressDot;
      if (progressDot === void 0) {
        progressDot = this.$scopedSlots.progressDot;
      }
      var icon = getComponentFromProp(this, "icon");
      var title = getComponentFromProp(this, "title");
      var description = getComponentFromProp(this, "description");
      var iconNode = void 0;
      var iconClassName = (_iconClassName = {}, _default$8(_iconClassName, prefixCls2 + "-icon", true), _default$8(_iconClassName, iconPrefix + "icon", true), _default$8(_iconClassName, iconPrefix + "icon-" + icon, icon && isString(icon)), _default$8(_iconClassName, iconPrefix + "icon-check", !icon && status === "finish" && icons && !icons.finish), _default$8(_iconClassName, iconPrefix + "icon-close", !icon && status === "error" && icons && !icons.error), _iconClassName);
      var iconDot = h("span", { "class": prefixCls2 + "-icon-dot" });
      if (progressDot) {
        if (typeof progressDot === "function") {
          iconNode = h(
            "span",
            { "class": prefixCls2 + "-icon" },
            [progressDot({ index: stepNumber - 1, status, title, description, prefixCls: prefixCls2 })]
          );
        } else {
          iconNode = h(
            "span",
            { "class": prefixCls2 + "-icon" },
            [iconDot]
          );
        }
      } else if (icon && !isString(icon)) {
        iconNode = h(
          "span",
          { "class": prefixCls2 + "-icon" },
          [icon]
        );
      } else if (icons && icons.finish && status === "finish") {
        iconNode = h(
          "span",
          { "class": prefixCls2 + "-icon" },
          [icons.finish]
        );
      } else if (icons && icons.error && status === "error") {
        iconNode = h(
          "span",
          { "class": prefixCls2 + "-icon" },
          [icons.error]
        );
      } else if (icon || status === "finish" || status === "error") {
        iconNode = h("span", { "class": iconClassName });
      } else {
        iconNode = h(
          "span",
          { "class": prefixCls2 + "-icon" },
          [stepNumber]
        );
      }
      return iconNode;
    }
  },
  render: function render179() {
    var _classString;
    var h = arguments[0];
    var _getOptionProps2 = getOptionProps(this), prefixCls2 = _getOptionProps2.prefixCls, itemWidth = _getOptionProps2.itemWidth, active = _getOptionProps2.active, _getOptionProps2$stat = _getOptionProps2.status, status = _getOptionProps2$stat === void 0 ? "wait" : _getOptionProps2$stat, tailContent = _getOptionProps2.tailContent, adjustMarginRight = _getOptionProps2.adjustMarginRight, disabled = _getOptionProps2.disabled;
    var title = getComponentFromProp(this, "title");
    var subTitle = getComponentFromProp(this, "subTitle");
    var description = getComponentFromProp(this, "description");
    var classString = (_classString = {}, _default$8(_classString, prefixCls2 + "-item", true), _default$8(_classString, prefixCls2 + "-item-" + status, true), _default$8(_classString, prefixCls2 + "-item-custom", getComponentFromProp(this, "icon")), _default$8(_classString, prefixCls2 + "-item-active", active), _default$8(_classString, prefixCls2 + "-item-disabled", disabled === true), _classString);
    var stepProps = {
      "class": classString,
      on: getListeners(this)
    };
    var stepItemStyle = {};
    if (itemWidth) {
      stepItemStyle.width = itemWidth;
    }
    if (adjustMarginRight) {
      stepItemStyle.marginRight = adjustMarginRight;
    }
    var listeners = getListeners(this);
    var accessibilityProps = {
      attrs: {},
      on: {
        click: listeners.click || noop$b
      }
    };
    if (listeners.stepClick && !disabled) {
      accessibilityProps.attrs.role = "button";
      accessibilityProps.attrs.tabIndex = 0;
      accessibilityProps.on.click = this.onClick;
    }
    return h(
      "div",
      _mergeJSXProps([stepProps, { style: stepItemStyle }]),
      [h(
        "div",
        _mergeJSXProps([accessibilityProps, { "class": prefixCls2 + "-item-container" }]),
        [h(
          "div",
          { "class": prefixCls2 + "-item-tail" },
          [tailContent]
        ), h(
          "div",
          { "class": prefixCls2 + "-item-icon" },
          [this.renderIconNode()]
        ), h(
          "div",
          { "class": prefixCls2 + "-item-content" },
          [h(
            "div",
            { "class": prefixCls2 + "-item-title" },
            [title, subTitle && h(
              "div",
              {
                attrs: { title: subTitle },
                "class": prefixCls2 + "-item-subtitle"
              },
              [subTitle]
            )]
          ), description && h(
            "div",
            { "class": prefixCls2 + "-item-description" },
            [description]
          )]
        )]
      )]
    );
  }
};
Steps$2.Step = Step;
var getStepsProps = function getStepsProps2() {
  var defaultProps2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var props2 = {
    prefixCls: PropTypes.string,
    iconPrefix: PropTypes.string,
    current: PropTypes.number,
    initial: PropTypes.number,
    labelPlacement: PropTypes.oneOf(["horizontal", "vertical"]).def("horizontal"),
    status: PropTypes.oneOf(["wait", "process", "finish", "error"]),
    size: PropTypes.oneOf(["default", "small"]),
    direction: PropTypes.oneOf(["horizontal", "vertical"]),
    progressDot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),
    type: PropTypes.oneOf(["default", "navigation"])
  };
  return initDefaultProps(props2, defaultProps2);
};
var Steps = {
  name: "ASteps",
  props: getStepsProps({
    current: 0
  }),
  inject: {
    configProvider: { "default": function _default95() {
      return ConfigConsumerProps;
    } }
  },
  model: {
    prop: "current",
    event: "change"
  },
  Step: _default$6({}, Steps$2.Step, { name: "AStep" }),
  render: function render180() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, customizeIconPrefixCls = props2.iconPrefix;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("steps", customizePrefixCls);
    var iconPrefix = getPrefixCls5("", customizeIconPrefixCls);
    var icons = {
      finish: h(Icon$1, {
        attrs: { type: "check" },
        "class": prefixCls2 + "-finish-icon"
      }),
      error: h(Icon$1, {
        attrs: { type: "close" },
        "class": prefixCls2 + "-error-icon"
      })
    };
    var stepsProps = {
      props: _default$6({
        icons,
        iconPrefix,
        prefixCls: prefixCls2
      }, props2),
      on: getListeners(this),
      scopedSlots: this.$scopedSlots
    };
    return h(
      Steps$2,
      stepsProps,
      [this.$slots["default"]]
    );
  }
};
Steps.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Steps.name, Steps);
  Vue2.component(Steps.Step.name, Steps.Step);
};
var Steps$1 = Steps;
var switchPropTypes = {
  prefixCls: PropTypes.string,
  disabled: PropTypes.bool.def(false),
  checkedChildren: PropTypes.any,
  unCheckedChildren: PropTypes.any,
  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  checked: PropTypes.bool.def(false),
  defaultChecked: PropTypes.bool.def(false),
  autoFocus: PropTypes.bool.def(false),
  loadingIcon: PropTypes.any
};
var Switch$2 = {
  name: "VcSwitch",
  mixins: [BaseMixin],
  model: {
    prop: "checked",
    event: "change"
  },
  props: _default$6({}, switchPropTypes, {
    prefixCls: switchPropTypes.prefixCls.def("rc-switch")
  }),
  data: function data84() {
    var checked4 = false;
    if (hasProp(this, "checked")) {
      checked4 = !!this.checked;
    } else {
      checked4 = !!this.defaultChecked;
    }
    return {
      stateChecked: checked4
    };
  },
  watch: {
    checked: function checked2(val) {
      this.stateChecked = val;
    }
  },
  mounted: function mounted53() {
    var _this = this;
    this.$nextTick(function() {
      var autoFocus = _this.autoFocus, disabled = _this.disabled;
      if (autoFocus && !disabled) {
        _this.focus();
      }
    });
  },
  methods: {
    setChecked: function setChecked(checked4, e) {
      if (this.disabled) {
        return;
      }
      if (!hasProp(this, "checked")) {
        this.stateChecked = checked4;
      }
      this.$emit("change", checked4, e);
    },
    handleClick: function handleClick6(e) {
      var checked4 = !this.stateChecked;
      this.setChecked(checked4, e);
      this.$emit("click", checked4, e);
    },
    handleKeyDown: function handleKeyDown7(e) {
      if (e.keyCode === 37) {
        this.setChecked(false, e);
      } else if (e.keyCode === 39) {
        this.setChecked(true, e);
      }
    },
    handleMouseUp: function handleMouseUp2(e) {
      if (this.$refs.refSwitchNode) {
        this.$refs.refSwitchNode.blur();
      }
      this.$emit("mouseup", e);
    },
    focus: function focus27() {
      this.$refs.refSwitchNode.focus();
    },
    blur: function blur24() {
      this.$refs.refSwitchNode.blur();
    }
  },
  render: function render181() {
    var _switchClassName;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), prefixCls2 = _getOptionProps.prefixCls, disabled = _getOptionProps.disabled, loadingIcon = _getOptionProps.loadingIcon, tabIndex = _getOptionProps.tabIndex, restProps = _default$2(_getOptionProps, ["prefixCls", "disabled", "loadingIcon", "tabIndex"]);
    var checked4 = this.stateChecked;
    var switchClassName = (_switchClassName = {}, _default$8(_switchClassName, prefixCls2, true), _default$8(_switchClassName, prefixCls2 + "-checked", checked4), _default$8(_switchClassName, prefixCls2 + "-disabled", disabled), _switchClassName);
    var spanProps = {
      props: _default$6({}, restProps),
      on: _default$6({}, getListeners(this), {
        keydown: this.handleKeyDown,
        click: this.handleClick,
        mouseup: this.handleMouseUp
      }),
      attrs: {
        type: "button",
        role: "switch",
        "aria-checked": checked4,
        disabled,
        tabIndex
      },
      "class": switchClassName,
      ref: "refSwitchNode"
    };
    return h(
      "button",
      spanProps,
      [loadingIcon, h(
        "span",
        { "class": prefixCls2 + "-inner" },
        [checked4 ? getComponentFromProp(this, "checkedChildren") : getComponentFromProp(this, "unCheckedChildren")]
      )]
    );
  }
};
var Switch = {
  name: "ASwitch",
  __ANT_SWITCH: true,
  model: {
    prop: "checked",
    event: "change"
  },
  props: {
    prefixCls: PropTypes.string,
    size: PropTypes.oneOf(["small", "default", "large"]),
    disabled: PropTypes.bool,
    checkedChildren: PropTypes.any,
    unCheckedChildren: PropTypes.any,
    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    checked: PropTypes.bool,
    defaultChecked: PropTypes.bool,
    autoFocus: PropTypes.bool,
    loading: PropTypes.bool
  },
  inject: {
    configProvider: { "default": function _default96() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    focus: function focus28() {
      this.$refs.refSwitchNode.focus();
    },
    blur: function blur25() {
      this.$refs.refSwitchNode.blur();
    }
  },
  created: function created13() {
    warning$4(hasProp(this, "checked") || !hasProp(this, "value"), "Switch", "`value` is not validate prop, do you mean `checked`?");
  },
  render: function render182() {
    var _classes;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, size = _getOptionProps.size, loading2 = _getOptionProps.loading, disabled = _getOptionProps.disabled, restProps = _default$2(_getOptionProps, ["prefixCls", "size", "loading", "disabled"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("switch", customizePrefixCls);
    var classes6 = (_classes = {}, _default$8(_classes, prefixCls2 + "-small", size === "small"), _default$8(_classes, prefixCls2 + "-loading", loading2), _classes);
    var loadingIcon = loading2 ? h(Icon$1, {
      attrs: { type: "loading" },
      "class": prefixCls2 + "-loading-icon"
    }) : null;
    var switchProps = {
      props: _default$6({}, restProps, {
        prefixCls: prefixCls2,
        loadingIcon,
        checkedChildren: getComponentFromProp(this, "checkedChildren"),
        unCheckedChildren: getComponentFromProp(this, "unCheckedChildren"),
        disabled: disabled || loading2
      }),
      on: getListeners(this),
      "class": classes6,
      ref: "refSwitchNode"
    };
    return h(
      Wave,
      {
        attrs: { insertExtraNode: true }
      },
      [h(Switch$2, switchProps)]
    );
  }
};
Switch.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Switch.name, Switch);
};
var Switch$1 = Switch;
var baseAssignValue = _baseAssignValue, eq$1 = eq_1;
function assignMergeValue$2(object3, key2, value27) {
  if (value27 !== void 0 && !eq$1(object3[key2], value27) || value27 === void 0 && !(key2 in object3)) {
    baseAssignValue(object3, key2, value27);
  }
}
var _assignMergeValue = assignMergeValue$2;
function createBaseFor$1(fromRight) {
  return function(object3, iteratee, keysFunc) {
    var index2 = -1, iterable = Object(object3), props2 = keysFunc(object3), length = props2.length;
    while (length--) {
      var key2 = props2[fromRight ? length : ++index2];
      if (iteratee(iterable[key2], key2, iterable) === false) {
        break;
      }
    }
    return object3;
  };
}
var _createBaseFor = createBaseFor$1;
var createBaseFor = _createBaseFor;
var baseFor$2 = createBaseFor();
var _baseFor = baseFor$2;
var isArrayLike$2 = isArrayLike_1, isObjectLike = isObjectLike_1;
function isArrayLikeObject$1(value27) {
  return isObjectLike(value27) && isArrayLike$2(value27);
}
var isArrayLikeObject_1 = isArrayLikeObject$1;
function safeGet$2(object3, key2) {
  if (key2 === "constructor" && typeof object3[key2] === "function") {
    return;
  }
  if (key2 == "__proto__") {
    return;
  }
  return object3[key2];
}
var _safeGet = safeGet$2;
var copyObject = _copyObject, keysIn$1 = keysIn_1;
function toPlainObject$1(value27) {
  return copyObject(value27, keysIn$1(value27));
}
var toPlainObject_1 = toPlainObject$1;
var assignMergeValue$1 = _assignMergeValue, cloneBuffer = _cloneBuffer.exports, cloneTypedArray = _cloneTypedArray, copyArray = _copyArray, initCloneObject = _initCloneObject, isArguments = isArguments_1, isArray$1 = isArray_1, isArrayLikeObject = isArrayLikeObject_1, isBuffer = isBuffer$4.exports, isFunction2 = isFunction_1, isObject$3 = isObject_1, isPlainObject = isPlainObject_1, isTypedArray = isTypedArray_1, safeGet$1 = _safeGet, toPlainObject = toPlainObject_1;
function baseMergeDeep$1(object3, source, key2, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet$1(object3, key2), srcValue = safeGet$1(source, key2), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue$1(object3, key2, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object3, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray$1(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray$1(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      } else if (!isObject$3(objValue) || isFunction2(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue$1(object3, key2, newValue);
}
var _baseMergeDeep = baseMergeDeep$1;
var Stack = _Stack, assignMergeValue = _assignMergeValue, baseFor$1 = _baseFor, baseMergeDeep = _baseMergeDeep, isObject$2 = isObject_1, keysIn = keysIn_1, safeGet = _safeGet;
function baseMerge$1(object3, source, srcIndex, customizer, stack) {
  if (object3 === source) {
    return;
  }
  baseFor$1(source, function(srcValue, key2) {
    stack || (stack = new Stack());
    if (isObject$2(srcValue)) {
      baseMergeDeep(object3, source, key2, srcIndex, baseMerge$1, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet(object3, key2), srcValue, key2 + "", object3, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue(object3, key2, newValue);
    }
  }, keysIn);
}
var _baseMerge = baseMerge$1;
var identity = identity_1, overRest = _overRest, setToString = _setToString;
function baseRest$1(func, start) {
  return setToString(overRest(func, start, identity), func + "");
}
var _baseRest = baseRest$1;
var eq = eq_1, isArrayLike$1 = isArrayLike_1, isIndex = _isIndex, isObject$1 = isObject_1;
function isIterateeCall$1(value27, index2, object3) {
  if (!isObject$1(object3)) {
    return false;
  }
  var type3 = typeof index2;
  if (type3 == "number" ? isArrayLike$1(object3) && isIndex(index2, object3.length) : type3 == "string" && index2 in object3) {
    return eq(object3[index2], value27);
  }
  return false;
}
var _isIterateeCall = isIterateeCall$1;
var baseRest = _baseRest, isIterateeCall = _isIterateeCall;
function createAssigner$1(assigner) {
  return baseRest(function(object3, sources) {
    var index2 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object3 = Object(object3);
    while (++index2 < length) {
      var source = sources[index2];
      if (source) {
        assigner(object3, source, index2, customizer);
      }
    }
    return object3;
  });
}
var _createAssigner = createAssigner$1;
var baseMerge = _baseMerge, createAssigner = _createAssigner;
var merge2 = createAssigner(function(object3, source, srcIndex) {
  baseMerge(object3, source, srcIndex);
});
var merge_1 = merge2;
var merge$1 = merge_1;
var scrollbarVerticalSize = void 0;
var scrollbarHorizontalSize = void 0;
var scrollbarMeasure = {
  position: "absolute",
  top: "-9999px",
  width: "50px",
  height: "50px"
};
var INTERNAL_COL_DEFINE = "RC_TABLE_INTERNAL_COL_DEFINE";
function measureScrollbar(_ref) {
  var _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "vertical" : _ref$direction, prefixCls2 = _ref.prefixCls;
  if (typeof document === "undefined" || typeof window === "undefined") {
    return 0;
  }
  var isVertical2 = direction === "vertical";
  if (isVertical2 && scrollbarVerticalSize) {
    return scrollbarVerticalSize;
  }
  if (!isVertical2 && scrollbarHorizontalSize) {
    return scrollbarHorizontalSize;
  }
  var scrollDiv = document.createElement("div");
  Object.keys(scrollbarMeasure).forEach(function(scrollProp) {
    scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];
  });
  scrollDiv.className = prefixCls2 + "-hide-scrollbar scroll-div-append-to-body";
  if (isVertical2) {
    scrollDiv.style.overflowY = "scroll";
  } else {
    scrollDiv.style.overflowX = "scroll";
  }
  document.body.appendChild(scrollDiv);
  var size = 0;
  if (isVertical2) {
    size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    scrollbarVerticalSize = size;
  } else {
    size = scrollDiv.offsetHeight - scrollDiv.clientHeight;
    scrollbarHorizontalSize = size;
  }
  document.body.removeChild(scrollDiv);
  return size;
}
function debounce$1(func, wait, immediate) {
  var timeout = void 0;
  function debounceFunc() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var context = this;
    if (args[0] && args[0].persist) {
      args[0].persist();
    }
    var later = function later2() {
      timeout = null;
      if (!immediate) {
        func.apply(context, args);
      }
    };
    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    if (callNow) {
      func.apply(context, args);
    }
  }
  debounceFunc.cancel = function cancel() {
    if (timeout) {
      clearTimeout(timeout);
      timeout = null;
    }
  };
  return debounceFunc;
}
function remove2(array3, item) {
  var index2 = array3.indexOf(item);
  var front = array3.slice(0, index2);
  var last2 = array3.slice(index2 + 1, array3.length);
  return front.concat(last2);
}
var ColumnManager = function() {
  function ColumnManager2(columns3) {
    _default$1(this, ColumnManager2);
    this.columns = columns3;
    this._cached = {};
  }
  _default12(ColumnManager2, [{
    key: "isAnyColumnsFixed",
    value: function isAnyColumnsFixed() {
      var _this = this;
      return this._cache("isAnyColumnsFixed", function() {
        return _this.columns.some(function(column) {
          return !!column.fixed;
        });
      });
    }
  }, {
    key: "isAnyColumnsLeftFixed",
    value: function isAnyColumnsLeftFixed() {
      var _this2 = this;
      return this._cache("isAnyColumnsLeftFixed", function() {
        return _this2.columns.some(function(column) {
          return column.fixed === "left" || column.fixed === true;
        });
      });
    }
  }, {
    key: "isAnyColumnsRightFixed",
    value: function isAnyColumnsRightFixed() {
      var _this3 = this;
      return this._cache("isAnyColumnsRightFixed", function() {
        return _this3.columns.some(function(column) {
          return column.fixed === "right";
        });
      });
    }
  }, {
    key: "leftColumns",
    value: function leftColumns() {
      var _this4 = this;
      return this._cache("leftColumns", function() {
        return _this4.groupedColumns().filter(function(column) {
          return column.fixed === "left" || column.fixed === true;
        });
      });
    }
  }, {
    key: "rightColumns",
    value: function rightColumns() {
      var _this5 = this;
      return this._cache("rightColumns", function() {
        return _this5.groupedColumns().filter(function(column) {
          return column.fixed === "right";
        });
      });
    }
  }, {
    key: "leafColumns",
    value: function leafColumns() {
      var _this6 = this;
      return this._cache("leafColumns", function() {
        return _this6._leafColumns(_this6.columns);
      });
    }
  }, {
    key: "leftLeafColumns",
    value: function leftLeafColumns() {
      var _this7 = this;
      return this._cache("leftLeafColumns", function() {
        return _this7._leafColumns(_this7.leftColumns());
      });
    }
  }, {
    key: "rightLeafColumns",
    value: function rightLeafColumns() {
      var _this8 = this;
      return this._cache("rightLeafColumns", function() {
        return _this8._leafColumns(_this8.rightColumns());
      });
    }
  }, {
    key: "groupedColumns",
    value: function groupedColumns() {
      var _this9 = this;
      return this._cache("groupedColumns", function() {
        var _groupColumns = function _groupColumns2(columns3) {
          var currentRow = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          var parentColumn = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var rows = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
          rows[currentRow] = rows[currentRow] || [];
          var grouped = [];
          var setRowSpan = function setRowSpan2(column) {
            var rowSpan = rows.length - currentRow;
            if (column && !column.children && rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {
              column.rowSpan = rowSpan;
            }
          };
          columns3.forEach(function(column, index2) {
            var newColumn = _default$6({}, column);
            rows[currentRow].push(newColumn);
            parentColumn.colSpan = parentColumn.colSpan || 0;
            if (newColumn.children && newColumn.children.length > 0) {
              newColumn.children = _groupColumns2(newColumn.children, currentRow + 1, newColumn, rows);
              parentColumn.colSpan += newColumn.colSpan;
            } else {
              parentColumn.colSpan += 1;
            }
            for (var i = 0; i < rows[currentRow].length - 1; i += 1) {
              setRowSpan(rows[currentRow][i]);
            }
            if (index2 + 1 === columns3.length) {
              setRowSpan(newColumn);
            }
            grouped.push(newColumn);
          });
          return grouped;
        };
        return _groupColumns(_this9.columns);
      });
    }
  }, {
    key: "reset",
    value: function reset2(columns3) {
      this.columns = columns3;
      this._cached = {};
    }
  }, {
    key: "_cache",
    value: function _cache(name, fn) {
      if (name in this._cached) {
        return this._cached[name];
      }
      this._cached[name] = fn();
      return this._cached[name];
    }
  }, {
    key: "_leafColumns",
    value: function _leafColumns(columns3) {
      var _this10 = this;
      var leafColumns = [];
      columns3.forEach(function(column) {
        if (!column.children) {
          leafColumns.push(column);
        } else {
          leafColumns.push.apply(leafColumns, _default$5(_this10._leafColumns(column.children)));
        }
      });
      return leafColumns;
    }
  }]);
  return ColumnManager2;
}();
var ColumnManager$1 = ColumnManager;
var ColGroup = {
  name: "ColGroup",
  props: {
    fixed: PropTypes.string,
    columns: PropTypes.array
  },
  inject: {
    table: { "default": function _default97() {
      return {};
    } }
  },
  render: function render183() {
    var h = arguments[0];
    var fixed = this.fixed, table = this.table;
    var prefixCls2 = table.prefixCls, expandIconAsCell = table.expandIconAsCell, columnManager = table.columnManager;
    var cols = [];
    if (expandIconAsCell && fixed !== "right") {
      cols.push(h("col", { "class": prefixCls2 + "-expand-icon-col", key: "rc-table-expand-icon-col" }));
    }
    var leafColumns = void 0;
    if (fixed === "left") {
      leafColumns = columnManager.leftLeafColumns();
    } else if (fixed === "right") {
      leafColumns = columnManager.rightLeafColumns();
    } else {
      leafColumns = columnManager.leafColumns();
    }
    cols = cols.concat(leafColumns.map(function(_ref) {
      var key2 = _ref.key, dataIndex = _ref.dataIndex, width = _ref.width, additionalProps = _ref[INTERNAL_COL_DEFINE];
      var mergedKey = key2 !== void 0 ? key2 : dataIndex;
      var w = typeof width === "number" ? width + "px" : width;
      return h("col", _mergeJSXProps([{ key: mergedKey, style: { width: w, minWidth: w } }, additionalProps]));
    }));
    return h("colgroup", [cols]);
  }
};
var TableHeaderRow = {
  inject: {
    store: { from: "table-store", "default": function _default98() {
      return {};
    } }
  },
  props: {
    index: PropTypes.number,
    fixed: PropTypes.string,
    columns: PropTypes.array,
    rows: PropTypes.array,
    row: PropTypes.array,
    components: PropTypes.object,
    customHeaderRow: PropTypes.func,
    prefixCls: PropTypes.string
  },
  name: "TableHeaderRow",
  computed: {
    height: function height() {
      var fixedColumnsHeadRowsHeight = this.store.fixedColumnsHeadRowsHeight;
      var _$props = this.$props, columns3 = _$props.columns, rows = _$props.rows, fixed = _$props.fixed;
      var headerHeight = fixedColumnsHeadRowsHeight[0];
      if (!fixed) {
        return null;
      }
      if (headerHeight && columns3) {
        if (headerHeight === "auto") {
          return "auto";
        }
        return headerHeight / rows.length + "px";
      }
      return null;
    }
  },
  render: function render184(h) {
    var row = this.row, index2 = this.index, height3 = this.height, components3 = this.components, customHeaderRow2 = this.customHeaderRow, prefixCls2 = this.prefixCls;
    var HeaderRow = components3.header.row;
    var HeaderCell = components3.header.cell;
    var rowProps = customHeaderRow2(row.map(function(cell) {
      return cell.column;
    }), index2);
    var customStyle = rowProps ? rowProps.style : {};
    var style3 = _default$6({ height: height3 }, customStyle);
    if (style3.height === null) {
      delete style3.height;
    }
    return h(
      HeaderRow,
      _mergeJSXProps([rowProps, { style: style3 }]),
      [row.map(function(cell, i) {
        var _classNames;
        var column = cell.column, isLast = cell.isLast, children = cell.children;
        cell.className;
        var cellProps = _default$2(cell, ["column", "isLast", "children", "className"]);
        var customProps = column.customHeaderCell ? column.customHeaderCell(column) : {};
        var headerCellProps = mergeProps({
          attrs: _default$6({}, cellProps)
        }, _default$6({}, customProps, {
          key: column.key || column.dataIndex || i
        }));
        if (column.align) {
          headerCellProps.style = _default$6({}, customProps.style, { textAlign: column.align });
        }
        headerCellProps["class"] = classNames(customProps["class"], customProps.className, column["class"], column.className, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-align-" + column.align, !!column.align), _default$8(_classNames, prefixCls2 + "-row-cell-ellipsis", !!column.ellipsis), _default$8(_classNames, prefixCls2 + "-row-cell-break-word", !!column.width), _default$8(_classNames, prefixCls2 + "-row-cell-last", isLast), _classNames));
        if (typeof HeaderCell === "function") {
          return HeaderCell(h, headerCellProps, children);
        }
        return h(
          HeaderCell,
          headerCellProps,
          [children]
        );
      })]
    );
  }
};
var TableHeaderRow$1 = TableHeaderRow;
function getHeaderRows(_ref) {
  var _ref$columns = _ref.columns, columns3 = _ref$columns === void 0 ? [] : _ref$columns, _ref$currentRow = _ref.currentRow, currentRow = _ref$currentRow === void 0 ? 0 : _ref$currentRow, _ref$rows = _ref.rows, rows = _ref$rows === void 0 ? [] : _ref$rows, _ref$isLast = _ref.isLast, isLast = _ref$isLast === void 0 ? true : _ref$isLast;
  rows = rows || [];
  rows[currentRow] = rows[currentRow] || [];
  columns3.forEach(function(column, i) {
    if (column.rowSpan && rows.length < column.rowSpan) {
      while (rows.length < column.rowSpan) {
        rows.push([]);
      }
    }
    var cellIsLast = isLast && i === columns3.length - 1;
    var cell = {
      key: column.key,
      className: column.className || column["class"] || "",
      children: column.title,
      isLast: cellIsLast,
      column
    };
    if (column.children) {
      getHeaderRows({
        columns: column.children,
        currentRow: currentRow + 1,
        rows,
        isLast: cellIsLast
      });
    }
    if ("colSpan" in column) {
      cell.colSpan = column.colSpan;
    }
    if ("rowSpan" in column) {
      cell.rowSpan = column.rowSpan;
    }
    if (cell.colSpan !== 0) {
      rows[currentRow].push(cell);
    }
  });
  return rows.filter(function(row) {
    return row.length > 0;
  });
}
var TableHeader = {
  name: "TableHeader",
  props: {
    fixed: PropTypes.string,
    columns: PropTypes.array.isRequired,
    expander: PropTypes.object.isRequired
  },
  inject: {
    table: { "default": function _default99() {
      return {};
    } }
  },
  render: function render185() {
    var h = arguments[0];
    var _table = this.table, components3 = _table.sComponents, prefixCls2 = _table.prefixCls, showHeader = _table.showHeader, customHeaderRow2 = _table.customHeaderRow;
    var expander = this.expander, columns3 = this.columns, fixed = this.fixed;
    if (!showHeader) {
      return null;
    }
    var rows = getHeaderRows({ columns: columns3 });
    expander.renderExpandIndentCell(rows, fixed);
    var HeaderWrapper = components3.header.wrapper;
    return h(
      HeaderWrapper,
      { "class": prefixCls2 + "-thead" },
      [rows.map(function(row, index2) {
        return h(TableHeaderRow$1, {
          attrs: {
            prefixCls: prefixCls2,
            index: index2,
            fixed,
            columns: columns3,
            rows,
            row,
            components: components3,
            customHeaderRow: customHeaderRow2
          },
          key: index2
        });
      })]
    );
  }
};
function isInvalidRenderCellText(text) {
  return text && !isValidElement(text) && Object.prototype.toString.call(text) === "[object Object]";
}
var TableCell = {
  name: "TableCell",
  props: {
    record: PropTypes.object,
    prefixCls: PropTypes.string,
    index: PropTypes.number,
    indent: PropTypes.number,
    indentSize: PropTypes.number,
    column: PropTypes.object,
    expandIcon: PropTypes.any,
    component: PropTypes.any
  },
  inject: {
    table: { "default": function _default100() {
      return {};
    } }
  },
  methods: {
    handleClick: function handleClick7(e) {
      var record = this.record, onCellClick = this.column.onCellClick;
      if (onCellClick) {
        onCellClick(record, e);
      }
    }
  },
  render: function render186() {
    var _classNames;
    var h = arguments[0];
    var record = this.record, indentSize = this.indentSize, prefixCls2 = this.prefixCls, indent = this.indent, index2 = this.index, expandIcon = this.expandIcon, column = this.column, BodyCell = this.component;
    var dataIndex = column.dataIndex, customRender = column.customRender, _column$className = column.className, className = _column$className === void 0 ? "" : _column$className;
    var transformCellText = this.table.transformCellText;
    var text = void 0;
    if (typeof dataIndex === "number") {
      text = get_1(record, dataIndex);
    } else if (!dataIndex || dataIndex.length === 0) {
      text = record;
    } else {
      text = get_1(record, dataIndex);
    }
    var tdProps = {
      props: {},
      attrs: {},
      on: {
        click: this.handleClick
      }
    };
    var colSpan = void 0;
    var rowSpan = void 0;
    if (customRender) {
      text = customRender(text, record, index2, column);
      if (isInvalidRenderCellText(text)) {
        tdProps.attrs = text.attrs || {};
        tdProps.props = text.props || {};
        tdProps["class"] = text["class"];
        tdProps.style = text.style;
        colSpan = tdProps.attrs.colSpan;
        rowSpan = tdProps.attrs.rowSpan;
        text = text.children;
      }
    }
    if (column.customCell) {
      tdProps = mergeProps(tdProps, column.customCell(record, index2));
    }
    if (isInvalidRenderCellText(text)) {
      text = null;
    }
    if (transformCellText) {
      text = transformCellText({ text, column, record, index: index2 });
    }
    var indentText = expandIcon ? h("span", {
      style: { paddingLeft: indentSize * indent + "px" },
      "class": prefixCls2 + "-indent indent-level-" + indent
    }) : null;
    if (rowSpan === 0 || colSpan === 0) {
      return null;
    }
    if (column.align) {
      tdProps.style = _default$6({ textAlign: column.align }, tdProps.style);
    }
    var cellClassName = classNames(className, column["class"], (_classNames = {}, _default$8(_classNames, prefixCls2 + "-cell-ellipsis", !!column.ellipsis), _default$8(_classNames, prefixCls2 + "-cell-break-word", !!column.width), _classNames));
    if (column.ellipsis) {
      if (typeof text === "string") {
        tdProps.attrs.title = text;
      }
    }
    return h(
      BodyCell,
      _mergeJSXProps([{ "class": cellClassName }, tdProps]),
      [indentText, expandIcon, text]
    );
  }
};
function noop$a() {
}
var TableRow = {
  name: "TableRow",
  mixins: [BaseMixin],
  inject: {
    store: { from: "table-store", "default": function _default101() {
      return {};
    } }
  },
  props: initDefaultProps({
    customRow: PropTypes.func,
    record: PropTypes.object,
    prefixCls: PropTypes.string,
    columns: PropTypes.array,
    index: PropTypes.number,
    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    className: PropTypes.string,
    indent: PropTypes.number,
    indentSize: PropTypes.number,
    hasExpandIcon: PropTypes.func,
    fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
    renderExpandIcon: PropTypes.func,
    renderExpandIconCell: PropTypes.func,
    components: PropTypes.any,
    expandedRow: PropTypes.bool,
    isAnyColumnsFixed: PropTypes.bool,
    ancestorKeys: PropTypes.array.isRequired,
    expandIconColumnIndex: PropTypes.number,
    expandRowByClick: PropTypes.bool
  }, {
    hasExpandIcon: function hasExpandIcon() {
    },
    renderExpandIcon: function renderExpandIcon2() {
    },
    renderExpandIconCell: function renderExpandIconCell() {
    }
  }),
  computed: {
    visible: function visible10() {
      var expandedRowKeys2 = this.store.expandedRowKeys;
      var ancestorKeys = this.$props.ancestorKeys;
      return !!(ancestorKeys.length === 0 || ancestorKeys.every(function(k) {
        return expandedRowKeys2.includes(k);
      }));
    },
    height: function height2() {
      var _store = this.store, expandedRowsHeight = _store.expandedRowsHeight, fixedColumnsBodyRowsHeight = _store.fixedColumnsBodyRowsHeight;
      var _$props = this.$props, fixed = _$props.fixed, rowKey = _$props.rowKey;
      if (!fixed) {
        return null;
      }
      if (expandedRowsHeight[rowKey]) {
        return expandedRowsHeight[rowKey];
      }
      if (fixedColumnsBodyRowsHeight[rowKey]) {
        return fixedColumnsBodyRowsHeight[rowKey];
      }
      return null;
    },
    hovered: function hovered() {
      var currentHoverKey = this.store.currentHoverKey;
      var rowKey = this.$props.rowKey;
      return currentHoverKey === rowKey;
    }
  },
  data: function data85() {
    return {
      shouldRender: this.visible
    };
  },
  mounted: function mounted54() {
    var _this = this;
    if (this.shouldRender) {
      this.$nextTick(function() {
        _this.saveRowRef();
      });
    }
  },
  watch: {
    visible: {
      handler: function handler3(val) {
        if (val) {
          this.shouldRender = true;
        }
      },
      immediate: true
    }
  },
  updated: function updated34() {
    var _this2 = this;
    if (this.shouldRender && !this.rowRef) {
      this.$nextTick(function() {
        _this2.saveRowRef();
      });
    }
  },
  methods: {
    onRowClick: function onRowClick(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$a;
      var record = this.record, index2 = this.index;
      this.__emit("rowClick", record, index2, event);
      rowPropFunc(event);
    },
    onRowDoubleClick: function onRowDoubleClick(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$a;
      var record = this.record, index2 = this.index;
      this.__emit("rowDoubleClick", record, index2, event);
      rowPropFunc(event);
    },
    onContextMenu: function onContextMenu(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$a;
      var record = this.record, index2 = this.index;
      this.__emit("rowContextmenu", record, index2, event);
      rowPropFunc(event);
    },
    onMouseEnter: function onMouseEnter4(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$a;
      var record = this.record, index2 = this.index, rowKey = this.rowKey;
      this.__emit("hover", true, rowKey);
      this.__emit("rowMouseenter", record, index2, event);
      rowPropFunc(event);
    },
    onMouseLeave: function onMouseLeave6(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$a;
      var record = this.record, index2 = this.index, rowKey = this.rowKey;
      this.__emit("hover", false, rowKey);
      this.__emit("rowMouseleave", record, index2, event);
      rowPropFunc(event);
    },
    setExpandedRowHeight: function setExpandedRowHeight() {
      var store2 = this.store, rowKey = this.rowKey;
      var expandedRowsHeight = store2.expandedRowsHeight;
      var height3 = this.rowRef.getBoundingClientRect().height;
      expandedRowsHeight = _default$6({}, expandedRowsHeight, _default$8({}, rowKey, height3));
      store2.expandedRowsHeight = expandedRowsHeight;
    },
    setRowHeight: function setRowHeight() {
      var store2 = this.store, rowKey = this.rowKey;
      var fixedColumnsBodyRowsHeight = store2.fixedColumnsBodyRowsHeight;
      var height3 = this.rowRef.getBoundingClientRect().height;
      store2.fixedColumnsBodyRowsHeight = _default$6({}, fixedColumnsBodyRowsHeight, _default$8({}, rowKey, height3));
    },
    getStyle: function getStyle2() {
      var height3 = this.height, visible11 = this.visible;
      var style3 = getStyle$1(this);
      if (height3) {
        style3 = _default$6({}, style3, { height: height3 });
      }
      if (!visible11 && !style3.display) {
        style3 = _default$6({}, style3, { display: "none" });
      }
      return style3;
    },
    saveRowRef: function saveRowRef() {
      this.rowRef = this.$el;
      var isAnyColumnsFixed = this.isAnyColumnsFixed, fixed = this.fixed, expandedRow = this.expandedRow, ancestorKeys = this.ancestorKeys;
      if (!isAnyColumnsFixed) {
        return;
      }
      if (!fixed && expandedRow) {
        this.setExpandedRowHeight();
      }
      if (!fixed && ancestorKeys.length >= 0) {
        this.setRowHeight();
      }
    }
  },
  render: function render187() {
    var _this3 = this;
    var h = arguments[0];
    if (!this.shouldRender) {
      return null;
    }
    var prefixCls2 = this.prefixCls, columns3 = this.columns, record = this.record, rowKey = this.rowKey, index2 = this.index, _customRow = this.customRow, customRow = _customRow === void 0 ? noop$a : _customRow, indent = this.indent, indentSize = this.indentSize, hovered2 = this.hovered, height3 = this.height, visible11 = this.visible, components3 = this.components, hasExpandIcon3 = this.hasExpandIcon, renderExpandIcon5 = this.renderExpandIcon, renderExpandIconCell3 = this.renderExpandIconCell;
    var BodyRow = components3.body.row;
    var BodyCell = components3.body.cell;
    var className = "";
    if (hovered2) {
      className += " " + prefixCls2 + "-hover";
    }
    var cells = [];
    renderExpandIconCell3(cells);
    for (var i = 0; i < columns3.length; i += 1) {
      var column = columns3[i];
      warning$4(column.onCellClick === void 0, "column[onCellClick] is deprecated, please use column[customCell] instead.");
      cells.push(h(TableCell, {
        attrs: {
          prefixCls: prefixCls2,
          record,
          indentSize,
          indent,
          index: index2,
          column,
          expandIcon: hasExpandIcon3(i) && renderExpandIcon5(),
          component: BodyCell
        },
        key: column.key || column.dataIndex
      }));
    }
    var _ref = customRow(record, index2) || {}, customClass = _ref["class"], customClassName = _ref.className, customStyle = _ref.style, rowProps = _default$2(_ref, ["class", "className", "style"]);
    var style3 = { height: typeof height3 === "number" ? height3 + "px" : height3 };
    if (!visible11) {
      style3.display = "none";
    }
    style3 = _default$6({}, style3, customStyle);
    var rowClassName2 = classNames(prefixCls2, className, prefixCls2 + "-level-" + indent, customClassName, customClass);
    var rowPropEvents = rowProps.on || {};
    var bodyRowProps = mergeProps(_default$6({}, rowProps, { style: style3 }), {
      on: {
        click: function click(e) {
          _this3.onRowClick(e, rowPropEvents.click);
        },
        dblclick: function dblclick(e) {
          _this3.onRowDoubleClick(e, rowPropEvents.dblclick);
        },
        mouseenter: function mouseenter(e) {
          _this3.onMouseEnter(e, rowPropEvents.mouseenter);
        },
        mouseleave: function mouseleave(e) {
          _this3.onMouseLeave(e, rowPropEvents.mouseleave);
        },
        contextmenu: function contextmenu(e) {
          _this3.onContextMenu(e, rowPropEvents.contextmenu);
        }
      },
      "class": rowClassName2
    }, {
      attrs: {
        "data-row-key": rowKey
      }
    });
    return h(
      BodyRow,
      bodyRowProps,
      [cells]
    );
  }
};
var TableRow$1 = TableRow;
var ExpandIcon = {
  name: "ExpandIcon",
  mixins: [BaseMixin],
  props: {
    record: PropTypes.object,
    prefixCls: PropTypes.string,
    expandable: PropTypes.any,
    expanded: PropTypes.bool,
    needIndentSpaced: PropTypes.bool
  },
  methods: {
    onExpand: function onExpand(e) {
      this.__emit("expand", this.record, e);
    }
  },
  render: function render188() {
    var h = arguments[0];
    var expandable = this.expandable, prefixCls2 = this.prefixCls, onExpand4 = this.onExpand, needIndentSpaced = this.needIndentSpaced, expanded2 = this.expanded;
    if (expandable) {
      var expandClassName = expanded2 ? "expanded" : "collapsed";
      return h("span", {
        "class": prefixCls2 + "-expand-icon " + prefixCls2 + "-" + expandClassName,
        on: {
          "click": onExpand4
        }
      });
    }
    if (needIndentSpaced) {
      return h("span", { "class": prefixCls2 + "-expand-icon " + prefixCls2 + "-spaced" });
    }
    return null;
  }
};
var ExpandableRow = {
  mixins: [BaseMixin],
  name: "ExpandableRow",
  props: {
    prefixCls: PropTypes.string.isRequired,
    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
    record: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,
    indentSize: PropTypes.number,
    needIndentSpaced: PropTypes.bool.isRequired,
    expandRowByClick: PropTypes.bool,
    expandIconAsCell: PropTypes.bool,
    expandIconColumnIndex: PropTypes.number,
    childrenColumnName: PropTypes.string,
    expandedRowRender: PropTypes.func,
    expandIcon: PropTypes.func
  },
  inject: {
    store: { from: "table-store", "default": function _default102() {
      return {};
    } }
  },
  computed: {
    expanded: function expanded() {
      return this.store.expandedRowKeys.includes(this.$props.rowKey);
    }
  },
  beforeDestroy: function beforeDestroy41() {
    this.handleDestroy();
  },
  methods: {
    hasExpandIcon: function hasExpandIcon2(columnIndex) {
      var _$props = this.$props, expandRowByClick = _$props.expandRowByClick, expandIcon = _$props.expandIcon;
      if (this.tempExpandIconAsCell || columnIndex !== this.tempExpandIconColumnIndex) {
        return false;
      }
      return !!expandIcon || !expandRowByClick;
    },
    handleExpandChange: function handleExpandChange(record, event) {
      var expanded2 = this.expanded, rowKey = this.rowKey;
      this.__emit("expandedChange", !expanded2, record, event, rowKey);
    },
    handleDestroy: function handleDestroy() {
      var rowKey = this.rowKey, record = this.record;
      this.__emit("expandedChange", false, record, null, rowKey, true);
    },
    handleRowClick: function handleRowClick(record, index2, event) {
      var expandRowByClick = this.expandRowByClick;
      if (expandRowByClick) {
        this.handleExpandChange(record, event);
      }
      this.__emit("rowClick", record, index2, event);
    },
    renderExpandIcon: function renderExpandIcon3() {
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, expanded2 = this.expanded, record = this.record, needIndentSpaced = this.needIndentSpaced, expandIcon = this.expandIcon;
      if (expandIcon) {
        return expandIcon({
          prefixCls: prefixCls2,
          expanded: expanded2,
          record,
          needIndentSpaced,
          expandable: this.expandable,
          onExpand: this.handleExpandChange
        });
      }
      return h(ExpandIcon, {
        attrs: {
          expandable: this.expandable,
          prefixCls: prefixCls2,
          needIndentSpaced,
          expanded: expanded2,
          record
        },
        on: {
          "expand": this.handleExpandChange
        }
      });
    },
    renderExpandIconCell: function renderExpandIconCell2(cells) {
      var h = this.$createElement;
      if (!this.tempExpandIconAsCell) {
        return;
      }
      var prefixCls2 = this.prefixCls;
      cells.push(h(
        "td",
        { "class": prefixCls2 + "-expand-icon-cell", key: "rc-table-expand-icon-cell" },
        [this.renderExpandIcon()]
      ));
    }
  },
  render: function render189() {
    var childrenColumnName = this.childrenColumnName, expandedRowRender = this.expandedRowRender, indentSize = this.indentSize, record = this.record, fixed = this.fixed, $scopedSlots = this.$scopedSlots, expanded2 = this.expanded;
    this.tempExpandIconAsCell = fixed !== "right" ? this.expandIconAsCell : false;
    this.tempExpandIconColumnIndex = fixed !== "right" ? this.expandIconColumnIndex : -1;
    var childrenData = record[childrenColumnName];
    this.expandable = !!(childrenData || expandedRowRender);
    var expandableRowProps = {
      props: {
        indentSize,
        expanded: expanded2,
        hasExpandIcon: this.hasExpandIcon,
        renderExpandIcon: this.renderExpandIcon,
        renderExpandIconCell: this.renderExpandIconCell
      },
      on: {
        rowClick: this.handleRowClick
      }
    };
    return $scopedSlots["default"] && $scopedSlots["default"](expandableRowProps);
  }
};
var ExpandableRow$1 = ExpandableRow;
function noop$9() {
}
var BaseTable = {
  name: "BaseTable",
  props: {
    fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
    columns: PropTypes.array.isRequired,
    tableClassName: PropTypes.string.isRequired,
    hasHead: PropTypes.bool.isRequired,
    hasBody: PropTypes.bool.isRequired,
    expander: PropTypes.object.isRequired,
    getRowKey: PropTypes.func,
    isAnyColumnsFixed: PropTypes.bool
  },
  inject: {
    table: { "default": function _default103() {
      return {};
    } },
    store: { from: "table-store", "default": function _default104() {
      return {};
    } }
  },
  methods: {
    getColumns: function getColumns2(cols) {
      var _$props = this.$props, _$props$columns = _$props.columns, columns3 = _$props$columns === void 0 ? [] : _$props$columns, fixed = _$props.fixed;
      var table = this.table;
      var prefixCls2 = table.$props.prefixCls;
      return (cols || columns3).map(function(column) {
        return _default$6({}, column, {
          className: !!column.fixed && !fixed ? classNames(prefixCls2 + "-fixed-columns-in-body", column.className || column["class"]) : column.className || column["class"]
        });
      });
    },
    handleRowHover: function handleRowHover(isHover, key2) {
      this.store.currentHoverKey = isHover ? key2 : null;
    },
    renderRows: function renderRows(renderData, indent) {
      var _this = this;
      var ancestorKeys = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      var h = this.$createElement;
      var _table = this.table, columnManager = _table.columnManager, components3 = _table.sComponents, prefixCls2 = _table.prefixCls, childrenColumnName = _table.childrenColumnName, rowClassName2 = _table.rowClassName, _table$customRow = _table.customRow, customRow = _table$customRow === void 0 ? noop$9 : _table$customRow;
      var _getListeners = getListeners(this.table), _getListeners$rowClic = _getListeners.rowClick, onRowClick2 = _getListeners$rowClic === void 0 ? noop$9 : _getListeners$rowClic, _getListeners$rowDoub = _getListeners.rowDoubleclick, onRowDoubleClick2 = _getListeners$rowDoub === void 0 ? noop$9 : _getListeners$rowDoub, _getListeners$rowCont = _getListeners.rowContextmenu, onRowContextMenu = _getListeners$rowCont === void 0 ? noop$9 : _getListeners$rowCont, _getListeners$rowMous = _getListeners.rowMouseenter, onRowMouseEnter = _getListeners$rowMous === void 0 ? noop$9 : _getListeners$rowMous, _getListeners$rowMous2 = _getListeners.rowMouseleave, onRowMouseLeave = _getListeners$rowMous2 === void 0 ? noop$9 : _getListeners$rowMous2;
      var getRowKey2 = this.getRowKey, fixed = this.fixed, expander = this.expander, isAnyColumnsFixed = this.isAnyColumnsFixed;
      var rows = [];
      var _loop = function _loop2(i2) {
        var record = renderData[i2];
        var key2 = getRowKey2(record, i2);
        var className = typeof rowClassName2 === "string" ? rowClassName2 : rowClassName2(record, i2, indent);
        var onHoverProps = {};
        if (columnManager.isAnyColumnsFixed()) {
          onHoverProps.hover = _this.handleRowHover;
        }
        var leafColumns = void 0;
        if (fixed === "left") {
          leafColumns = columnManager.leftLeafColumns();
        } else if (fixed === "right") {
          leafColumns = columnManager.rightLeafColumns();
        } else {
          leafColumns = _this.getColumns(columnManager.leafColumns());
        }
        var rowPrefixCls = prefixCls2 + "-row";
        var expandableRowProps = {
          props: _default$6({}, expander.props, {
            fixed,
            index: i2,
            prefixCls: rowPrefixCls,
            record,
            rowKey: key2,
            needIndentSpaced: expander.needIndentSpaced
          }),
          key: key2,
          on: {
            rowClick: onRowClick2,
            expandedChange: expander.handleExpandChange
          },
          scopedSlots: {
            "default": function _default130(expandableRow) {
              var tableRowProps = mergeProps({
                props: {
                  fixed,
                  indent,
                  record,
                  index: i2,
                  prefixCls: rowPrefixCls,
                  childrenColumnName,
                  columns: leafColumns,
                  rowKey: key2,
                  ancestorKeys,
                  components: components3,
                  isAnyColumnsFixed,
                  customRow
                },
                on: _default$6({
                  rowDoubleclick: onRowDoubleClick2,
                  rowContextmenu: onRowContextMenu,
                  rowMouseenter: onRowMouseEnter,
                  rowMouseleave: onRowMouseLeave
                }, onHoverProps),
                "class": className,
                ref: "row_" + i2 + "_" + indent
              }, expandableRow);
              return h(TableRow$1, tableRowProps);
            }
          }
        };
        var row = h(ExpandableRow$1, expandableRowProps);
        rows.push(row);
        expander.renderRows(_this.renderRows, rows, record, i2, indent, fixed, key2, ancestorKeys);
      };
      for (var i = 0; i < renderData.length; i += 1) {
        _loop(i);
      }
      return rows;
    }
  },
  render: function render190() {
    var h = arguments[0];
    var _table2 = this.table, components3 = _table2.sComponents, prefixCls2 = _table2.prefixCls, scroll = _table2.scroll, data109 = _table2.data, getBodyWrapper = _table2.getBodyWrapper;
    var _$props2 = this.$props, expander = _$props2.expander, tableClassName = _$props2.tableClassName, hasHead = _$props2.hasHead, hasBody = _$props2.hasBody, fixed = _$props2.fixed, isAnyColumnsFixed = _$props2.isAnyColumnsFixed;
    var columns3 = this.getColumns();
    var tableStyle = {};
    if (!fixed && scroll.x) {
      var tableWidthScrollX = isAnyColumnsFixed ? "max-content" : "auto";
      tableStyle.width = scroll.x === true ? tableWidthScrollX : scroll.x;
      tableStyle.width = typeof tableStyle.width === "number" ? tableStyle.width + "px" : tableStyle.width;
    }
    if (fixed) {
      var width = columns3.reduce(function(sum, _ref) {
        var w = _ref.width;
        return sum + parseFloat(w, 10);
      }, 0);
      if (width > 0) {
        tableStyle.width = width + "px";
      }
    }
    var Table2 = hasBody ? components3.table : "table";
    var BodyWrapper = components3.body.wrapper;
    var body = void 0;
    if (hasBody) {
      body = h(
        BodyWrapper,
        { "class": prefixCls2 + "-tbody" },
        [this.renderRows(data109, 0)]
      );
      if (getBodyWrapper) {
        body = getBodyWrapper(body);
      }
    }
    return h(
      Table2,
      { "class": tableClassName, style: tableStyle, key: "table" },
      [h(ColGroup, {
        attrs: { columns: columns3, fixed }
      }), hasHead && h(TableHeader, {
        attrs: { expander, columns: columns3, fixed }
      }), body]
    );
  }
};
var BaseTable$1 = BaseTable;
var HeadTable = {
  name: "HeadTable",
  props: {
    fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
    columns: PropTypes.array.isRequired,
    tableClassName: PropTypes.string.isRequired,
    handleBodyScrollLeft: PropTypes.func.isRequired,
    expander: PropTypes.object.isRequired
  },
  inject: {
    table: { "default": function _default105() {
      return {};
    } }
  },
  render: function render191() {
    var h = arguments[0];
    var columns3 = this.columns, fixed = this.fixed, tableClassName = this.tableClassName, handleBodyScrollLeft2 = this.handleBodyScrollLeft, expander = this.expander, table = this.table;
    var prefixCls2 = table.prefixCls, scroll = table.scroll, showHeader = table.showHeader, saveRef4 = table.saveRef;
    var useFixedHeader = table.useFixedHeader;
    var headStyle = {};
    var scrollbarWidth = measureScrollbar({ direction: "vertical" });
    if (scroll.y) {
      useFixedHeader = true;
      var scrollbarWidthOfHeader = measureScrollbar({ direction: "horizontal", prefixCls: prefixCls2 });
      if (scrollbarWidthOfHeader > 0 && !fixed) {
        headStyle.marginBottom = "-" + scrollbarWidthOfHeader + "px";
        headStyle.paddingBottom = "0px";
        headStyle.minWidth = scrollbarWidth + "px";
        headStyle.overflowX = "scroll";
        headStyle.overflowY = scrollbarWidth === 0 ? "hidden" : "scroll";
      }
    }
    if (!useFixedHeader || !showHeader) {
      return null;
    }
    return h(
      "div",
      _mergeJSXProps([{
        key: "headTable"
      }, {
        directives: [{
          name: "ant-ref",
          value: fixed ? function() {
          } : saveRef4("headTable")
        }]
      }, {
        "class": classNames(prefixCls2 + "-header", _default$8({}, prefixCls2 + "-hide-scrollbar", scrollbarWidth > 0)),
        style: headStyle,
        on: {
          "scroll": handleBodyScrollLeft2
        }
      }]),
      [h(BaseTable$1, {
        attrs: {
          tableClassName,
          hasHead: true,
          hasBody: false,
          fixed,
          columns: columns3,
          expander
        }
      })]
    );
  }
};
var BodyTable = {
  name: "BodyTable",
  props: {
    fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
    columns: PropTypes.array.isRequired,
    tableClassName: PropTypes.string.isRequired,
    handleBodyScroll: PropTypes.func.isRequired,
    handleWheel: PropTypes.func.isRequired,
    getRowKey: PropTypes.func.isRequired,
    expander: PropTypes.object.isRequired,
    isAnyColumnsFixed: PropTypes.bool
  },
  inject: {
    table: { "default": function _default106() {
      return {};
    } }
  },
  render: function render192() {
    var h = arguments[0];
    var _table = this.table, prefixCls2 = _table.prefixCls, scroll = _table.scroll;
    var columns3 = this.columns, fixed = this.fixed, tableClassName = this.tableClassName, getRowKey2 = this.getRowKey, handleBodyScroll2 = this.handleBodyScroll, handleWheel2 = this.handleWheel, expander = this.expander, isAnyColumnsFixed = this.isAnyColumnsFixed;
    var _table2 = this.table, useFixedHeader = _table2.useFixedHeader, saveRef4 = _table2.saveRef;
    var bodyStyle = _default$6({}, this.table.bodyStyle);
    var innerBodyStyle = {};
    if (scroll.x || fixed) {
      bodyStyle.overflowX = bodyStyle.overflowX || "scroll";
      bodyStyle.WebkitTransform = "translate3d (0, 0, 0)";
    }
    if (scroll.y) {
      var maxHeight = bodyStyle.maxHeight || scroll.y;
      maxHeight = typeof maxHeight === "number" ? maxHeight + "px" : maxHeight;
      if (fixed) {
        innerBodyStyle.maxHeight = maxHeight;
        innerBodyStyle.overflowY = bodyStyle.overflowY || "scroll";
      } else {
        bodyStyle.maxHeight = maxHeight;
      }
      bodyStyle.overflowY = bodyStyle.overflowY || "scroll";
      useFixedHeader = true;
      var scrollbarWidth = measureScrollbar({ direction: "vertical" });
      if (scrollbarWidth > 0 && fixed) {
        bodyStyle.marginBottom = "-" + scrollbarWidth + "px";
        bodyStyle.paddingBottom = "0px";
      }
    }
    var baseTable = h(BaseTable$1, {
      attrs: {
        tableClassName,
        hasHead: !useFixedHeader,
        hasBody: true,
        fixed,
        columns: columns3,
        expander,
        getRowKey: getRowKey2,
        isAnyColumnsFixed
      }
    });
    if (fixed && columns3.length) {
      var refName = void 0;
      if (columns3[0].fixed === "left" || columns3[0].fixed === true) {
        refName = "fixedColumnsBodyLeft";
      } else if (columns3[0].fixed === "right") {
        refName = "fixedColumnsBodyRight";
      }
      delete bodyStyle.overflowX;
      delete bodyStyle.overflowY;
      return h(
        "div",
        { key: "bodyTable", "class": prefixCls2 + "-body-outer", style: _default$6({}, bodyStyle) },
        [h(
          "div",
          _mergeJSXProps([{
            "class": prefixCls2 + "-body-inner",
            style: innerBodyStyle
          }, {
            directives: [{
              name: "ant-ref",
              value: saveRef4(refName)
            }]
          }, {
            on: {
              "wheel": handleWheel2,
              "scroll": handleBodyScroll2
            }
          }]),
          [baseTable]
        )]
      );
    }
    var useTabIndex = scroll && (scroll.x || scroll.y);
    return h(
      "div",
      _mergeJSXProps([{
        attrs: {
          tabIndex: useTabIndex ? -1 : void 0
        },
        key: "bodyTable",
        "class": prefixCls2 + "-body",
        style: bodyStyle
      }, {
        directives: [{
          name: "ant-ref",
          value: saveRef4("bodyTable")
        }]
      }, {
        on: {
          "wheel": handleWheel2,
          "scroll": handleBodyScroll2
        }
      }]),
      [baseTable]
    );
  }
};
var ExpandableTableProps = function ExpandableTableProps2() {
  return {
    expandIconAsCell: PropTypes.bool,
    expandRowByClick: PropTypes.bool,
    expandedRowKeys: PropTypes.array,
    expandedRowClassName: PropTypes.func,
    defaultExpandAllRows: PropTypes.bool,
    defaultExpandedRowKeys: PropTypes.array,
    expandIconColumnIndex: PropTypes.number,
    expandedRowRender: PropTypes.func,
    expandIcon: PropTypes.func,
    childrenColumnName: PropTypes.string,
    indentSize: PropTypes.number,
    columnManager: PropTypes.object.isRequired,
    prefixCls: PropTypes.string.isRequired,
    data: PropTypes.array,
    getRowKey: PropTypes.func
  };
};
var ExpandableTable = {
  name: "ExpandableTable",
  mixins: [BaseMixin],
  props: initDefaultProps(ExpandableTableProps(), {
    expandIconAsCell: false,
    expandedRowClassName: function expandedRowClassName() {
      return "";
    },
    expandIconColumnIndex: 0,
    defaultExpandAllRows: false,
    defaultExpandedRowKeys: [],
    childrenColumnName: "children",
    indentSize: 15
  }),
  inject: {
    store: { from: "table-store", "default": function _default107() {
      return {};
    } }
  },
  data: function data86() {
    var data109 = this.data, childrenColumnName = this.childrenColumnName, defaultExpandAllRows = this.defaultExpandAllRows, expandedRowKeys2 = this.expandedRowKeys, defaultExpandedRowKeys = this.defaultExpandedRowKeys, getRowKey2 = this.getRowKey;
    var finalExpandedRowKeys = [];
    var rows = [].concat(_default$5(data109));
    if (defaultExpandAllRows) {
      for (var i = 0; i < rows.length; i += 1) {
        var row = rows[i];
        finalExpandedRowKeys.push(getRowKey2(row, i));
        rows = rows.concat(row[childrenColumnName] || []);
      }
    } else {
      finalExpandedRowKeys = expandedRowKeys2 || defaultExpandedRowKeys;
    }
    this.store.expandedRowsHeight = {};
    this.store.expandedRowKeys = finalExpandedRowKeys;
    return {};
  },
  mounted: function mounted55() {
    this.handleUpdated();
  },
  updated: function updated35() {
    this.handleUpdated();
  },
  watch: {
    expandedRowKeys: function expandedRowKeys(val) {
      var _this = this;
      this.$nextTick(function() {
        _this.store.expandedRowKeys = val;
      });
    }
  },
  methods: {
    handleUpdated: function handleUpdated2() {
      this.latestExpandedRows = null;
    },
    handleExpandChange: function handleExpandChange2(expanded2, record, event, rowKey) {
      var destroy3 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }
      var expandedRowKeys2 = this.store.expandedRowKeys;
      if (expanded2) {
        expandedRowKeys2 = [].concat(_default$5(expandedRowKeys2), [rowKey]);
      } else {
        var expandedRowIndex = expandedRowKeys2.indexOf(rowKey);
        if (expandedRowIndex !== -1) {
          expandedRowKeys2 = remove2(expandedRowKeys2, rowKey);
        }
      }
      if (!this.expandedRowKeys) {
        this.store.expandedRowKeys = expandedRowKeys2;
      }
      if (!this.latestExpandedRows || !shallowEqual2(this.latestExpandedRows, expandedRowKeys2)) {
        this.latestExpandedRows = expandedRowKeys2;
        this.__emit("expandedRowsChange", expandedRowKeys2);
        this.__emit("update:expandedRowKeys", expandedRowKeys2);
      }
      if (!destroy3) {
        this.__emit("expand", expanded2, record);
      }
    },
    renderExpandIndentCell: function renderExpandIndentCell(rows, fixed) {
      var prefixCls2 = this.prefixCls, expandIconAsCell = this.expandIconAsCell;
      if (!expandIconAsCell || fixed === "right" || !rows.length) {
        return;
      }
      var iconColumn = {
        key: "rc-table-expand-icon-cell",
        className: prefixCls2 + "-expand-icon-th",
        title: "",
        rowSpan: rows.length
      };
      rows[0].unshift(_default$6({}, iconColumn, { column: iconColumn }));
    },
    renderExpandedRow: function renderExpandedRow(record, index2, expandedRowRender, className, ancestorKeys, indent, fixed) {
      var _this2 = this;
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls, expandIconAsCell = this.expandIconAsCell, indentSize = this.indentSize;
      var parentKey = ancestorKeys[ancestorKeys.length - 1];
      var rowKey = parentKey + "-extra-row";
      var components3 = {
        body: {
          row: "tr",
          cell: "td"
        }
      };
      var colCount = void 0;
      if (fixed === "left") {
        colCount = this.columnManager.leftLeafColumns().length;
      } else if (fixed === "right") {
        colCount = this.columnManager.rightLeafColumns().length;
      } else {
        colCount = this.columnManager.leafColumns().length;
      }
      var columns3 = [{
        key: "extra-row",
        customRender: function customRender() {
          var expandedRowKeys2 = _this2.store.expandedRowKeys;
          var expanded2 = expandedRowKeys2.includes(parentKey);
          return {
            attrs: {
              colSpan: colCount
            },
            children: fixed !== "right" ? expandedRowRender(record, index2, indent, expanded2) : "&nbsp;"
          };
        }
      }];
      if (expandIconAsCell && fixed !== "right") {
        columns3.unshift({
          key: "expand-icon-placeholder",
          customRender: function customRender() {
            return null;
          }
        });
      }
      return h(TableRow$1, {
        key: rowKey,
        attrs: {
          columns: columns3,
          rowKey,
          ancestorKeys,
          prefixCls: prefixCls2 + "-expanded-row",
          indentSize,
          indent,
          fixed,
          components: components3,
          expandedRow: true,
          hasExpandIcon: function hasExpandIcon3() {
          }
        },
        "class": className
      });
    },
    renderRows: function renderRows2(_renderRows, rows, record, index2, indent, fixed, parentKey, ancestorKeys) {
      var expandedRowClassName2 = this.expandedRowClassName, expandedRowRender = this.expandedRowRender, childrenColumnName = this.childrenColumnName;
      var childrenData = record[childrenColumnName];
      var nextAncestorKeys = [].concat(_default$5(ancestorKeys), [parentKey]);
      var nextIndent = indent + 1;
      if (expandedRowRender) {
        rows.push(this.renderExpandedRow(record, index2, expandedRowRender, expandedRowClassName2(record, index2, indent), nextAncestorKeys, nextIndent, fixed));
      }
      if (childrenData) {
        rows.push.apply(rows, _default$5(_renderRows(childrenData, nextIndent, nextAncestorKeys)));
      }
    }
  },
  render: function render193() {
    var data109 = this.data, childrenColumnName = this.childrenColumnName, $scopedSlots = this.$scopedSlots;
    var props2 = getOptionProps(this);
    var needIndentSpaced = data109.some(function(record) {
      return record[childrenColumnName];
    });
    return $scopedSlots["default"] && $scopedSlots["default"]({
      props: props2,
      on: getListeners(this),
      needIndentSpaced,
      renderRows: this.renderRows,
      handleExpandChange: this.handleExpandChange,
      renderExpandIndentCell: this.renderExpandIndentCell
    });
  }
};
var ExpandableTable$1 = ExpandableTable;
var T$2 = {
  name: "Table",
  mixins: [BaseMixin],
  provide: function provide24() {
    return { "table-store": this.store, table: this };
  },
  props: initDefaultProps({
    data: PropTypes.array,
    useFixedHeader: PropTypes.bool,
    columns: PropTypes.array,
    prefixCls: PropTypes.string,
    bodyStyle: PropTypes.object,
    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    customRow: PropTypes.func,
    customHeaderRow: PropTypes.func,
    showHeader: PropTypes.bool,
    title: PropTypes.func,
    id: PropTypes.string,
    footer: PropTypes.func,
    emptyText: PropTypes.any,
    scroll: PropTypes.object,
    rowRef: PropTypes.func,
    getBodyWrapper: PropTypes.func,
    components: PropTypes.shape({
      table: PropTypes.any,
      header: PropTypes.shape({
        wrapper: PropTypes.any,
        row: PropTypes.any,
        cell: PropTypes.any
      }),
      body: PropTypes.shape({
        wrapper: PropTypes.any,
        row: PropTypes.any,
        cell: PropTypes.any
      })
    }),
    expandIconAsCell: PropTypes.bool,
    expandedRowKeys: PropTypes.array,
    expandedRowClassName: PropTypes.func,
    defaultExpandAllRows: PropTypes.bool,
    defaultExpandedRowKeys: PropTypes.array,
    expandIconColumnIndex: PropTypes.number,
    expandedRowRender: PropTypes.func,
    childrenColumnName: PropTypes.string,
    indentSize: PropTypes.number,
    expandRowByClick: PropTypes.bool,
    expandIcon: PropTypes.func,
    tableLayout: PropTypes.string,
    transformCellText: PropTypes.func
  }, {
    data: [],
    useFixedHeader: false,
    rowKey: "key",
    rowClassName: function rowClassName() {
      return "";
    },
    prefixCls: "rc-table",
    bodyStyle: {},
    showHeader: true,
    scroll: {},
    rowRef: function rowRef() {
      return null;
    },
    emptyText: function emptyText() {
      return "No Data";
    },
    customHeaderRow: function customHeaderRow() {
    }
  }),
  data: function data87() {
    this.preData = [].concat(_default$5(this.data));
    this.store = (this.$root.constructor.observable || Vue.observable)({
      currentHoverKey: null,
      fixedColumnsHeadRowsHeight: [],
      fixedColumnsBodyRowsHeight: {},
      expandedRowsHeight: {},
      expandedRowKeys: []
    });
    return {
      columnManager: new ColumnManager$1(this.columns),
      sComponents: merge$1({
        table: "table",
        header: {
          wrapper: "thead",
          row: "tr",
          cell: "th"
        },
        body: {
          wrapper: "tbody",
          row: "tr",
          cell: "td"
        }
      }, this.components)
    };
  },
  watch: {
    components: function components() {
      this._components = merge$1({
        table: "table",
        header: {
          wrapper: "thead",
          row: "tr",
          cell: "th"
        },
        body: {
          wrapper: "tbody",
          row: "tr",
          cell: "td"
        }
      }, this.components);
    },
    columns: function columns(val) {
      if (val) {
        this.columnManager.reset(val);
      }
    },
    data: function data88(val) {
      var _this = this;
      if (val.length === 0 && this.hasScrollX()) {
        this.$nextTick(function() {
          _this.resetScrollX();
        });
      }
    }
  },
  created: function created14() {
    var _this2 = this;
    ["rowClick", "rowDoubleclick", "rowContextmenu", "rowMouseenter", "rowMouseleave"].forEach(function(name) {
      warning$4(getListeners(_this2)[name] === void 0, name + " is deprecated, please use customRow instead.");
    });
    warning$4(this.getBodyWrapper === void 0, "getBodyWrapper is deprecated, please use custom components instead.");
    this.setScrollPosition("left");
    this.debouncedWindowResize = debounce$1(this.handleWindowResize, 150);
  },
  mounted: function mounted56() {
    var _this3 = this;
    this.$nextTick(function() {
      if (_this3.columnManager.isAnyColumnsFixed()) {
        _this3.handleWindowResize();
        _this3.resizeEvent = addEventListenerWrap(window, "resize", _this3.debouncedWindowResize);
      }
      if (_this3.ref_headTable) {
        _this3.ref_headTable.scrollLeft = 0;
      }
      if (_this3.ref_bodyTable) {
        _this3.ref_bodyTable.scrollLeft = 0;
      }
    });
  },
  updated: function updated36() {
    var _this4 = this;
    this.$nextTick(function() {
      if (_this4.columnManager.isAnyColumnsFixed()) {
        _this4.handleWindowResize();
        if (!_this4.resizeEvent) {
          _this4.resizeEvent = addEventListenerWrap(window, "resize", _this4.debouncedWindowResize);
        }
      }
    });
  },
  beforeDestroy: function beforeDestroy42() {
    if (this.resizeEvent) {
      this.resizeEvent.remove();
    }
    if (this.debouncedWindowResize) {
      this.debouncedWindowResize.cancel();
    }
  },
  methods: {
    getRowKey: function getRowKey(record, index2) {
      var rowKey = this.rowKey;
      var key2 = typeof rowKey === "function" ? rowKey(record, index2) : record[rowKey];
      warning$4(key2 !== void 0, "Each record in table should have a unique `key` prop,or set `rowKey` to an unique primary key.");
      return key2 === void 0 ? index2 : key2;
    },
    setScrollPosition: function setScrollPosition(position) {
      this.scrollPosition = position;
      if (this.tableNode) {
        var prefixCls2 = this.prefixCls;
        if (position === "both") {
          componentClasses(this.tableNode).remove(new RegExp("^" + prefixCls2 + "-scroll-position-.+$")).add(prefixCls2 + "-scroll-position-left").add(prefixCls2 + "-scroll-position-right");
        } else {
          componentClasses(this.tableNode).remove(new RegExp("^" + prefixCls2 + "-scroll-position-.+$")).add(prefixCls2 + "-scroll-position-" + position);
        }
      }
    },
    setScrollPositionClassName: function setScrollPositionClassName() {
      var node = this.ref_bodyTable;
      var scrollToLeft = node.scrollLeft === 0;
      var scrollToRight = node.scrollLeft + 1 >= node.children[0].getBoundingClientRect().width - node.getBoundingClientRect().width;
      if (scrollToLeft && scrollToRight) {
        this.setScrollPosition("both");
      } else if (scrollToLeft) {
        this.setScrollPosition("left");
      } else if (scrollToRight) {
        this.setScrollPosition("right");
      } else if (this.scrollPosition !== "middle") {
        this.setScrollPosition("middle");
      }
    },
    isTableLayoutFixed: function isTableLayoutFixed() {
      var _$props = this.$props, tableLayout = _$props.tableLayout, _$props$columns = _$props.columns, columns3 = _$props$columns === void 0 ? [] : _$props$columns, useFixedHeader = _$props.useFixedHeader, _$props$scroll = _$props.scroll, scroll = _$props$scroll === void 0 ? {} : _$props$scroll;
      if (typeof tableLayout !== "undefined") {
        return tableLayout === "fixed";
      }
      if (columns3.some(function(_ref) {
        var ellipsis = _ref.ellipsis;
        return !!ellipsis;
      })) {
        return true;
      }
      if (useFixedHeader || scroll.y) {
        return true;
      }
      if (scroll.x && scroll.x !== true && scroll.x !== "max-content") {
        return true;
      }
      return false;
    },
    handleWindowResize: function handleWindowResize() {
      this.syncFixedTableRowHeight();
      this.setScrollPositionClassName();
    },
    syncFixedTableRowHeight: function syncFixedTableRowHeight() {
      var tableRect = this.tableNode.getBoundingClientRect();
      if (tableRect.height !== void 0 && tableRect.height <= 0) {
        return;
      }
      var prefixCls2 = this.prefixCls;
      var headRows = this.ref_headTable ? this.ref_headTable.querySelectorAll("thead") : this.ref_bodyTable.querySelectorAll("thead");
      var bodyRows = this.ref_bodyTable.querySelectorAll("." + prefixCls2 + "-row") || [];
      var fixedColumnsHeadRowsHeight = [].map.call(headRows, function(row) {
        return row.getBoundingClientRect().height ? row.getBoundingClientRect().height - 0.5 : "auto";
      });
      var state = this.store;
      var fixedColumnsBodyRowsHeight = [].reduce.call(bodyRows, function(acc, row) {
        var rowKey = row.getAttribute("data-row-key");
        var height3 = row.getBoundingClientRect().height || state.fixedColumnsBodyRowsHeight[rowKey] || "auto";
        acc[rowKey] = height3;
        return acc;
      }, {});
      if (shallowEqual2(state.fixedColumnsHeadRowsHeight, fixedColumnsHeadRowsHeight) && shallowEqual2(state.fixedColumnsBodyRowsHeight, fixedColumnsBodyRowsHeight)) {
        return;
      }
      this.store.fixedColumnsHeadRowsHeight = fixedColumnsHeadRowsHeight;
      this.store.fixedColumnsBodyRowsHeight = fixedColumnsBodyRowsHeight;
    },
    resetScrollX: function resetScrollX() {
      if (this.ref_headTable) {
        this.ref_headTable.scrollLeft = 0;
      }
      if (this.ref_bodyTable) {
        this.ref_bodyTable.scrollLeft = 0;
      }
    },
    hasScrollX: function hasScrollX() {
      var _scroll = this.scroll, scroll = _scroll === void 0 ? {} : _scroll;
      return "x" in scroll;
    },
    handleBodyScrollLeft: function handleBodyScrollLeft(e) {
      if (e.currentTarget !== e.target) {
        return;
      }
      var target2 = e.target;
      var _scroll2 = this.scroll, scroll = _scroll2 === void 0 ? {} : _scroll2;
      var ref_headTable = this.ref_headTable, ref_bodyTable = this.ref_bodyTable;
      if (target2.scrollLeft !== this.lastScrollLeft && scroll.x) {
        if (target2 === ref_bodyTable && ref_headTable) {
          ref_headTable.scrollLeft = target2.scrollLeft;
        } else if (target2 === ref_headTable && ref_bodyTable) {
          ref_bodyTable.scrollLeft = target2.scrollLeft;
        }
        this.setScrollPositionClassName();
      }
      this.lastScrollLeft = target2.scrollLeft;
    },
    handleBodyScrollTop: function handleBodyScrollTop(e) {
      var target2 = e.target;
      if (e.currentTarget !== target2) {
        return;
      }
      var _scroll3 = this.scroll, scroll = _scroll3 === void 0 ? {} : _scroll3;
      var ref_headTable = this.ref_headTable, ref_bodyTable = this.ref_bodyTable, ref_fixedColumnsBodyLeft = this.ref_fixedColumnsBodyLeft, ref_fixedColumnsBodyRight = this.ref_fixedColumnsBodyRight;
      if (target2.scrollTop !== this.lastScrollTop && scroll.y && target2 !== ref_headTable) {
        var scrollTop2 = target2.scrollTop;
        if (ref_fixedColumnsBodyLeft && target2 !== ref_fixedColumnsBodyLeft) {
          ref_fixedColumnsBodyLeft.scrollTop = scrollTop2;
        }
        if (ref_fixedColumnsBodyRight && target2 !== ref_fixedColumnsBodyRight) {
          ref_fixedColumnsBodyRight.scrollTop = scrollTop2;
        }
        if (ref_bodyTable && target2 !== ref_bodyTable) {
          ref_bodyTable.scrollTop = scrollTop2;
        }
      }
      this.lastScrollTop = target2.scrollTop;
    },
    handleBodyScroll: function handleBodyScroll(e) {
      this.handleBodyScrollLeft(e);
      this.handleBodyScrollTop(e);
    },
    handleWheel: function handleWheel(event) {
      var _$props$scroll2 = this.$props.scroll, scroll = _$props$scroll2 === void 0 ? {} : _$props$scroll2;
      if (window.navigator.userAgent.match(/Trident\/7\./) && scroll.y) {
        event.preventDefault();
        var wd = event.deltaY;
        var target2 = event.target;
        var bodyTable = this.ref_bodyTable, fixedColumnsBodyLeft = this.ref_fixedColumnsBodyLeft, fixedColumnsBodyRight = this.ref_fixedColumnsBodyRight;
        var scrollTop2 = 0;
        if (this.lastScrollTop) {
          scrollTop2 = this.lastScrollTop + wd;
        } else {
          scrollTop2 = wd;
        }
        if (fixedColumnsBodyLeft && target2 !== fixedColumnsBodyLeft) {
          fixedColumnsBodyLeft.scrollTop = scrollTop2;
        }
        if (fixedColumnsBodyRight && target2 !== fixedColumnsBodyRight) {
          fixedColumnsBodyRight.scrollTop = scrollTop2;
        }
        if (bodyTable && target2 !== bodyTable) {
          bodyTable.scrollTop = scrollTop2;
        }
      }
    },
    saveRef: function saveRef3(name) {
      var _this5 = this;
      return function(node) {
        _this5["ref_" + name] = node;
      };
    },
    saveTableNodeRef: function saveTableNodeRef(node) {
      this.tableNode = node;
    },
    renderMainTable: function renderMainTable() {
      var h = this.$createElement;
      var scroll = this.scroll, prefixCls2 = this.prefixCls;
      var isAnyColumnsFixed = this.columnManager.isAnyColumnsFixed();
      var scrollable = isAnyColumnsFixed || scroll.x || scroll.y;
      var table = [this.renderTable({
        columns: this.columnManager.groupedColumns(),
        isAnyColumnsFixed
      }), this.renderEmptyText(), this.renderFooter()];
      return scrollable ? h(
        "div",
        { "class": prefixCls2 + "-scroll" },
        [table]
      ) : table;
    },
    renderLeftFixedTable: function renderLeftFixedTable() {
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls;
      return h(
        "div",
        { "class": prefixCls2 + "-fixed-left" },
        [this.renderTable({
          columns: this.columnManager.leftColumns(),
          fixed: "left"
        })]
      );
    },
    renderRightFixedTable: function renderRightFixedTable() {
      var h = this.$createElement;
      var prefixCls2 = this.prefixCls;
      return h(
        "div",
        { "class": prefixCls2 + "-fixed-right" },
        [this.renderTable({
          columns: this.columnManager.rightColumns(),
          fixed: "right"
        })]
      );
    },
    renderTable: function renderTable(options2) {
      var h = this.$createElement;
      var columns3 = options2.columns, fixed = options2.fixed, isAnyColumnsFixed = options2.isAnyColumnsFixed;
      var prefixCls2 = this.prefixCls, _scroll4 = this.scroll, scroll = _scroll4 === void 0 ? {} : _scroll4;
      var tableClassName = scroll.x || fixed ? prefixCls2 + "-fixed" : "";
      var headTable = h(HeadTable, {
        key: "head",
        attrs: {
          columns: columns3,
          fixed,
          tableClassName,
          handleBodyScrollLeft: this.handleBodyScrollLeft,
          expander: this.expander
        }
      });
      var bodyTable = h(BodyTable, {
        key: "body",
        attrs: {
          columns: columns3,
          fixed,
          tableClassName,
          getRowKey: this.getRowKey,
          handleWheel: this.handleWheel,
          handleBodyScroll: this.handleBodyScroll,
          expander: this.expander,
          isAnyColumnsFixed
        }
      });
      return [headTable, bodyTable];
    },
    renderTitle: function renderTitle() {
      var h = this.$createElement;
      var title = this.title, prefixCls2 = this.prefixCls, data109 = this.data;
      return title ? h(
        "div",
        { "class": prefixCls2 + "-title", key: "title" },
        [title(data109)]
      ) : null;
    },
    renderFooter: function renderFooter4() {
      var h = this.$createElement;
      var footer = this.footer, prefixCls2 = this.prefixCls, data109 = this.data;
      return footer ? h(
        "div",
        { "class": prefixCls2 + "-footer", key: "footer" },
        [footer(data109)]
      ) : null;
    },
    renderEmptyText: function renderEmptyText() {
      var h = this.$createElement;
      var emptyText2 = this.emptyText, prefixCls2 = this.prefixCls, data109 = this.data;
      if (data109.length) {
        return null;
      }
      var emptyClassName = prefixCls2 + "-placeholder";
      return h(
        "div",
        { "class": emptyClassName, key: "emptyText" },
        [typeof emptyText2 === "function" ? emptyText2() : emptyText2]
      );
    }
  },
  render: function render194() {
    var _classNames, _this6 = this;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var columnManager = this.columnManager, getRowKey2 = this.getRowKey;
    var prefixCls2 = props2.prefixCls;
    var tableClassName = classNames(props2.prefixCls, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-fixed-header", props2.useFixedHeader || props2.scroll && props2.scroll.y), _default$8(_classNames, prefixCls2 + "-scroll-position-left " + prefixCls2 + "-scroll-position-right", this.scrollPosition === "both"), _default$8(_classNames, prefixCls2 + "-scroll-position-" + this.scrollPosition, this.scrollPosition !== "both"), _default$8(_classNames, prefixCls2 + "-layout-fixed", this.isTableLayoutFixed()), _classNames));
    var hasLeftFixed = columnManager.isAnyColumnsLeftFixed();
    var hasRightFixed = columnManager.isAnyColumnsRightFixed();
    var expandableTableProps = {
      props: _default$6({}, props2, {
        columnManager,
        getRowKey: getRowKey2
      }),
      on: getListeners(this),
      scopedSlots: {
        "default": function _default130(expander) {
          _this6.expander = expander;
          return h(
            "div",
            _mergeJSXProps([{
              directives: [{
                name: "ant-ref",
                value: _this6.saveTableNodeRef
              }]
            }, {
              "class": tableClassName
            }]),
            [_this6.renderTitle(), h(
              "div",
              { "class": prefixCls2 + "-content" },
              [_this6.renderMainTable(), hasLeftFixed && _this6.renderLeftFixedTable(), hasRightFixed && _this6.renderRightFixedTable()]
            )]
          );
        }
      }
    };
    return h(ExpandableTable$1, expandableTableProps);
  }
};
var Column$1 = {
  name: "Column",
  props: {
    rowSpan: PropTypes.number,
    colSpan: PropTypes.number,
    title: PropTypes.any,
    dataIndex: PropTypes.string,
    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    ellipsis: PropTypes.bool,
    fixed: PropTypes.oneOf([true, "left", "right"]),
    align: PropTypes.oneOf(["left", "center", "right"]),
    customRender: PropTypes.func,
    className: PropTypes.string,
    customCell: PropTypes.func,
    customHeaderCell: PropTypes.func
  }
};
var ColumnGroup$1 = {
  name: "ColumnGroup",
  props: {
    title: PropTypes.any
  },
  isTableColumnGroup: true
};
var Table$2 = {
  name: "Table",
  Column: Column$1,
  ColumnGroup: ColumnGroup$1,
  props: T$2.props,
  methods: {
    getTableNode: function getTableNode() {
      return this.$refs.table.tableNode;
    },
    getBodyTable: function getBodyTable() {
      return this.$refs.table.ref_bodyTable;
    },
    normalize: function normalize() {
      var _this = this;
      var elements = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var columns3 = [];
      elements.forEach(function(element) {
        if (!element.tag) {
          return;
        }
        var key2 = getKey(element);
        var style3 = getStyle$1(element);
        var cls = getClass(element);
        var props2 = getOptionProps(element);
        var events = getEvents(element);
        var listeners = {};
        Object.keys(events).forEach(function(e) {
          var k = "on-" + e;
          listeners[camelize(k)] = events[e];
        });
        var _getSlots = getSlots(element), children = _getSlots["default"], title = _getSlots.title;
        var column = _default$6({ title }, props2, { style: style3, "class": cls }, listeners);
        if (key2) {
          column.key = key2;
        }
        if (getSlotOptions(element).isTableColumnGroup) {
          column.children = _this.normalize(typeof children === "function" ? children() : children);
        } else {
          var customRender = element.data && element.data.scopedSlots && element.data.scopedSlots["default"];
          column.customRender = column.customRender || customRender;
        }
        columns3.push(column);
      });
      return columns3;
    }
  },
  render: function render195() {
    var h = arguments[0];
    var $slots = this.$slots, normalize3 = this.normalize;
    var props2 = getOptionProps(this);
    var columns3 = props2.columns || normalize3($slots["default"]);
    var tProps = {
      props: _default$6({}, props2, {
        columns: columns3
      }),
      on: getListeners(this),
      ref: "table"
    };
    return h(T$2, tProps);
  }
};
var VcTable = Table$2;
function matches$1(elem, selector) {
  var proto2 = window.Element.prototype;
  var nativeMatches = proto2.matches || proto2.mozMatchesSelector || proto2.msMatchesSelector || proto2.oMatchesSelector || proto2.webkitMatchesSelector;
  if (!elem || elem.nodeType !== 1) {
    return false;
  }
  var parentElem = elem.parentNode;
  if (nativeMatches) {
    return nativeMatches.call(elem, selector);
  }
  var nodes = parentElem.querySelectorAll(selector);
  var len = nodes.length;
  for (var i = 0; i < len; i++) {
    if (nodes[i] === elem) {
      return true;
    }
  }
  return false;
}
var domMatches = matches$1;
var matches = domMatches;
var domClosest = function(element, selector, context) {
  context = context || document;
  element = { parentNode: element };
  while ((element = element.parentNode) && element !== context) {
    if (matches(element, selector)) {
      return element;
    }
  }
};
var closest = domClosest;
var FilterDropdownMenuWrapper = {
  name: "FilterDropdownMenuWrapper",
  methods: {
    handelClick: function handelClick(e) {
      e.stopPropagation();
    }
  },
  render: function render196() {
    var h = arguments[0];
    var $slots = this.$slots, handelClick2 = this.handelClick;
    return h(
      "div",
      {
        on: {
          "click": handelClick2
        }
      },
      [$slots["default"]]
    );
  }
};
var PaginationProps2 = PaginationProps$1();
var SpinProps2 = SpinProps$1();
var ColumnFilterItem = PropTypes.shape({
  text: PropTypes.string,
  value: PropTypes.string,
  children: PropTypes.array
}).loose;
var ColumnProps = {
  title: PropTypes.any,
  dataIndex: PropTypes.string,
  customRender: PropTypes.func,
  customCell: PropTypes.func,
  customHeaderCell: PropTypes.func,
  align: PropTypes.oneOf(["left", "right", "center"]),
  ellipsis: PropTypes.bool,
  filters: PropTypes.arrayOf(ColumnFilterItem),
  filterMultiple: PropTypes.bool,
  filterDropdown: PropTypes.any,
  filterDropdownVisible: PropTypes.bool,
  sorter: PropTypes.oneOfType([PropTypes.boolean, PropTypes.func]),
  defaultSortOrder: PropTypes.oneOf(["ascend", "descend"]),
  colSpan: PropTypes.number,
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  className: PropTypes.string,
  fixed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(["left", "right"])]),
  filterIcon: PropTypes.any,
  filteredValue: PropTypes.array,
  filtered: PropTypes.bool,
  defaultFilteredValue: PropTypes.array,
  sortOrder: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(["ascend", "descend"])]),
  sortDirections: PropTypes.array
};
var TableLocale = PropTypes.shape({
  filterTitle: PropTypes.string,
  filterConfirm: PropTypes.any,
  filterReset: PropTypes.any,
  emptyText: PropTypes.any,
  selectAll: PropTypes.any,
  selectInvert: PropTypes.any,
  sortTitle: PropTypes.string,
  expand: PropTypes.string,
  collapse: PropTypes.string
}).loose;
var RowSelectionType = PropTypes.oneOf(["checkbox", "radio"]);
var TableRowSelection = {
  type: RowSelectionType,
  selectedRowKeys: PropTypes.array,
  getCheckboxProps: PropTypes.func,
  selections: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),
  hideDefaultSelections: PropTypes.bool,
  fixed: PropTypes.bool,
  columnWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  selectWay: PropTypes.oneOf(["onSelect", "onSelectMultiple", "onSelectAll", "onSelectInvert"]),
  columnTitle: PropTypes.any
};
var TableProps = {
  prefixCls: PropTypes.string,
  dropdownPrefixCls: PropTypes.string,
  rowSelection: PropTypes.oneOfType([PropTypes.shape(TableRowSelection).loose, null]),
  pagination: PropTypes.oneOfType([PropTypes.shape(_default$6({}, PaginationProps2, {
    position: PropTypes.oneOf(["top", "bottom", "both"])
  })).loose, PropTypes.bool]),
  size: PropTypes.oneOf(["default", "middle", "small", "large"]),
  dataSource: PropTypes.array,
  components: PropTypes.object,
  columns: PropTypes.array,
  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  rowClassName: PropTypes.func,
  expandedRowRender: PropTypes.any,
  defaultExpandAllRows: PropTypes.bool,
  defaultExpandedRowKeys: PropTypes.array,
  expandedRowKeys: PropTypes.array,
  expandIconAsCell: PropTypes.bool,
  expandIconColumnIndex: PropTypes.number,
  expandRowByClick: PropTypes.bool,
  loading: PropTypes.oneOfType([PropTypes.shape(SpinProps2).loose, PropTypes.bool]),
  locale: TableLocale,
  indentSize: PropTypes.number,
  customRow: PropTypes.func,
  customHeaderRow: PropTypes.func,
  useFixedHeader: PropTypes.bool,
  bordered: PropTypes.bool,
  showHeader: PropTypes.bool,
  footer: PropTypes.func,
  title: PropTypes.func,
  scroll: PropTypes.object,
  childrenColumnName: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),
  bodyStyle: PropTypes.any,
  sortDirections: PropTypes.array,
  tableLayout: PropTypes.string,
  getPopupContainer: PropTypes.func,
  expandIcon: PropTypes.func,
  transformCellText: PropTypes.func
};
var SelectionCheckboxAllProps = {
  store: PropTypes.any,
  locale: PropTypes.any,
  disabled: PropTypes.bool,
  getCheckboxPropsByItem: PropTypes.func,
  getRecordKey: PropTypes.func,
  data: PropTypes.array,
  prefixCls: PropTypes.string,
  hideDefaultSelections: PropTypes.bool,
  selections: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),
  getPopupContainer: PropTypes.func
};
var SelectionBoxProps = {
  store: PropTypes.any,
  type: RowSelectionType,
  defaultSelection: PropTypes.arrayOf([PropTypes.string, PropTypes.number]),
  rowIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  name: PropTypes.string,
  disabled: PropTypes.bool,
  id: PropTypes.string
};
var FilterMenuProps = {
  _propsSymbol: PropTypes.any,
  locale: TableLocale,
  selectedKeys: PropTypes.arrayOf([PropTypes.string, PropTypes.number]),
  column: PropTypes.object,
  confirmFilter: PropTypes.func,
  prefixCls: PropTypes.string,
  dropdownPrefixCls: PropTypes.string,
  getPopupContainer: PropTypes.func,
  handleFilter: PropTypes.func
};
function flatArray() {
  var data109 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var childrenName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "children";
  var result = [];
  var loop = function loop2(array3) {
    array3.forEach(function(item) {
      if (item[childrenName]) {
        var newItem = _default$6({}, item);
        delete newItem[childrenName];
        result.push(newItem);
        if (item[childrenName].length > 0) {
          loop2(item[childrenName]);
        }
      } else {
        result.push(item);
      }
    });
  };
  loop(data109);
  return result;
}
function treeMap(tree, mapper) {
  var childrenName = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "children";
  return tree.map(function(node, index2) {
    var extra = {};
    if (node[childrenName]) {
      extra[childrenName] = treeMap(node[childrenName], mapper, childrenName);
    }
    return _default$6({}, mapper(node, index2), extra);
  });
}
function flatFilter(tree, callback) {
  return tree.reduce(function(acc, node) {
    if (callback(node)) {
      acc.push(node);
    }
    if (node.children) {
      var children = flatFilter(node.children, callback);
      acc.push.apply(acc, _default$5(children));
    }
    return acc;
  }, []);
}
function generateValueMaps(items) {
  var maps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  (items || []).forEach(function(_ref) {
    var value27 = _ref.value, children = _ref.children;
    maps[value27.toString()] = value27;
    generateValueMaps(children, maps);
  });
  return maps;
}
function stopPropagation$1(e) {
  e.stopPropagation();
}
var FilterDropdown = {
  name: "FilterMenu",
  mixins: [BaseMixin],
  props: initDefaultProps(FilterMenuProps, {
    handleFilter: function handleFilter() {
    },
    column: {}
  }),
  data: function data89() {
    var visible11 = "filterDropdownVisible" in this.column ? this.column.filterDropdownVisible : false;
    this.preProps = _default$6({}, getOptionProps(this));
    return {
      sSelectedKeys: this.selectedKeys,
      sKeyPathOfSelectedItem: {},
      sVisible: visible11,
      sValueKeys: generateValueMaps(this.column.filters)
    };
  },
  watch: {
    _propsSymbol: function _propsSymbol() {
      var nextProps = getOptionProps(this);
      var column = nextProps.column;
      var newState = {};
      if ("selectedKeys" in nextProps && !shallowEqual2(this.preProps.selectedKeys, nextProps.selectedKeys)) {
        newState.sSelectedKeys = nextProps.selectedKeys;
      }
      if (!shallowEqual2((this.preProps.column || {}).filters, (nextProps.column || {}).filters)) {
        newState.sValueKeys = generateValueMaps(nextProps.column.filters);
      }
      if ("filterDropdownVisible" in column) {
        newState.sVisible = column.filterDropdownVisible;
      }
      if (Object.keys(newState).length > 0) {
        this.setState(newState);
      }
      this.preProps = _default$6({}, nextProps);
    }
  },
  mounted: function mounted57() {
    var _this = this;
    var column = this.column;
    this.$nextTick(function() {
      _this.setNeverShown(column);
    });
  },
  updated: function updated37() {
    var _this2 = this;
    var column = this.column;
    this.$nextTick(function() {
      _this2.setNeverShown(column);
    });
  },
  methods: {
    getDropdownVisible: function getDropdownVisible() {
      return this.neverShown ? false : this.sVisible;
    },
    setNeverShown: function setNeverShown(column) {
      var rootNode = this.$el;
      var filterBelongToScrollBody = !!closest(rootNode, ".ant-table-scroll");
      if (filterBelongToScrollBody) {
        this.neverShown = !!column.fixed;
      }
    },
    setSelectedKeys: function setSelectedKeys(_ref) {
      var selectedKeys3 = _ref.selectedKeys;
      this.setState({ sSelectedKeys: selectedKeys3 });
    },
    setVisible: function setVisible3(visible11) {
      var column = this.column;
      if (!("filterDropdownVisible" in column)) {
        this.setState({ sVisible: visible11 });
      }
      if (column.onFilterDropdownVisibleChange) {
        column.onFilterDropdownVisibleChange(visible11);
      }
    },
    handleClearFilters: function handleClearFilters() {
      this.setState({
        sSelectedKeys: []
      }, this.handleConfirm);
    },
    handleConfirm: function handleConfirm() {
      var _this3 = this;
      this.setVisible(false);
      this.confirmFilter2();
      this.$forceUpdate();
      this.$nextTick(function() {
        _this3.confirmFilter;
      });
    },
    onVisibleChange: function onVisibleChange8(visible11) {
      this.setVisible(visible11);
      var column = this.$props.column;
      if (!visible11 && !(column.filterDropdown instanceof Function)) {
        this.confirmFilter2();
      }
    },
    handleMenuItemClick: function handleMenuItemClick(info3) {
      var selectedKeys3 = this.$data.sSelectedKeys;
      if (!info3.keyPath || info3.keyPath.length <= 1) {
        return;
      }
      var keyPathOfSelectedItem = this.$data.sKeyPathOfSelectedItem;
      if (selectedKeys3 && selectedKeys3.indexOf(info3.key) >= 0) {
        delete keyPathOfSelectedItem[info3.key];
      } else {
        keyPathOfSelectedItem[info3.key] = info3.keyPath;
      }
      this.setState({ sKeyPathOfSelectedItem: keyPathOfSelectedItem });
    },
    hasSubMenu: function hasSubMenu() {
      var _column$filters = this.column.filters, filters = _column$filters === void 0 ? [] : _column$filters;
      return filters.some(function(item) {
        return !!(item.children && item.children.length > 0);
      });
    },
    confirmFilter2: function confirmFilter2() {
      var _$props = this.$props, column = _$props.column, propSelectedKeys = _$props.selectedKeys, confirmFilter = _$props.confirmFilter;
      var _$data = this.$data, selectedKeys3 = _$data.sSelectedKeys, valueKeys = _$data.sValueKeys;
      var filterDropdown = column.filterDropdown;
      if (!shallowEqual2(selectedKeys3, propSelectedKeys)) {
        confirmFilter(column, filterDropdown ? selectedKeys3 : selectedKeys3.map(function(key2) {
          return valueKeys[key2];
        }).filter(function(key2) {
          return key2 !== void 0;
        }));
      }
    },
    renderMenus: function renderMenus(items) {
      var _this4 = this;
      var h = this.$createElement;
      var _$props2 = this.$props, dropdownPrefixCls = _$props2.dropdownPrefixCls, prefixCls2 = _$props2.prefixCls;
      return items.map(function(item) {
        if (item.children && item.children.length > 0) {
          var sKeyPathOfSelectedItem = _this4.sKeyPathOfSelectedItem;
          var containSelected = Object.keys(sKeyPathOfSelectedItem).some(function(key2) {
            return sKeyPathOfSelectedItem[key2].indexOf(item.value) >= 0;
          });
          var subMenuCls = classNames(prefixCls2 + "-dropdown-submenu", _default$8({}, dropdownPrefixCls + "-submenu-contain-selected", containSelected));
          return h(
            SubMenu$2,
            {
              attrs: { title: item.text, popupClassName: subMenuCls },
              key: item.value
            },
            [_this4.renderMenus(item.children)]
          );
        }
        return _this4.renderMenuItem(item);
      });
    },
    renderFilterIcon: function renderFilterIcon() {
      var _classNames2;
      var h = this.$createElement;
      var column = this.column, locale3 = this.locale, prefixCls2 = this.prefixCls, selectedKeys3 = this.selectedKeys;
      var filtered = selectedKeys3 && selectedKeys3.length > 0;
      var filterIcon = column.filterIcon;
      if (typeof filterIcon === "function") {
        filterIcon = filterIcon(filtered, column);
      }
      var dropdownIconClass = classNames((_classNames2 = {}, _default$8(_classNames2, prefixCls2 + "-selected", "filtered" in column ? column.filtered : filtered), _default$8(_classNames2, prefixCls2 + "-open", this.getDropdownVisible()), _classNames2));
      if (!filterIcon) {
        return h(Icon$1, {
          attrs: {
            title: locale3.filterTitle,
            type: "filter",
            theme: "filled"
          },
          "class": dropdownIconClass,
          on: {
            "click": stopPropagation$1
          }
        });
      }
      if (filterIcon.length === 1 && isValidElement(filterIcon[0])) {
        return cloneElement(filterIcon[0], {
          on: {
            click: stopPropagation$1
          },
          "class": classNames(prefixCls2 + "-icon", dropdownIconClass)
        });
      }
      return h(
        "span",
        { "class": classNames(prefixCls2 + "-icon", dropdownIconClass) },
        [filterIcon]
      );
    },
    renderMenuItem: function renderMenuItem2(item) {
      var h = this.$createElement;
      var column = this.column;
      var selectedKeys3 = this.$data.sSelectedKeys;
      var multiple = "filterMultiple" in column ? column.filterMultiple : true;
      var input = multiple ? h(Checkbox, {
        attrs: { checked: selectedKeys3 && selectedKeys3.indexOf(item.value) >= 0 }
      }) : h(Radio, {
        attrs: { checked: selectedKeys3 && selectedKeys3.indexOf(item.value) >= 0 }
      });
      return h(
        MenuItem$1,
        { key: item.value },
        [input, h("span", [item.text])]
      );
    }
  },
  render: function render197() {
    var _this5 = this;
    var h = arguments[0];
    var originSelectedKeys = this.$data.sSelectedKeys;
    var column = this.column, locale3 = this.locale, prefixCls2 = this.prefixCls, dropdownPrefixCls = this.dropdownPrefixCls, getPopupContainer = this.getPopupContainer;
    var multiple = "filterMultiple" in column ? column.filterMultiple : true;
    var dropdownMenuClass = classNames(_default$8({}, dropdownPrefixCls + "-menu-without-submenu", !this.hasSubMenu()));
    var filterDropdown = column.filterDropdown;
    if (filterDropdown instanceof Function) {
      filterDropdown = filterDropdown({
        prefixCls: dropdownPrefixCls + "-custom",
        setSelectedKeys: function setSelectedKeys2(selectedKeys3) {
          return _this5.setSelectedKeys({ selectedKeys: selectedKeys3 });
        },
        selectedKeys: originSelectedKeys,
        confirm: this.handleConfirm,
        clearFilters: this.handleClearFilters,
        filters: column.filters,
        visible: this.getDropdownVisible(),
        column
      });
    }
    var menus = filterDropdown ? h(
      FilterDropdownMenuWrapper,
      { "class": prefixCls2 + "-dropdown" },
      [filterDropdown]
    ) : h(
      FilterDropdownMenuWrapper,
      { "class": prefixCls2 + "-dropdown" },
      [h(
        Menu$3,
        {
          attrs: {
            multiple,
            prefixCls: dropdownPrefixCls + "-menu",
            selectedKeys: originSelectedKeys && originSelectedKeys.map(function(val) {
              return val;
            }),
            getPopupContainer
          },
          on: {
            "click": this.handleMenuItemClick,
            "select": this.setSelectedKeys,
            "deselect": this.setSelectedKeys
          },
          "class": dropdownMenuClass
        },
        [this.renderMenus(column.filters)]
      ), h(
        "div",
        { "class": prefixCls2 + "-dropdown-btns" },
        [h(
          "a",
          {
            "class": prefixCls2 + "-dropdown-link confirm",
            on: {
              "click": this.handleConfirm
            }
          },
          [locale3.filterConfirm]
        ), h(
          "a",
          {
            "class": prefixCls2 + "-dropdown-link clear",
            on: {
              "click": this.handleClearFilters
            }
          },
          [locale3.filterReset]
        )]
      )]
    );
    return h(
      Dropdown$1,
      {
        attrs: {
          trigger: ["click"],
          placement: "bottomRight",
          visible: this.getDropdownVisible(),
          getPopupContainer,
          forceRender: true
        },
        on: {
          "visibleChange": this.onVisibleChange
        }
      },
      [h(
        "template",
        { slot: "overlay" },
        [menus]
      ), this.renderFilterIcon()]
    );
  }
};
var SelectionBox = {
  name: "SelectionBox",
  mixins: [BaseMixin],
  props: SelectionBoxProps,
  computed: {
    checked: function checked3() {
      var _$props = this.$props, store2 = _$props.store, defaultSelection = _$props.defaultSelection, rowIndex = _$props.rowIndex;
      var checked4 = false;
      if (store2.selectionDirty) {
        checked4 = store2.selectedRowKeys.indexOf(rowIndex) >= 0;
      } else {
        checked4 = store2.selectedRowKeys.indexOf(rowIndex) >= 0 || defaultSelection.indexOf(rowIndex) >= 0;
      }
      return checked4;
    }
  },
  render: function render198() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), type3 = _getOptionProps.type, rowIndex = _getOptionProps.rowIndex, rest = _default$2(_getOptionProps, ["type", "rowIndex"]);
    var checked4 = this.checked;
    var checkboxProps = {
      props: _default$6({
        checked: checked4
      }, rest),
      on: getListeners(this)
    };
    if (type3 === "radio") {
      checkboxProps.props.value = rowIndex;
      return h(Radio, checkboxProps);
    }
    return h(Checkbox, checkboxProps);
  }
};
function checkSelection(_ref) {
  var store2 = _ref.store, getCheckboxPropsByItem2 = _ref.getCheckboxPropsByItem, getRecordKey2 = _ref.getRecordKey, data109 = _ref.data, type3 = _ref.type, byDefaultChecked = _ref.byDefaultChecked;
  return byDefaultChecked ? data109[type3](function(item, i) {
    return getCheckboxPropsByItem2(item, i).defaultChecked;
  }) : data109[type3](function(item, i) {
    return store2.selectedRowKeys.indexOf(getRecordKey2(item, i)) >= 0;
  });
}
function getIndeterminateState(props2) {
  var store2 = props2.store, data109 = props2.data;
  if (!data109.length) {
    return false;
  }
  var someCheckedNotByDefaultChecked = checkSelection(_default$6({}, props2, {
    data: data109,
    type: "some",
    byDefaultChecked: false
  })) && !checkSelection(_default$6({}, props2, {
    data: data109,
    type: "every",
    byDefaultChecked: false
  }));
  var someCheckedByDefaultChecked = checkSelection(_default$6({}, props2, {
    data: data109,
    type: "some",
    byDefaultChecked: true
  })) && !checkSelection(_default$6({}, props2, {
    data: data109,
    type: "every",
    byDefaultChecked: true
  }));
  if (store2.selectionDirty) {
    return someCheckedNotByDefaultChecked;
  }
  return someCheckedNotByDefaultChecked || someCheckedByDefaultChecked;
}
function getCheckState(props2) {
  var store2 = props2.store, data109 = props2.data;
  if (!data109.length) {
    return false;
  }
  if (store2.selectionDirty) {
    return checkSelection(_default$6({}, props2, {
      data: data109,
      type: "every",
      byDefaultChecked: false
    }));
  }
  return checkSelection(_default$6({}, props2, {
    data: data109,
    type: "every",
    byDefaultChecked: false
  })) || checkSelection(_default$6({}, props2, {
    data: data109,
    type: "every",
    byDefaultChecked: true
  }));
}
var SelectionCheckboxAll = {
  name: "SelectionCheckboxAll",
  mixins: [BaseMixin],
  props: SelectionCheckboxAllProps,
  data: function data90() {
    var props2 = this.$props;
    this.defaultSelections = props2.hideDefaultSelections ? [] : [{
      key: "all",
      text: props2.locale.selectAll
    }, {
      key: "invert",
      text: props2.locale.selectInvert
    }];
    return {
      checked: getCheckState(props2),
      indeterminate: getIndeterminateState(props2)
    };
  },
  watch: {
    $props: {
      handler: function handler4() {
        this.setCheckState(this.$props);
      },
      deep: true,
      immediate: true
    }
  },
  methods: {
    checkSelection: function checkSelection2(props2, data109, type3, byDefaultChecked) {
      var _ref2 = props2 || this.$props, store2 = _ref2.store, getCheckboxPropsByItem2 = _ref2.getCheckboxPropsByItem, getRecordKey2 = _ref2.getRecordKey;
      if (type3 === "every" || type3 === "some") {
        return byDefaultChecked ? data109[type3](function(item, i) {
          return getCheckboxPropsByItem2(item, i).props.defaultChecked;
        }) : data109[type3](function(item, i) {
          return store2.selectedRowKeys.indexOf(getRecordKey2(item, i)) >= 0;
        });
      }
      return false;
    },
    setCheckState: function setCheckState(props2) {
      var checked4 = getCheckState(props2);
      var indeterminate = getIndeterminateState(props2);
      this.setState(function(prevState) {
        var newState = {};
        if (indeterminate !== prevState.indeterminate) {
          newState.indeterminate = indeterminate;
        }
        if (checked4 !== prevState.checked) {
          newState.checked = checked4;
        }
        return newState;
      });
    },
    handleSelectAllChange: function handleSelectAllChange(e) {
      var checked4 = e.target.checked;
      this.$emit("select", checked4 ? "all" : "removeAll", 0, null);
    },
    renderMenus: function renderMenus2(selections) {
      var _this = this;
      var h = this.$createElement;
      return selections.map(function(selection, index2) {
        return h(
          Menu$1.Item,
          { key: selection.key || index2 },
          [h(
            "div",
            {
              on: {
                "click": function click() {
                  _this.$emit("select", selection.key, index2, selection.onSelect);
                }
              }
            },
            [selection.text]
          )]
        );
      });
    }
  },
  render: function render199() {
    var h = arguments[0];
    var disabled = this.disabled, prefixCls2 = this.prefixCls, selections = this.selections, getPopupContainer = this.getPopupContainer, checked4 = this.checked, indeterminate = this.indeterminate;
    var selectionPrefixCls = prefixCls2 + "-selection";
    var customSelections = null;
    if (selections) {
      var newSelections = Array.isArray(selections) ? this.defaultSelections.concat(selections) : this.defaultSelections;
      var menu = h(
        Menu$1,
        {
          "class": selectionPrefixCls + "-menu",
          attrs: { selectedKeys: [] }
        },
        [this.renderMenus(newSelections)]
      );
      customSelections = newSelections.length > 0 ? h(
        Dropdown$1,
        {
          attrs: { getPopupContainer }
        },
        [h(
          "template",
          { slot: "overlay" },
          [menu]
        ), h(
          "div",
          { "class": selectionPrefixCls + "-down" },
          [h(Icon$1, {
            attrs: { type: "down" }
          })]
        )]
      ) : null;
    }
    return h(
      "div",
      { "class": selectionPrefixCls },
      [h(Checkbox, {
        "class": classNames(_default$8({}, selectionPrefixCls + "-select-all-custom", customSelections)),
        attrs: {
          checked: checked4,
          indeterminate,
          disabled
        },
        on: {
          "change": this.handleSelectAllChange
        }
      }), customSelections]
    );
  }
};
var Column = {
  name: "ATableColumn",
  props: ColumnProps
};
var ColumnGroup = {
  name: "ATableColumnGroup",
  props: {
    fixed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(["left", "right"])]),
    title: PropTypes.any
  },
  __ANT_TABLE_COLUMN_GROUP: true
};
var BodyRowProps = {
  store: PropTypes.any,
  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  prefixCls: PropTypes.string
};
function createBodyRow() {
  var Component = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "tr";
  var BodyRow = {
    name: "BodyRow",
    props: BodyRowProps,
    computed: {
      selected: function selected() {
        return this.$props.store.selectedRowKeys.indexOf(this.$props.rowKey) >= 0;
      }
    },
    render: function render249() {
      var h = arguments[0];
      var className = _default$8({}, this.prefixCls + "-row-selected", this.selected);
      return h(
        Component,
        _mergeJSXProps([{ "class": className }, { on: getListeners(this) }]),
        [this.$slots["default"]]
      );
    }
  };
  return BodyRow;
}
var inlineStyle = {
  border: 0,
  background: "transparent",
  padding: 0,
  lineHeight: "inherit",
  display: "inline-block"
};
var TransButton = {
  props: {
    noStyle: PropTypes.bool
  },
  methods: {
    onKeyDown: function onKeyDown21(event) {
      var keyCode = event.keyCode;
      if (keyCode === KeyCode$2.ENTER) {
        event.preventDefault();
      }
    },
    onKeyUp: function onKeyUp3(event) {
      var keyCode = event.keyCode;
      if (keyCode === KeyCode$2.ENTER) {
        this.$emit("click", event);
      }
    },
    setRef: function setRef(btn) {
      this.div = btn;
    },
    focus: function focus29() {
      if (this.div) {
        this.div.focus();
      }
    },
    blur: function blur26() {
      if (this.div) {
        this.div.blur();
      }
    }
  },
  render: function render200() {
    var h = arguments[0];
    var noStyle = this.$props.noStyle;
    return h(
      "div",
      _mergeJSXProps([{
        attrs: {
          role: "button",
          tabIndex: 0
        }
      }, {
        directives: [{
          name: "ant-ref",
          value: this.setRef
        }],
        on: _default$6({}, this.$listeners, {
          keydown: this.onKeyDown,
          keyup: this.onKeyUp
        })
      }, {
        style: _default$6({}, !noStyle ? inlineStyle : null)
      }]),
      [this.$slots["default"]]
    );
  }
};
var TransButton$1 = TransButton;
function noop$8() {
}
function stopPropagation(e) {
  e.stopPropagation();
}
function getRowSelection(props2) {
  return props2.rowSelection || {};
}
function getColumnKey(column, index2) {
  return column.key || column.dataIndex || index2;
}
function isSameColumn(a, b) {
  if (a && b && a.key && a.key === b.key) {
    return true;
  }
  return a === b || shallowEqual2(a, b, function(value27, other) {
    if (typeof value27 === "function" && typeof other === "function") {
      return value27 === other || value27.toString() === other.toString();
    }
    if (Array.isArray(value27) && Array.isArray(other)) {
      return value27 === other || shallowEqual2(value27, other);
    }
  });
}
var defaultPagination = {
  onChange: noop$8,
  onShowSizeChange: noop$8
};
var emptyObject = {};
var createComponents = function createComponents2() {
  var components3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var bodyRow = components3 && components3.body && components3.body.row;
  return _default$6({}, components3, {
    body: _default$6({}, components3.body, {
      row: createBodyRow(bodyRow)
    })
  });
};
function isTheSameComponents() {
  var components1 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var components22 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return components1 === components22 || ["table", "header", "body"].every(function(key2) {
    return shallowEqual2(components1[key2], components22[key2]);
  });
}
function getFilteredValueColumns(state, columns3) {
  return flatFilter(columns3 || (state || {}).columns || [], function(column) {
    return typeof column.filteredValue !== "undefined";
  });
}
function getFiltersFromColumns(state, columns3) {
  var filters = {};
  getFilteredValueColumns(state, columns3).forEach(function(col) {
    var colKey = getColumnKey(col);
    filters[colKey] = col.filteredValue;
  });
  return filters;
}
function isFiltersChanged(state, filters) {
  if (Object.keys(filters).length !== Object.keys(state.filters).length) {
    return true;
  }
  return Object.keys(filters).some(function(columnKey) {
    return filters[columnKey] !== state.filters[columnKey];
  });
}
var T$1 = {
  name: "Table",
  Column,
  ColumnGroup,
  mixins: [BaseMixin],
  inject: {
    configProvider: { "default": function _default108() {
      return ConfigConsumerProps;
    } }
  },
  provide: function provide25() {
    return {
      store: this.store
    };
  },
  props: initDefaultProps(TableProps, {
    dataSource: [],
    useFixedHeader: false,
    size: "default",
    loading: false,
    bordered: false,
    indentSize: 20,
    locale: {},
    rowKey: "key",
    showHeader: true,
    sortDirections: ["ascend", "descend"],
    childrenColumnName: "children"
  }),
  data: function data91() {
    var props2 = getOptionProps(this);
    warning$4(!props2.expandedRowRender || !("scroll" in props2) || !props2.scroll.x, "`expandedRowRender` and `scroll` are not compatible. Please use one of them at one time.");
    this.CheckboxPropsCache = {};
    this.store = (this.$root.constructor.observable || Vue.observable)({
      selectedRowKeys: getRowSelection(this.$props).selectedRowKeys || [],
      selectionDirty: false
    });
    return _default$6({}, this.getDefaultSortOrder(props2.columns || []), {
      sFilters: this.getDefaultFilters(props2.columns),
      sPagination: this.getDefaultPagination(this.$props),
      pivot: void 0,
      sComponents: createComponents(this.components),
      filterDataCnt: 0
    });
  },
  watch: {
    pagination: {
      handler: function handler5(val) {
        this.setState(function(previousState) {
          var newPagination = _default$6({}, defaultPagination, previousState.sPagination, val);
          newPagination.current = newPagination.current || 1;
          newPagination.pageSize = newPagination.pageSize || 10;
          return { sPagination: val !== false ? newPagination : emptyObject };
        });
      },
      deep: true
    },
    rowSelection: {
      handler: function handler6(val, oldVal) {
        if (val && "selectedRowKeys" in val) {
          this.store.selectedRowKeys = val.selectedRowKeys || [];
          var rowSelection = this.rowSelection;
          if (rowSelection && val.getCheckboxProps !== rowSelection.getCheckboxProps) {
            this.CheckboxPropsCache = {};
          }
        } else if (oldVal && !val) {
          this.store.selectedRowKeys = [];
        }
      },
      deep: true
    },
    dataSource: function dataSource() {
      this.store.selectionDirty = false;
      this.CheckboxPropsCache = {};
    },
    columns: function columns2(val) {
      var filteredValueColumns = getFilteredValueColumns({ columns: val }, val);
      if (filteredValueColumns.length > 0) {
        var filtersFromColumns = getFiltersFromColumns({ columns: val }, val);
        var newFilters = _default$6({}, this.sFilters);
        Object.keys(filtersFromColumns).forEach(function(key2) {
          newFilters[key2] = filtersFromColumns[key2];
        });
        if (isFiltersChanged({ filters: this.sFilters }, newFilters)) {
          this.setState({ sFilters: newFilters });
        }
      }
      this.$forceUpdate();
    },
    components: {
      handler: function handler7(val, oldVal) {
        if (!isTheSameComponents(val, oldVal)) {
          var components3 = createComponents(val);
          this.setState({ sComponents: components3 });
        }
      },
      deep: true
    }
  },
  updated: function updated38() {
    var columns3 = this.columns, sortColumn = this.sSortColumn, sortOrder = this.sSortOrder;
    if (this.getSortOrderColumns(columns3).length > 0) {
      var sortState = this.getSortStateFromColumns(columns3);
      if (!isSameColumn(sortState.sSortColumn, sortColumn) || sortState.sSortOrder !== sortOrder) {
        this.setState(sortState);
      }
    }
  },
  methods: {
    getCheckboxPropsByItem: function getCheckboxPropsByItem(item, index2) {
      var rowSelection = getRowSelection(this.$props);
      if (!rowSelection.getCheckboxProps) {
        return { props: {} };
      }
      var key2 = this.getRecordKey(item, index2);
      if (!this.CheckboxPropsCache[key2]) {
        this.CheckboxPropsCache[key2] = rowSelection.getCheckboxProps(item);
      }
      this.CheckboxPropsCache[key2].props = this.CheckboxPropsCache[key2].props || {};
      return this.CheckboxPropsCache[key2];
    },
    getDefaultSelection: function getDefaultSelection() {
      var _this = this;
      var rowSelection = getRowSelection(this.$props);
      if (!rowSelection.getCheckboxProps) {
        return [];
      }
      return this.getFlatData().filter(function(item, rowIndex) {
        return _this.getCheckboxPropsByItem(item, rowIndex).props.defaultChecked;
      }).map(function(record, rowIndex) {
        return _this.getRecordKey(record, rowIndex);
      });
    },
    getDefaultPagination: function getDefaultPagination(props2) {
      var pagination = _default$7(props2.pagination) === "object" ? props2.pagination : {};
      var current2 = void 0;
      if ("current" in pagination) {
        current2 = pagination.current;
      } else if ("defaultCurrent" in pagination) {
        current2 = pagination.defaultCurrent;
      }
      var pageSize2 = void 0;
      if ("pageSize" in pagination) {
        pageSize2 = pagination.pageSize;
      } else if ("defaultPageSize" in pagination) {
        pageSize2 = pagination.defaultPageSize;
      }
      return this.hasPagination(props2) ? _default$6({}, defaultPagination, pagination, {
        current: current2 || 1,
        pageSize: pageSize2 || 10
      }) : {};
    },
    getSortOrderColumns: function getSortOrderColumns(columns3) {
      return flatFilter(columns3 || this.columns || [], function(column) {
        return "sortOrder" in column;
      });
    },
    getDefaultFilters: function getDefaultFilters(columns3) {
      var definedFilters = getFiltersFromColumns({ columns: this.columns }, columns3);
      var defaultFilteredValueColumns = flatFilter(columns3 || [], function(column) {
        return typeof column.defaultFilteredValue !== "undefined";
      });
      var defaultFilters = defaultFilteredValueColumns.reduce(function(soFar, col) {
        var colKey = getColumnKey(col);
        soFar[colKey] = col.defaultFilteredValue;
        return soFar;
      }, {});
      return _default$6({}, defaultFilters, definedFilters);
    },
    getDefaultSortOrder: function getDefaultSortOrder(columns3) {
      var definedSortState = this.getSortStateFromColumns(columns3);
      var defaultSortedColumn = flatFilter(columns3 || [], function(column) {
        return column.defaultSortOrder != null;
      })[0];
      if (defaultSortedColumn && !definedSortState.sortColumn) {
        return {
          sSortColumn: defaultSortedColumn,
          sSortOrder: defaultSortedColumn.defaultSortOrder
        };
      }
      return definedSortState;
    },
    getSortStateFromColumns: function getSortStateFromColumns(columns3) {
      var sortedColumn = this.getSortOrderColumns(columns3).filter(function(col) {
        return col.sortOrder;
      })[0];
      if (sortedColumn) {
        return {
          sSortColumn: sortedColumn,
          sSortOrder: sortedColumn.sortOrder
        };
      }
      return {
        sSortColumn: null,
        sSortOrder: null
      };
    },
    getMaxCurrent: function getMaxCurrent(total2) {
      var _sPagination = this.sPagination, current2 = _sPagination.current, pageSize2 = _sPagination.pageSize;
      if ((current2 - 1) * pageSize2 >= total2) {
        return Math.floor((total2 - 1) / pageSize2) + 1;
      }
      return current2;
    },
    getRecordKey: function getRecordKey(record, index2) {
      var rowKey = this.rowKey;
      var recordKey = typeof rowKey === "function" ? rowKey(record, index2) : record[rowKey];
      warning$4(recordKey !== void 0, "Table", "Each record in dataSource of table should have a unique `key` prop, or set `rowKey` of Table to an unique primary key, ");
      return recordKey === void 0 ? index2 : recordKey;
    },
    getSorterFn: function getSorterFn(state) {
      var _ref = state || this.$data, sortOrder = _ref.sSortOrder, sortColumn = _ref.sSortColumn;
      if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== "function") {
        return;
      }
      return function(a, b) {
        var result = sortColumn.sorter(a, b, sortOrder);
        if (result !== 0) {
          return sortOrder === "descend" ? -result : result;
        }
        return 0;
      };
    },
    getCurrentPageData: function getCurrentPageData() {
      var data109 = this.getLocalData();
      this.filterDataCnt = data109.length;
      var current2 = void 0;
      var pageSize2 = void 0;
      var sPagination = this.sPagination;
      if (!this.hasPagination()) {
        pageSize2 = Number.MAX_VALUE;
        current2 = 1;
      } else {
        pageSize2 = sPagination.pageSize;
        current2 = this.getMaxCurrent(sPagination.total || data109.length);
      }
      if (data109.length > pageSize2 || pageSize2 === Number.MAX_VALUE) {
        data109 = data109.slice((current2 - 1) * pageSize2, current2 * pageSize2);
      }
      return data109;
    },
    getFlatData: function getFlatData() {
      var childrenColumnName = this.$props.childrenColumnName;
      return flatArray(this.getLocalData(null, false), childrenColumnName);
    },
    getFlatCurrentPageData: function getFlatCurrentPageData() {
      var childrenColumnName = this.$props.childrenColumnName;
      return flatArray(this.getCurrentPageData(), childrenColumnName);
    },
    getLocalData: function getLocalData(state) {
      var _this2 = this;
      var filter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      var currentState = state || this.$data;
      var filters = currentState.sFilters;
      var dataSource3 = this.$props.dataSource;
      var data109 = dataSource3 || [];
      data109 = data109.slice(0);
      var sorterFn = this.getSorterFn(currentState);
      if (sorterFn) {
        data109 = this.recursiveSort([].concat(_default$5(data109)), sorterFn);
      }
      if (filter && filters) {
        Object.keys(filters).forEach(function(columnKey) {
          var col = _this2.findColumn(columnKey);
          if (!col) {
            return;
          }
          var values = filters[columnKey] || [];
          if (values.length === 0) {
            return;
          }
          var onFilter = col.onFilter;
          data109 = onFilter ? data109.filter(function(record) {
            return values.some(function(v) {
              return onFilter(v, record);
            });
          }) : data109;
        });
      }
      return data109;
    },
    onRow: function onRow(prefixCls2, record, index2) {
      var customRow = this.customRow;
      var custom2 = customRow ? customRow(record, index2) : {};
      return mergeProps(custom2, {
        props: {
          prefixCls: prefixCls2,
          store: this.store,
          rowKey: this.getRecordKey(record, index2)
        }
      });
    },
    setSelectedRowKeys: function setSelectedRowKeys(selectedRowKeys, selectionInfo) {
      var _this3 = this;
      var selectWay = selectionInfo.selectWay, record = selectionInfo.record, checked4 = selectionInfo.checked, changeRowKeys = selectionInfo.changeRowKeys, nativeEvent = selectionInfo.nativeEvent;
      var rowSelection = getRowSelection(this.$props);
      if (rowSelection && !("selectedRowKeys" in rowSelection)) {
        this.store.selectedRowKeys = selectedRowKeys;
      }
      var data109 = this.getFlatData();
      if (!rowSelection.onChange && !rowSelection[selectWay]) {
        return;
      }
      var selectedRows = data109.filter(function(row, i) {
        return selectedRowKeys.indexOf(_this3.getRecordKey(row, i)) >= 0;
      });
      if (rowSelection.onChange) {
        rowSelection.onChange(selectedRowKeys, selectedRows);
      }
      if (selectWay === "onSelect" && rowSelection.onSelect) {
        rowSelection.onSelect(record, checked4, selectedRows, nativeEvent);
      } else if (selectWay === "onSelectMultiple" && rowSelection.onSelectMultiple) {
        var changeRows = data109.filter(function(row, i) {
          return changeRowKeys.indexOf(_this3.getRecordKey(row, i)) >= 0;
        });
        rowSelection.onSelectMultiple(checked4, selectedRows, changeRows);
      } else if (selectWay === "onSelectAll" && rowSelection.onSelectAll) {
        var _changeRows = data109.filter(function(row, i) {
          return changeRowKeys.indexOf(_this3.getRecordKey(row, i)) >= 0;
        });
        rowSelection.onSelectAll(checked4, selectedRows, _changeRows);
      } else if (selectWay === "onSelectInvert" && rowSelection.onSelectInvert) {
        rowSelection.onSelectInvert(selectedRowKeys);
      }
    },
    generatePopupContainerFunc: function generatePopupContainerFunc(getPopupContainer) {
      var scroll = this.$props.scroll;
      var table = this.$refs.vcTable;
      if (getPopupContainer) {
        return getPopupContainer;
      }
      return scroll && table ? function() {
        return table.getTableNode();
      } : void 0;
    },
    scrollToFirstRow: function scrollToFirstRow() {
      var _this4 = this;
      var scroll = this.$props.scroll;
      if (scroll && scroll.scrollToFirstRowOnChange !== false) {
        scrollTo$1(0, {
          getContainer: function getContainer5() {
            return _this4.$refs.vcTable.getBodyTable();
          }
        });
      }
    },
    isSameColumn: function isSameColumn2(a, b) {
      if (a && b && a.key && a.key === b.key) {
        return true;
      }
      return a === b || shallowEqual2(a, b, function(value27, other) {
        if (typeof value27 === "function" && typeof other === "function") {
          return value27 === other || value27.toString() === other.toString();
        }
      });
    },
    handleFilter: function handleFilter2(column, nextFilters) {
      var _this5 = this;
      var props2 = this.$props;
      var pagination = _default$6({}, this.sPagination);
      var filters = _default$6({}, this.sFilters, _default$8({}, getColumnKey(column), nextFilters));
      var currentColumnKeys = [];
      treeMap(this.columns, function(c) {
        if (!c.children) {
          currentColumnKeys.push(getColumnKey(c));
        }
      });
      Object.keys(filters).forEach(function(columnKey) {
        if (currentColumnKeys.indexOf(columnKey) < 0) {
          delete filters[columnKey];
        }
      });
      if (props2.pagination) {
        pagination.current = 1;
        pagination.onChange(pagination.current);
      }
      var newState = {
        sPagination: pagination,
        sFilters: {}
      };
      var filtersToSetState = _default$6({}, filters);
      getFilteredValueColumns({ columns: props2.columns }).forEach(function(col) {
        var columnKey = getColumnKey(col);
        if (columnKey) {
          delete filtersToSetState[columnKey];
        }
      });
      if (Object.keys(filtersToSetState).length > 0) {
        newState.sFilters = filtersToSetState;
      }
      if (_default$7(props2.pagination) === "object" && "current" in props2.pagination) {
        newState.sPagination = _default$6({}, pagination, {
          current: this.sPagination.current
        });
      }
      this.setState(newState, function() {
        _this5.scrollToFirstRow();
        _this5.store.selectionDirty = false;
        _this5.$emit.apply(_this5, ["change"].concat(_default$5(_this5.prepareParamsArguments(_default$6({}, _this5.$data, {
          sSelectionDirty: false,
          sFilters: filters,
          sPagination: pagination
        })))));
      });
    },
    handleSelect: function handleSelect2(record, rowIndex, e) {
      var _this6 = this;
      var checked4 = e.target.checked;
      var nativeEvent = e.nativeEvent;
      var defaultSelection = this.store.selectionDirty ? [] : this.getDefaultSelection();
      var selectedRowKeys = this.store.selectedRowKeys.concat(defaultSelection);
      var key2 = this.getRecordKey(record, rowIndex);
      var pivot = this.$data.pivot;
      var rows = this.getFlatCurrentPageData();
      var realIndex = rowIndex;
      if (this.$props.expandedRowRender) {
        realIndex = rows.findIndex(function(row) {
          return _this6.getRecordKey(row, rowIndex) === key2;
        });
      }
      if (nativeEvent.shiftKey && pivot !== void 0 && realIndex !== pivot) {
        var changeRowKeys = [];
        var direction = Math.sign(pivot - realIndex);
        var dist2 = Math.abs(pivot - realIndex);
        var step3 = 0;
        var _loop = function _loop2() {
          var i = realIndex + step3 * direction;
          step3 += 1;
          var row = rows[i];
          var rowKey = _this6.getRecordKey(row, i);
          var checkboxProps = _this6.getCheckboxPropsByItem(row, i);
          if (!checkboxProps.disabled) {
            if (selectedRowKeys.includes(rowKey)) {
              if (!checked4) {
                selectedRowKeys = selectedRowKeys.filter(function(j) {
                  return rowKey !== j;
                });
                changeRowKeys.push(rowKey);
              }
            } else if (checked4) {
              selectedRowKeys.push(rowKey);
              changeRowKeys.push(rowKey);
            }
          }
        };
        while (step3 <= dist2) {
          _loop();
        }
        this.setState({ pivot: realIndex });
        this.store.selectionDirty = true;
        this.setSelectedRowKeys(selectedRowKeys, {
          selectWay: "onSelectMultiple",
          record,
          checked: checked4,
          changeRowKeys,
          nativeEvent
        });
      } else {
        if (checked4) {
          selectedRowKeys.push(this.getRecordKey(record, realIndex));
        } else {
          selectedRowKeys = selectedRowKeys.filter(function(i) {
            return key2 !== i;
          });
        }
        this.setState({ pivot: realIndex });
        this.store.selectionDirty = true;
        this.setSelectedRowKeys(selectedRowKeys, {
          selectWay: "onSelect",
          record,
          checked: checked4,
          changeRowKeys: void 0,
          nativeEvent
        });
      }
    },
    handleRadioSelect: function handleRadioSelect(record, rowIndex, e) {
      var checked4 = e.target.checked;
      var nativeEvent = e.nativeEvent;
      var key2 = this.getRecordKey(record, rowIndex);
      var selectedRowKeys = [key2];
      this.store.selectionDirty = true;
      this.setSelectedRowKeys(selectedRowKeys, {
        selectWay: "onSelect",
        record,
        checked: checked4,
        changeRowKeys: void 0,
        nativeEvent
      });
    },
    handleSelectRow: function handleSelectRow(selectionKey, index2, onSelectFunc) {
      var _this7 = this;
      var data109 = this.getFlatCurrentPageData();
      var defaultSelection = this.store.selectionDirty ? [] : this.getDefaultSelection();
      var selectedRowKeys = this.store.selectedRowKeys.concat(defaultSelection);
      var changeableRowKeys = data109.filter(function(item, i) {
        return !_this7.getCheckboxPropsByItem(item, i).props.disabled;
      }).map(function(item, i) {
        return _this7.getRecordKey(item, i);
      });
      var changeRowKeys = [];
      var selectWay = "onSelectAll";
      var checked4 = void 0;
      switch (selectionKey) {
        case "all":
          changeableRowKeys.forEach(function(key2) {
            if (selectedRowKeys.indexOf(key2) < 0) {
              selectedRowKeys.push(key2);
              changeRowKeys.push(key2);
            }
          });
          selectWay = "onSelectAll";
          checked4 = true;
          break;
        case "removeAll":
          changeableRowKeys.forEach(function(key2) {
            if (selectedRowKeys.indexOf(key2) >= 0) {
              selectedRowKeys.splice(selectedRowKeys.indexOf(key2), 1);
              changeRowKeys.push(key2);
            }
          });
          selectWay = "onSelectAll";
          checked4 = false;
          break;
        case "invert":
          changeableRowKeys.forEach(function(key2) {
            if (selectedRowKeys.indexOf(key2) < 0) {
              selectedRowKeys.push(key2);
            } else {
              selectedRowKeys.splice(selectedRowKeys.indexOf(key2), 1);
            }
            changeRowKeys.push(key2);
            selectWay = "onSelectInvert";
          });
          break;
      }
      this.store.selectionDirty = true;
      var rowSelection = this.rowSelection;
      var customSelectionStartIndex = 2;
      if (rowSelection && rowSelection.hideDefaultSelections) {
        customSelectionStartIndex = 0;
      }
      if (index2 >= customSelectionStartIndex && typeof onSelectFunc === "function") {
        return onSelectFunc(changeableRowKeys);
      }
      this.setSelectedRowKeys(selectedRowKeys, {
        selectWay,
        checked: checked4,
        changeRowKeys
      });
    },
    handlePageChange: function handlePageChange(current2) {
      var props2 = this.$props;
      var pagination = _default$6({}, this.sPagination);
      if (current2) {
        pagination.current = current2;
      } else {
        pagination.current = pagination.current || 1;
      }
      for (var _len = arguments.length, otherArguments = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        otherArguments[_key - 1] = arguments[_key];
      }
      pagination.onChange.apply(pagination, [pagination.current].concat(_default$5(otherArguments)));
      var newState = {
        sPagination: pagination
      };
      if (props2.pagination && _default$7(props2.pagination) === "object" && "current" in props2.pagination) {
        newState.sPagination = _default$6({}, pagination, {
          current: this.sPagination.current
        });
      }
      this.setState(newState, this.scrollToFirstRow);
      this.store.selectionDirty = false;
      this.$emit.apply(this, ["change"].concat(_default$5(this.prepareParamsArguments(_default$6({}, this.$data, {
        sSelectionDirty: false,
        sPagination: pagination
      })))));
    },
    handleShowSizeChange: function handleShowSizeChange(current2, pageSize2) {
      var pagination = this.sPagination;
      pagination.onShowSizeChange(current2, pageSize2);
      var nextPagination = _default$6({}, pagination, {
        pageSize: pageSize2,
        current: current2
      });
      this.setState({ sPagination: nextPagination }, this.scrollToFirstRow);
      this.$emit.apply(this, ["change"].concat(_default$5(this.prepareParamsArguments(_default$6({}, this.$data, {
        sPagination: nextPagination
      })))));
    },
    toggleSortOrder: function toggleSortOrder(column) {
      var sortDirections = column.sortDirections || this.sortDirections;
      var sortOrder = this.sSortOrder, sortColumn = this.sSortColumn;
      var newSortOrder = void 0;
      if (isSameColumn(sortColumn, column) && sortOrder !== void 0) {
        var methodIndex = sortDirections.indexOf(sortOrder) + 1;
        newSortOrder = methodIndex === sortDirections.length ? void 0 : sortDirections[methodIndex];
      } else {
        newSortOrder = sortDirections[0];
      }
      var newState = {
        sSortOrder: newSortOrder,
        sSortColumn: newSortOrder ? column : null
      };
      if (this.getSortOrderColumns().length === 0) {
        this.setState(newState, this.scrollToFirstRow);
      }
      this.$emit.apply(this, ["change"].concat(_default$5(this.prepareParamsArguments(_default$6({}, this.$data, newState), column))));
    },
    hasPagination: function hasPagination(props2) {
      return (props2 || this.$props).pagination !== false;
    },
    isSortColumn: function isSortColumn(column) {
      var sortColumn = this.sSortColumn;
      if (!column || !sortColumn) {
        return false;
      }
      return getColumnKey(sortColumn) === getColumnKey(column);
    },
    prepareParamsArguments: function prepareParamsArguments(state, column) {
      var pagination = _default$6({}, state.sPagination);
      delete pagination.onChange;
      delete pagination.onShowSizeChange;
      var filters = state.sFilters;
      var sorter = {};
      var currentColumn = column;
      if (state.sSortColumn && state.sSortOrder) {
        currentColumn = state.sSortColumn;
        sorter.column = state.sSortColumn;
        sorter.order = state.sSortOrder;
      }
      if (currentColumn) {
        sorter.field = currentColumn.dataIndex;
        sorter.columnKey = getColumnKey(currentColumn);
      }
      var extra = {
        currentDataSource: this.getLocalData(state)
      };
      return [pagination, filters, sorter, extra];
    },
    findColumn: function findColumn(myKey) {
      var column = void 0;
      treeMap(this.columns, function(c) {
        if (getColumnKey(c) === myKey) {
          column = c;
        }
      });
      return column;
    },
    recursiveSort: function recursiveSort(data109, sorterFn) {
      var _this8 = this;
      var _childrenColumnName = this.childrenColumnName, childrenColumnName = _childrenColumnName === void 0 ? "children" : _childrenColumnName;
      return data109.sort(sorterFn).map(function(item) {
        return item[childrenColumnName] ? _default$6({}, item, _default$8({}, childrenColumnName, _this8.recursiveSort([].concat(_default$5(item[childrenColumnName])), sorterFn))) : item;
      });
    },
    renderExpandIcon: function renderExpandIcon4(prefixCls2) {
      var h = this.$createElement;
      return function(_ref2) {
        var expandable = _ref2.expandable, expanded2 = _ref2.expanded, needIndentSpaced = _ref2.needIndentSpaced, record = _ref2.record, onExpand4 = _ref2.onExpand;
        if (expandable) {
          return h(
            LocaleReceiver,
            {
              attrs: { componentName: "Table", defaultLocale: defaultLocale.Table }
            },
            [function(locale3) {
              var _classNames;
              return h(TransButton$1, {
                "class": classNames(prefixCls2 + "-row-expand-icon", (_classNames = {}, _default$8(_classNames, prefixCls2 + "-row-collapsed", !expanded2), _default$8(_classNames, prefixCls2 + "-row-expanded", expanded2), _classNames)),
                on: {
                  "click": function click(event) {
                    onExpand4(record, event);
                  }
                },
                attrs: {
                  "aria-label": expanded2 ? locale3.collapse : locale3.expand,
                  noStyle: true
                }
              });
            }]
          );
        }
        if (needIndentSpaced) {
          return h("span", { "class": prefixCls2 + "-row-expand-icon " + prefixCls2 + "-row-spaced" });
        }
        return null;
      };
    },
    renderPagination: function renderPagination2(prefixCls2, paginationPosition) {
      var h = this.$createElement;
      if (!this.hasPagination()) {
        return null;
      }
      var size = "default";
      var pagination = this.sPagination;
      if (pagination.size) {
        size = pagination.size;
      } else if (this.size === "middle" || this.size === "small") {
        size = "small";
      }
      var position = pagination.position || "bottom";
      var total2 = pagination.total || this.filterDataCnt;
      var cls = pagination["class"], style3 = pagination.style;
      pagination.onChange;
      pagination.onShowSizeChange;
      var restProps = _default$2(pagination, ["class", "style", "onChange", "onShowSizeChange"]);
      var paginationProps = mergeProps({
        key: "pagination-" + paginationPosition,
        "class": classNames(cls, prefixCls2 + "-pagination"),
        props: _default$6({}, restProps, {
          total: total2,
          size,
          current: this.getMaxCurrent(total2)
        }),
        style: style3,
        on: {
          change: this.handlePageChange,
          showSizeChange: this.handleShowSizeChange
        }
      });
      return total2 > 0 && (position === paginationPosition || position === "both") ? h(Pagination, paginationProps) : null;
    },
    renderSelectionBox: function renderSelectionBox(type3) {
      var _this9 = this;
      var h = this.$createElement;
      return function(_, record, index2) {
        var rowKey = _this9.getRecordKey(record, index2);
        var props2 = _this9.getCheckboxPropsByItem(record, index2);
        var handleChange15 = function handleChange16(e) {
          type3 === "radio" ? _this9.handleRadioSelect(record, index2, e) : _this9.handleSelect(record, index2, e);
        };
        var selectionBoxProps = mergeProps({
          props: {
            type: type3,
            store: _this9.store,
            rowIndex: rowKey,
            defaultSelection: _this9.getDefaultSelection()
          },
          on: {
            change: handleChange15
          }
        }, props2);
        return h(
          "span",
          {
            on: {
              "click": stopPropagation
            }
          },
          [h(SelectionBox, selectionBoxProps)]
        );
      };
    },
    renderRowSelection: function renderRowSelection(_ref3) {
      var _this10 = this;
      var prefixCls2 = _ref3.prefixCls, locale3 = _ref3.locale, getPopupContainer = _ref3.getPopupContainer;
      var h = this.$createElement;
      var rowSelection = this.rowSelection;
      var columns3 = this.columns.concat();
      if (rowSelection) {
        var data109 = this.getFlatCurrentPageData().filter(function(item, index2) {
          if (rowSelection.getCheckboxProps) {
            return !_this10.getCheckboxPropsByItem(item, index2).props.disabled;
          }
          return true;
        });
        var selectionColumnClass = classNames(prefixCls2 + "-selection-column", _default$8({}, prefixCls2 + "-selection-column-custom", rowSelection.selections));
        var selectionColumn = _default$8({
          key: "selection-column",
          customRender: this.renderSelectionBox(rowSelection.type),
          className: selectionColumnClass,
          fixed: rowSelection.fixed,
          width: rowSelection.columnWidth,
          title: rowSelection.columnTitle
        }, INTERNAL_COL_DEFINE, {
          "class": prefixCls2 + "-selection-col"
        });
        if (rowSelection.type !== "radio") {
          var checkboxAllDisabled = data109.every(function(item, index2) {
            return _this10.getCheckboxPropsByItem(item, index2).props.disabled;
          });
          selectionColumn.title = selectionColumn.title || h(SelectionCheckboxAll, {
            attrs: {
              store: this.store,
              locale: locale3,
              data: data109,
              getCheckboxPropsByItem: this.getCheckboxPropsByItem,
              getRecordKey: this.getRecordKey,
              disabled: checkboxAllDisabled,
              prefixCls: prefixCls2,
              selections: rowSelection.selections,
              hideDefaultSelections: rowSelection.hideDefaultSelections,
              getPopupContainer: this.generatePopupContainerFunc(getPopupContainer)
            },
            on: {
              "select": this.handleSelectRow
            }
          });
        }
        if ("fixed" in rowSelection) {
          selectionColumn.fixed = rowSelection.fixed;
        } else if (columns3.some(function(column) {
          return column.fixed === "left" || column.fixed === true;
        })) {
          selectionColumn.fixed = "left";
        }
        if (columns3[0] && columns3[0].key === "selection-column") {
          columns3[0] = selectionColumn;
        } else {
          columns3.unshift(selectionColumn);
        }
      }
      return columns3;
    },
    renderColumnsDropdown: function renderColumnsDropdown(_ref4) {
      var _this11 = this;
      var prefixCls2 = _ref4.prefixCls, dropdownPrefixCls = _ref4.dropdownPrefixCls, columns3 = _ref4.columns, locale3 = _ref4.locale, getPopupContainer = _ref4.getPopupContainer;
      var h = this.$createElement;
      var sortOrder = this.sSortOrder, filters = this.sFilters;
      return treeMap(columns3, function(column, i) {
        var _classNames3;
        var key2 = getColumnKey(column, i);
        var filterDropdown = void 0;
        var sortButton = void 0;
        var customHeaderCell = column.customHeaderCell;
        var isSortColumn2 = _this11.isSortColumn(column);
        if (column.filters && column.filters.length > 0 || column.filterDropdown) {
          var colFilters = key2 in filters ? filters[key2] : [];
          filterDropdown = h(FilterDropdown, {
            attrs: {
              _propsSymbol: Symbol(),
              locale: locale3,
              column,
              selectedKeys: colFilters,
              confirmFilter: _this11.handleFilter,
              prefixCls: prefixCls2 + "-filter",
              dropdownPrefixCls: dropdownPrefixCls || "ant-dropdown",
              getPopupContainer: _this11.generatePopupContainerFunc(getPopupContainer)
            },
            key: "filter-dropdown"
          });
        }
        if (column.sorter) {
          var sortDirections = column.sortDirections || _this11.sortDirections;
          var isAscend = isSortColumn2 && sortOrder === "ascend";
          var isDescend = isSortColumn2 && sortOrder === "descend";
          var ascend = sortDirections.indexOf("ascend") !== -1 && h(Icon$1, {
            "class": prefixCls2 + "-column-sorter-up " + (isAscend ? "on" : "off"),
            attrs: {
              type: "caret-up",
              theme: "filled"
            },
            key: "caret-up"
          });
          var descend = sortDirections.indexOf("descend") !== -1 && h(Icon$1, {
            "class": prefixCls2 + "-column-sorter-down " + (isDescend ? "on" : "off"),
            attrs: {
              type: "caret-down",
              theme: "filled"
            },
            key: "caret-down"
          });
          sortButton = h(
            "div",
            {
              attrs: {
                title: locale3.sortTitle
              },
              "class": classNames(prefixCls2 + "-column-sorter-inner", ascend && descend && prefixCls2 + "-column-sorter-inner-full"),
              key: "sorter"
            },
            [ascend, descend]
          );
          customHeaderCell = function customHeaderCell2(col) {
            var colProps = {};
            if (column.customHeaderCell) {
              colProps = _default$6({}, column.customHeaderCell(col));
            }
            colProps.on = colProps.on || {};
            var onHeaderCellClick = colProps.on.click;
            colProps.on.click = function() {
              _this11.toggleSortOrder(column);
              if (onHeaderCellClick) {
                onHeaderCellClick.apply(void 0, arguments);
              }
            };
            return colProps;
          };
        }
        return _default$6({}, column, {
          className: classNames(column.className, (_classNames3 = {}, _default$8(_classNames3, prefixCls2 + "-column-has-actions", sortButton || filterDropdown), _default$8(_classNames3, prefixCls2 + "-column-has-filters", filterDropdown), _default$8(_classNames3, prefixCls2 + "-column-has-sorters", sortButton), _default$8(_classNames3, prefixCls2 + "-column-sort", isSortColumn2 && sortOrder), _classNames3)),
          title: [h(
            "span",
            { key: "title", "class": prefixCls2 + "-header-column" },
            [h(
              "div",
              { "class": sortButton ? prefixCls2 + "-column-sorters" : void 0 },
              [h(
                "span",
                { "class": prefixCls2 + "-column-title" },
                [_this11.renderColumnTitle(column.title)]
              ), h(
                "span",
                { "class": prefixCls2 + "-column-sorter" },
                [sortButton]
              )]
            )]
          ), filterDropdown],
          customHeaderCell
        });
      });
    },
    renderColumnTitle: function renderColumnTitle(title) {
      var _$data = this.$data, filters = _$data.sFilters, sortOrder = _$data.sSortOrder, sortColumn = _$data.sSortColumn;
      if (title instanceof Function) {
        return title({
          filters,
          sortOrder,
          sortColumn
        });
      }
      return title;
    },
    renderTable: function renderTable2(_ref5) {
      var _classNames4, _this12 = this;
      var prefixCls2 = _ref5.prefixCls, renderEmpty4 = _ref5.renderEmpty, dropdownPrefixCls = _ref5.dropdownPrefixCls, contextLocale = _ref5.contextLocale, contextGetPopupContainer = _ref5.getPopupContainer, transformCellText = _ref5.transformCellText;
      var h = this.$createElement;
      var _getOptionProps = getOptionProps(this), showHeader = _getOptionProps.showHeader, locale3 = _getOptionProps.locale, getPopupContainer = _getOptionProps.getPopupContainer, expandIcon = _getOptionProps.expandIcon, restProps = _default$2(_getOptionProps, ["showHeader", "locale", "getPopupContainer", "expandIcon"]);
      var data109 = this.getCurrentPageData();
      var expandIconAsCell = this.expandedRowRender && this.expandIconAsCell !== false;
      var realGetPopupContainer = getPopupContainer || contextGetPopupContainer;
      var mergedLocale = _default$6({}, contextLocale, locale3);
      if (!locale3 || !locale3.emptyText) {
        mergedLocale.emptyText = renderEmpty4(h, "Table");
      }
      var classString = classNames((_classNames4 = {}, _default$8(_classNames4, prefixCls2 + "-" + this.size, true), _default$8(_classNames4, prefixCls2 + "-bordered", this.bordered), _default$8(_classNames4, prefixCls2 + "-empty", !data109.length), _default$8(_classNames4, prefixCls2 + "-without-column-header", !showHeader), _classNames4));
      var columnsWithRowSelection = this.renderRowSelection({
        prefixCls: prefixCls2,
        locale: mergedLocale,
        getPopupContainer: realGetPopupContainer
      });
      var columns3 = this.renderColumnsDropdown({
        columns: columnsWithRowSelection,
        prefixCls: prefixCls2,
        dropdownPrefixCls,
        locale: mergedLocale,
        getPopupContainer: realGetPopupContainer
      }).map(function(column, i) {
        var newColumn = _default$6({}, column);
        newColumn.key = getColumnKey(newColumn, i);
        return newColumn;
      });
      var expandIconColumnIndex = columns3[0] && columns3[0].key === "selection-column" ? 1 : 0;
      if ("expandIconColumnIndex" in restProps) {
        expandIconColumnIndex = restProps.expandIconColumnIndex;
      }
      var vcTableProps = {
        key: "table",
        props: _default$6({
          expandIcon: expandIcon || this.renderExpandIcon(prefixCls2)
        }, restProps, {
          customRow: function customRow(record, index2) {
            return _this12.onRow(prefixCls2, record, index2);
          },
          components: this.sComponents,
          prefixCls: prefixCls2,
          data: data109,
          columns: columns3,
          showHeader,
          expandIconColumnIndex,
          expandIconAsCell,
          emptyText: mergedLocale.emptyText,
          transformCellText
        }),
        on: getListeners(this),
        "class": classString,
        ref: "vcTable"
      };
      return h(VcTable, vcTableProps);
    }
  },
  render: function render201() {
    var _this13 = this;
    var h = arguments[0];
    var customizePrefixCls = this.prefixCls, customizeDropdownPrefixCls = this.dropdownPrefixCls, customizeTransformCellText = this.transformCellText;
    var data109 = this.getCurrentPageData();
    var _configProvider = this.configProvider, getContextPopupContainer = _configProvider.getPopupContainer, tct = _configProvider.transformCellText;
    var getPopupContainer = this.getPopupContainer || getContextPopupContainer;
    var transformCellText = customizeTransformCellText || tct;
    var loading2 = this.loading;
    if (typeof loading2 === "boolean") {
      loading2 = {
        props: {
          spinning: loading2
        }
      };
    } else {
      loading2 = {
        props: _default$6({}, loading2)
      };
    }
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var renderEmpty4 = this.configProvider.renderEmpty;
    var prefixCls2 = getPrefixCls5("table", customizePrefixCls);
    var dropdownPrefixCls = getPrefixCls5("dropdown", customizeDropdownPrefixCls);
    var table = h(LocaleReceiver, {
      attrs: {
        componentName: "Table",
        defaultLocale: defaultLocale.Table,
        children: function children(locale3) {
          return _this13.renderTable({
            prefixCls: prefixCls2,
            renderEmpty: renderEmpty4,
            dropdownPrefixCls,
            contextLocale: locale3,
            getPopupContainer,
            transformCellText
          });
        }
      }
    });
    var paginationPatchClass = this.hasPagination() && data109 && data109.length !== 0 ? prefixCls2 + "-with-pagination" : prefixCls2 + "-without-pagination";
    var spinProps = _default$6({}, loading2, {
      "class": loading2.props && loading2.props.spinning ? paginationPatchClass + " " + prefixCls2 + "-spin-holder" : ""
    });
    return h(
      "div",
      { "class": classNames(prefixCls2 + "-wrapper") },
      [h(
        Spin,
        spinProps,
        [this.renderPagination(prefixCls2, "top"), table, this.renderPagination(prefixCls2, "bottom")]
      )]
    );
  }
};
Vue.use(_default$3, { name: "ant-ref" });
var Table = {
  name: "ATable",
  Column: T$1.Column,
  ColumnGroup: T$1.ColumnGroup,
  props: T$1.props,
  methods: {
    normalize: function normalize2() {
      var _this = this;
      var elements = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var columns3 = [];
      elements.forEach(function(element) {
        if (!element.tag) {
          return;
        }
        var key2 = getKey(element);
        var style3 = getStyle$1(element);
        var cls = getClass(element);
        var props2 = getOptionProps(element);
        var events = getEvents(element);
        var listeners = {};
        Object.keys(events).forEach(function(e) {
          var k = void 0;
          if (e.startsWith("update:")) {
            k = "on-" + e.substr("update:".length) + "-change";
          } else {
            k = "on-" + e;
          }
          listeners[camelize(k)] = events[e];
        });
        var _getSlots = getSlots(element), children = _getSlots["default"], restSlots = _default$2(_getSlots, ["default"]);
        var column = _default$6({}, restSlots, props2, { style: style3, "class": cls }, listeners);
        if (key2) {
          column.key = key2;
        }
        if (getSlotOptions(element).__ANT_TABLE_COLUMN_GROUP) {
          column.children = _this.normalize(typeof children === "function" ? children() : children);
        } else {
          var customRender = element.data && element.data.scopedSlots && element.data.scopedSlots["default"];
          column.customRender = column.customRender || customRender;
        }
        columns3.push(column);
      });
      return columns3;
    },
    updateColumns: function updateColumns() {
      var _this2 = this;
      var cols = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var columns3 = [];
      var $slots = this.$slots, $scopedSlots = this.$scopedSlots;
      cols.forEach(function(col) {
        var _col$slots = col.slots, slots = _col$slots === void 0 ? {} : _col$slots, _col$scopedSlots = col.scopedSlots, scopedSlots = _col$scopedSlots === void 0 ? {} : _col$scopedSlots, restProps = _default$2(col, ["slots", "scopedSlots"]);
        var column = _default$6({}, restProps);
        Object.keys(slots).forEach(function(key2) {
          var name = slots[key2];
          if (column[key2] === void 0 && $slots[name]) {
            column[key2] = $slots[name].length === 1 ? $slots[name][0] : $slots[name];
          }
        });
        Object.keys(scopedSlots).forEach(function(key2) {
          var name = scopedSlots[key2];
          if (column[key2] === void 0 && $scopedSlots[name]) {
            column[key2] = $scopedSlots[name];
          }
        });
        if (col.children) {
          column.children = _this2.updateColumns(column.children);
        }
        columns3.push(column);
      });
      return columns3;
    }
  },
  render: function render202() {
    var h = arguments[0];
    var $slots = this.$slots, normalize3 = this.normalize, $scopedSlots = this.$scopedSlots;
    var props2 = getOptionProps(this);
    var columns3 = props2.columns ? this.updateColumns(props2.columns) : normalize3($slots["default"]);
    var title = props2.title, footer = props2.footer;
    var slotTitle = $scopedSlots.title, slotFooter = $scopedSlots.footer, _$scopedSlots$expande = $scopedSlots.expandedRowRender, expandedRowRender = _$scopedSlots$expande === void 0 ? props2.expandedRowRender : _$scopedSlots$expande, expandIcon = $scopedSlots.expandIcon;
    title = title || slotTitle;
    footer = footer || slotFooter;
    var tProps = {
      props: _default$6({}, props2, {
        columns: columns3,
        title,
        footer,
        expandedRowRender,
        expandIcon: this.$props.expandIcon || expandIcon
      }),
      on: getListeners(this)
    };
    return h(T$1, tProps);
  }
};
Table.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Table.name, Table);
  Vue2.component(Table.Column.name, Table.Column);
  Vue2.component(Table.ColumnGroup.name, Table.ColumnGroup);
};
var Table$1 = Table;
var TransferSearchProps = {
  prefixCls: PropTypes.string,
  placeholder: PropTypes.string,
  value: PropTypes.any,
  handleClear: PropTypes.func,
  disabled: PropTypes.bool
};
var Search = {
  name: "Search",
  props: initDefaultProps(TransferSearchProps, {
    placeholder: ""
  }),
  methods: {
    handleChange: function handleChange14(e) {
      this.$emit("change", e);
    },
    handleClear2: function handleClear2(e) {
      e.preventDefault();
      var _$props = this.$props, handleClear3 = _$props.handleClear, disabled = _$props.disabled;
      if (!disabled && handleClear3) {
        handleClear3(e);
      }
    }
  },
  render: function render203() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), placeholder = _getOptionProps.placeholder, value27 = _getOptionProps.value, prefixCls2 = _getOptionProps.prefixCls, disabled = _getOptionProps.disabled;
    var icon = value27 && value27.length > 0 ? h(
      "a",
      {
        attrs: { href: "#" },
        "class": prefixCls2 + "-action",
        on: {
          "click": this.handleClear2
        }
      },
      [h(Icon$1, {
        attrs: { type: "close-circle", theme: "filled" }
      })]
    ) : h(
      "span",
      { "class": prefixCls2 + "-action" },
      [h(Icon$1, {
        attrs: { type: "search" }
      })]
    );
    return h("div", [h(Input, {
      attrs: {
        placeholder,
        value: value27,
        disabled
      },
      "class": prefixCls2,
      on: {
        "change": this.handleChange
      }
    }), icon]);
  }
};
var debounce = debounce_1, isObject = isObject_1;
var FUNC_ERROR_TEXT = "Expected a function";
function throttle(func, wait, options2) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options2)) {
    leading = "leading" in options2 ? !!options2.leading : leading;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  return debounce(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_1 = throttle;
var throttle$1 = throttle_1;
var style = function style2(element, prop) {
  var styleVal = "";
  if (typeof getComputedStyle !== "undefined") {
    styleVal = window.getComputedStyle(element, null).getPropertyValue(prop);
  } else {
    styleVal = element.style[prop];
  }
  return styleVal;
};
var overflow = function overflow2(element) {
  return style(element, "overflow") + style(element, "overflow-y") + style(element, "overflow-x");
};
var scrollParent = function scrollParent2(element) {
  if (!(element instanceof window.HTMLElement)) {
    return window;
  }
  var parent2 = element;
  while (parent2) {
    if (parent2 === document.body || parent2 === document.documentElement) {
      break;
    }
    if (!parent2.parentNode) {
      break;
    }
    if (/(scroll|auto)/.test(overflow(parent2))) {
      return parent2;
    }
    parent2 = parent2.parentNode;
  }
  return window;
};
var parentScroll = scrollParent;
function getElementPosition(element) {
  var rect = element.getBoundingClientRect();
  return {
    top: rect.top + window.pageYOffset,
    left: rect.left + window.pageXOffset
  };
}
var isHidden2 = function isHidden3(element) {
  return element.offsetParent === null;
};
function inViewport(element, container, customOffset) {
  if (isHidden2(element)) {
    return false;
  }
  var top = void 0;
  var bottom = void 0;
  var left = void 0;
  var right = void 0;
  if (typeof container === "undefined" || container === window) {
    top = window.pageYOffset;
    left = window.pageXOffset;
    bottom = top + window.innerHeight;
    right = left + window.innerWidth;
  } else {
    var containerPosition = getElementPosition(container);
    top = containerPosition.top;
    left = containerPosition.left;
    bottom = top + container.offsetHeight;
    right = left + container.offsetWidth;
  }
  var elementPosition = getElementPosition(element);
  return top <= elementPosition.top + element.offsetHeight + customOffset.top && bottom >= elementPosition.top - customOffset.bottom && left <= elementPosition.left + element.offsetWidth + customOffset.left && right >= elementPosition.left - customOffset.right;
}
var lazyLoadProps = {
  debounce: PropTypes.bool,
  elementType: PropTypes.string,
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  offset: PropTypes.number,
  offsetBottom: PropTypes.number,
  offsetHorizontal: PropTypes.number,
  offsetLeft: PropTypes.number,
  offsetRight: PropTypes.number,
  offsetTop: PropTypes.number,
  offsetVertical: PropTypes.number,
  threshold: PropTypes.number,
  throttle: PropTypes.number,
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  _propsSymbol: PropTypes.any
};
var LazyLoad = {
  name: "LazyLoad",
  mixins: [BaseMixin],
  props: initDefaultProps(lazyLoadProps, {
    elementType: "div",
    debounce: true,
    offset: 0,
    offsetBottom: 0,
    offsetHorizontal: 0,
    offsetLeft: 0,
    offsetRight: 0,
    offsetTop: 0,
    offsetVertical: 0,
    throttle: 250
  }),
  data: function data92() {
    if (this.throttle > 0) {
      if (this.debounce) {
        this.lazyLoadHandler = debounce$3(this.lazyLoadHandler, this.throttle);
      } else {
        this.lazyLoadHandler = throttle$1(this.lazyLoadHandler, this.throttle);
      }
    }
    return {
      visible: false
    };
  },
  watch: {
    _propsSymbol: function _propsSymbol2() {
      if (!this.visible) {
        this.lazyLoadHandler();
      }
    }
  },
  mounted: function mounted58() {
    var _this = this;
    this.$nextTick(function() {
      _this._mounted = true;
      var eventNode = _this.getEventNode();
      _this.lazyLoadHandler();
      if (_this.lazyLoadHandler.flush) {
        _this.lazyLoadHandler.flush();
      }
      _this.resizeHander = addEventListenerWrap(window, "resize", _this.lazyLoadHandler);
      _this.scrollHander = addEventListenerWrap(eventNode, "scroll", _this.lazyLoadHandler);
    });
  },
  beforeDestroy: function beforeDestroy43() {
    this._mounted = false;
    if (this.lazyLoadHandler.cancel) {
      this.lazyLoadHandler.cancel();
    }
    this.detachListeners();
  },
  methods: {
    getEventNode: function getEventNode() {
      return parentScroll(this.$el);
    },
    getOffset: function getOffset2() {
      var _$props = this.$props, offset4 = _$props.offset, offsetVertical = _$props.offsetVertical, offsetHorizontal = _$props.offsetHorizontal, offsetTop2 = _$props.offsetTop, offsetBottom2 = _$props.offsetBottom, offsetLeft = _$props.offsetLeft, offsetRight = _$props.offsetRight, threshold = _$props.threshold;
      var _offsetAll = threshold || offset4;
      var _offsetVertical = offsetVertical || _offsetAll;
      var _offsetHorizontal = offsetHorizontal || _offsetAll;
      return {
        top: offsetTop2 || _offsetVertical,
        bottom: offsetBottom2 || _offsetVertical,
        left: offsetLeft || _offsetHorizontal,
        right: offsetRight || _offsetHorizontal
      };
    },
    lazyLoadHandler: function lazyLoadHandler() {
      var _this2 = this;
      if (!this._mounted) {
        return;
      }
      var offset4 = this.getOffset();
      var node = this.$el;
      var eventNode = this.getEventNode();
      if (inViewport(node, eventNode, offset4)) {
        this.setState({ visible: true }, function() {
          _this2.__emit("contentVisible");
        });
        this.detachListeners();
      }
    },
    detachListeners: function detachListeners() {
      this.resizeHander && this.resizeHander.remove();
      this.scrollHander && this.scrollHander.remove();
    }
  },
  render: function render204(createElement) {
    var children = this.$slots["default"];
    if (children.length !== 1) {
      warning$4(false, "lazyLoad\u7EC4\u4EF6\u53EA\u80FD\u5305\u542B\u4E00\u4E2A\u5B50\u5143\u7D20");
      return null;
    }
    var _$props2 = this.$props, height3 = _$props2.height, width = _$props2.width, elementType = _$props2.elementType;
    var visible11 = this.visible;
    var elStyles = {
      height: typeof height3 === "number" ? height3 + "px" : height3,
      width: typeof width === "number" ? width + "px" : width
    };
    var elClasses = {
      LazyLoad: true,
      "is-visible": visible11
    };
    return createElement(elementType, {
      "class": elClasses,
      style: elStyles
    }, [visible11 ? children[0] : null]);
  }
};
function noop$7() {
}
var ListItem = {
  name: "ListItem",
  props: {
    renderedText: PropTypes.any,
    renderedEl: PropTypes.any,
    item: PropTypes.any,
    lazy: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    checked: PropTypes.bool,
    prefixCls: PropTypes.string,
    disabled: PropTypes.bool
  },
  render: function render205() {
    var _classNames, _this = this;
    var h = arguments[0];
    var _$props = this.$props, renderedText = _$props.renderedText, renderedEl = _$props.renderedEl, item = _$props.item, lazy = _$props.lazy, checked4 = _$props.checked, disabled = _$props.disabled, prefixCls2 = _$props.prefixCls;
    var className = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-content-item", true), _default$8(_classNames, prefixCls2 + "-content-item-disabled", disabled || item.disabled), _classNames));
    var title = void 0;
    if (typeof renderedText === "string" || typeof renderedText === "number") {
      title = String(renderedText);
    }
    var listItem = h(
      "li",
      {
        "class": className,
        attrs: {
          title
        },
        on: {
          "click": disabled || item.disabled ? noop$7 : function() {
            _this.$emit("click", item);
          }
        }
      },
      [h(Checkbox, {
        attrs: { checked: checked4, disabled: disabled || item.disabled }
      }), h(
        "span",
        { "class": prefixCls2 + "-content-item-text" },
        [renderedEl]
      )]
    );
    var children = null;
    if (lazy) {
      var lazyProps = {
        props: _default$6({
          height: 32,
          offset: 500,
          throttle: 0,
          debounce: false
        }, lazy, {
          _propsSymbol: Symbol()
        })
      };
      children = h(
        LazyLoad,
        lazyProps,
        [listItem]
      );
    } else {
      children = listItem;
    }
    return children;
  }
};
function noop$6() {
}
var ListBody = {
  name: "ListBody",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    filteredRenderItems: PropTypes.array.def([]),
    lazy: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    selectedKeys: PropTypes.array,
    disabled: PropTypes.bool
  },
  data: function data93() {
    return {
      mounted: false
    };
  },
  computed: {
    itemsLength: function itemsLength() {
      return this.filteredRenderItems ? this.filteredRenderItems.length : 0;
    }
  },
  watch: {
    itemsLength: function itemsLength2() {
      var _this = this;
      this.$nextTick(function() {
        var lazy = _this.$props.lazy;
        if (lazy !== false) {
          var container = _this.$el;
          wrapperRaf.cancel(_this.lazyId);
          _this.lazyId = wrapperRaf(function() {
            if (container) {
              var scrollEvent = new Event("scroll", { bubbles: true });
              container.dispatchEvent(scrollEvent);
            }
          });
        }
      });
    }
  },
  mounted: function mounted59() {
    var _this2 = this;
    this.mountId = wrapperRaf(function() {
      _this2.mounted = true;
    });
  },
  beforeDestroy: function beforeDestroy44() {
    wrapperRaf.cancel(this.mountId);
    wrapperRaf.cancel(this.lazyId);
  },
  methods: {
    onItemSelect: function onItemSelect(item) {
      var selectedKeys3 = this.$props.selectedKeys;
      var checked4 = selectedKeys3.indexOf(item.key) >= 0;
      this.$emit("itemSelect", item.key, !checked4);
    },
    onScroll: function onScroll2(e) {
      this.$emit("scroll", e);
    }
  },
  render: function render206() {
    var _this3 = this;
    var h = arguments[0];
    var mounted70 = this.$data.mounted;
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, filteredRenderItems = _$props.filteredRenderItems, lazy = _$props.lazy, selectedKeys3 = _$props.selectedKeys, globalDisabled = _$props.disabled;
    var items = filteredRenderItems.map(function(_ref) {
      var renderedEl = _ref.renderedEl, renderedText = _ref.renderedText, item = _ref.item;
      var disabled = item.disabled;
      var checked4 = selectedKeys3.indexOf(item.key) >= 0;
      return h(ListItem, {
        attrs: {
          disabled: globalDisabled || disabled,
          item,
          lazy,
          renderedText,
          renderedEl,
          checked: checked4,
          prefixCls: prefixCls2
        },
        key: item.key,
        on: {
          "click": _this3.onItemSelect
        }
      });
    });
    var transitionProps = getTransitionProps$1(mounted70 ? prefixCls2 + "-content-item-highlight" : "", {
      tag: "ul",
      nativeOn: {
        scroll: this.onScroll
      },
      leave: noop$6
    });
    return h(
      "transition-group",
      _mergeJSXProps([{ "class": prefixCls2 + "-content" }, transitionProps]),
      [items]
    );
  }
};
var defaultRenderList = function(h, props2) {
  return h(ListBody, props2);
};
function triggerEvent2(el, type3) {
  if ("createEvent" in document) {
    var e = document.createEvent("HTMLEvents");
    e.initEvent(type3, false, true);
    el.dispatchEvent(e);
  }
}
var defaultRender = function defaultRender2() {
  return null;
};
var TransferItem$1 = {
  key: PropTypes.string,
  title: PropTypes.string,
  description: PropTypes.string,
  disabled: PropTypes.bool
};
function isRenderResultPlainObject(result) {
  return result && !isValidElement(result) && Object.prototype.toString.call(result) === "[object Object]";
}
var TransferListProps = {
  prefixCls: PropTypes.string,
  titleText: PropTypes.string,
  dataSource: PropTypes.arrayOf(PropTypes.shape(TransferItem$1).loose),
  filter: PropTypes.string,
  filterOption: PropTypes.func,
  checkedKeys: PropTypes.arrayOf(PropTypes.string),
  handleFilter: PropTypes.func,
  handleSelect: PropTypes.func,
  handleSelectAll: PropTypes.func,
  handleClear: PropTypes.func,
  renderItem: PropTypes.func,
  showSearch: PropTypes.bool,
  searchPlaceholder: PropTypes.string,
  notFoundContent: PropTypes.any,
  itemUnit: PropTypes.string,
  itemsUnit: PropTypes.string,
  body: PropTypes.any,
  renderList: PropTypes.any,
  footer: PropTypes.any,
  lazy: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
  disabled: PropTypes.bool,
  direction: PropTypes.string,
  showSelectAll: PropTypes.bool
};
function renderListNode(h, renderList, props2) {
  var bodyContent = renderList ? renderList(props2) : null;
  var customize = !!bodyContent;
  if (!customize) {
    bodyContent = defaultRenderList(h, props2);
  }
  return {
    customize,
    bodyContent
  };
}
var List = {
  name: "TransferList",
  mixins: [BaseMixin],
  props: initDefaultProps(TransferListProps, {
    dataSource: [],
    titleText: "",
    showSearch: false,
    lazy: {}
  }),
  data: function data94() {
    this.timer = null;
    this.triggerScrollTimer = null;
    return {
      filterValue: ""
    };
  },
  beforeDestroy: function beforeDestroy45() {
    clearTimeout(this.triggerScrollTimer);
  },
  updated: function updated39() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.scrollEvent) {
        _this.scrollEvent.remove();
      }
      if (_this.$refs.listContentWrapper) {
        var listContentWrapperDom = _this.$refs.listContentWrapper.$el;
        _this.scrollEvent = addEventListenerWrap(listContentWrapperDom, "scroll", _this.handleScroll);
      }
    });
  },
  methods: {
    handleScroll: function handleScroll3(e) {
      this.$emit("scroll", e);
    },
    getCheckStatus: function getCheckStatus(filteredItems) {
      var checkedKeys = this.$props.checkedKeys;
      if (checkedKeys.length === 0) {
        return "none";
      }
      if (filteredItems.every(function(item) {
        return checkedKeys.indexOf(item.key) >= 0 || !!item.disabled;
      })) {
        return "all";
      }
      return "part";
    },
    getFilteredItems: function getFilteredItems(dataSource3, filterValue) {
      var _this2 = this;
      var filteredItems = [];
      var filteredRenderItems = [];
      dataSource3.forEach(function(item) {
        var renderedItem = _this2.renderItemHtml(item);
        var renderedText = renderedItem.renderedText;
        if (filterValue && filterValue.trim() && !_this2.matchFilter(renderedText, item)) {
          return null;
        }
        filteredItems.push(item);
        filteredRenderItems.push(renderedItem);
      });
      return { filteredItems, filteredRenderItems };
    },
    getListBody: function getListBody(prefixCls2, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {
      var h = this.$createElement;
      var search = showSearch ? h(
        "div",
        { "class": prefixCls2 + "-body-search-wrapper" },
        [h(Search, {
          attrs: {
            prefixCls: prefixCls2 + "-search",
            handleClear: this._handleClear,
            placeholder: searchPlaceholder,
            value: filterValue,
            disabled
          },
          on: {
            "change": this._handleFilter
          }
        })]
      ) : null;
      var listBody = bodyDom;
      if (!listBody) {
        var bodyNode = void 0;
        var _renderListNode = renderListNode(this.$createElement, renderList, {
          props: _default$6({}, this.$props, { filteredItems, filteredRenderItems, selectedKeys: checkedKeys }),
          on: getListeners(this)
        }), bodyContent = _renderListNode.bodyContent, customize = _renderListNode.customize;
        if (customize) {
          bodyNode = h(
            "div",
            { "class": prefixCls2 + "-body-customize-wrapper" },
            [bodyContent]
          );
        } else {
          bodyNode = filteredItems.length ? bodyContent : h(
            "div",
            { "class": prefixCls2 + "-body-not-found" },
            [notFoundContent]
          );
        }
        listBody = h(
          "div",
          {
            "class": classNames(showSearch ? prefixCls2 + "-body " + prefixCls2 + "-body-with-search" : prefixCls2 + "-body")
          },
          [search, bodyNode]
        );
      }
      return listBody;
    },
    getCheckBox: function getCheckBox(filteredItems, showSelectAll, disabled) {
      var _this3 = this;
      var h = this.$createElement;
      var checkStatus = this.getCheckStatus(filteredItems);
      var checkedAll = checkStatus === "all";
      var checkAllCheckbox = showSelectAll !== false && h(Checkbox, {
        attrs: {
          disabled,
          checked: checkedAll,
          indeterminate: checkStatus === "part"
        },
        on: {
          "change": function change() {
            _this3.$emit("itemSelectAll", filteredItems.filter(function(item) {
              return !item.disabled;
            }).map(function(_ref) {
              var key2 = _ref.key;
              return key2;
            }), !checkedAll);
          }
        }
      });
      return checkAllCheckbox;
    },
    _handleSelect: function _handleSelect(selectedItem) {
      var checkedKeys = this.$props.checkedKeys;
      var result = checkedKeys.some(function(key2) {
        return key2 === selectedItem.key;
      });
      this.handleSelect(selectedItem, !result);
    },
    _handleFilter: function _handleFilter(e) {
      var _this4 = this;
      var handleFilter4 = this.$props.handleFilter;
      var filterValue = e.target.value;
      this.setState({ filterValue });
      handleFilter4(e);
      if (!filterValue) {
        return;
      }
      this.triggerScrollTimer = setTimeout(function() {
        var transferNode = _this4.$el;
        var listNode = transferNode.querySelectorAll(".ant-transfer-list-content")[0];
        if (listNode) {
          triggerEvent2(listNode, "scroll");
        }
      }, 0);
    },
    _handleClear: function _handleClear(e) {
      this.setState({ filterValue: "" });
      this.handleClear(e);
    },
    matchFilter: function matchFilter(text, item) {
      var filterValue = this.$data.filterValue;
      var filterOption2 = this.$props.filterOption;
      if (filterOption2) {
        return filterOption2(filterValue, item);
      }
      return text.indexOf(filterValue) >= 0;
    },
    renderItemHtml: function renderItemHtml(item) {
      var _$props$renderItem = this.$props.renderItem, renderItem = _$props$renderItem === void 0 ? defaultRender : _$props$renderItem;
      var renderResult = renderItem(item);
      var isRenderResultPlain = isRenderResultPlainObject(renderResult);
      return {
        renderedText: isRenderResultPlain ? renderResult.value : renderResult,
        renderedEl: isRenderResultPlain ? renderResult.label : renderResult,
        item
      };
    },
    filterNull: function filterNull(arr) {
      return arr.filter(function(item) {
        return item !== null;
      });
    }
  },
  render: function render207() {
    var h = arguments[0];
    var filterValue = this.$data.filterValue;
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, dataSource3 = _$props.dataSource, titleText = _$props.titleText, checkedKeys = _$props.checkedKeys, disabled = _$props.disabled, body = _$props.body, footer = _$props.footer, showSearch = _$props.showSearch, searchPlaceholder = _$props.searchPlaceholder, notFoundContent = _$props.notFoundContent, itemUnit = _$props.itemUnit, itemsUnit = _$props.itemsUnit, renderList = _$props.renderList, showSelectAll = _$props.showSelectAll;
    var footerDom = footer && footer(_default$6({}, this.$props));
    var bodyDom = body && body(_default$6({}, this.$props));
    var listCls = classNames(prefixCls2, _default$8({}, prefixCls2 + "-with-footer", !!footerDom));
    var _getFilteredItems = this.getFilteredItems(dataSource3, filterValue), filteredItems = _getFilteredItems.filteredItems, filteredRenderItems = _getFilteredItems.filteredRenderItems;
    var unit = dataSource3.length > 1 ? itemsUnit : itemUnit;
    var listBody = this.getListBody(prefixCls2, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled);
    var listFooter = footerDom ? h(
      "div",
      { "class": prefixCls2 + "-footer" },
      [footerDom]
    ) : null;
    var checkAllCheckbox = this.getCheckBox(filteredItems, showSelectAll, disabled);
    return h(
      "div",
      { "class": listCls },
      [h(
        "div",
        { "class": prefixCls2 + "-header" },
        [checkAllCheckbox, h(
          "span",
          { "class": prefixCls2 + "-header-selected" },
          [h("span", [(checkedKeys.length > 0 ? checkedKeys.length + "/" : "") + filteredItems.length, " ", unit]), h(
            "span",
            { "class": prefixCls2 + "-header-title" },
            [titleText]
          )]
        )]
      ), listBody, listFooter]
    );
  }
};
function noop$5() {
}
var TransferOperationProps = {
  className: PropTypes.string,
  leftArrowText: PropTypes.string,
  rightArrowText: PropTypes.string,
  moveToLeft: PropTypes.any,
  moveToRight: PropTypes.any,
  leftActive: PropTypes.bool,
  rightActive: PropTypes.bool,
  disabled: PropTypes.bool
};
var Operation = {
  name: "Operation",
  props: _default$6({}, TransferOperationProps),
  render: function render208() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), disabled = _getOptionProps.disabled, _getOptionProps$moveT = _getOptionProps.moveToLeft, moveToLeft2 = _getOptionProps$moveT === void 0 ? noop$5 : _getOptionProps$moveT, _getOptionProps$moveT2 = _getOptionProps.moveToRight, moveToRight2 = _getOptionProps$moveT2 === void 0 ? noop$5 : _getOptionProps$moveT2, _getOptionProps$leftA = _getOptionProps.leftArrowText, leftArrowText = _getOptionProps$leftA === void 0 ? "" : _getOptionProps$leftA, _getOptionProps$right = _getOptionProps.rightArrowText, rightArrowText = _getOptionProps$right === void 0 ? "" : _getOptionProps$right, leftActive = _getOptionProps.leftActive, rightActive = _getOptionProps.rightActive;
    return h("div", [h(
      Button$1,
      {
        attrs: {
          type: "primary",
          size: "small",
          disabled: disabled || !rightActive,
          icon: "right"
        },
        on: {
          "click": moveToRight2
        }
      },
      [rightArrowText]
    ), h(
      Button$1,
      {
        attrs: {
          type: "primary",
          size: "small",
          disabled: disabled || !leftActive,
          icon: "left"
        },
        on: {
          "click": moveToLeft2
        }
      },
      [leftArrowText]
    )]);
  }
};
var TransferItem = {
  key: PropTypes.string,
  title: PropTypes.string,
  description: PropTypes.string,
  disabled: PropTypes.bool
};
var TransferProps = {
  prefixCls: PropTypes.string,
  dataSource: PropTypes.arrayOf(PropTypes.shape(TransferItem).loose),
  disabled: PropTypes.boolean,
  targetKeys: PropTypes.arrayOf(PropTypes.string),
  selectedKeys: PropTypes.arrayOf(PropTypes.string),
  render: PropTypes.func,
  listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
  operationStyle: PropTypes.object,
  titles: PropTypes.arrayOf(PropTypes.string),
  operations: PropTypes.arrayOf(PropTypes.string),
  showSearch: PropTypes.bool,
  filterOption: PropTypes.func,
  searchPlaceholder: PropTypes.string,
  notFoundContent: PropTypes.any,
  locale: PropTypes.object,
  rowKey: PropTypes.func,
  lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),
  showSelectAll: PropTypes.bool
};
({
  titles: PropTypes.arrayOf(PropTypes.string),
  notFoundContent: PropTypes.string,
  itemUnit: PropTypes.string,
  itemsUnit: PropTypes.string
});
var Transfer = {
  name: "ATransfer",
  mixins: [BaseMixin],
  props: initDefaultProps(TransferProps, {
    dataSource: [],
    locale: {},
    showSearch: false,
    listStyle: function listStyle() {
    }
  }),
  inject: {
    configProvider: { "default": function _default109() {
      return ConfigConsumerProps;
    } }
  },
  data: function data95() {
    var _selectedKeys = this.selectedKeys, selectedKeys3 = _selectedKeys === void 0 ? [] : _selectedKeys, _targetKeys = this.targetKeys, targetKeys2 = _targetKeys === void 0 ? [] : _targetKeys;
    return {
      leftFilter: "",
      rightFilter: "",
      sourceSelectedKeys: selectedKeys3.filter(function(key2) {
        return targetKeys2.indexOf(key2) === -1;
      }),
      targetSelectedKeys: selectedKeys3.filter(function(key2) {
        return targetKeys2.indexOf(key2) > -1;
      })
    };
  },
  mounted: function mounted60() {
  },
  watch: {
    targetKeys: function targetKeys() {
      this.updateState();
      if (this.selectedKeys) {
        var targetKeys2 = this.targetKeys || [];
        this.setState({
          sourceSelectedKeys: this.selectedKeys.filter(function(key2) {
            return !targetKeys2.includes(key2);
          }),
          targetSelectedKeys: this.selectedKeys.filter(function(key2) {
            return targetKeys2.includes(key2);
          })
        });
      }
    },
    dataSource: function dataSource2() {
      this.updateState();
    },
    selectedKeys: function selectedKeys() {
      if (this.selectedKeys) {
        var targetKeys2 = this.targetKeys || [];
        this.setState({
          sourceSelectedKeys: this.selectedKeys.filter(function(key2) {
            return !targetKeys2.includes(key2);
          }),
          targetSelectedKeys: this.selectedKeys.filter(function(key2) {
            return targetKeys2.includes(key2);
          })
        });
      }
    }
  },
  methods: {
    getSelectedKeysName: function getSelectedKeysName(direction) {
      return direction === "left" ? "sourceSelectedKeys" : "targetSelectedKeys";
    },
    getTitles: function getTitles(transferLocale) {
      if (this.titles) {
        return this.titles;
      }
      return transferLocale.titles || ["", ""];
    },
    getLocale: function getLocale3(transferLocale, renderEmpty4) {
      var h = this.$createElement;
      var oldLocale = {
        notFoundContent: renderEmpty4(h, "Transfer")
      };
      var notFoundContent = getComponentFromProp(this, "notFoundContent");
      if (notFoundContent) {
        oldLocale.notFoundContent = notFoundContent;
      }
      if (hasProp(this, "searchPlaceholder")) {
        oldLocale.searchPlaceholder = this.$props.searchPlaceholder;
      }
      return _default$6({}, transferLocale, oldLocale, this.$props.locale);
    },
    updateState: function updateState() {
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      this.separatedDataSource = null;
      if (!this.selectedKeys) {
        var dataSource3 = this.dataSource, _targetKeys2 = this.targetKeys, targetKeys2 = _targetKeys2 === void 0 ? [] : _targetKeys2;
        var newSourceSelectedKeys = [];
        var newTargetSelectedKeys = [];
        dataSource3.forEach(function(_ref) {
          var key2 = _ref.key;
          if (sourceSelectedKeys.includes(key2) && !targetKeys2.includes(key2)) {
            newSourceSelectedKeys.push(key2);
          }
          if (targetSelectedKeys.includes(key2) && targetKeys2.includes(key2)) {
            newTargetSelectedKeys.push(key2);
          }
        });
        this.setState({
          sourceSelectedKeys: newSourceSelectedKeys,
          targetSelectedKeys: newTargetSelectedKeys
        });
      }
    },
    moveTo: function moveTo2(direction) {
      var _$props = this.$props, _$props$targetKeys = _$props.targetKeys, targetKeys2 = _$props$targetKeys === void 0 ? [] : _$props$targetKeys, _$props$dataSource = _$props.dataSource, dataSource3 = _$props$dataSource === void 0 ? [] : _$props$dataSource;
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      var moveKeys = direction === "right" ? sourceSelectedKeys : targetSelectedKeys;
      var newMoveKeys = moveKeys.filter(function(key2) {
        return !dataSource3.some(function(data109) {
          return !!(key2 === data109.key && data109.disabled);
        });
      });
      var newTargetKeys = direction === "right" ? newMoveKeys.concat(targetKeys2) : targetKeys2.filter(function(targetKey) {
        return newMoveKeys.indexOf(targetKey) === -1;
      });
      var oppositeDirection = direction === "right" ? "left" : "right";
      this.setState(_default$8({}, this.getSelectedKeysName(oppositeDirection), []));
      this.handleSelectChange(oppositeDirection, []);
      this.$emit("change", newTargetKeys, direction, newMoveKeys);
    },
    moveToLeft: function moveToLeft() {
      this.moveTo("left");
    },
    moveToRight: function moveToRight() {
      this.moveTo("right");
    },
    onItemSelectAll: function onItemSelectAll(direction, selectedKeys3, checkAll) {
      var originalSelectedKeys = this.$data[this.getSelectedKeysName(direction)] || [];
      var mergedCheckedKeys = [];
      if (checkAll) {
        mergedCheckedKeys = Array.from(new Set([].concat(_default$5(originalSelectedKeys), _default$5(selectedKeys3))));
      } else {
        mergedCheckedKeys = originalSelectedKeys.filter(function(key2) {
          return selectedKeys3.indexOf(key2) === -1;
        });
      }
      this.handleSelectChange(direction, mergedCheckedKeys);
      if (!this.$props.selectedKeys) {
        this.setState(_default$8({}, this.getSelectedKeysName(direction), mergedCheckedKeys));
      }
    },
    handleSelectAll: function handleSelectAll(direction, filteredDataSource, checkAll) {
      this.onItemSelectAll(direction, filteredDataSource.map(function(_ref2) {
        var key2 = _ref2.key;
        return key2;
      }), !checkAll);
    },
    handleLeftSelectAll: function handleLeftSelectAll(filteredDataSource, checkAll) {
      return this.handleSelectAll("left", filteredDataSource, !checkAll);
    },
    handleRightSelectAll: function handleRightSelectAll(filteredDataSource, checkAll) {
      return this.handleSelectAll("right", filteredDataSource, !checkAll);
    },
    onLeftItemSelectAll: function onLeftItemSelectAll(selectedKeys3, checkAll) {
      return this.onItemSelectAll("left", selectedKeys3, checkAll);
    },
    onRightItemSelectAll: function onRightItemSelectAll(selectedKeys3, checkAll) {
      return this.onItemSelectAll("right", selectedKeys3, checkAll);
    },
    handleFilter: function handleFilter3(direction, e) {
      var value27 = e.target.value;
      if (getListeners(this).searchChange) {
        warning$4(false, "Transfer", "`searchChange` in Transfer is deprecated. Please use `search` instead.");
        this.$emit("searchChange", direction, e);
      }
      this.$emit("search", direction, value27);
    },
    handleLeftFilter: function handleLeftFilter(e) {
      this.handleFilter("left", e);
    },
    handleRightFilter: function handleRightFilter(e) {
      this.handleFilter("right", e);
    },
    handleClear: function handleClear(direction) {
      this.$emit("search", direction, "");
    },
    handleLeftClear: function handleLeftClear() {
      this.handleClear("left");
    },
    handleRightClear: function handleRightClear() {
      this.handleClear("right");
    },
    onItemSelect: function onItemSelect2(direction, selectedKey, checked4) {
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      var holder = direction === "left" ? [].concat(_default$5(sourceSelectedKeys)) : [].concat(_default$5(targetSelectedKeys));
      var index2 = holder.indexOf(selectedKey);
      if (index2 > -1) {
        holder.splice(index2, 1);
      }
      if (checked4) {
        holder.push(selectedKey);
      }
      this.handleSelectChange(direction, holder);
      if (!this.selectedKeys) {
        this.setState(_default$8({}, this.getSelectedKeysName(direction), holder));
      }
    },
    handleSelect: function handleSelect3(direction, selectedItem, checked4) {
      warning$4(false, "Transfer", "`handleSelect` will be removed, please use `onSelect` instead.");
      this.onItemSelect(direction, selectedItem.key, checked4);
    },
    handleLeftSelect: function handleLeftSelect(selectedItem, checked4) {
      return this.handleSelect("left", selectedItem, checked4);
    },
    handleRightSelect: function handleRightSelect(selectedItem, checked4) {
      return this.handleSelect("right", selectedItem, checked4);
    },
    onLeftItemSelect: function onLeftItemSelect(selectedKey, checked4) {
      return this.onItemSelect("left", selectedKey, checked4);
    },
    onRightItemSelect: function onRightItemSelect(selectedKey, checked4) {
      return this.onItemSelect("right", selectedKey, checked4);
    },
    handleScroll: function handleScroll4(direction, e) {
      this.$emit("scroll", direction, e);
    },
    handleLeftScroll: function handleLeftScroll(e) {
      this.handleScroll("left", e);
    },
    handleRightScroll: function handleRightScroll(e) {
      this.handleScroll("right", e);
    },
    handleSelectChange: function handleSelectChange(direction, holder) {
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      if (direction === "left") {
        this.$emit("selectChange", holder, targetSelectedKeys);
      } else {
        this.$emit("selectChange", sourceSelectedKeys, holder);
      }
    },
    handleListStyle: function handleListStyle(listStyle2, direction) {
      if (typeof listStyle2 === "function") {
        return listStyle2({ direction });
      }
      return listStyle2;
    },
    separateDataSource: function separateDataSource() {
      var _$props2 = this.$props, dataSource3 = _$props2.dataSource, rowKey = _$props2.rowKey, _$props2$targetKeys = _$props2.targetKeys, targetKeys2 = _$props2$targetKeys === void 0 ? [] : _$props2$targetKeys;
      var leftDataSource = [];
      var rightDataSource = new Array(targetKeys2.length);
      dataSource3.forEach(function(record) {
        if (rowKey) {
          record.key = rowKey(record);
        }
        var indexOfKey = targetKeys2.indexOf(record.key);
        if (indexOfKey !== -1) {
          rightDataSource[indexOfKey] = record;
        } else {
          leftDataSource.push(record);
        }
      });
      return {
        leftDataSource,
        rightDataSource
      };
    },
    renderTransfer: function renderTransfer(transferLocale) {
      var _classNames;
      var h = this.$createElement;
      var props2 = getOptionProps(this);
      var customizePrefixCls = props2.prefixCls, disabled = props2.disabled, _props$operations = props2.operations, operations = _props$operations === void 0 ? [] : _props$operations, showSearch = props2.showSearch, listStyle2 = props2.listStyle, operationStyle = props2.operationStyle, filterOption2 = props2.filterOption, lazy = props2.lazy, showSelectAll = props2.showSelectAll;
      var children = getComponentFromProp(this, "children", {}, false);
      var getPrefixCls5 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls5("transfer", customizePrefixCls);
      var renderEmpty4 = this.configProvider.renderEmpty;
      var locale3 = this.getLocale(transferLocale, renderEmpty4);
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys, $scopedSlots = this.$scopedSlots;
      var body = $scopedSlots.body, footer = $scopedSlots.footer;
      var renderItem = props2.render;
      var _separateDataSource = this.separateDataSource(), leftDataSource = _separateDataSource.leftDataSource, rightDataSource = _separateDataSource.rightDataSource;
      var leftActive = targetSelectedKeys.length > 0;
      var rightActive = sourceSelectedKeys.length > 0;
      var cls = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-disabled", disabled), _default$8(_classNames, prefixCls2 + "-customize-list", !!children), _classNames));
      var titles = this.getTitles(locale3);
      return h(
        "div",
        { "class": cls },
        [h(List, {
          key: "leftList",
          attrs: {
            prefixCls: prefixCls2 + "-list",
            titleText: titles[0],
            dataSource: leftDataSource,
            filterOption: filterOption2,
            checkedKeys: sourceSelectedKeys,
            handleFilter: this.handleLeftFilter,
            handleClear: this.handleLeftClear,
            handleSelect: this.handleLeftSelect,
            handleSelectAll: this.handleLeftSelectAll,
            renderItem,
            showSearch,
            body,
            renderList: children,
            footer,
            lazy,
            disabled,
            direction: "left",
            showSelectAll,
            itemUnit: locale3.itemUnit,
            itemsUnit: locale3.itemsUnit,
            notFoundContent: locale3.notFoundContent,
            searchPlaceholder: locale3.searchPlaceholder
          },
          style: this.handleListStyle(listStyle2, "left"),
          on: {
            "itemSelect": this.onLeftItemSelect,
            "itemSelectAll": this.onLeftItemSelectAll,
            "scroll": this.handleLeftScroll
          }
        }), h(Operation, {
          key: "operation",
          "class": prefixCls2 + "-operation",
          attrs: {
            rightActive,
            rightArrowText: operations[0],
            moveToRight: this.moveToRight,
            leftActive,
            leftArrowText: operations[1],
            moveToLeft: this.moveToLeft,
            disabled
          },
          style: operationStyle
        }), h(List, {
          key: "rightList",
          attrs: {
            prefixCls: prefixCls2 + "-list",
            titleText: titles[1],
            dataSource: rightDataSource,
            filterOption: filterOption2,
            checkedKeys: targetSelectedKeys,
            handleFilter: this.handleRightFilter,
            handleClear: this.handleRightClear,
            handleSelect: this.handleRightSelect,
            handleSelectAll: this.handleRightSelectAll,
            renderItem,
            showSearch,
            body,
            renderList: children,
            footer,
            lazy,
            disabled,
            direction: "right",
            showSelectAll,
            itemUnit: locale3.itemUnit,
            itemsUnit: locale3.itemsUnit,
            notFoundContent: locale3.notFoundContent,
            searchPlaceholder: locale3.searchPlaceholder
          },
          style: this.handleListStyle(listStyle2, "right"),
          on: {
            "itemSelect": this.onRightItemSelect,
            "itemSelectAll": this.onRightItemSelectAll,
            "scroll": this.handleRightScroll
          }
        })]
      );
    }
  },
  render: function render209() {
    var h = arguments[0];
    return h(LocaleReceiver, {
      attrs: {
        componentName: "Transfer",
        defaultLocale: defaultLocale.Transfer
      },
      scopedSlots: { "default": this.renderTransfer }
    });
  }
};
Transfer.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Transfer.name, Transfer);
};
var Transfer$1 = Transfer;
function noop$4() {
}
var ICON_OPEN = "open";
var ICON_CLOSE = "close";
var defaultTitle = "---";
var TreeNode$1 = {
  name: "TreeNode",
  mixins: [BaseMixin],
  __ANT_TREE_NODE: true,
  props: initDefaultProps({
    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    prefixCls: PropTypes.string,
    root: PropTypes.object,
    expanded: PropTypes.bool,
    selected: PropTypes.bool,
    checked: PropTypes.bool,
    loaded: PropTypes.bool,
    loading: PropTypes.bool,
    halfChecked: PropTypes.bool,
    title: PropTypes.any,
    pos: PropTypes.string,
    dragOver: PropTypes.bool,
    dragOverGapTop: PropTypes.bool,
    dragOverGapBottom: PropTypes.bool,
    isLeaf: PropTypes.bool,
    checkable: PropTypes.bool,
    selectable: PropTypes.bool,
    disabled: PropTypes.bool,
    disableCheckbox: PropTypes.bool,
    icon: PropTypes.any,
    dataRef: PropTypes.object,
    switcherIcon: PropTypes.any,
    label: PropTypes.any,
    value: PropTypes.any
  }, {}),
  data: function data96() {
    return {
      dragNodeHighlight: false
    };
  },
  inject: {
    vcTree: { "default": function _default110() {
      return {};
    } },
    vcTreeNode: { "default": function _default111() {
      return {};
    } }
  },
  provide: function provide26() {
    return {
      vcTreeNode: this
    };
  },
  mounted: function mounted61() {
    var eventKey = this.eventKey, registerTreeNode2 = this.vcTree.registerTreeNode;
    this.syncLoadData(this.$props);
    registerTreeNode2 && registerTreeNode2(eventKey, this);
  },
  updated: function updated40() {
    this.syncLoadData(this.$props);
  },
  beforeDestroy: function beforeDestroy46() {
    var eventKey = this.eventKey, registerTreeNode2 = this.vcTree.registerTreeNode;
    registerTreeNode2 && registerTreeNode2(eventKey, null);
  },
  methods: {
    onSelectorClick: function onSelectorClick(e) {
      var onNodeClick2 = this.vcTree.onNodeClick;
      onNodeClick2(e, this);
      if (this.isSelectable()) {
        this.onSelect(e);
      } else {
        this.onCheck(e);
      }
    },
    onSelectorDoubleClick: function onSelectorDoubleClick(e) {
      var onNodeDoubleClick2 = this.vcTree.onNodeDoubleClick;
      onNodeDoubleClick2(e, this);
    },
    onSelect: function onSelect9(e) {
      if (this.isDisabled())
        return;
      var onNodeSelect2 = this.vcTree.onNodeSelect;
      e.preventDefault();
      onNodeSelect2(e, this);
    },
    onCheck: function onCheck(e) {
      if (this.isDisabled())
        return;
      var disableCheckbox = this.disableCheckbox, checked4 = this.checked;
      var onNodeCheck2 = this.vcTree.onNodeCheck;
      if (!this.isCheckable() || disableCheckbox)
        return;
      e.preventDefault();
      var targetChecked = !checked4;
      onNodeCheck2(e, this, targetChecked);
    },
    onMouseEnter: function onMouseEnter5(e) {
      var onNodeMouseEnter2 = this.vcTree.onNodeMouseEnter;
      onNodeMouseEnter2(e, this);
    },
    onMouseLeave: function onMouseLeave7(e) {
      var onNodeMouseLeave2 = this.vcTree.onNodeMouseLeave;
      onNodeMouseLeave2(e, this);
    },
    onContextMenu: function onContextMenu2(e) {
      var onNodeContextMenu2 = this.vcTree.onNodeContextMenu;
      onNodeContextMenu2(e, this);
    },
    onDragStart: function onDragStart(e) {
      var onNodeDragStart2 = this.vcTree.onNodeDragStart;
      e.stopPropagation();
      this.setState({
        dragNodeHighlight: true
      });
      onNodeDragStart2(e, this);
      try {
        e.dataTransfer.setData("text/plain", "");
      } catch (error3) {
      }
    },
    onDragEnter: function onDragEnter(e) {
      var onNodeDragEnter2 = this.vcTree.onNodeDragEnter;
      e.preventDefault();
      e.stopPropagation();
      onNodeDragEnter2(e, this);
    },
    onDragOver: function onDragOver(e) {
      var onNodeDragOver2 = this.vcTree.onNodeDragOver;
      e.preventDefault();
      e.stopPropagation();
      onNodeDragOver2(e, this);
    },
    onDragLeave: function onDragLeave(e) {
      var onNodeDragLeave2 = this.vcTree.onNodeDragLeave;
      e.stopPropagation();
      onNodeDragLeave2(e, this);
    },
    onDragEnd: function onDragEnd(e) {
      var onNodeDragEnd2 = this.vcTree.onNodeDragEnd;
      e.stopPropagation();
      this.setState({
        dragNodeHighlight: false
      });
      onNodeDragEnd2(e, this);
    },
    onDrop: function onDrop(e) {
      var onNodeDrop2 = this.vcTree.onNodeDrop;
      e.preventDefault();
      e.stopPropagation();
      this.setState({
        dragNodeHighlight: false
      });
      onNodeDrop2(e, this);
    },
    onExpand: function onExpand2(e) {
      var onNodeExpand2 = this.vcTree.onNodeExpand;
      onNodeExpand2(e, this);
    },
    getNodeChildren: function getNodeChildren$1() {
      var children = this.$slots["default"];
      var originList = filterEmpty(children);
      var targetList = getNodeChildren(originList);
      if (originList.length !== targetList.length) {
        warnOnlyTreeNode();
      }
      return targetList;
    },
    getNodeState: function getNodeState() {
      var expanded2 = this.expanded;
      if (this.isLeaf2()) {
        return null;
      }
      return expanded2 ? ICON_OPEN : ICON_CLOSE;
    },
    isLeaf2: function isLeaf2() {
      var isLeaf = this.isLeaf, loaded = this.loaded;
      var loadData = this.vcTree.loadData;
      var hasChildren = this.getNodeChildren().length !== 0;
      if (isLeaf === false) {
        return false;
      }
      return isLeaf || !loadData && !hasChildren || loadData && loaded && !hasChildren;
    },
    isDisabled: function isDisabled() {
      var disabled = this.disabled;
      var treeDisabled = this.vcTree.disabled;
      if (disabled === false) {
        return false;
      }
      return !!(treeDisabled || disabled);
    },
    isCheckable: function isCheckable() {
      var checkable = this.$props.checkable;
      var treeCheckable = this.vcTree.checkable;
      if (!treeCheckable || checkable === false)
        return false;
      return treeCheckable;
    },
    syncLoadData: function syncLoadData(props2) {
      var expanded2 = props2.expanded, loading2 = props2.loading, loaded = props2.loaded;
      var _vcTree = this.vcTree, loadData = _vcTree.loadData, onNodeLoad2 = _vcTree.onNodeLoad;
      if (loading2)
        return;
      if (loadData && expanded2 && !this.isLeaf2()) {
        var hasChildren = this.getNodeChildren().length !== 0;
        if (!hasChildren && !loaded) {
          onNodeLoad2(this);
        }
      }
    },
    isSelectable: function isSelectable() {
      var selectable = this.selectable;
      var treeSelectable = this.vcTree.selectable;
      if (typeof selectable === "boolean") {
        return selectable;
      }
      return treeSelectable;
    },
    renderSwitcher: function renderSwitcher() {
      var h = this.$createElement;
      var expanded2 = this.expanded;
      var prefixCls2 = this.vcTree.prefixCls;
      var switcherIcon = getComponentFromProp(this, "switcherIcon", {}, false) || getComponentFromProp(this.vcTree, "switcherIcon", {}, false);
      if (this.isLeaf2()) {
        return h(
          "span",
          {
            key: "switcher",
            "class": classNames(prefixCls2 + "-switcher", prefixCls2 + "-switcher-noop")
          },
          [typeof switcherIcon === "function" ? switcherIcon(_default$6({}, this.$props, this.$props.dataRef, { isLeaf: true })) : switcherIcon]
        );
      }
      var switcherCls = classNames(prefixCls2 + "-switcher", prefixCls2 + "-switcher_" + (expanded2 ? ICON_OPEN : ICON_CLOSE));
      return h(
        "span",
        {
          key: "switcher",
          on: {
            "click": this.onExpand
          },
          "class": switcherCls
        },
        [typeof switcherIcon === "function" ? switcherIcon(_default$6({}, this.$props, this.$props.dataRef, { isLeaf: false })) : switcherIcon]
      );
    },
    renderCheckbox: function renderCheckbox() {
      var h = this.$createElement;
      var checked4 = this.checked, halfChecked = this.halfChecked, disableCheckbox = this.disableCheckbox;
      var prefixCls2 = this.vcTree.prefixCls;
      var disabled = this.isDisabled();
      var checkable = this.isCheckable();
      if (!checkable)
        return null;
      var $custom = typeof checkable !== "boolean" ? checkable : null;
      return h(
        "span",
        {
          key: "checkbox",
          "class": classNames(prefixCls2 + "-checkbox", checked4 && prefixCls2 + "-checkbox-checked", !checked4 && halfChecked && prefixCls2 + "-checkbox-indeterminate", (disabled || disableCheckbox) && prefixCls2 + "-checkbox-disabled"),
          on: {
            "click": this.onCheck
          }
        },
        [$custom]
      );
    },
    renderIcon: function renderIcon() {
      var h = this.$createElement;
      var loading2 = this.loading;
      var prefixCls2 = this.vcTree.prefixCls;
      return h("span", {
        key: "icon",
        "class": classNames(prefixCls2 + "-iconEle", prefixCls2 + "-icon__" + (this.getNodeState() || "docu"), loading2 && prefixCls2 + "-icon_loading")
      });
    },
    renderSelector: function renderSelector(h) {
      var selected = this.selected, loading2 = this.loading, dragNodeHighlight = this.dragNodeHighlight;
      var icon = getComponentFromProp(this, "icon", {}, false);
      var _vcTree2 = this.vcTree, prefixCls2 = _vcTree2.prefixCls, showIcon = _vcTree2.showIcon, treeIcon = _vcTree2.icon, draggable = _vcTree2.draggable, loadData = _vcTree2.loadData;
      var disabled = this.isDisabled();
      var title = getComponentFromProp(this, "title", {}, false);
      var wrapClass = prefixCls2 + "-node-content-wrapper";
      var $icon = void 0;
      if (showIcon) {
        var currentIcon = icon || treeIcon;
        $icon = currentIcon ? h(
          "span",
          { "class": classNames(prefixCls2 + "-iconEle", prefixCls2 + "-icon__customize") },
          [typeof currentIcon === "function" ? currentIcon(_default$6({}, this.$props, this.$props.dataRef), h) : currentIcon]
        ) : this.renderIcon();
      } else if (loadData && loading2) {
        $icon = this.renderIcon();
      }
      var currentTitle = title;
      var $title = currentTitle ? h(
        "span",
        { "class": prefixCls2 + "-title" },
        [typeof currentTitle === "function" ? currentTitle(_default$6({}, this.$props, this.$props.dataRef), h) : currentTitle]
      ) : h(
        "span",
        { "class": prefixCls2 + "-title" },
        [defaultTitle]
      );
      return h(
        "span",
        {
          key: "selector",
          ref: "selectHandle",
          attrs: {
            title: typeof title === "string" ? title : "",
            draggable: !disabled && draggable || void 0,
            "aria-grabbed": !disabled && draggable || void 0
          },
          "class": classNames("" + wrapClass, wrapClass + "-" + (this.getNodeState() || "normal"), !disabled && (selected || dragNodeHighlight) && prefixCls2 + "-node-selected", !disabled && draggable && "draggable"),
          on: {
            "mouseenter": this.onMouseEnter,
            "mouseleave": this.onMouseLeave,
            "contextmenu": this.onContextMenu,
            "click": this.onSelectorClick,
            "dblclick": this.onSelectorDoubleClick,
            "dragstart": draggable ? this.onDragStart : noop$4
          }
        },
        [$icon, $title]
      );
    },
    renderChildren: function renderChildren5() {
      var h = this.$createElement;
      var expanded2 = this.expanded, pos = this.pos;
      var _vcTree3 = this.vcTree, prefixCls2 = _vcTree3.prefixCls, openTransitionName = _vcTree3.openTransitionName, openAnimation2 = _vcTree3.openAnimation, renderTreeNode2 = _vcTree3.renderTreeNode;
      var animProps = {};
      if (openTransitionName) {
        animProps = getTransitionProps$1(openTransitionName);
      } else if ((typeof openAnimation2 === "undefined" ? "undefined" : _default$7(openAnimation2)) === "object") {
        animProps = _default$6({}, openAnimation2);
        animProps.props = _default$6({ css: false }, animProps.props);
      }
      var nodeList = this.getNodeChildren();
      if (nodeList.length === 0) {
        return null;
      }
      var $children = void 0;
      if (expanded2) {
        $children = h(
          "ul",
          {
            "class": classNames(prefixCls2 + "-child-tree", expanded2 && prefixCls2 + "-child-tree-open"),
            attrs: {
              "data-expanded": expanded2,
              role: "group"
            }
          },
          [mapChildren(nodeList, function(node, index2) {
            return renderTreeNode2(node, index2, pos);
          })]
        );
      }
      return h(
        "transition",
        animProps,
        [$children]
      );
    }
  },
  render: function render210(h) {
    var _ref;
    var _$props = this.$props, dragOver = _$props.dragOver, dragOverGapTop = _$props.dragOverGapTop, dragOverGapBottom = _$props.dragOverGapBottom, isLeaf = _$props.isLeaf, expanded2 = _$props.expanded, selected = _$props.selected, checked4 = _$props.checked, halfChecked = _$props.halfChecked, loading2 = _$props.loading;
    var _vcTree4 = this.vcTree, prefixCls2 = _vcTree4.prefixCls, filterTreeNode2 = _vcTree4.filterTreeNode, draggable = _vcTree4.draggable;
    var disabled = this.isDisabled();
    return h(
      "li",
      {
        "class": (_ref = {}, _default$8(_ref, prefixCls2 + "-treenode-disabled", disabled), _default$8(_ref, prefixCls2 + "-treenode-switcher-" + (expanded2 ? "open" : "close"), !isLeaf), _default$8(_ref, prefixCls2 + "-treenode-checkbox-checked", checked4), _default$8(_ref, prefixCls2 + "-treenode-checkbox-indeterminate", halfChecked), _default$8(_ref, prefixCls2 + "-treenode-selected", selected), _default$8(_ref, prefixCls2 + "-treenode-loading", loading2), _default$8(_ref, "drag-over", !disabled && dragOver), _default$8(_ref, "drag-over-gap-top", !disabled && dragOverGapTop), _default$8(_ref, "drag-over-gap-bottom", !disabled && dragOverGapBottom), _default$8(_ref, "filter-node", filterTreeNode2 && filterTreeNode2(this)), _ref),
        attrs: {
          role: "treeitem"
        },
        on: {
          "dragenter": draggable ? this.onDragEnter : noop$4,
          "dragover": draggable ? this.onDragOver : noop$4,
          "dragleave": draggable ? this.onDragLeave : noop$4,
          "drop": draggable ? this.onDrop : noop$4,
          "dragend": draggable ? this.onDragEnd : noop$4
        }
      },
      [this.renderSwitcher(), this.renderCheckbox(), this.renderSelector(h), this.renderChildren()]
    );
  }
};
TreeNode$1.isTreeNode = 1;
var TreeNode$2 = TreeNode$1;
var DRAG_SIDE_RANGE = 0.25;
var DRAG_MIN_GAP = 2;
var onlyTreeNodeWarned = false;
function warnOnlyTreeNode() {
  if (onlyTreeNodeWarned)
    return;
  onlyTreeNodeWarned = true;
  warning$3();
}
function arrDel(list, value27) {
  var clone4 = list.slice();
  var index2 = clone4.indexOf(value27);
  if (index2 >= 0) {
    clone4.splice(index2, 1);
  }
  return clone4;
}
function arrAdd(list, value27) {
  var clone4 = list.slice();
  if (clone4.indexOf(value27) === -1) {
    clone4.push(value27);
  }
  return clone4;
}
function posToArr(pos) {
  return pos.split("-");
}
function getPosition(level2, index2) {
  return level2 + "-" + index2;
}
function isTreeNode(node) {
  return getSlotOptions(node).isTreeNode;
}
function getNodeChildren() {
  var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return children.filter(isTreeNode);
}
function isCheckDisabled(node) {
  var _ref = getOptionProps(node) || {}, disabled = _ref.disabled, disableCheckbox = _ref.disableCheckbox, checkable = _ref.checkable;
  return !!(disabled || disableCheckbox) || checkable === false;
}
function traverseTreeNodes(treeNodes, callback) {
  function processNode(node, index2, parent2) {
    var children = node ? node.componentOptions.children : treeNodes;
    var pos = node ? getPosition(parent2.pos, index2) : 0;
    var childList = getNodeChildren(children);
    if (node) {
      var key2 = node.key;
      if (!key2 && (key2 === void 0 || key2 === null)) {
        key2 = pos;
      }
      var data109 = {
        node,
        index: index2,
        pos,
        key: key2,
        parentPos: parent2.node ? parent2.pos : null
      };
      callback(data109);
    }
    childList.forEach(function(subNode, subIndex) {
      processNode(subNode, subIndex, { node, pos });
    });
  }
  processNode(null);
}
function mapChildren() {
  var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var func = arguments[1];
  var list = children.map(func);
  if (list.length === 1) {
    return list[0];
  }
  return list;
}
function getDragNodesKeys(treeNodes, node) {
  var _getOptionProps = getOptionProps(node), eventKey = _getOptionProps.eventKey, pos = _getOptionProps.pos;
  var dragNodesKeys = [];
  traverseTreeNodes(treeNodes, function(_ref2) {
    var key2 = _ref2.key;
    dragNodesKeys.push(key2);
  });
  dragNodesKeys.push(eventKey || pos);
  return dragNodesKeys;
}
function calcDropPosition(event, treeNode) {
  var clientY = event.clientY;
  var _treeNode$$refs$selec = treeNode.$refs.selectHandle.getBoundingClientRect(), top = _treeNode$$refs$selec.top, bottom = _treeNode$$refs$selec.bottom, height3 = _treeNode$$refs$selec.height;
  var des = Math.max(height3 * DRAG_SIDE_RANGE, DRAG_MIN_GAP);
  if (clientY <= top + des) {
    return -1;
  }
  if (clientY >= bottom - des) {
    return 1;
  }
  return 0;
}
function calcSelectedKeys(selectedKeys3, props2) {
  if (!selectedKeys3) {
    return void 0;
  }
  var multiple = props2.multiple;
  if (multiple) {
    return selectedKeys3.slice();
  }
  if (selectedKeys3.length) {
    return [selectedKeys3[0]];
  }
  return selectedKeys3;
}
var internalProcessProps = function internalProcessProps2() {
  var props2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return {
    props: omit$2(props2, ["on", "key", "class", "className", "style"]),
    on: props2.on || {},
    "class": props2["class"] || props2.className,
    style: props2.style,
    key: props2.key
  };
};
function convertDataToTree$1(h, treeData, processor) {
  if (!treeData)
    return [];
  var _ref3 = processor || {}, _ref3$processProps = _ref3.processProps, processProps2 = _ref3$processProps === void 0 ? internalProcessProps : _ref3$processProps;
  var list = Array.isArray(treeData) ? treeData : [treeData];
  return list.map(function(_ref4) {
    var children = _ref4.children, props2 = _default$2(_ref4, ["children"]);
    var childrenNodes = convertDataToTree$1(h, children, processor);
    return h(
      TreeNode$2,
      processProps2(props2),
      [childrenNodes]
    );
  });
}
function convertTreeToEntities$1(treeNodes) {
  var _ref5 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, initWrapper2 = _ref5.initWrapper, processEntity2 = _ref5.processEntity, onProcessFinished = _ref5.onProcessFinished;
  var posEntities = /* @__PURE__ */ new Map();
  var keyEntities = /* @__PURE__ */ new Map();
  var wrapper = {
    posEntities,
    keyEntities
  };
  if (initWrapper2) {
    wrapper = initWrapper2(wrapper) || wrapper;
  }
  traverseTreeNodes(treeNodes, function(item) {
    var node = item.node, index2 = item.index, pos = item.pos, key2 = item.key, parentPos = item.parentPos;
    var entity = { node, index: index2, key: key2, pos };
    posEntities.set(pos, entity);
    keyEntities.set(key2, entity);
    entity.parent = posEntities.get(parentPos);
    if (entity.parent) {
      entity.parent.children = entity.parent.children || [];
      entity.parent.children.push(entity);
    }
    if (processEntity2) {
      processEntity2(entity, wrapper);
    }
  });
  if (onProcessFinished) {
    onProcessFinished(wrapper);
  }
  return wrapper;
}
function parseCheckedKeys(keys3) {
  if (!keys3) {
    return null;
  }
  var keyProps = void 0;
  if (Array.isArray(keys3)) {
    keyProps = {
      checkedKeys: keys3,
      halfCheckedKeys: void 0
    };
  } else if ((typeof keys3 === "undefined" ? "undefined" : _default$7(keys3)) === "object") {
    keyProps = {
      checkedKeys: keys3.checked || void 0,
      halfCheckedKeys: keys3.halfChecked || void 0
    };
  } else {
    warning$3();
    return null;
  }
  return keyProps;
}
function conductCheck$1(keyList, isCheck, keyEntities) {
  var checkStatus = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  var checkedKeys = /* @__PURE__ */ new Map();
  var halfCheckedKeys = /* @__PURE__ */ new Map();
  (checkStatus.checkedKeys || []).forEach(function(key3) {
    checkedKeys.set(key3, true);
  });
  (checkStatus.halfCheckedKeys || []).forEach(function(key3) {
    halfCheckedKeys.set(key3, true);
  });
  function conductUp(key3) {
    if (checkedKeys.get(key3) === isCheck)
      return;
    var entity = keyEntities.get(key3);
    if (!entity)
      return;
    var children = entity.children, parent2 = entity.parent, node = entity.node;
    if (isCheckDisabled(node))
      return;
    var everyChildChecked = true;
    var someChildChecked = false;
    (children || []).filter(function(child) {
      return !isCheckDisabled(child.node);
    }).forEach(function(_ref6) {
      var childKey = _ref6.key;
      var childChecked = checkedKeys.get(childKey);
      var childHalfChecked = halfCheckedKeys.get(childKey);
      if (childChecked || childHalfChecked)
        someChildChecked = true;
      if (!childChecked)
        everyChildChecked = false;
    });
    if (isCheck) {
      checkedKeys.set(key3, everyChildChecked);
    } else {
      checkedKeys.set(key3, false);
    }
    halfCheckedKeys.set(key3, someChildChecked);
    if (parent2) {
      conductUp(parent2.key);
    }
  }
  function conductDown(key3) {
    if (checkedKeys.get(key3) === isCheck)
      return;
    var entity = keyEntities.get(key3);
    if (!entity)
      return;
    var children = entity.children, node = entity.node;
    if (isCheckDisabled(node))
      return;
    checkedKeys.set(key3, isCheck);
    (children || []).forEach(function(child) {
      conductDown(child.key);
    });
  }
  function conduct(key3) {
    var entity = keyEntities.get(key3);
    if (!entity) {
      warning$3();
      return;
    }
    var children = entity.children, parent2 = entity.parent, node = entity.node;
    checkedKeys.set(key3, isCheck);
    if (isCheckDisabled(node))
      return;
    (children || []).filter(function(child) {
      return !isCheckDisabled(child.node);
    }).forEach(function(child) {
      conductDown(child.key);
    });
    if (parent2) {
      conductUp(parent2.key);
    }
  }
  (keyList || []).forEach(function(key3) {
    conduct(key3);
  });
  var checkedKeyList = [];
  var halfCheckedKeyList = [];
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = void 0;
  try {
    for (var _iterator3 = checkedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator3.next()).done); _iteratorNormalCompletion = true) {
      var _ref7 = _step.value;
      var _ref8 = _default$4(_ref7, 2);
      var key2 = _ref8[0];
      var value27 = _ref8[1];
      if (value27) {
        checkedKeyList.push(key2);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator3["return"]) {
        _iterator3["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = void 0;
  try {
    for (var _iterator22 = halfCheckedKeys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator22.next()).done); _iteratorNormalCompletion2 = true) {
      var _ref9 = _step2.value;
      var _ref10 = _default$4(_ref9, 2);
      var _key = _ref10[0];
      var _value = _ref10[1];
      if (!checkedKeys.get(_key) && _value) {
        halfCheckedKeyList.push(_key);
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator22["return"]) {
        _iterator22["return"]();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
  return {
    checkedKeys: checkedKeyList,
    halfCheckedKeys: halfCheckedKeyList
  };
}
function conductExpandParent(keyList, keyEntities) {
  var expandedKeys2 = /* @__PURE__ */ new Map();
  function conductUp(key2) {
    if (expandedKeys2.get(key2))
      return;
    var entity = keyEntities.get(key2);
    if (!entity)
      return;
    expandedKeys2.set(key2, true);
    var parent2 = entity.parent, node = entity.node;
    var props2 = getOptionProps(node);
    if (props2 && props2.disabled)
      return;
    if (parent2) {
      conductUp(parent2.key);
    }
  }
  (keyList || []).forEach(function(key2) {
    conductUp(key2);
  });
  return [].concat(_default$5(expandedKeys2.keys()));
}
function getWatch$2() {
  var keys3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var watch = {};
  keys3.forEach(function(k) {
    watch[k] = function() {
      this.needSyncKeys[k] = true;
    };
  });
  return watch;
}
var Tree$1 = {
  name: "Tree",
  mixins: [BaseMixin],
  props: initDefaultProps({
    prefixCls: PropTypes.string,
    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    children: PropTypes.any,
    treeData: PropTypes.array,
    showLine: PropTypes.bool,
    showIcon: PropTypes.bool,
    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
    focusable: PropTypes.bool,
    selectable: PropTypes.bool,
    disabled: PropTypes.bool,
    multiple: PropTypes.bool,
    checkable: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),
    checkStrictly: PropTypes.bool,
    draggable: PropTypes.bool,
    defaultExpandParent: PropTypes.bool,
    autoExpandParent: PropTypes.bool,
    defaultExpandAll: PropTypes.bool,
    defaultExpandedKeys: PropTypes.array,
    expandedKeys: PropTypes.array,
    defaultCheckedKeys: PropTypes.array,
    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),
    defaultSelectedKeys: PropTypes.array,
    selectedKeys: PropTypes.array,
    loadData: PropTypes.func,
    loadedKeys: PropTypes.array,
    filterTreeNode: PropTypes.func,
    openTransitionName: PropTypes.string,
    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    switcherIcon: PropTypes.any,
    _propsSymbol: PropTypes.any
  }, {
    prefixCls: "rc-tree",
    showLine: false,
    showIcon: true,
    selectable: true,
    multiple: false,
    checkable: false,
    disabled: false,
    checkStrictly: false,
    draggable: false,
    defaultExpandParent: true,
    autoExpandParent: false,
    defaultExpandAll: false,
    defaultExpandedKeys: [],
    defaultCheckedKeys: [],
    defaultSelectedKeys: []
  }),
  data: function data97() {
    warning$3(this.$props.__propsSymbol__);
    warning$3(this.$props.children);
    this.needSyncKeys = {};
    this.domTreeNodes = {};
    var state = {
      _posEntities: /* @__PURE__ */ new Map(),
      _keyEntities: /* @__PURE__ */ new Map(),
      _expandedKeys: [],
      _selectedKeys: [],
      _checkedKeys: [],
      _halfCheckedKeys: [],
      _loadedKeys: [],
      _loadingKeys: [],
      _treeNode: [],
      _prevProps: null,
      _dragOverNodeKey: "",
      _dropPosition: null,
      _dragNodesKeys: []
    };
    return _default$6({}, state, this.getDerivedState(getOptionProps(this), state));
  },
  provide: function provide27() {
    return {
      vcTree: this
    };
  },
  watch: _default$6({}, getWatch$2(["treeData", "children", "expandedKeys", "autoExpandParent", "selectedKeys", "checkedKeys", "loadedKeys"]), {
    __propsSymbol__: function __propsSymbol__3() {
      this.setState(this.getDerivedState(getOptionProps(this), this.$data));
      this.needSyncKeys = {};
    }
  }),
  methods: {
    getDerivedState: function getDerivedState2(props2, prevState) {
      var _prevProps = prevState._prevProps;
      var newState = {
        _prevProps: _default$6({}, props2)
      };
      var self2 = this;
      function needSync(name) {
        return !_prevProps && name in props2 || _prevProps && self2.needSyncKeys[name];
      }
      var treeNode = null;
      if (needSync("treeData")) {
        treeNode = convertDataToTree$1(this.$createElement, props2.treeData);
      } else if (needSync("children")) {
        treeNode = props2.children;
      }
      if (treeNode) {
        newState._treeNode = treeNode;
        var entitiesMap = convertTreeToEntities$1(treeNode);
        newState._keyEntities = entitiesMap.keyEntities;
      }
      var keyEntities = newState._keyEntities || prevState._keyEntities;
      if (needSync("expandedKeys") || _prevProps && needSync("autoExpandParent")) {
        newState._expandedKeys = props2.autoExpandParent || !_prevProps && props2.defaultExpandParent ? conductExpandParent(props2.expandedKeys, keyEntities) : props2.expandedKeys;
      } else if (!_prevProps && props2.defaultExpandAll) {
        newState._expandedKeys = [].concat(_default$5(keyEntities.keys()));
      } else if (!_prevProps && props2.defaultExpandedKeys) {
        newState._expandedKeys = props2.autoExpandParent || props2.defaultExpandParent ? conductExpandParent(props2.defaultExpandedKeys, keyEntities) : props2.defaultExpandedKeys;
      }
      if (props2.selectable) {
        if (needSync("selectedKeys")) {
          newState._selectedKeys = calcSelectedKeys(props2.selectedKeys, props2);
        } else if (!_prevProps && props2.defaultSelectedKeys) {
          newState._selectedKeys = calcSelectedKeys(props2.defaultSelectedKeys, props2);
        }
      }
      if (props2.checkable) {
        var checkedKeyEntity = void 0;
        if (needSync("checkedKeys")) {
          checkedKeyEntity = parseCheckedKeys(props2.checkedKeys) || {};
        } else if (!_prevProps && props2.defaultCheckedKeys) {
          checkedKeyEntity = parseCheckedKeys(props2.defaultCheckedKeys) || {};
        } else if (treeNode) {
          checkedKeyEntity = parseCheckedKeys(props2.checkedKeys) || {
            checkedKeys: prevState._checkedKeys,
            halfCheckedKeys: prevState._halfCheckedKeys
          };
        }
        if (checkedKeyEntity) {
          var _checkedKeyEntity = checkedKeyEntity, _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys, checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che, _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys, halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;
          if (!props2.checkStrictly) {
            var conductKeys = conductCheck$1(checkedKeys, true, keyEntities);
            checkedKeys = conductKeys.checkedKeys;
            halfCheckedKeys = conductKeys.halfCheckedKeys;
          }
          newState._checkedKeys = checkedKeys;
          newState._halfCheckedKeys = halfCheckedKeys;
        }
      }
      if (needSync("loadedKeys")) {
        newState._loadedKeys = props2.loadedKeys;
      }
      return newState;
    },
    onNodeDragStart: function onNodeDragStart(event, node) {
      var _expandedKeys = this.$data._expandedKeys;
      var eventKey = node.eventKey;
      var children = getSlots(node)["default"];
      this.dragNode = node;
      this.setState({
        _dragNodesKeys: getDragNodesKeys(typeof children === "function" ? children() : children, node),
        _expandedKeys: arrDel(_expandedKeys, eventKey)
      });
      this.__emit("dragstart", { event, node });
    },
    onNodeDragEnter: function onNodeDragEnter(event, node) {
      var _this = this;
      var expandedKeys2 = this.$data._expandedKeys;
      var pos = node.pos, eventKey = node.eventKey;
      if (!this.dragNode || !node.$refs.selectHandle)
        return;
      var dropPosition = calcDropPosition(event, node);
      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {
        this.setState({
          _dragOverNodeKey: "",
          _dropPosition: null
        });
        return;
      }
      setTimeout(function() {
        _this.setState({
          _dragOverNodeKey: eventKey,
          _dropPosition: dropPosition
        });
        if (!_this.delayedDragEnterLogic) {
          _this.delayedDragEnterLogic = {};
        }
        Object.keys(_this.delayedDragEnterLogic).forEach(function(key2) {
          clearTimeout(_this.delayedDragEnterLogic[key2]);
        });
        _this.delayedDragEnterLogic[pos] = setTimeout(function() {
          var newExpandedKeys = arrAdd(expandedKeys2, eventKey);
          if (!hasProp(_this, "expandedKeys")) {
            _this.setState({
              _expandedKeys: newExpandedKeys
            });
          }
          _this.__emit("dragenter", { event, node, expandedKeys: newExpandedKeys });
        }, 400);
      }, 0);
    },
    onNodeDragOver: function onNodeDragOver(event, node) {
      var eventKey = node.eventKey;
      var _$data = this.$data, _dragOverNodeKey = _$data._dragOverNodeKey, _dropPosition = _$data._dropPosition;
      if (this.dragNode && eventKey === _dragOverNodeKey && node.$refs.selectHandle) {
        var dropPosition = calcDropPosition(event, node);
        if (dropPosition === _dropPosition)
          return;
        this.setState({
          _dropPosition: dropPosition
        });
      }
      this.__emit("dragover", { event, node });
    },
    onNodeDragLeave: function onNodeDragLeave(event, node) {
      this.setState({
        _dragOverNodeKey: ""
      });
      this.__emit("dragleave", { event, node });
    },
    onNodeDragEnd: function onNodeDragEnd(event, node) {
      this.setState({
        _dragOverNodeKey: ""
      });
      this.__emit("dragend", { event, node });
      this.dragNode = null;
    },
    onNodeDrop: function onNodeDrop(event, node) {
      var _$data2 = this.$data, _$data2$_dragNodesKey = _$data2._dragNodesKeys, _dragNodesKeys = _$data2$_dragNodesKey === void 0 ? [] : _$data2$_dragNodesKey, _dropPosition = _$data2._dropPosition;
      var eventKey = node.eventKey, pos = node.pos;
      this.setState({
        _dragOverNodeKey: ""
      });
      if (_dragNodesKeys.indexOf(eventKey) !== -1) {
        warning$3();
        return;
      }
      var posArr = posToArr(pos);
      var dropResult = {
        event,
        node,
        dragNode: this.dragNode,
        dragNodesKeys: _dragNodesKeys.slice(),
        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),
        dropToGap: false
      };
      if (_dropPosition !== 0) {
        dropResult.dropToGap = true;
      }
      this.__emit("drop", dropResult);
      this.dragNode = null;
    },
    onNodeClick: function onNodeClick(e, treeNode) {
      this.__emit("click", e, treeNode);
    },
    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {
      this.__emit("dblclick", e, treeNode);
    },
    onNodeSelect: function onNodeSelect(e, treeNode) {
      var selectedKeys3 = this.$data._selectedKeys;
      var keyEntities = this.$data._keyEntities;
      var multiple = this.$props.multiple;
      var _getOptionProps = getOptionProps(treeNode), selected = _getOptionProps.selected, eventKey = _getOptionProps.eventKey;
      var targetSelected = !selected;
      if (!targetSelected) {
        selectedKeys3 = arrDel(selectedKeys3, eventKey);
      } else if (!multiple) {
        selectedKeys3 = [eventKey];
      } else {
        selectedKeys3 = arrAdd(selectedKeys3, eventKey);
      }
      var selectedNodes = selectedKeys3.map(function(key2) {
        var entity = keyEntities.get(key2);
        if (!entity)
          return null;
        return entity.node;
      }).filter(function(node) {
        return node;
      });
      this.setUncontrolledState({ _selectedKeys: selectedKeys3 });
      var eventObj = {
        event: "select",
        selected: targetSelected,
        node: treeNode,
        selectedNodes,
        nativeEvent: e
      };
      this.__emit("update:selectedKeys", selectedKeys3);
      this.__emit("select", selectedKeys3, eventObj);
    },
    onNodeCheck: function onNodeCheck(e, treeNode, checked4) {
      var _$data3 = this.$data, keyEntities = _$data3._keyEntities, oriCheckedKeys = _$data3._checkedKeys, oriHalfCheckedKeys = _$data3._halfCheckedKeys;
      var checkStrictly = this.$props.checkStrictly;
      var _getOptionProps2 = getOptionProps(treeNode), eventKey = _getOptionProps2.eventKey;
      var checkedObj = void 0;
      var eventObj = {
        event: "check",
        node: treeNode,
        checked: checked4,
        nativeEvent: e
      };
      if (checkStrictly) {
        var checkedKeys = checked4 ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);
        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);
        checkedObj = { checked: checkedKeys, halfChecked: halfCheckedKeys };
        eventObj.checkedNodes = checkedKeys.map(function(key2) {
          return keyEntities.get(key2);
        }).filter(function(entity) {
          return entity;
        }).map(function(entity) {
          return entity.node;
        });
        this.setUncontrolledState({ _checkedKeys: checkedKeys });
      } else {
        var _conductCheck = conductCheck$1([eventKey], checked4, keyEntities, {
          checkedKeys: oriCheckedKeys,
          halfCheckedKeys: oriHalfCheckedKeys
        }), _checkedKeys = _conductCheck.checkedKeys, _halfCheckedKeys = _conductCheck.halfCheckedKeys;
        checkedObj = _checkedKeys;
        eventObj.checkedNodes = [];
        eventObj.checkedNodesPositions = [];
        eventObj.halfCheckedKeys = _halfCheckedKeys;
        _checkedKeys.forEach(function(key2) {
          var entity = keyEntities.get(key2);
          if (!entity)
            return;
          var node = entity.node, pos = entity.pos;
          eventObj.checkedNodes.push(node);
          eventObj.checkedNodesPositions.push({ node, pos });
        });
        this.setUncontrolledState({
          _checkedKeys,
          _halfCheckedKeys
        });
      }
      this.__emit("check", checkedObj, eventObj);
    },
    onNodeLoad: function onNodeLoad(treeNode) {
      var _this2 = this;
      return new Promise(function(resolve) {
        _this2.setState(function(_ref) {
          var _ref$_loadedKeys = _ref._loadedKeys, loadedKeys = _ref$_loadedKeys === void 0 ? [] : _ref$_loadedKeys, _ref$_loadingKeys = _ref._loadingKeys, loadingKeys = _ref$_loadingKeys === void 0 ? [] : _ref$_loadingKeys;
          var loadData = _this2.$props.loadData;
          var _getOptionProps3 = getOptionProps(treeNode), eventKey = _getOptionProps3.eventKey;
          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {
            return {};
          }
          var promise = loadData(treeNode);
          promise.then(function() {
            var _$data4 = _this2.$data, currentLoadedKeys = _$data4._loadedKeys, currentLoadingKeys = _$data4._loadingKeys;
            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);
            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey);
            _this2.__emit("load", newLoadedKeys, {
              event: "load",
              node: treeNode
            });
            _this2.setUncontrolledState({
              _loadedKeys: newLoadedKeys
            });
            _this2.setState({
              _loadingKeys: newLoadingKeys
            });
            resolve();
          });
          return {
            _loadingKeys: arrAdd(loadingKeys, eventKey)
          };
        });
      });
    },
    onNodeExpand: function onNodeExpand(e, treeNode) {
      var _this3 = this;
      var expandedKeys2 = this.$data._expandedKeys;
      var loadData = this.$props.loadData;
      var _getOptionProps4 = getOptionProps(treeNode), eventKey = _getOptionProps4.eventKey, expanded2 = _getOptionProps4.expanded;
      expandedKeys2.indexOf(eventKey);
      var targetExpanded = !expanded2;
      warning$3();
      if (targetExpanded) {
        expandedKeys2 = arrAdd(expandedKeys2, eventKey);
      } else {
        expandedKeys2 = arrDel(expandedKeys2, eventKey);
      }
      this.setUncontrolledState({ _expandedKeys: expandedKeys2 });
      this.__emit("expand", expandedKeys2, {
        node: treeNode,
        expanded: targetExpanded,
        nativeEvent: e
      });
      this.__emit("update:expandedKeys", expandedKeys2);
      if (targetExpanded && loadData) {
        var loadPromise = this.onNodeLoad(treeNode);
        return loadPromise ? loadPromise.then(function() {
          _this3.setUncontrolledState({ _expandedKeys: expandedKeys2 });
        }) : null;
      }
      return null;
    },
    onNodeMouseEnter: function onNodeMouseEnter(event, node) {
      this.__emit("mouseenter", { event, node });
    },
    onNodeMouseLeave: function onNodeMouseLeave(event, node) {
      this.__emit("mouseleave", { event, node });
    },
    onNodeContextMenu: function onNodeContextMenu(event, node) {
      event.preventDefault();
      this.__emit("rightClick", { event, node });
    },
    setUncontrolledState: function setUncontrolledState(state) {
      var needSync = false;
      var newState = {};
      var props2 = getOptionProps(this);
      Object.keys(state).forEach(function(name) {
        if (name.replace("_", "") in props2)
          return;
        needSync = true;
        newState[name] = state[name];
      });
      if (needSync) {
        this.setState(newState);
      }
    },
    registerTreeNode: function registerTreeNode(key2, node) {
      if (node) {
        this.domTreeNodes[key2] = node;
      } else {
        delete this.domTreeNodes[key2];
      }
    },
    isKeyChecked: function isKeyChecked(key2) {
      var _$data$_checkedKeys = this.$data._checkedKeys, checkedKeys = _$data$_checkedKeys === void 0 ? [] : _$data$_checkedKeys;
      return checkedKeys.indexOf(key2) !== -1;
    },
    renderTreeNode: function renderTreeNode(child, index2) {
      var level2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      var _$data5 = this.$data, keyEntities = _$data5._keyEntities, _$data5$_expandedKeys = _$data5._expandedKeys, expandedKeys2 = _$data5$_expandedKeys === void 0 ? [] : _$data5$_expandedKeys, _$data5$_selectedKeys = _$data5._selectedKeys, selectedKeys3 = _$data5$_selectedKeys === void 0 ? [] : _$data5$_selectedKeys, _$data5$_halfCheckedK = _$data5._halfCheckedKeys, halfCheckedKeys = _$data5$_halfCheckedK === void 0 ? [] : _$data5$_halfCheckedK, _$data5$_loadedKeys = _$data5._loadedKeys, loadedKeys = _$data5$_loadedKeys === void 0 ? [] : _$data5$_loadedKeys, _$data5$_loadingKeys = _$data5._loadingKeys, loadingKeys = _$data5$_loadingKeys === void 0 ? [] : _$data5$_loadingKeys, dragOverNodeKey = _$data5._dragOverNodeKey, dropPosition = _$data5._dropPosition;
      var pos = getPosition(level2, index2);
      var key2 = child.key;
      if (!key2 && (key2 === void 0 || key2 === null)) {
        key2 = pos;
      }
      if (!keyEntities.get(key2)) {
        warnOnlyTreeNode();
        return null;
      }
      return cloneElement(child, {
        props: {
          eventKey: key2,
          expanded: expandedKeys2.indexOf(key2) !== -1,
          selected: selectedKeys3.indexOf(key2) !== -1,
          loaded: loadedKeys.indexOf(key2) !== -1,
          loading: loadingKeys.indexOf(key2) !== -1,
          checked: this.isKeyChecked(key2),
          halfChecked: halfCheckedKeys.indexOf(key2) !== -1,
          pos,
          dragOver: dragOverNodeKey === key2 && dropPosition === 0,
          dragOverGapTop: dragOverNodeKey === key2 && dropPosition === -1,
          dragOverGapBottom: dragOverNodeKey === key2 && dropPosition === 1
        },
        key: key2
      });
    }
  },
  render: function render211() {
    var _this4 = this;
    var h = arguments[0];
    var treeNode = this.$data._treeNode;
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, focusable = _$props.focusable, showLine = _$props.showLine, _$props$tabIndex = _$props.tabIndex, tabIndex = _$props$tabIndex === void 0 ? 0 : _$props$tabIndex;
    return h(
      "ul",
      {
        "class": classNames(prefixCls2, _default$8({}, prefixCls2 + "-show-line", showLine)),
        attrs: {
          role: "tree",
          unselectable: "on",
          tabIndex: focusable ? tabIndex : null
        }
      },
      [mapChildren(treeNode, function(node, index2) {
        return _this4.renderTreeNode(node, index2);
      })]
    );
  }
};
var ProxyTree = wrapWithConnect(Tree$1);
Tree$1.TreeNode = TreeNode$2;
ProxyTree.TreeNode = TreeNode$2;
var src2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Tree: Tree$1,
  TreeNode: TreeNode$2,
  "default": ProxyTree
}, Symbol.toStringTag, { value: "Module" }));
var require$$0 = /* @__PURE__ */ getAugmentedNamespace(src2);
var vcTree = require$$0;
function TreeProps() {
  return {
    showLine: PropTypes.bool,
    multiple: PropTypes.bool,
    autoExpandParent: PropTypes.bool,
    checkStrictly: PropTypes.bool,
    checkable: PropTypes.bool,
    disabled: PropTypes.bool,
    defaultExpandAll: PropTypes.bool,
    defaultExpandParent: PropTypes.bool,
    defaultExpandedKeys: PropTypes.array,
    expandedKeys: PropTypes.array,
    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.shape({
      checked: PropTypes.array,
      halfChecked: PropTypes.array
    }).loose]),
    defaultCheckedKeys: PropTypes.array,
    selectedKeys: PropTypes.array,
    defaultSelectedKeys: PropTypes.array,
    selectable: PropTypes.bool,
    filterAntTreeNode: PropTypes.func,
    loadData: PropTypes.func,
    loadedKeys: PropTypes.array,
    draggable: PropTypes.bool,
    showIcon: PropTypes.bool,
    icon: PropTypes.func,
    switcherIcon: PropTypes.any,
    prefixCls: PropTypes.string,
    filterTreeNode: PropTypes.func,
    openAnimation: PropTypes.any,
    treeNodes: PropTypes.array,
    treeData: PropTypes.array,
    replaceFields: PropTypes.object,
    blockNode: PropTypes.bool
  };
}
var Tree = {
  name: "ATree",
  model: {
    prop: "checkedKeys",
    event: "check"
  },
  props: initDefaultProps(TreeProps(), {
    checkable: false,
    showIcon: false,
    openAnimation: {
      on: animation$2,
      props: { appear: null }
    },
    blockNode: false
  }),
  inject: {
    configProvider: { "default": function _default112() {
      return ConfigConsumerProps;
    } }
  },
  created: function created15() {
    warning$3(!("treeNodes" in getOptionProps(this)));
  },
  TreeNode: vcTree.TreeNode,
  methods: {
    renderSwitcherIcon: function renderSwitcherIcon(prefixCls2, switcherIcon, _ref) {
      var isLeaf = _ref.isLeaf, expanded2 = _ref.expanded, loading2 = _ref.loading;
      var h = this.$createElement;
      var showLine = this.$props.showLine;
      if (loading2) {
        return h(Icon$1, {
          attrs: { type: "loading" },
          "class": prefixCls2 + "-switcher-loading-icon"
        });
      }
      if (isLeaf) {
        return showLine ? h(Icon$1, {
          attrs: { type: "file" },
          "class": prefixCls2 + "-switcher-line-icon"
        }) : null;
      }
      var switcherCls = prefixCls2 + "-switcher-icon";
      if (switcherIcon) {
        return cloneElement(switcherIcon, {
          "class": _default$8({}, switcherCls, true)
        });
      }
      return showLine ? h(Icon$1, {
        attrs: {
          type: expanded2 ? "minus-square" : "plus-square",
          theme: "outlined"
        },
        "class": prefixCls2 + "-switcher-line-icon"
      }) : h(Icon$1, {
        attrs: { type: "caret-down", theme: "filled" },
        "class": switcherCls
      });
    },
    updateTreeData: function updateTreeData(treeData) {
      var _this = this;
      var $slots = this.$slots, $scopedSlots = this.$scopedSlots;
      var defaultFields = { children: "children", title: "title", key: "key" };
      var replaceFields = _default$6({}, defaultFields, this.$props.replaceFields);
      return treeData.map(function(item) {
        var key2 = item[replaceFields.key];
        var children = item[replaceFields.children];
        var _item$on = item.on, on = _item$on === void 0 ? {} : _item$on, _item$slots = item.slots, slots = _item$slots === void 0 ? {} : _item$slots, _item$scopedSlots = item.scopedSlots, scopedSlots = _item$scopedSlots === void 0 ? {} : _item$scopedSlots, cls = item["class"], style3 = item.style, restProps = _default$2(item, ["on", "slots", "scopedSlots", "class", "style"]);
        var treeNodeProps = _default$6({}, restProps, {
          icon: $scopedSlots[scopedSlots.icon] || $slots[slots.icon] || restProps.icon,
          switcherIcon: $scopedSlots[scopedSlots.switcherIcon] || $slots[slots.switcherIcon] || restProps.switcherIcon,
          title: $scopedSlots[scopedSlots.title] || $slots[slots.title] || $scopedSlots.title || restProps[replaceFields.title],
          dataRef: item,
          on,
          key: key2,
          "class": cls,
          style: style3
        });
        if (children) {
          return _default$6({}, treeNodeProps, { children: _this.updateTreeData(children) });
        }
        return treeNodeProps;
      });
    }
  },
  render: function render212() {
    var _this2 = this, _class2;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var $slots = this.$slots, $scopedSlots = this.$scopedSlots;
    var customizePrefixCls = props2.prefixCls, showIcon = props2.showIcon, treeNodes = props2.treeNodes, blockNode = props2.blockNode;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("tree", customizePrefixCls);
    var _switcherIcon = getComponentFromProp(this, "switcherIcon");
    var checkable = props2.checkable;
    var treeData = props2.treeData || treeNodes;
    if (treeData) {
      treeData = this.updateTreeData(treeData);
    }
    var vcTreeProps = {
      props: _default$6({}, props2, {
        prefixCls: prefixCls2,
        checkable: checkable ? h("span", { "class": prefixCls2 + "-checkbox-inner" }) : checkable,
        children: filterEmpty($scopedSlots["default"] ? $scopedSlots["default"]() : $slots["default"]),
        __propsSymbol__: Symbol(),
        switcherIcon: function switcherIcon(nodeProps) {
          return _this2.renderSwitcherIcon(prefixCls2, _switcherIcon, nodeProps);
        }
      }),
      on: getListeners(this),
      ref: "tree",
      "class": (_class2 = {}, _default$8(_class2, prefixCls2 + "-icon-hide", !showIcon), _default$8(_class2, prefixCls2 + "-block-node", blockNode), _class2)
    };
    if (treeData) {
      vcTreeProps.props.treeData = treeData;
    }
    return h(vcTree.Tree, vcTreeProps);
  }
};
var Record = {
  None: "node",
  Start: "start",
  End: "end"
};
function traverseNodesKey(rootChildren, callback) {
  var nodeList = getNodeChildren(rootChildren) || [];
  function processNode(node) {
    var key2 = node.key;
    var children = getSlots(node)["default"];
    if (callback(key2, node) !== false) {
      traverseNodesKey(typeof children === "function" ? children() : children, callback);
    }
  }
  nodeList.forEach(processNode);
}
function getFullKeyList(children) {
  var _convertTreeToEntitie = convertTreeToEntities$1(children), keyEntities = _convertTreeToEntitie.keyEntities;
  return [].concat(_default$5(keyEntities.keys()));
}
function calcRangeKeys(rootChildren, expandedKeys2, startKey, endKey) {
  var keys3 = [];
  var record = Record.None;
  if (startKey && startKey === endKey) {
    return [startKey];
  }
  if (!startKey || !endKey) {
    return [];
  }
  function matchKey(key2) {
    return key2 === startKey || key2 === endKey;
  }
  traverseNodesKey(rootChildren, function(key2) {
    if (record === Record.End) {
      return false;
    }
    if (matchKey(key2)) {
      keys3.push(key2);
      if (record === Record.None) {
        record = Record.Start;
      } else if (record === Record.Start) {
        record = Record.End;
        return false;
      }
    } else if (record === Record.Start) {
      keys3.push(key2);
    }
    if (expandedKeys2.indexOf(key2) === -1) {
      return false;
    }
    return true;
  });
  return keys3;
}
function convertDirectoryKeysToNodes(rootChildren, keys3) {
  var restKeys = [].concat(_default$5(keys3));
  var nodes = [];
  traverseNodesKey(rootChildren, function(key2, node) {
    var index2 = restKeys.indexOf(key2);
    if (index2 !== -1) {
      nodes.push(node);
      restKeys.splice(index2, 1);
    }
    return !!restKeys.length;
  });
  return nodes;
}
function getFullKeyListByTreeData(treeData) {
  var keys3 = [];
  (treeData || []).forEach(function(item) {
    keys3.push(item.key);
    if (item.children) {
      keys3 = [].concat(_default$5(keys3), _default$5(getFullKeyListByTreeData(item.children)));
    }
  });
  return keys3;
}
function getIcon3(props2, h) {
  var isLeaf = props2.isLeaf, expanded2 = props2.expanded;
  if (isLeaf) {
    return h(Icon$1, {
      attrs: { type: "file" }
    });
  }
  return h(Icon$1, {
    attrs: { type: expanded2 ? "folder-open" : "folder" }
  });
}
var DirectoryTree = {
  name: "ADirectoryTree",
  mixins: [BaseMixin],
  model: {
    prop: "checkedKeys",
    event: "check"
  },
  props: initDefaultProps(_default$6({}, TreeProps(), {
    expandAction: PropTypes.oneOf([false, "click", "doubleclick", "dblclick"])
  }), {
    showIcon: true,
    expandAction: "click"
  }),
  inject: {
    configProvider: {
      "default": function _default113() {
        return ConfigConsumerProps;
      }
    }
  },
  data: function data98() {
    var props2 = getOptionProps(this);
    var defaultExpandAll = props2.defaultExpandAll, defaultExpandParent = props2.defaultExpandParent, expandedKeys2 = props2.expandedKeys, defaultExpandedKeys = props2.defaultExpandedKeys;
    var _convertTreeToEntitie = convertTreeToEntities$1(this.$slots["default"]), keyEntities = _convertTreeToEntitie.keyEntities;
    var state = {};
    state._selectedKeys = props2.selectedKeys || props2.defaultSelectedKeys || [];
    if (defaultExpandAll) {
      if (props2.treeData) {
        state._expandedKeys = getFullKeyListByTreeData(props2.treeData);
      } else {
        state._expandedKeys = getFullKeyList(this.$slots["default"]);
      }
    } else if (defaultExpandParent) {
      state._expandedKeys = conductExpandParent(expandedKeys2 || defaultExpandedKeys, keyEntities);
    } else {
      state._expandedKeys = expandedKeys2 || defaultExpandedKeys;
    }
    this.onDebounceExpand = debounce$3(this.expandFolderNode, 200, { leading: true });
    return _default$6({
      _selectedKeys: [],
      _expandedKeys: []
    }, state);
  },
  watch: {
    expandedKeys: function expandedKeys(val) {
      this.setState({ _expandedKeys: val });
    },
    selectedKeys: function selectedKeys2(val) {
      this.setState({ _selectedKeys: val });
    }
  },
  methods: {
    onExpand: function onExpand3(expandedKeys2, info3) {
      this.setUncontrolledState({ _expandedKeys: expandedKeys2 });
      this.$emit("expand", expandedKeys2, info3);
      return void 0;
    },
    onClick: function onClick13(event, node) {
      var expandAction = this.$props.expandAction;
      if (expandAction === "click") {
        this.onDebounceExpand(event, node);
      }
      this.$emit("click", event, node);
    },
    onDoubleClick: function onDoubleClick(event, node) {
      var expandAction = this.$props.expandAction;
      if (expandAction === "dblclick" || expandAction === "doubleclick") {
        this.onDebounceExpand(event, node);
      }
      this.$emit("doubleclick", event, node);
      this.$emit("dblclick", event, node);
    },
    onSelect: function onSelect10(keys3, event) {
      var multiple = this.$props.multiple;
      var children = this.$slots["default"] || [];
      var _$data$_expandedKeys = this.$data._expandedKeys, expandedKeys2 = _$data$_expandedKeys === void 0 ? [] : _$data$_expandedKeys;
      var node = event.node, nativeEvent = event.nativeEvent;
      var _node$eventKey = node.eventKey, eventKey = _node$eventKey === void 0 ? "" : _node$eventKey;
      var newState = {};
      var newEvent = _default$6({}, event, {
        selected: true
      });
      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;
      var shiftPick = nativeEvent.shiftKey;
      var newSelectedKeys = void 0;
      if (multiple && ctrlPick) {
        newSelectedKeys = keys3;
        this.lastSelectedKey = eventKey;
        this.cachedSelectedKeys = newSelectedKeys;
        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);
      } else if (multiple && shiftPick) {
        newSelectedKeys = Array.from(new Set([].concat(_default$5(this.cachedSelectedKeys || []), _default$5(calcRangeKeys(children, expandedKeys2, eventKey, this.lastSelectedKey)))));
        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);
      } else {
        newSelectedKeys = [eventKey];
        this.lastSelectedKey = eventKey;
        this.cachedSelectedKeys = newSelectedKeys;
        newEvent.selectedNodes = [event.node];
      }
      newState._selectedKeys = newSelectedKeys;
      this.$emit("update:selectedKeys", newSelectedKeys);
      this.$emit("select", newSelectedKeys, newEvent);
      this.setUncontrolledState(newState);
    },
    expandFolderNode: function expandFolderNode(event, node) {
      var isLeaf = node.isLeaf;
      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {
        return;
      }
      if (this.$refs.tree.$refs.tree) {
        var internalTree = this.$refs.tree.$refs.tree;
        internalTree.onNodeExpand(event, node);
      }
    },
    setUncontrolledState: function setUncontrolledState2(state) {
      var newState = omit$2(state, Object.keys(getOptionProps(this)).map(function(p) {
        return "_" + p;
      }));
      if (Object.keys(newState).length) {
        this.setState(newState);
      }
    }
  },
  render: function render213() {
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, props2 = _default$2(_getOptionProps, ["prefixCls"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("tree", customizePrefixCls);
    var _$data = this.$data, expandedKeys2 = _$data._expandedKeys, selectedKeys3 = _$data._selectedKeys;
    var listeners = getListeners(this);
    warning$4(!listeners.doubleclick, "`doubleclick` is deprecated. please use `dblclick` instead.");
    var treeProps = {
      props: _default$6({
        icon: getIcon3
      }, props2, {
        prefixCls: prefixCls2,
        expandedKeys: expandedKeys2,
        selectedKeys: selectedKeys3,
        switcherIcon: getComponentFromProp(this, "switcherIcon")
      }),
      ref: "tree",
      "class": prefixCls2 + "-directory",
      on: _default$6({}, omit$2(listeners, ["update:selectedKeys"]), {
        select: this.onSelect,
        click: this.onClick,
        dblclick: this.onDoubleClick,
        expand: this.onExpand
      })
    };
    return h(
      Tree,
      treeProps,
      [this.$slots["default"]]
    );
  }
};
Tree.TreeNode.name = "ATreeNode";
Tree.DirectoryTree = DirectoryTree;
Tree.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Tree.name, Tree);
  Vue2.component(Tree.TreeNode.name, Tree.TreeNode);
  Vue2.component(DirectoryTree.name, DirectoryTree);
};
function hasClass(node, className) {
  if (node.classList) {
    return node.classList.contains(className);
  }
  var originClass = node.className;
  return (" " + originClass + " ").indexOf(" " + className + " ") > -1;
}
var SHOW_ALL = "SHOW_ALL";
var SHOW_PARENT = "SHOW_PARENT";
var SHOW_CHILD = "SHOW_CHILD";
var warnDeprecatedLabel = false;
function findPopupContainer(node, prefixClass) {
  var current2 = node;
  while (current2) {
    if (hasClass(current2, prefixClass)) {
      return current2;
    }
    current2 = current2.parentNode;
  }
  return null;
}
function toTitle(title) {
  if (typeof title === "string") {
    return title;
  }
  return null;
}
function toArray$1(data109) {
  if (data109 === void 0 || data109 === null)
    return [];
  return Array.isArray(data109) ? data109 : [data109];
}
function createRef() {
  var func = function setRef2(node) {
    func.current = node;
  };
  return func;
}
var UNSELECTABLE_STYLE = {
  userSelect: "none",
  WebkitUserSelect: "none"
};
var UNSELECTABLE_ATTRIBUTE = {
  unselectable: "unselectable"
};
function flatToHierarchy(positionList) {
  if (!positionList.length) {
    return [];
  }
  var entrances = {};
  var posMap = {};
  var parsedList = positionList.slice().map(function(entity) {
    var clone4 = _default$6({}, entity, {
      fields: entity.pos.split("-")
    });
    delete clone4.children;
    return clone4;
  });
  parsedList.forEach(function(entity) {
    posMap[entity.pos] = entity;
  });
  parsedList.sort(function(a, b) {
    return a.fields.length - b.fields.length;
  });
  parsedList.forEach(function(entity) {
    var parentPos = entity.fields.slice(0, -1).join("-");
    var parentEntity = posMap[parentPos];
    if (!parentEntity) {
      entrances[entity.pos] = entity;
    } else {
      parentEntity.children = parentEntity.children || [];
      parentEntity.children.push(entity);
    }
    delete entity.key;
    delete entity.fields;
  });
  return Object.keys(entrances).map(function(key2) {
    return entrances[key2];
  });
}
var ariaId = 0;
function generateAriaId(prefix) {
  ariaId += 1;
  return prefix + "_" + ariaId;
}
function isLabelInValue(props2) {
  var treeCheckable = props2.treeCheckable, treeCheckStrictly = props2.treeCheckStrictly, labelInValue = props2.labelInValue;
  if (treeCheckable && treeCheckStrictly) {
    return true;
  }
  return labelInValue || false;
}
function parseSimpleTreeData(treeData, _ref) {
  var id2 = _ref.id, pId = _ref.pId, rootPId = _ref.rootPId;
  var keyNodes = {};
  var rootNodeList = [];
  var nodeList = treeData.map(function(node) {
    var clone4 = _default$6({}, node);
    var key2 = clone4[id2];
    keyNodes[key2] = clone4;
    clone4.key = clone4.key || key2;
    return clone4;
  });
  nodeList.forEach(function(node) {
    var parentKey = node[pId];
    var parent2 = keyNodes[parentKey];
    if (parent2) {
      parent2.children = parent2.children || [];
      parent2.children.push(node);
    }
    if (parentKey === rootPId || !parent2 && rootPId === null) {
      rootNodeList.push(node);
    }
  });
  return rootNodeList;
}
function isPosRelated(pos1, pos2) {
  var fields1 = pos1.split("-");
  var fields2 = pos2.split("-");
  var minLen = Math.min(fields1.length, fields2.length);
  for (var i = 0; i < minLen; i += 1) {
    if (fields1[i] !== fields2[i]) {
      return false;
    }
  }
  return true;
}
function cleanEntity(_ref2) {
  var node = _ref2.node, pos = _ref2.pos, children = _ref2.children;
  var instance = {
    node,
    pos
  };
  if (children) {
    instance.children = children.map(cleanEntity);
  }
  return instance;
}
function getFilterTree(h, treeNodes, searchValue2, filterFunc, valueEntities, Component) {
  if (!searchValue2) {
    return null;
  }
  function mapFilteredNodeToData(node) {
    if (!node || isEmptyElement(node))
      return null;
    var match5 = false;
    if (filterFunc(searchValue2, node)) {
      match5 = true;
    }
    var children = getSlots(node)["default"];
    children = ((typeof children === "function" ? children() : children) || []).map(mapFilteredNodeToData).filter(function(n) {
      return n;
    });
    if (children.length || match5) {
      return h(
        Component,
        _mergeJSXProps([node.data, { key: valueEntities[getPropsData(node).value].key }]),
        [children]
      );
    }
    return null;
  }
  return treeNodes.map(mapFilteredNodeToData).filter(function(node) {
    return node;
  });
}
function formatInternalValue(value27, props2) {
  var valueList = toArray$1(value27);
  if (isLabelInValue(props2)) {
    return valueList.map(function(val) {
      if ((typeof val === "undefined" ? "undefined" : _default$7(val)) !== "object" || !val) {
        return {
          value: "",
          label: ""
        };
      }
      return val;
    });
  }
  return valueList.map(function(val) {
    return {
      value: val
    };
  });
}
function getLabel2(wrappedValue, entity, treeNodeLabelProp) {
  if (wrappedValue.label) {
    return wrappedValue.label;
  }
  if (entity) {
    var props2 = getPropsData(entity.node);
    if (Object.keys(props2).length) {
      return props2[treeNodeLabelProp];
    }
  }
  return wrappedValue.value;
}
function formatSelectorValue(valueList, props2, valueEntities) {
  var treeNodeLabelProp = props2.treeNodeLabelProp, treeCheckable = props2.treeCheckable, treeCheckStrictly = props2.treeCheckStrictly, showCheckedStrategy = props2.showCheckedStrategy;
  if (treeCheckable && !treeCheckStrictly) {
    var values = {};
    valueList.forEach(function(wrappedValue) {
      values[wrappedValue.value] = wrappedValue;
    });
    var hierarchyList = flatToHierarchy(valueList.map(function(_ref3) {
      var value27 = _ref3.value;
      return valueEntities[value27];
    }));
    if (showCheckedStrategy === SHOW_PARENT) {
      return hierarchyList.map(function(_ref4) {
        var node = _ref4.node;
        var value27 = getPropsData(node).value;
        return {
          label: getLabel2(values[value27], valueEntities[value27], treeNodeLabelProp),
          value: value27
        };
      });
    }
    if (showCheckedStrategy === SHOW_CHILD) {
      var targetValueList = [];
      var traverse = function traverse2(_ref5) {
        var node = _ref5.node, children = _ref5.children;
        var value27 = getPropsData(node).value;
        if (!children || children.length === 0) {
          targetValueList.push({
            label: getLabel2(values[value27], valueEntities[value27], treeNodeLabelProp),
            value: value27
          });
          return;
        }
        children.forEach(function(entity) {
          traverse2(entity);
        });
      };
      hierarchyList.forEach(function(entity) {
        traverse(entity);
      });
      return targetValueList;
    }
  }
  return valueList.map(function(wrappedValue) {
    return {
      label: getLabel2(wrappedValue, valueEntities[wrappedValue.value], treeNodeLabelProp),
      value: wrappedValue.value
    };
  });
}
function processProps(props2) {
  var title = props2.title, label = props2.label, value27 = props2.value, cls = props2["class"], style3 = props2.style, _props$on = props2.on, on = _props$on === void 0 ? {} : _props$on;
  var key2 = props2.key;
  if (!key2 && (key2 === void 0 || key2 === null)) {
    key2 = value27;
  }
  var p = {
    props: omit$2(props2, ["on", "key", "class", "className", "style"]),
    on,
    "class": cls || props2.className,
    style: style3,
    key: key2
  };
  if (label && !title) {
    if (!warnDeprecatedLabel) {
      warning$3();
      warnDeprecatedLabel = true;
    }
    p.props.title = label;
  }
  return p;
}
function convertDataToTree(h, treeData) {
  return convertDataToTree$1(h, treeData, { processProps });
}
function initWrapper(wrapper) {
  return _default$6({}, wrapper, {
    valueEntities: {}
  });
}
function processEntity(entity, wrapper) {
  var value27 = getPropsData(entity.node).value;
  entity.value = value27;
  var currentEntity = wrapper.valueEntities[value27];
  if (currentEntity) {
    warning$3(false, "Conflict! value of node '" + entity.key + "' (" + value27 + ") has already used by node '" + currentEntity.key + "'.");
  }
  wrapper.valueEntities[value27] = entity;
}
function convertTreeToEntities(treeNodes) {
  return convertTreeToEntities$1(treeNodes, {
    initWrapper,
    processEntity
  });
}
function getHalfCheckedKeys(valueList, valueEntities) {
  var values = {};
  valueList.forEach(function(_ref6) {
    var value27 = _ref6.value;
    values[value27] = false;
  });
  valueList.forEach(function(_ref7) {
    var value27 = _ref7.value;
    var current2 = valueEntities[value27];
    while (current2 && current2.parent) {
      var parentValue = current2.parent.value;
      if (parentValue in values)
        break;
      values[parentValue] = true;
      current2 = current2.parent;
    }
  });
  return Object.keys(values).filter(function(value27) {
    return values[value27];
  }).map(function(value27) {
    return valueEntities[value27].key;
  });
}
var conductCheck = conductCheck$1;
var BUILT_IN_PLACEMENTS = {
  bottomLeft: {
    points: ["tl", "bl"],
    offset: [0, 4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    },
    ignoreShake: true
  },
  topLeft: {
    points: ["bl", "tl"],
    offset: [0, -4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    },
    ignoreShake: true
  }
};
var SelectTrigger = {
  name: "SelectTrigger",
  props: {
    disabled: PropTypes.bool,
    showSearch: PropTypes.bool,
    prefixCls: PropTypes.string,
    dropdownPopupAlign: PropTypes.object,
    dropdownClassName: PropTypes.string,
    dropdownStyle: PropTypes.object,
    transitionName: PropTypes.string,
    animation: PropTypes.string,
    getPopupContainer: PropTypes.func,
    dropdownMatchSelectWidth: PropTypes.bool,
    isMultiple: PropTypes.bool,
    dropdownPrefixCls: PropTypes.string,
    dropdownVisibleChange: PropTypes.func,
    popupElement: PropTypes.node,
    open: PropTypes.bool
  },
  created: function created16() {
    this.triggerRef = createRef();
  },
  methods: {
    getDropdownTransitionName: function getDropdownTransitionName2() {
      var _$props = this.$props, transitionName2 = _$props.transitionName, animation2 = _$props.animation, dropdownPrefixCls = _$props.dropdownPrefixCls;
      if (!transitionName2 && animation2) {
        return dropdownPrefixCls + "-" + animation2;
      }
      return transitionName2;
    },
    forcePopupAlign: function forcePopupAlign3() {
      var $trigger = this.triggerRef.current;
      if ($trigger) {
        $trigger.forcePopupAlign();
      }
    }
  },
  render: function render214() {
    var _classNames;
    var h = arguments[0];
    var _$props2 = this.$props, disabled = _$props2.disabled, isMultiple3 = _$props2.isMultiple, dropdownPopupAlign = _$props2.dropdownPopupAlign, dropdownMatchSelectWidth = _$props2.dropdownMatchSelectWidth, dropdownClassName = _$props2.dropdownClassName, dropdownStyle = _$props2.dropdownStyle, dropdownVisibleChange2 = _$props2.dropdownVisibleChange, getPopupContainer = _$props2.getPopupContainer, dropdownPrefixCls = _$props2.dropdownPrefixCls, popupElement = _$props2.popupElement, open6 = _$props2.open;
    var stretch = void 0;
    if (dropdownMatchSelectWidth !== false) {
      stretch = dropdownMatchSelectWidth ? "width" : "minWidth";
    }
    return h(
      Trigger,
      _mergeJSXProps([{
        directives: [{
          name: "ant-ref",
          value: this.triggerRef
        }]
      }, {
        attrs: {
          action: disabled ? [] : ["click"],
          popupPlacement: "bottomLeft",
          builtinPlacements: BUILT_IN_PLACEMENTS,
          popupAlign: dropdownPopupAlign,
          prefixCls: dropdownPrefixCls,
          popupTransitionName: this.getDropdownTransitionName(),
          popup: popupElement,
          popupVisible: open6,
          getPopupContainer,
          stretch,
          popupClassName: classNames(dropdownClassName, (_classNames = {}, _default$8(_classNames, dropdownPrefixCls + "--multiple", isMultiple3), _default$8(_classNames, dropdownPrefixCls + "--single", !isMultiple3), _classNames)),
          popupStyle: dropdownStyle
        },
        on: {
          "popupVisibleChange": dropdownVisibleChange2
        }
      }]),
      [this.$slots["default"]]
    );
  }
};
var SelectTrigger$1 = SelectTrigger;
var selectorPropTypes = function selectorPropTypes2() {
  return {
    prefixCls: PropTypes.string,
    className: PropTypes.string,
    open: PropTypes.bool,
    selectorValueList: PropTypes.array,
    allowClear: PropTypes.bool,
    showArrow: PropTypes.bool,
    removeSelected: PropTypes.func,
    choiceTransitionName: PropTypes.string,
    ariaId: PropTypes.string,
    inputIcon: PropTypes.any,
    clearIcon: PropTypes.any,
    removeIcon: PropTypes.any,
    placeholder: PropTypes.any,
    disabled: PropTypes.bool,
    focused: PropTypes.bool
  };
};
function noop$3() {
}
function generateSelector(modeName) {
  var BaseSelector = {
    name: "BaseSelector",
    mixins: [BaseMixin],
    props: initDefaultProps(_default$6({}, selectorPropTypes(), {
      renderSelection: PropTypes.func.isRequired,
      renderPlaceholder: PropTypes.func,
      tabIndex: PropTypes.number
    }), {
      tabIndex: 0
    }),
    inject: {
      vcTreeSelect: { "default": function _default130() {
        return {};
      } }
    },
    created: function created22() {
      this.domRef = createRef();
    },
    methods: {
      onFocus: function onFocus8(e) {
        var focused = this.$props.focused;
        var onSelectorFocus2 = this.vcTreeSelect.onSelectorFocus;
        if (!focused) {
          onSelectorFocus2();
        }
        this.__emit("focus", e);
      },
      onBlur: function onBlur10(e) {
        var onSelectorBlur2 = this.vcTreeSelect.onSelectorBlur;
        onSelectorBlur2();
        this.__emit("blur", e);
      },
      focus: function focus35() {
        this.domRef.current.focus();
      },
      blur: function blur32() {
        this.domRef.current.blur();
      },
      renderClear: function renderClear2() {
        var h = this.$createElement;
        var _$props = this.$props, prefixCls2 = _$props.prefixCls, allowClear = _$props.allowClear, selectorValueList = _$props.selectorValueList;
        var onSelectorClear2 = this.vcTreeSelect.onSelectorClear;
        if (!allowClear || !selectorValueList.length || !selectorValueList[0].value) {
          return null;
        }
        var clearIcon = getComponentFromProp(this, "clearIcon");
        return h(
          "span",
          {
            key: "clear",
            "class": prefixCls2 + "-selection__clear",
            on: {
              "click": onSelectorClear2
            }
          },
          [clearIcon]
        );
      },
      renderArrow: function renderArrow2() {
        var h = this.$createElement;
        var _$props2 = this.$props, prefixCls2 = _$props2.prefixCls, showArrow = _$props2.showArrow;
        if (!showArrow) {
          return null;
        }
        var inputIcon = getComponentFromProp(this, "inputIcon");
        return h(
          "span",
          { key: "arrow", "class": prefixCls2 + "-arrow", style: { outline: "none" } },
          [inputIcon]
        );
      }
    },
    render: function render249() {
      var _classNames;
      var h = arguments[0];
      var _$props3 = this.$props, prefixCls2 = _$props3.prefixCls, className = _$props3.className, style3 = _$props3.style, open6 = _$props3.open, focused = _$props3.focused, disabled = _$props3.disabled, allowClear = _$props3.allowClear, ariaId2 = _$props3.ariaId, renderSelection3 = _$props3.renderSelection, renderPlaceholder = _$props3.renderPlaceholder, tabIndex = _$props3.tabIndex;
      var onSelectorKeyDown = this.vcTreeSelect.onSelectorKeyDown;
      var myTabIndex = tabIndex;
      if (disabled) {
        myTabIndex = null;
      }
      return h(
        "span",
        _mergeJSXProps([{
          style: style3,
          on: {
            "click": getListeners(this).click || noop$3
          },
          "class": classNames(className, prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-open", open6), _default$8(_classNames, prefixCls2 + "-focused", open6 || focused), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _default$8(_classNames, prefixCls2 + "-enabled", !disabled), _default$8(_classNames, prefixCls2 + "-allow-clear", allowClear), _classNames))
        }, {
          directives: [{
            name: "ant-ref",
            value: this.domRef
          }]
        }, {
          attrs: {
            role: "combobox",
            "aria-expanded": open6,
            "aria-owns": open6 ? ariaId2 : void 0,
            "aria-controls": open6 ? ariaId2 : void 0,
            "aria-haspopup": "listbox",
            "aria-disabled": disabled,
            tabIndex: myTabIndex
          },
          on: {
            "focus": this.onFocus,
            "blur": this.onBlur,
            "keydown": onSelectorKeyDown
          }
        }]),
        [h(
          "span",
          {
            key: "selection",
            "class": classNames(prefixCls2 + "-selection", prefixCls2 + "-selection--" + modeName)
          },
          [renderSelection3(), this.renderClear(), this.renderArrow(), renderPlaceholder && renderPlaceholder()]
        )]
      );
    }
  };
  return BaseSelector;
}
var Selector$1 = generateSelector("single");
var SingleSelector = {
  name: "SingleSelector",
  props: selectorPropTypes(),
  created: function created17() {
    this.selectorRef = createRef();
  },
  methods: {
    focus: function focus30() {
      this.selectorRef.current.focus();
    },
    blur: function blur27() {
      this.selectorRef.current.blur();
    },
    renderSelection: function renderSelection() {
      var h = this.$createElement;
      var _$props = this.$props, selectorValueList = _$props.selectorValueList, placeholder = _$props.placeholder, prefixCls2 = _$props.prefixCls;
      var innerNode = void 0;
      if (selectorValueList.length) {
        var _selectorValueList$ = selectorValueList[0], label = _selectorValueList$.label, value27 = _selectorValueList$.value;
        innerNode = h(
          "span",
          {
            key: "value",
            attrs: { title: toTitle(label) },
            "class": prefixCls2 + "-selection-selected-value"
          },
          [label || value27]
        );
      } else {
        innerNode = h(
          "span",
          { key: "placeholder", "class": prefixCls2 + "-selection__placeholder" },
          [placeholder]
        );
      }
      return h(
        "span",
        { "class": prefixCls2 + "-selection__rendered" },
        [innerNode]
      );
    }
  },
  render: function render215() {
    var h = arguments[0];
    var _$props$showArrow = this.$props.showArrow, showArrow = _$props$showArrow === void 0 ? true : _$props$showArrow;
    var props2 = {
      props: _default$6({}, getOptionProps(this), {
        showArrow,
        renderSelection: this.renderSelection
      }),
      on: getListeners(this),
      directives: [{
        name: "ant-ref",
        value: this.selectorRef
      }]
    };
    return h(Selector$1, props2);
  }
};
var SingleSelector$1 = SingleSelector;
var SearchInput = {
  name: "SearchInput",
  props: {
    open: PropTypes.bool,
    searchValue: PropTypes.string,
    prefixCls: PropTypes.string,
    disabled: PropTypes.bool,
    renderPlaceholder: PropTypes.func,
    needAlign: PropTypes.bool,
    ariaId: PropTypes.string
  },
  inject: {
    vcTreeSelect: { "default": function _default114() {
      return {};
    } }
  },
  data: function data99() {
    return {
      mirrorSearchValue: this.searchValue
    };
  },
  watch: {
    searchValue: function searchValue(val) {
      this.mirrorSearchValue = val;
    }
  },
  created: function created18() {
    this.inputRef = createRef();
    this.mirrorInputRef = createRef();
    this.prevProps = _default$6({}, this.$props);
  },
  mounted: function mounted62() {
    var _this = this;
    this.$nextTick(function() {
      var _$props = _this.$props, open6 = _$props.open, needAlign = _$props.needAlign;
      if (needAlign) {
        _this.alignInputWidth();
      }
      if (open6) {
        _this.focus(true);
      }
    });
  },
  updated: function updated41() {
    var _this2 = this;
    var _$props2 = this.$props, open6 = _$props2.open, searchValue2 = _$props2.searchValue, needAlign = _$props2.needAlign;
    var prevProps = this.prevProps;
    this.$nextTick(function() {
      if (open6 && prevProps.open !== open6) {
        _this2.focus();
      }
      if (needAlign && searchValue2 !== prevProps.searchValue) {
        _this2.alignInputWidth();
      }
      _this2.prevProps = _default$6({}, _this2.$props);
    });
  },
  methods: {
    alignInputWidth: function alignInputWidth() {
      this.inputRef.current.style.width = (this.mirrorInputRef.current.clientWidth || this.mirrorInputRef.current.offsetWidth) + "px";
    },
    focus: function focus31(isDidMount) {
      var _this3 = this;
      if (this.inputRef.current) {
        if (isDidMount) {
          setTimeout(function() {
            _this3.inputRef.current.focus();
          }, 0);
        } else {
          this.inputRef.current.focus();
        }
      }
    },
    blur: function blur28() {
      if (this.inputRef.current) {
        this.inputRef.current.blur();
      }
    },
    handleInputChange: function handleInputChange2(e) {
      var _e$target = e.target, value27 = _e$target.value, composing = _e$target.composing;
      var _searchValue = this.searchValue, searchValue2 = _searchValue === void 0 ? "" : _searchValue;
      if (e.isComposing || composing || searchValue2 === value27) {
        this.mirrorSearchValue = value27;
        return;
      }
      this.vcTreeSelect.onSearchInputChange(e);
    }
  },
  render: function render216() {
    var h = arguments[0];
    var _$props3 = this.$props, searchValue2 = _$props3.searchValue, prefixCls2 = _$props3.prefixCls, disabled = _$props3.disabled, renderPlaceholder = _$props3.renderPlaceholder, open6 = _$props3.open, ariaId2 = _$props3.ariaId;
    var onSearchInputKeyDown2 = this.vcTreeSelect.onSearchInputKeyDown, handleInputChange3 = this.handleInputChange, mirrorSearchValue = this.mirrorSearchValue;
    return h(
      "span",
      { "class": prefixCls2 + "-search__field__wrap" },
      [h("input", _mergeJSXProps([{
        attrs: {
          type: "text"
        }
      }, {
        directives: [{
          name: "ant-ref",
          value: this.inputRef
        }, {
          name: "ant-input"
        }]
      }, {
        on: {
          "input": handleInputChange3,
          "keydown": onSearchInputKeyDown2
        },
        domProps: {
          "value": searchValue2
        },
        attrs: {
          disabled,
          "aria-label": "filter select",
          "aria-autocomplete": "list",
          "aria-controls": open6 ? ariaId2 : void 0,
          "aria-multiline": "false"
        },
        "class": prefixCls2 + "-search__field"
      }])), h(
        "span",
        _mergeJSXProps([{
          directives: [{
            name: "ant-ref",
            value: this.mirrorInputRef
          }]
        }, {
          "class": prefixCls2 + "-search__field__mirror"
        }]),
        [mirrorSearchValue, "\xA0"]
      ), renderPlaceholder && !mirrorSearchValue ? renderPlaceholder() : null]
    );
  }
};
var SearchInput$1 = SearchInput;
var Selection = {
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    maxTagTextLength: PropTypes.number,
    label: PropTypes.any,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    removeIcon: PropTypes.any
  },
  methods: {
    onRemove: function onRemove(event) {
      var value27 = this.$props.value;
      this.__emit("remove", event, value27);
      event.stopPropagation();
    }
  },
  render: function render217() {
    var h = arguments[0];
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, maxTagTextLength = _$props.maxTagTextLength, label = _$props.label, value27 = _$props.value;
    var content = label || value27;
    if (maxTagTextLength && typeof content === "string" && content.length > maxTagTextLength) {
      content = content.slice(0, maxTagTextLength) + "...";
    }
    return h(
      "li",
      _mergeJSXProps([{
        style: UNSELECTABLE_STYLE
      }, { attrs: UNSELECTABLE_ATTRIBUTE }, {
        attrs: {
          role: "menuitem",
          title: toTitle(label)
        },
        "class": prefixCls2 + "-selection__choice"
      }]),
      [getListeners(this).remove && h(
        "span",
        {
          "class": prefixCls2 + "-selection__choice__remove",
          on: {
            "click": this.onRemove
          }
        },
        [getComponentFromProp(this, "removeIcon")]
      ), h(
        "span",
        { "class": prefixCls2 + "-selection__choice__content" },
        [content]
      )]
    );
  }
};
var Selection$1 = Selection;
var TREE_SELECT_EMPTY_VALUE_KEY = "RC_TREE_SELECT_EMPTY_VALUE_KEY";
var Selector = generateSelector("multiple");
var MultipleSelector = {
  mixins: [BaseMixin],
  props: _default$6({}, selectorPropTypes(), SearchInput$1.props, {
    selectorValueList: PropTypes.array,
    disabled: PropTypes.bool,
    searchValue: PropTypes.string,
    labelInValue: PropTypes.bool,
    maxTagCount: PropTypes.number,
    maxTagPlaceholder: PropTypes.any
  }),
  inject: {
    vcTreeSelect: { "default": function _default115() {
      return {};
    } }
  },
  created: function created19() {
    this.inputRef = createRef();
  },
  methods: {
    onPlaceholderClick: function onPlaceholderClick2() {
      this.inputRef.current.focus();
    },
    focus: function focus32() {
      this.inputRef.current.focus();
    },
    blur: function blur29() {
      this.inputRef.current.blur();
    },
    _renderPlaceholder: function _renderPlaceholder() {
      var h = this.$createElement;
      var _$props = this.$props, prefixCls2 = _$props.prefixCls, placeholder = _$props.placeholder, searchPlaceholder = _$props.searchPlaceholder, searchValue2 = _$props.searchValue, selectorValueList = _$props.selectorValueList;
      var currentPlaceholder = placeholder || searchPlaceholder;
      if (!currentPlaceholder)
        return null;
      var hidden = searchValue2 || selectorValueList.length;
      return h(
        "span",
        {
          style: {
            display: hidden ? "none" : "block"
          },
          on: {
            "click": this.onPlaceholderClick
          },
          "class": prefixCls2 + "-search__field__placeholder"
        },
        [currentPlaceholder]
      );
    },
    onChoiceAnimationLeave: function onChoiceAnimationLeave2() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.__emit.apply(this, ["choiceAnimationLeave"].concat(_default$5(args)));
    },
    renderSelection: function renderSelection2() {
      var _this = this;
      var h = this.$createElement;
      var _$props2 = this.$props, selectorValueList = _$props2.selectorValueList, choiceTransitionName = _$props2.choiceTransitionName, prefixCls2 = _$props2.prefixCls, labelInValue = _$props2.labelInValue, maxTagCount = _$props2.maxTagCount;
      var onMultipleSelectorRemove2 = this.vcTreeSelect.onMultipleSelectorRemove, $slots = this.$slots;
      var listeners = getListeners(this);
      var myValueList = selectorValueList;
      if (maxTagCount >= 0) {
        myValueList = selectorValueList.slice(0, maxTagCount);
      }
      var selectedValueNodes = myValueList.map(function(_ref) {
        var label = _ref.label, value27 = _ref.value;
        return h(
          Selection$1,
          _mergeJSXProps([{
            props: _default$6({}, _this.$props, {
              label,
              value: value27
            }),
            on: _default$6({}, listeners, { remove: onMultipleSelectorRemove2 })
          }, {
            key: value27 || TREE_SELECT_EMPTY_VALUE_KEY
          }]),
          [$slots["default"]]
        );
      });
      if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {
        var content = "+ " + (selectorValueList.length - maxTagCount) + " ...";
        var maxTagPlaceholder = getComponentFromProp(this, "maxTagPlaceholder", {}, false);
        if (typeof maxTagPlaceholder === "string") {
          content = maxTagPlaceholder;
        } else if (typeof maxTagPlaceholder === "function") {
          var restValueList = selectorValueList.slice(maxTagCount);
          content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function(_ref2) {
            var value27 = _ref2.value;
            return value27;
          }));
        }
        var restNodeSelect = h(
          Selection$1,
          _mergeJSXProps([{
            props: _default$6({}, this.$props, {
              label: content,
              value: null
            }),
            on: listeners
          }, {
            key: "rc-tree-select-internal-max-tag-counter"
          }]),
          [$slots["default"]]
        );
        selectedValueNodes.push(restNodeSelect);
      }
      selectedValueNodes.push(h(
        "li",
        { "class": prefixCls2 + "-search " + prefixCls2 + "-search--inline", key: "__input" },
        [h(
          SearchInput$1,
          {
            props: _default$6({}, this.$props, {
              needAlign: true
            }),
            on: listeners,
            directives: [{
              name: "ant-ref",
              value: this.inputRef
            }]
          },
          [$slots["default"]]
        )]
      ));
      var className = prefixCls2 + "-selection__rendered";
      if (choiceTransitionName) {
        var transitionProps = getTransitionProps$1(choiceTransitionName, {
          tag: "ul",
          afterLeave: this.onChoiceAnimationLeave
        });
        return h(
          "transition-group",
          _mergeJSXProps([{ "class": className }, transitionProps]),
          [selectedValueNodes]
        );
      }
      return h(
        "ul",
        {
          "class": className,
          attrs: { role: "menubar" }
        },
        [selectedValueNodes]
      );
    }
  },
  render: function render218() {
    var h = arguments[0];
    var $slots = this.$slots, $props = this.$props;
    var listeners = getListeners(this);
    var _$props$showArrow = $props.showArrow, showArrow = _$props$showArrow === void 0 ? false : _$props$showArrow;
    return h(
      Selector,
      {
        props: _default$6({}, this.$props, {
          showArrow,
          tabIndex: -1,
          renderSelection: this.renderSelection,
          renderPlaceholder: this._renderPlaceholder
        }),
        on: listeners
      },
      [$slots["default"]]
    );
  }
};
var MultipleSelector$1 = MultipleSelector;
function getDerivedState3(nextProps, prevState) {
  var _ref = prevState || {}, _ref$_prevProps = _ref._prevProps, prevProps = _ref$_prevProps === void 0 ? {} : _ref$_prevProps, loadedKeys = _ref._loadedKeys, expandedKeyList = _ref._expandedKeyList, cachedExpandedKeyList = _ref._cachedExpandedKeyList;
  var valueList = nextProps.valueList, valueEntities = nextProps.valueEntities, keyEntities = nextProps.keyEntities, treeExpandedKeys = nextProps.treeExpandedKeys, filteredTreeNodes = nextProps.filteredTreeNodes, upperSearchValue = nextProps.upperSearchValue;
  var newState = {
    _prevProps: _default$6({}, nextProps)
  };
  if (valueList !== prevProps.valueList) {
    newState._keyList = valueList.map(function(_ref2) {
      var value27 = _ref2.value;
      return valueEntities[value27];
    }).filter(function(entity) {
      return entity;
    }).map(function(_ref3) {
      var key2 = _ref3.key;
      return key2;
    });
  }
  if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {
    newState._expandedKeyList = [].concat(_default$5(keyEntities.keys()));
  }
  if (upperSearchValue && !prevProps.upperSearchValue) {
    newState._cachedExpandedKeyList = expandedKeyList;
  } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {
    newState._expandedKeyList = cachedExpandedKeyList || [];
    newState._cachedExpandedKeyList = [];
  }
  if (prevProps.treeExpandedKeys !== treeExpandedKeys) {
    newState._expandedKeyList = treeExpandedKeys;
  }
  if (nextProps.loadData) {
    newState._loadedKeys = loadedKeys.filter(function(key2) {
      return keyEntities.has(key2);
    });
  }
  return newState;
}
var BasePopup = {
  mixins: [BaseMixin],
  name: "BasePopup",
  props: {
    prefixCls: PropTypes.string,
    upperSearchValue: PropTypes.string,
    valueList: PropTypes.array,
    searchHalfCheckedKeys: PropTypes.array,
    valueEntities: PropTypes.object,
    keyEntities: Map,
    treeIcon: PropTypes.bool,
    treeLine: PropTypes.bool,
    treeNodeFilterProp: PropTypes.string,
    treeCheckable: PropTypes.any,
    treeCheckStrictly: PropTypes.bool,
    treeDefaultExpandAll: PropTypes.bool,
    treeDefaultExpandedKeys: PropTypes.array,
    treeExpandedKeys: PropTypes.array,
    loadData: PropTypes.func,
    multiple: PropTypes.bool,
    searchValue: PropTypes.string,
    treeNodes: PropTypes.any,
    filteredTreeNodes: PropTypes.any,
    notFoundContent: PropTypes.any,
    ariaId: PropTypes.string,
    switcherIcon: PropTypes.any,
    renderSearch: PropTypes.func,
    __propsSymbol__: PropTypes.any
  },
  inject: {
    vcTreeSelect: { "default": function _default116() {
      return {};
    } }
  },
  watch: {
    __propsSymbol__: function __propsSymbol__4() {
      var state = getDerivedState3(this.$props, this.$data);
      this.setState(state);
    }
  },
  data: function data100() {
    this.treeRef = createRef();
    warning$3(this.$props.__propsSymbol__);
    var _$props = this.$props, treeDefaultExpandAll = _$props.treeDefaultExpandAll, treeDefaultExpandedKeys = _$props.treeDefaultExpandedKeys, keyEntities = _$props.keyEntities;
    var expandedKeyList = treeDefaultExpandedKeys;
    if (treeDefaultExpandAll) {
      expandedKeyList = [].concat(_default$5(keyEntities.keys()));
    }
    var state = {
      _keyList: [],
      _expandedKeyList: expandedKeyList,
      _cachedExpandedKeyList: [],
      _loadedKeys: [],
      _prevProps: {}
    };
    return _default$6({}, state, getDerivedState3(this.$props, state));
  },
  methods: {
    onTreeExpand: function onTreeExpand(expandedKeyList) {
      var _this = this;
      var treeExpandedKeys = this.$props.treeExpandedKeys;
      if (!treeExpandedKeys) {
        this.setState({ _expandedKeyList: expandedKeyList }, function() {
          _this.__emit("treeExpanded");
        });
      }
      this.__emit("update:treeExpandedKeys", expandedKeyList);
      this.__emit("treeExpand", expandedKeyList);
    },
    onLoad: function onLoad(loadedKeys) {
      this.setState({ _loadedKeys: loadedKeys });
    },
    getTree: function getTree() {
      return this.treeRef.current;
    },
    getLoadData: function getLoadData() {
      var _$props2 = this.$props, loadData = _$props2.loadData, upperSearchValue = _$props2.upperSearchValue;
      if (upperSearchValue)
        return null;
      return loadData;
    },
    filterTreeNode: function filterTreeNode(treeNode) {
      var _$props3 = this.$props, upperSearchValue = _$props3.upperSearchValue, treeNodeFilterProp = _$props3.treeNodeFilterProp;
      var filterVal = treeNode[treeNodeFilterProp];
      if (typeof filterVal === "string") {
        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;
      }
      return false;
    },
    renderNotFound: function renderNotFound() {
      var h = this.$createElement;
      var _$props4 = this.$props, prefixCls2 = _$props4.prefixCls, notFoundContent = _$props4.notFoundContent;
      return h(
        "span",
        { "class": prefixCls2 + "-not-found" },
        [notFoundContent]
      );
    }
  },
  render: function render219() {
    var h = arguments[0];
    var _$data = this.$data, keyList = _$data._keyList, expandedKeyList = _$data._expandedKeyList, loadedKeys = _$data._loadedKeys;
    var _$props5 = this.$props, prefixCls2 = _$props5.prefixCls, treeNodes = _$props5.treeNodes, filteredTreeNodes = _$props5.filteredTreeNodes, treeIcon = _$props5.treeIcon, treeLine = _$props5.treeLine, treeCheckable = _$props5.treeCheckable, treeCheckStrictly = _$props5.treeCheckStrictly, multiple = _$props5.multiple, ariaId2 = _$props5.ariaId, renderSearch = _$props5.renderSearch, switcherIcon = _$props5.switcherIcon, searchHalfCheckedKeys = _$props5.searchHalfCheckedKeys;
    var _vcTreeSelect = this.vcTreeSelect, onPopupKeyDown = _vcTreeSelect.onPopupKeyDown, onTreeNodeSelect2 = _vcTreeSelect.onTreeNodeSelect, onTreeNodeCheck2 = _vcTreeSelect.onTreeNodeCheck;
    var loadData = this.getLoadData();
    var treeProps = {};
    if (treeCheckable) {
      treeProps.checkedKeys = keyList;
    } else {
      treeProps.selectedKeys = keyList;
    }
    var $notFound = void 0;
    var $treeNodes = void 0;
    if (filteredTreeNodes) {
      if (filteredTreeNodes.length) {
        treeProps.checkStrictly = true;
        $treeNodes = filteredTreeNodes;
        if (treeCheckable && !treeCheckStrictly) {
          treeProps.checkedKeys = {
            checked: keyList,
            halfChecked: searchHalfCheckedKeys
          };
        }
      } else {
        $notFound = this.renderNotFound();
      }
    } else if (!treeNodes || !treeNodes.length) {
      $notFound = this.renderNotFound();
    } else {
      $treeNodes = treeNodes;
    }
    var $tree = void 0;
    if ($notFound) {
      $tree = $notFound;
    } else {
      var treeAllProps = {
        props: _default$6({
          prefixCls: prefixCls2 + "-tree",
          showIcon: treeIcon,
          showLine: treeLine,
          selectable: !treeCheckable,
          checkable: treeCheckable,
          checkStrictly: treeCheckStrictly,
          multiple,
          loadData,
          loadedKeys,
          expandedKeys: expandedKeyList,
          filterTreeNode: this.filterTreeNode,
          switcherIcon
        }, treeProps, {
          __propsSymbol__: Symbol(),
          children: $treeNodes
        }),
        on: {
          select: onTreeNodeSelect2,
          check: onTreeNodeCheck2,
          expand: this.onTreeExpand,
          load: this.onLoad
        },
        directives: [{
          name: "ant-ref",
          value: this.treeRef
        }]
      };
      $tree = h(vcTree.Tree, treeAllProps);
    }
    return h(
      "div",
      {
        attrs: { role: "listbox", id: ariaId2, tabIndex: -1 },
        on: {
          "keydown": onPopupKeyDown
        }
      },
      [renderSearch ? renderSearch() : null, $tree]
    );
  }
};
var BasePopup$1 = BasePopup;
var SinglePopup = {
  name: "SinglePopup",
  props: _default$6({}, BasePopup$1.props, SearchInput$1.props, {
    searchValue: PropTypes.string,
    showSearch: PropTypes.bool,
    dropdownPrefixCls: PropTypes.string,
    disabled: PropTypes.bool,
    searchPlaceholder: PropTypes.string
  }),
  created: function created20() {
    this.inputRef = createRef();
    this.searchRef = createRef();
    this.popupRef = createRef();
  },
  methods: {
    onPlaceholderClick: function onPlaceholderClick3() {
      this.inputRef.current.focus();
    },
    getTree: function getTree2() {
      return this.popupRef.current && this.popupRef.current.getTree();
    },
    _renderPlaceholder: function _renderPlaceholder2() {
      var h = this.$createElement;
      var _$props = this.$props, searchPlaceholder = _$props.searchPlaceholder, searchValue2 = _$props.searchValue, prefixCls2 = _$props.prefixCls;
      if (!searchPlaceholder) {
        return null;
      }
      return h(
        "span",
        {
          style: {
            display: searchValue2 ? "none" : "block"
          },
          on: {
            "click": this.onPlaceholderClick
          },
          "class": prefixCls2 + "-search__field__placeholder"
        },
        [searchPlaceholder]
      );
    },
    _renderSearch: function _renderSearch() {
      var h = this.$createElement;
      var _$props2 = this.$props, showSearch = _$props2.showSearch, dropdownPrefixCls = _$props2.dropdownPrefixCls;
      if (!showSearch) {
        return null;
      }
      return h(
        "span",
        _mergeJSXProps([{
          "class": dropdownPrefixCls + "-search"
        }, {
          directives: [{
            name: "ant-ref",
            value: this.searchRef
          }]
        }]),
        [h(SearchInput$1, {
          props: _default$6({}, this.$props, { renderPlaceholder: this._renderPlaceholder }),
          on: getListeners(this),
          directives: [{
            name: "ant-ref",
            value: this.inputRef
          }]
        })]
      );
    }
  },
  render: function render220() {
    var h = arguments[0];
    return h(BasePopup$1, {
      props: _default$6({}, this.$props, { renderSearch: this._renderSearch, __propsSymbol__: Symbol() }),
      on: getListeners(this),
      directives: [{
        name: "ant-ref",
        value: this.popupRef
      }]
    });
  }
};
var SinglePopup$1 = SinglePopup;
var SelectNode = {
  name: "SelectNode",
  functional: true,
  isTreeNode: true,
  props: vcTree.TreeNode.props,
  render: function render221(h, context) {
    var props2 = context.props, slots = context.slots, listeners = context.listeners, data109 = context.data, scopedSlots = context.scopedSlots;
    var $slots = slots() || {};
    var children = $slots["default"];
    var slotsKey = Object.keys($slots);
    var scopedSlotsTemp = {};
    slotsKey.forEach(function(name) {
      scopedSlotsTemp[name] = function() {
        return $slots[name];
      };
    });
    var treeNodeProps = _default$6({}, data109, {
      on: _default$6({}, listeners, data109.nativeOn),
      props: props2,
      scopedSlots: _default$6({}, scopedSlotsTemp, scopedSlots)
    });
    return h(
      vcTree.TreeNode,
      treeNodeProps,
      [children]
    );
  }
};
function getWatch$1() {
  var keys3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var watch = {};
  keys3.forEach(function(k) {
    watch[k] = function() {
      this.needSyncKeys[k] = true;
    };
  });
  return watch;
}
var Select = {
  name: "Select",
  mixins: [BaseMixin],
  props: initDefaultProps({
    prefixCls: PropTypes.string,
    prefixAria: PropTypes.string,
    multiple: PropTypes.bool,
    showArrow: PropTypes.bool,
    open: PropTypes.bool,
    value: PropTypes.any,
    autoFocus: PropTypes.bool,
    defaultOpen: PropTypes.bool,
    defaultValue: PropTypes.any,
    showSearch: PropTypes.bool,
    placeholder: PropTypes.any,
    inputValue: PropTypes.string,
    searchValue: PropTypes.string,
    autoClearSearchValue: PropTypes.bool,
    searchPlaceholder: PropTypes.any,
    disabled: PropTypes.bool,
    children: PropTypes.any,
    labelInValue: PropTypes.bool,
    maxTagCount: PropTypes.number,
    maxTagPlaceholder: PropTypes.oneOfType([PropTypes.any, PropTypes.func]),
    maxTagTextLength: PropTypes.number,
    showCheckedStrategy: PropTypes.oneOf([SHOW_ALL, SHOW_PARENT, SHOW_CHILD]),
    dropdownClassName: PropTypes.string,
    dropdownStyle: PropTypes.object,
    dropdownVisibleChange: PropTypes.func,
    dropdownMatchSelectWidth: PropTypes.bool,
    treeData: PropTypes.array,
    treeDataSimpleMode: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
    treeNodeFilterProp: PropTypes.string,
    treeNodeLabelProp: PropTypes.string,
    treeCheckable: PropTypes.oneOfType([PropTypes.any, PropTypes.object, PropTypes.bool]),
    treeCheckStrictly: PropTypes.bool,
    treeIcon: PropTypes.bool,
    treeLine: PropTypes.bool,
    treeDefaultExpandAll: PropTypes.bool,
    treeDefaultExpandedKeys: PropTypes.array,
    treeExpandedKeys: PropTypes.array,
    loadData: PropTypes.func,
    filterTreeNode: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),
    notFoundContent: PropTypes.any,
    getPopupContainer: PropTypes.func,
    allowClear: PropTypes.bool,
    transitionName: PropTypes.string,
    animation: PropTypes.string,
    choiceTransitionName: PropTypes.string,
    inputIcon: PropTypes.any,
    clearIcon: PropTypes.any,
    removeIcon: PropTypes.any,
    switcherIcon: PropTypes.any,
    __propsSymbol__: PropTypes.any
  }, {
    prefixCls: "rc-tree-select",
    prefixAria: "rc-tree-select",
    showSearch: true,
    autoClearSearchValue: true,
    showCheckedStrategy: SHOW_CHILD,
    treeNodeFilterProp: "value",
    treeNodeLabelProp: "title",
    treeIcon: false,
    notFoundContent: "Not Found",
    dropdownStyle: {},
    dropdownVisibleChange: function dropdownVisibleChange() {
      return true;
    }
  }),
  data: function data101() {
    warning$3(this.$props.__propsSymbol__);
    var _$props = this.$props, prefixAria = _$props.prefixAria, defaultOpen = _$props.defaultOpen, open6 = _$props.open;
    this.needSyncKeys = {};
    this.selectorRef = createRef();
    this.selectTriggerRef = createRef();
    this.ariaId = generateAriaId(prefixAria + "-list");
    var state = {
      _open: open6 || defaultOpen,
      _valueList: [],
      _searchHalfCheckedKeys: [],
      _missValueList: [],
      _selectorValueList: [],
      _valueEntities: {},
      _posEntities: /* @__PURE__ */ new Map(),
      _keyEntities: /* @__PURE__ */ new Map(),
      _searchValue: "",
      _prevProps: {},
      _init: true,
      _focused: void 0,
      _treeNodes: void 0,
      _filteredTreeNodes: void 0
    };
    var newState = this.getDerivedState(this.$props, state);
    return _default$6({}, state, newState);
  },
  provide: function provide28() {
    return {
      vcTreeSelect: {
        onSelectorFocus: this.onSelectorFocus,
        onSelectorBlur: this.onSelectorBlur,
        onSelectorKeyDown: this.onComponentKeyDown,
        onSelectorClear: this.onSelectorClear,
        onMultipleSelectorRemove: this.onMultipleSelectorRemove,
        onTreeNodeSelect: this.onTreeNodeSelect,
        onTreeNodeCheck: this.onTreeNodeCheck,
        onPopupKeyDown: this.onComponentKeyDown,
        onSearchInputChange: this.onSearchInputChange,
        onSearchInputKeyDown: this.onSearchInputKeyDown
      }
    };
  },
  watch: _default$6({}, getWatch$1(["treeData", "defaultValue", "value"]), {
    __propsSymbol__: function __propsSymbol__5() {
      var state = this.getDerivedState(this.$props, this.$data);
      this.setState(state);
      this.needSyncKeys = {};
    },
    "$data._valueList": function $data_valueList() {
      var _this = this;
      this.$nextTick(function() {
        _this.forcePopupAlign();
      });
    },
    "$data._open": function $data_open(open6) {
      var _this2 = this;
      setTimeout(function() {
        var prefixCls2 = _this2.$props.prefixCls;
        var _$data = _this2.$data, selectorValueList = _$data._selectorValueList, valueEntities = _$data._valueEntities;
        var isMultiple3 = _this2.isMultiple();
        if (!isMultiple3 && selectorValueList.length && open6 && _this2.popup) {
          var value27 = selectorValueList[0].value;
          var _popup$getTree = _this2.popup.getTree(), domTreeNodes = _popup$getTree.domTreeNodes;
          var _ref = valueEntities[value27] || {}, key2 = _ref.key;
          var treeNode = domTreeNodes[key2];
          if (treeNode) {
            var domNode = treeNode.$el;
            raf$2(function() {
              var popupNode = _this2.popup.$el;
              var triggerContainer = findPopupContainer(popupNode, prefixCls2 + "-dropdown");
              var searchNode = _this2.popup.searchRef.current;
              if (domNode && triggerContainer && searchNode) {
                scrollIntoView(domNode, triggerContainer, {
                  onlyScrollIfNeeded: true,
                  offsetTop: searchNode.offsetHeight
                });
              }
            });
          }
        }
      });
    }
  }),
  mounted: function mounted63() {
    var _this3 = this;
    this.$nextTick(function() {
      var _$props2 = _this3.$props, autoFocus = _$props2.autoFocus, disabled = _$props2.disabled;
      if (autoFocus && !disabled) {
        _this3.focus();
      }
    });
  },
  methods: {
    getDerivedState: function getDerivedState4(nextProps, prevState) {
      var h = this.$createElement;
      var _prevState$_prevProps = prevState._prevProps, prevProps = _prevState$_prevProps === void 0 ? {} : _prevState$_prevProps;
      var treeCheckable = nextProps.treeCheckable, treeCheckStrictly = nextProps.treeCheckStrictly, filterTreeNode2 = nextProps.filterTreeNode, treeNodeFilterProp = nextProps.treeNodeFilterProp, treeDataSimpleMode = nextProps.treeDataSimpleMode;
      var newState = {
        _prevProps: _default$6({}, nextProps),
        _init: false
      };
      var self2 = this;
      function processState(propName, updater) {
        if (prevProps[propName] !== nextProps[propName] || self2.needSyncKeys[propName]) {
          updater(nextProps[propName], prevProps[propName]);
          return true;
        }
        return false;
      }
      var valueRefresh = false;
      processState("open", function(propValue) {
        newState._open = propValue;
      });
      var treeNodes = void 0;
      var treeDataChanged = false;
      var treeDataModeChanged = false;
      processState("treeData", function(propValue) {
        treeNodes = convertDataToTree(h, propValue);
        treeDataChanged = true;
      });
      processState("treeDataSimpleMode", function(propValue, prevValue) {
        if (!propValue)
          return;
        var prev3 = !prevValue || prevValue === true ? {} : prevValue;
        if (!shallowEqual2(propValue, prev3)) {
          treeDataModeChanged = true;
        }
      });
      if (treeDataSimpleMode && (treeDataChanged || treeDataModeChanged)) {
        var simpleMapper = _default$6({
          id: "id",
          pId: "pId",
          rootPId: null
        }, treeDataSimpleMode !== true ? treeDataSimpleMode : {});
        treeNodes = convertDataToTree(h, parseSimpleTreeData(nextProps.treeData, simpleMapper));
      }
      if (!nextProps.treeData) {
        treeNodes = filterEmpty(this.$slots["default"]);
      }
      if (treeNodes) {
        var entitiesMap = convertTreeToEntities(treeNodes);
        newState._treeNodes = treeNodes;
        newState._posEntities = entitiesMap.posEntities;
        newState._valueEntities = entitiesMap.valueEntities;
        newState._keyEntities = entitiesMap.keyEntities;
        valueRefresh = true;
      }
      if (prevState._init) {
        processState("defaultValue", function(propValue) {
          newState._valueList = formatInternalValue(propValue, nextProps);
          valueRefresh = true;
        });
      }
      processState("value", function(propValue) {
        newState._valueList = formatInternalValue(propValue, nextProps);
        valueRefresh = true;
      });
      if (valueRefresh) {
        var missValueList = [];
        var filteredValueList = [];
        var keyList = [];
        var latestValueList = newState._valueList;
        if (!latestValueList) {
          latestValueList = [].concat(_default$5(prevState._valueList), _default$5(prevState._missValueList));
        }
        var valueLabels = {};
        latestValueList.forEach(function(wrapperValue) {
          var value27 = wrapperValue.value, label = wrapperValue.label;
          var entity = (newState._valueEntities || prevState._valueEntities)[value27];
          valueLabels[value27] = label;
          if (entity) {
            keyList.push(entity.key);
            filteredValueList.push(wrapperValue);
            return;
          }
          missValueList.push(wrapperValue);
        });
        if (treeCheckable && !treeCheckStrictly) {
          var _conductCheck = conductCheck(keyList, true, newState._keyEntities || prevState._keyEntities), checkedKeys = _conductCheck.checkedKeys;
          newState._valueList = checkedKeys.map(function(key2) {
            var val = (newState._keyEntities || prevState._keyEntities).get(key2).value;
            var wrappedValue = {
              value: val
            };
            if (valueLabels[val] !== void 0) {
              wrappedValue.label = valueLabels[val];
            }
            return wrappedValue;
          });
        } else {
          newState._valueList = filteredValueList;
        }
        newState._missValueList = missValueList;
        newState._selectorValueList = formatSelectorValue(newState._valueList, nextProps, newState._valueEntities || prevState._valueEntities);
      }
      processState("inputValue", function(propValue) {
        if (propValue !== null) {
          newState._searchValue = propValue;
        }
      });
      processState("searchValue", function(propValue) {
        newState._searchValue = propValue;
      });
      if (newState._searchValue !== void 0 || prevState._searchValue && treeNodes) {
        var searchValue2 = newState._searchValue !== void 0 ? newState._searchValue : prevState._searchValue;
        var upperSearchValue = String(searchValue2).toUpperCase();
        var filterTreeNodeFn = filterTreeNode2;
        if (filterTreeNode2 === false) {
          filterTreeNodeFn = function filterTreeNodeFn2() {
            return true;
          };
        } else if (typeof filterTreeNodeFn !== "function") {
          filterTreeNodeFn = function filterTreeNodeFn2(_, node) {
            var nodeValue = String(getPropsData(node)[treeNodeFilterProp]).toUpperCase();
            return nodeValue.indexOf(upperSearchValue) !== -1;
          };
        }
        newState._filteredTreeNodes = getFilterTree(this.$createElement, newState._treeNodes || prevState._treeNodes, searchValue2, filterTreeNodeFn, newState._valueEntities || prevState._valueEntities, SelectNode);
      }
      if (valueRefresh && treeCheckable && !treeCheckStrictly && (newState._searchValue || prevState._searchValue)) {
        newState._searchHalfCheckedKeys = getHalfCheckedKeys(newState._valueList, newState._valueEntities || prevState._valueEntities);
      }
      processState("showCheckedStrategy", function() {
        newState._selectorValueList = newState._selectorValueList || formatSelectorValue(newState._valueList || prevState._valueList, nextProps, newState._valueEntities || prevState._valueEntities);
      });
      return newState;
    },
    onSelectorFocus: function onSelectorFocus() {
      this.setState({ _focused: true });
    },
    onSelectorBlur: function onSelectorBlur() {
      this.setState({ _focused: false });
    },
    onComponentKeyDown: function onComponentKeyDown(event) {
      var open6 = this.$data._open;
      var keyCode = event.keyCode;
      if (!open6) {
        if ([KeyCode$2.ENTER, KeyCode$2.DOWN].indexOf(keyCode) !== -1) {
          this.setOpenState(true);
        }
      } else if (KeyCode$2.ESC === keyCode) {
        this.setOpenState(false);
      } else if ([KeyCode$2.UP, KeyCode$2.DOWN, KeyCode$2.LEFT, KeyCode$2.RIGHT].indexOf(keyCode) !== -1) {
        event.stopPropagation();
      }
    },
    onDeselect: function onDeselect3(wrappedValue, node, nodeEventInfo) {
      this.__emit("deselect", wrappedValue, node, nodeEventInfo);
    },
    onSelectorClear: function onSelectorClear(event) {
      var disabled = this.$props.disabled;
      if (disabled)
        return;
      this.triggerChange([], []);
      if (!this.isSearchValueControlled()) {
        this.setUncontrolledState({
          _searchValue: "",
          _filteredTreeNodes: null
        });
      }
      event.stopPropagation();
    },
    onMultipleSelectorRemove: function onMultipleSelectorRemove(event, removeValue) {
      event.stopPropagation();
      var _$data2 = this.$data, valueList = _$data2._valueList, missValueList = _$data2._missValueList, valueEntities = _$data2._valueEntities;
      var _$props3 = this.$props, treeCheckable = _$props3.treeCheckable, treeCheckStrictly = _$props3.treeCheckStrictly, treeNodeLabelProp = _$props3.treeNodeLabelProp, disabled = _$props3.disabled;
      if (disabled)
        return;
      var triggerEntity = valueEntities[removeValue];
      var newValueList = valueList;
      if (triggerEntity) {
        if (treeCheckable && !treeCheckStrictly) {
          newValueList = valueList.filter(function(_ref2) {
            var value27 = _ref2.value;
            var entity = valueEntities[value27];
            return !isPosRelated(entity.pos, triggerEntity.pos);
          });
        } else {
          newValueList = valueList.filter(function(_ref3) {
            var value27 = _ref3.value;
            return value27 !== removeValue;
          });
        }
      }
      var triggerNode = triggerEntity ? triggerEntity.node : null;
      var extraInfo = {
        triggerValue: removeValue,
        triggerNode
      };
      var deselectInfo = {
        node: triggerNode
      };
      if (treeCheckable) {
        var filteredEntityList = newValueList.map(function(_ref4) {
          var value27 = _ref4.value;
          return valueEntities[value27];
        });
        deselectInfo.event = "check";
        deselectInfo.checked = false;
        deselectInfo.checkedNodes = filteredEntityList.map(function(_ref5) {
          var node = _ref5.node;
          return node;
        });
        deselectInfo.checkedNodesPositions = filteredEntityList.map(function(_ref6) {
          var node = _ref6.node, pos = _ref6.pos;
          return {
            node,
            pos
          };
        });
        if (treeCheckStrictly) {
          extraInfo.allCheckedNodes = deselectInfo.checkedNodes;
        } else {
          extraInfo.allCheckedNodes = flatToHierarchy(filteredEntityList).map(function(_ref7) {
            var node = _ref7.node;
            return node;
          });
        }
      } else {
        deselectInfo.event = "select";
        deselectInfo.selected = false;
        deselectInfo.selectedNodes = newValueList.map(function(_ref8) {
          var value27 = _ref8.value;
          return (valueEntities[value27] || {}).node;
        });
      }
      var newMissValueList = missValueList.filter(function(_ref9) {
        var value27 = _ref9.value;
        return value27 !== removeValue;
      });
      var wrappedValue = void 0;
      if (this.isLabelInValue()) {
        wrappedValue = {
          label: triggerNode ? getPropsData(triggerNode)[treeNodeLabelProp] : null,
          value: removeValue
        };
      } else {
        wrappedValue = removeValue;
      }
      this.onDeselect(wrappedValue, triggerNode, deselectInfo);
      this.triggerChange(newMissValueList, newValueList, extraInfo);
    },
    onValueTrigger: function onValueTrigger(isAdd, nodeList, nodeEventInfo, nodeExtraInfo) {
      var node = nodeEventInfo.node;
      var value27 = node.$props.value;
      var _$data3 = this.$data, missValueList = _$data3._missValueList, valueEntities = _$data3._valueEntities, keyEntities = _$data3._keyEntities, searchValue2 = _$data3._searchValue;
      var _$props4 = this.$props, disabled = _$props4.disabled, inputValue = _$props4.inputValue, treeNodeLabelProp = _$props4.treeNodeLabelProp, multiple = _$props4.multiple, treeCheckable = _$props4.treeCheckable, treeCheckStrictly = _$props4.treeCheckStrictly, autoClearSearchValue = _$props4.autoClearSearchValue;
      var label = node.$props[treeNodeLabelProp];
      if (disabled)
        return;
      var wrappedValue = void 0;
      if (this.isLabelInValue()) {
        wrappedValue = {
          value: value27,
          label
        };
      } else {
        wrappedValue = value27;
      }
      if (isAdd) {
        this.__emit("select", wrappedValue, node, nodeEventInfo);
      } else {
        this.__emit("deselect", wrappedValue, node, nodeEventInfo);
      }
      var newValueList = nodeList.map(function(node2) {
        var props2 = getPropsData(node2);
        return {
          value: props2.value,
          label: props2[treeNodeLabelProp]
        };
      });
      if (treeCheckable && !treeCheckStrictly) {
        var keyList = newValueList.map(function(_ref10) {
          var val = _ref10.value;
          return valueEntities[val].key;
        });
        if (isAdd) {
          keyList = conductCheck(keyList, true, keyEntities).checkedKeys;
        } else {
          keyList = conductCheck([valueEntities[value27].key], false, keyEntities, {
            checkedKeys: keyList
          }).checkedKeys;
        }
        newValueList = keyList.map(function(key2) {
          var props2 = getPropsData(keyEntities.get(key2).node);
          return {
            value: props2.value,
            label: props2[treeNodeLabelProp]
          };
        });
      }
      if (autoClearSearchValue || inputValue === null) {
        if (!this.isSearchValueControlled() && (multiple || treeCheckable)) {
          this.setUncontrolledState({
            _searchValue: "",
            _filteredTreeNodes: null
          });
        }
        if (searchValue2 && searchValue2.length) {
          this.__emit("update:searchValue", "");
          this.__emit("search", "");
        }
      }
      var extraInfo = _default$6({}, nodeExtraInfo, {
        triggerValue: value27,
        triggerNode: node
      });
      this.triggerChange(missValueList, newValueList, extraInfo);
    },
    onTreeNodeSelect: function onTreeNodeSelect(_, nodeEventInfo) {
      var _$data4 = this.$data, valueList = _$data4._valueList, valueEntities = _$data4._valueEntities;
      var _$props5 = this.$props, treeCheckable = _$props5.treeCheckable, multiple = _$props5.multiple;
      if (treeCheckable)
        return;
      if (!multiple) {
        this.setOpenState(false);
      }
      var isAdd = nodeEventInfo.selected;
      var selectedValue6 = nodeEventInfo.node.$props.value;
      var newValueList = void 0;
      if (!multiple) {
        newValueList = [{ value: selectedValue6 }];
      } else {
        newValueList = valueList.filter(function(_ref11) {
          var value27 = _ref11.value;
          return value27 !== selectedValue6;
        });
        if (isAdd) {
          newValueList.push({ value: selectedValue6 });
        }
      }
      var selectedNodes = newValueList.map(function(_ref12) {
        var value27 = _ref12.value;
        return valueEntities[value27];
      }).filter(function(entity) {
        return entity;
      }).map(function(_ref13) {
        var node = _ref13.node;
        return node;
      });
      this.onValueTrigger(isAdd, selectedNodes, nodeEventInfo, { selected: isAdd });
    },
    onTreeNodeCheck: function onTreeNodeCheck(_, nodeEventInfo) {
      var _$data5 = this.$data, searchValue2 = _$data5._searchValue, keyEntities = _$data5._keyEntities, valueEntities = _$data5._valueEntities, valueList = _$data5._valueList;
      var treeCheckStrictly = this.$props.treeCheckStrictly;
      var checkedNodes = nodeEventInfo.checkedNodes, checkedNodesPositions = nodeEventInfo.checkedNodesPositions;
      var isAdd = nodeEventInfo.checked;
      var extraInfo = {
        checked: isAdd
      };
      var checkedNodeList = checkedNodes;
      if (searchValue2) {
        var oriKeyList = valueList.map(function(_ref14) {
          var value27 = _ref14.value;
          return valueEntities[value27];
        }).filter(function(entity) {
          return entity;
        }).map(function(_ref15) {
          var key2 = _ref15.key;
          return key2;
        });
        var keyList = void 0;
        if (isAdd) {
          keyList = Array.from(new Set([].concat(_default$5(oriKeyList), _default$5(checkedNodeList.map(function(node) {
            var _getPropsData = getPropsData(node), value27 = _getPropsData.value;
            return valueEntities[value27].key;
          })))));
        } else {
          keyList = conductCheck([getPropsData(nodeEventInfo.node).eventKey], false, keyEntities, {
            checkedKeys: oriKeyList
          }).checkedKeys;
        }
        checkedNodeList = keyList.map(function(key2) {
          return keyEntities.get(key2).node;
        });
        extraInfo.allCheckedNodes = keyList.map(function(key2) {
          return cleanEntity(keyEntities.get(key2));
        });
      } else if (treeCheckStrictly) {
        extraInfo.allCheckedNodes = nodeEventInfo.checkedNodes;
      } else {
        extraInfo.allCheckedNodes = flatToHierarchy(checkedNodesPositions);
      }
      this.onValueTrigger(isAdd, checkedNodeList, nodeEventInfo, extraInfo);
    },
    onDropdownVisibleChange: function onDropdownVisibleChange2(open6) {
      var _$props6 = this.$props, multiple = _$props6.multiple, treeCheckable = _$props6.treeCheckable;
      var _searchValue = this.$data._searchValue;
      if (open6 && !multiple && !treeCheckable && _searchValue) {
        this.setUncontrolledState({
          _searchValue: "",
          _filteredTreeNodes: null
        });
      }
      this.setOpenState(open6, true);
    },
    onSearchInputChange: function onSearchInputChange(event) {
      var value27 = event.target.value;
      var _$data6 = this.$data, treeNodes = _$data6._treeNodes, valueEntities = _$data6._valueEntities;
      var _$props7 = this.$props, filterTreeNode2 = _$props7.filterTreeNode, treeNodeFilterProp = _$props7.treeNodeFilterProp;
      this.__emit("update:searchValue", value27);
      this.__emit("search", value27);
      var isSet2 = false;
      if (!this.isSearchValueControlled()) {
        isSet2 = this.setUncontrolledState({
          _searchValue: value27
        });
        this.setOpenState(true);
      }
      if (isSet2) {
        var upperSearchValue = String(value27).toUpperCase();
        var filterTreeNodeFn = filterTreeNode2;
        if (filterTreeNode2 === false) {
          filterTreeNodeFn = function filterTreeNodeFn2() {
            return true;
          };
        } else if (!filterTreeNodeFn) {
          filterTreeNodeFn = function filterTreeNodeFn2(_, node) {
            var nodeValue = String(getPropsData(node)[treeNodeFilterProp]).toUpperCase();
            return nodeValue.indexOf(upperSearchValue) !== -1;
          };
        }
        this.setState({
          _filteredTreeNodes: getFilterTree(this.$createElement, treeNodes, value27, filterTreeNodeFn, valueEntities, SelectNode)
        });
      }
    },
    onSearchInputKeyDown: function onSearchInputKeyDown(event) {
      var _$data7 = this.$data, searchValue2 = _$data7._searchValue, valueList = _$data7._valueList;
      var keyCode = event.keyCode;
      if (KeyCode$2.BACKSPACE === keyCode && this.isMultiple() && !searchValue2 && valueList.length) {
        var lastValue = valueList[valueList.length - 1].value;
        this.onMultipleSelectorRemove(event, lastValue);
      }
    },
    onChoiceAnimationLeave: function onChoiceAnimationLeave3() {
      var _this4 = this;
      raf$2(function() {
        _this4.forcePopupAlign();
      });
    },
    setPopupRef: function setPopupRef(popup) {
      this.popup = popup;
    },
    setUncontrolledState: function setUncontrolledState3(state) {
      var needSync = false;
      var newState = {};
      var props2 = getOptionProps(this);
      Object.keys(state).forEach(function(name) {
        if (name.slice(1) in props2)
          return;
        needSync = true;
        newState[name] = state[name];
      });
      if (needSync) {
        this.setState(newState);
      }
      return needSync;
    },
    setOpenState: function setOpenState2(open6) {
      var byTrigger = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var dropdownVisibleChange2 = this.$props.dropdownVisibleChange;
      if (dropdownVisibleChange2 && dropdownVisibleChange2(open6, { documentClickClose: !open6 && byTrigger }) === false) {
        return;
      }
      this.setUncontrolledState({ _open: open6 });
    },
    isMultiple: function isMultiple2() {
      var _$props8 = this.$props, multiple = _$props8.multiple, treeCheckable = _$props8.treeCheckable;
      return !!(multiple || treeCheckable);
    },
    isLabelInValue: function isLabelInValue$1() {
      return isLabelInValue(this.$props);
    },
    isSearchValueControlled: function isSearchValueControlled() {
      var props2 = getOptionProps(this);
      var inputValue = props2.inputValue;
      if ("searchValue" in props2)
        return true;
      return "inputValue" in props2 && inputValue !== null;
    },
    forcePopupAlign: function forcePopupAlign4() {
      var $trigger = this.selectTriggerRef.current;
      if ($trigger) {
        $trigger.forcePopupAlign();
      }
    },
    delayForcePopupAlign: function delayForcePopupAlign() {
      var _this5 = this;
      raf$2(function() {
        raf$2(_this5.forcePopupAlign);
      });
    },
    triggerChange: function triggerChange2(missValueList, valueList) {
      var extraInfo = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var _$data8 = this.$data, valueEntities = _$data8._valueEntities, searchValue2 = _$data8._searchValue, prevSelectorValueList = _$data8._selectorValueList;
      var props2 = getOptionProps(this);
      var disabled = props2.disabled, treeCheckable = props2.treeCheckable, treeCheckStrictly = props2.treeCheckStrictly;
      if (disabled)
        return;
      var extra = _default$6({
        preValue: prevSelectorValueList.map(function(_ref16) {
          var label = _ref16.label, value27 = _ref16.value;
          return { label, value: value27 };
        })
      }, extraInfo);
      var selectorValueList = formatSelectorValue(valueList, props2, valueEntities);
      if (!("value" in props2)) {
        var newState = {
          _missValueList: missValueList,
          _valueList: valueList,
          _selectorValueList: selectorValueList
        };
        if (searchValue2 && treeCheckable && !treeCheckStrictly) {
          newState._searchHalfCheckedKeys = getHalfCheckedKeys(valueList, valueEntities);
        }
        this.setState(newState);
      }
      if (getListeners(this).change) {
        var connectValueList = void 0;
        if (this.isMultiple()) {
          connectValueList = [].concat(_default$5(missValueList), _default$5(selectorValueList));
        } else {
          connectValueList = selectorValueList.slice(0, 1);
        }
        var labelList = null;
        var returnValue = void 0;
        if (this.isLabelInValue()) {
          returnValue = connectValueList.map(function(_ref17) {
            var label = _ref17.label, value27 = _ref17.value;
            return { label, value: value27 };
          });
        } else {
          labelList = [];
          returnValue = connectValueList.map(function(_ref18) {
            var label = _ref18.label, value27 = _ref18.value;
            labelList.push(label);
            return value27;
          });
        }
        if (!this.isMultiple()) {
          returnValue = returnValue[0];
        }
        this.__emit("change", returnValue, labelList, extra);
      }
    },
    focus: function focus33() {
      this.selectorRef.current.focus();
    },
    blur: function blur30() {
      this.selectorRef.current.blur();
    }
  },
  render: function render222() {
    var h = arguments[0];
    var _$data9 = this.$data, valueList = _$data9._valueList, missValueList = _$data9._missValueList, selectorValueList = _$data9._selectorValueList, searchHalfCheckedKeys = _$data9._searchHalfCheckedKeys, valueEntities = _$data9._valueEntities, keyEntities = _$data9._keyEntities, searchValue2 = _$data9._searchValue, open6 = _$data9._open, focused = _$data9._focused, treeNodes = _$data9._treeNodes, filteredTreeNodes = _$data9._filteredTreeNodes;
    var props2 = getOptionProps(this);
    var prefixCls2 = props2.prefixCls, treeExpandedKeys = props2.treeExpandedKeys;
    var isMultiple3 = this.isMultiple();
    var passProps = {
      props: _default$6({}, props2, {
        isMultiple: isMultiple3,
        valueList,
        searchHalfCheckedKeys,
        selectorValueList: [].concat(_default$5(missValueList), _default$5(selectorValueList)),
        valueEntities,
        keyEntities,
        searchValue: searchValue2,
        upperSearchValue: (searchValue2 || "").toUpperCase(),
        open: open6,
        focused,
        dropdownPrefixCls: prefixCls2 + "-dropdown",
        ariaId: this.ariaId
      }),
      on: _default$6({}, getListeners(this), {
        choiceAnimationLeave: this.onChoiceAnimationLeave
      }),
      scopedSlots: this.$scopedSlots
    };
    var popupProps = mergeProps(passProps, {
      props: {
        treeNodes,
        filteredTreeNodes,
        treeExpandedKeys,
        __propsSymbol__: Symbol()
      },
      on: {
        treeExpanded: this.delayForcePopupAlign
      },
      directives: [{
        name: "ant-ref",
        value: this.setPopupRef
      }]
    });
    var Popup2 = isMultiple3 ? BasePopup$1 : SinglePopup$1;
    var $popup = h(Popup2, popupProps);
    var Selector2 = isMultiple3 ? MultipleSelector$1 : SingleSelector$1;
    var $selector = h(Selector2, _mergeJSXProps([passProps, {
      directives: [{
        name: "ant-ref",
        value: this.selectorRef
      }]
    }]));
    var selectTriggerProps = mergeProps(passProps, {
      props: {
        popupElement: $popup,
        dropdownVisibleChange: this.onDropdownVisibleChange
      },
      directives: [{
        name: "ant-ref",
        value: this.selectTriggerRef
      }]
    });
    return h(
      SelectTrigger$1,
      selectTriggerProps,
      [$selector]
    );
  }
};
Select.TreeNode = SelectNode;
Select.SHOW_ALL = SHOW_ALL;
Select.SHOW_PARENT = SHOW_PARENT;
Select.SHOW_CHILD = SHOW_CHILD;
Select.name = "TreeSelect";
var Select$1 = Select;
var TreeNode = SelectNode;
Vue.use(_default$3, { name: "ant-ref" });
PropTypes.shape({
  key: PropTypes.string,
  value: PropTypes.string,
  label: PropTypes.any,
  scopedSlots: PropTypes.object,
  children: PropTypes.array
}).loose;
var TreeSelectProps = function TreeSelectProps2() {
  return _default$6({}, AbstractSelectProps(), {
    autoFocus: PropTypes.bool,
    dropdownStyle: PropTypes.object,
    filterTreeNode: PropTypes.oneOfType([Function, Boolean]),
    getPopupContainer: PropTypes.func,
    labelInValue: PropTypes.bool,
    loadData: PropTypes.func,
    maxTagCount: PropTypes.number,
    maxTagPlaceholder: PropTypes.any,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array, PropTypes.number]),
    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array, PropTypes.number]),
    multiple: PropTypes.bool,
    notFoundContent: PropTypes.any,
    searchPlaceholder: PropTypes.string,
    searchValue: PropTypes.string,
    showCheckedStrategy: PropTypes.oneOf(["SHOW_ALL", "SHOW_PARENT", "SHOW_CHILD"]),
    suffixIcon: PropTypes.any,
    treeCheckable: PropTypes.oneOfType([PropTypes.any, PropTypes.bool]),
    treeCheckStrictly: PropTypes.bool,
    treeData: PropTypes.arrayOf(Object),
    treeDataSimpleMode: PropTypes.oneOfType([Boolean, Object]),
    dropdownClassName: PropTypes.string,
    dropdownMatchSelectWidth: PropTypes.bool,
    treeDefaultExpandAll: PropTypes.bool,
    treeExpandedKeys: PropTypes.array,
    treeIcon: PropTypes.bool,
    treeDefaultExpandedKeys: PropTypes.array,
    treeNodeFilterProp: PropTypes.string,
    treeNodeLabelProp: PropTypes.string,
    replaceFields: PropTypes.object.def({})
  });
};
var TreeSelect = {
  TreeNode: _default$6({}, TreeNode, { name: "ATreeSelectNode" }),
  SHOW_ALL,
  SHOW_PARENT,
  SHOW_CHILD,
  name: "ATreeSelect",
  props: initDefaultProps(TreeSelectProps(), {
    transitionName: "slide-up",
    choiceTransitionName: "zoom",
    showSearch: false
  }),
  model: {
    prop: "value",
    event: "change"
  },
  inject: {
    configProvider: { "default": function _default117() {
      return ConfigConsumerProps;
    } }
  },
  created: function created21() {
    warning$4(this.multiple !== false || !this.treeCheckable, "TreeSelect", "`multiple` will alway be `true` when `treeCheckable` is true");
  },
  methods: {
    focus: function focus34() {
      this.$refs.vcTreeSelect.focus();
    },
    blur: function blur31() {
      this.$refs.vcTreeSelect.blur();
    },
    renderSwitcherIcon: function renderSwitcherIcon2(prefixCls2, _ref) {
      var isLeaf = _ref.isLeaf, loading2 = _ref.loading;
      var h = this.$createElement;
      if (loading2) {
        return h(Icon$1, {
          attrs: { type: "loading" },
          "class": prefixCls2 + "-switcher-loading-icon"
        });
      }
      if (isLeaf) {
        return null;
      }
      return h(Icon$1, {
        attrs: { type: "caret-down" },
        "class": prefixCls2 + "-switcher-icon"
      });
    },
    onChange: function onChange11() {
      this.$emit.apply(this, ["change"].concat(Array.prototype.slice.call(arguments)));
    },
    updateTreeData: function updateTreeData2(treeData) {
      var _this = this;
      var $scopedSlots = this.$scopedSlots;
      var defaultFields = {
        children: "children",
        title: "title",
        key: "key",
        label: "label",
        value: "value"
      };
      var replaceFields = _default$6({}, defaultFields, this.$props.replaceFields);
      return treeData.map(function(item) {
        var _item$scopedSlots = item.scopedSlots, scopedSlots = _item$scopedSlots === void 0 ? {} : _item$scopedSlots;
        var label = item[replaceFields.label];
        var title = item[replaceFields.title];
        var value27 = item[replaceFields.value];
        var key2 = item[replaceFields.key];
        var children = item[replaceFields.children];
        var newLabel = typeof label === "function" ? label(_this.$createElement) : label;
        var newTitle = typeof title === "function" ? title(_this.$createElement) : title;
        if (!newLabel && scopedSlots.label && $scopedSlots[scopedSlots.label]) {
          newLabel = $scopedSlots[scopedSlots.label](item);
        }
        if (!newTitle && scopedSlots.title && $scopedSlots[scopedSlots.title]) {
          newTitle = $scopedSlots[scopedSlots.title](item);
        }
        var treeNodeProps = _default$6({}, item, {
          title: newTitle || newLabel,
          value: value27,
          dataRef: item,
          key: key2
        });
        if (children) {
          return _default$6({}, treeNodeProps, { children: _this.updateTreeData(children) });
        }
        return treeNodeProps;
      });
    }
  },
  render: function render223(h) {
    var _cls, _this2 = this;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, size = props2.size, dropdownStyle = props2.dropdownStyle, dropdownClassName = props2.dropdownClassName, getPopupContainer = props2.getPopupContainer, restProps = _default$2(props2, ["prefixCls", "size", "dropdownStyle", "dropdownClassName", "getPopupContainer"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("select", customizePrefixCls);
    var renderEmpty4 = this.configProvider.renderEmpty;
    var notFoundContent = getComponentFromProp(this, "notFoundContent");
    var removeIcon = getComponentFromProp(this, "removeIcon");
    var clearIcon = getComponentFromProp(this, "clearIcon");
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var rest = omit$2(restProps, ["inputIcon", "removeIcon", "clearIcon", "switcherIcon", "suffixIcon"]);
    var suffixIcon = getComponentFromProp(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var treeData = props2.treeData;
    if (treeData) {
      treeData = this.updateTreeData(treeData);
    }
    var cls = (_cls = {}, _default$8(_cls, prefixCls2 + "-lg", size === "large"), _default$8(_cls, prefixCls2 + "-sm", size === "small"), _cls);
    var showSearch = restProps.showSearch;
    if (!("showSearch" in restProps)) {
      showSearch = !!(restProps.multiple || restProps.treeCheckable);
    }
    var checkable = getComponentFromProp(this, "treeCheckable");
    if (checkable) {
      checkable = h("span", { "class": prefixCls2 + "-tree-checkbox-inner" });
    }
    var inputIcon = suffixIcon || h(Icon$1, {
      attrs: { type: "down" },
      "class": prefixCls2 + "-arrow-icon"
    });
    var finalRemoveIcon = removeIcon || h(Icon$1, {
      attrs: { type: "close" },
      "class": prefixCls2 + "-remove-icon"
    });
    var finalClearIcon = clearIcon || h(Icon$1, {
      attrs: { type: "close-circle", theme: "filled" },
      "class": prefixCls2 + "-clear-icon"
    });
    var VcTreeSelectProps = {
      props: _default$6(_default$6({
        switcherIcon: function switcherIcon(nodeProps) {
          return _this2.renderSwitcherIcon(prefixCls2, nodeProps);
        },
        inputIcon,
        removeIcon: finalRemoveIcon,
        clearIcon: finalClearIcon
      }, rest, {
        showSearch,
        getPopupContainer: getPopupContainer || getContextPopupContainer,
        dropdownClassName: classNames(dropdownClassName, prefixCls2 + "-tree-dropdown"),
        prefixCls: prefixCls2,
        dropdownStyle: _default$6({ maxHeight: "100vh", overflow: "auto" }, dropdownStyle),
        treeCheckable: checkable,
        notFoundContent: notFoundContent || renderEmpty4(h, "Select"),
        __propsSymbol__: Symbol()
      }), treeData ? { treeData } : {}),
      "class": cls,
      on: _default$6({}, getListeners(this), { change: this.onChange }),
      ref: "vcTreeSelect",
      scopedSlots: this.$scopedSlots
    };
    return h(
      Select$1,
      VcTreeSelectProps,
      [filterEmpty(this.$slots["default"])]
    );
  }
};
TreeSelect.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(TreeSelect.name, TreeSelect);
  Vue2.component(TreeSelect.TreeNode.name, TreeSelect.TreeNode);
};
var TreeSelect$1 = TreeSelect;
var TimeLineItemProps = {
  prefixCls: PropTypes.string,
  color: PropTypes.string,
  dot: PropTypes.any,
  pending: PropTypes.bool,
  position: PropTypes.oneOf(["left", "right", ""]).def("")
};
var TimelineItem = {
  name: "ATimelineItem",
  props: initDefaultProps(TimeLineItemProps, {
    color: "blue",
    pending: false
  }),
  inject: {
    configProvider: { "default": function _default118() {
      return ConfigConsumerProps;
    } }
  },
  render: function render224() {
    var _classNames, _classNames2;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, _getOptionProps$color = _getOptionProps.color, color = _getOptionProps$color === void 0 ? "" : _getOptionProps$color, pending = _getOptionProps.pending;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("timeline", customizePrefixCls);
    var dot = getComponentFromProp(this, "dot");
    var itemClassName = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-item", true), _default$8(_classNames, prefixCls2 + "-item-pending", pending), _classNames));
    var dotClassName = classNames((_classNames2 = {}, _default$8(_classNames2, prefixCls2 + "-item-head", true), _default$8(_classNames2, prefixCls2 + "-item-head-custom", dot), _default$8(_classNames2, prefixCls2 + "-item-head-" + color, true), _classNames2));
    var liProps = {
      "class": itemClassName,
      on: getListeners(this)
    };
    return h(
      "li",
      liProps,
      [h("div", { "class": prefixCls2 + "-item-tail" }), h(
        "div",
        {
          "class": dotClassName,
          style: { borderColor: /blue|red|green|gray/.test(color) ? void 0 : color }
        },
        [dot]
      ), h(
        "div",
        { "class": prefixCls2 + "-item-content" },
        [this.$slots["default"]]
      )]
    );
  }
};
var TimelineProps = {
  prefixCls: PropTypes.string,
  pending: PropTypes.any,
  pendingDot: PropTypes.string,
  reverse: PropTypes.bool,
  mode: PropTypes.oneOf(["left", "alternate", "right", ""])
};
var Timeline = {
  name: "ATimeline",
  props: initDefaultProps(TimelineProps, {
    reverse: false,
    mode: ""
  }),
  inject: {
    configProvider: { "default": function _default119() {
      return ConfigConsumerProps;
    } }
  },
  render: function render225() {
    var _classNames;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, reverse = _getOptionProps.reverse, mode5 = _getOptionProps.mode, restProps = _default$2(_getOptionProps, ["prefixCls", "reverse", "mode"]);
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("timeline", customizePrefixCls);
    var pendingDot = getComponentFromProp(this, "pendingDot");
    var pending = getComponentFromProp(this, "pending");
    var pendingNode = typeof pending === "boolean" ? null : pending;
    var classString = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-pending", !!pending), _default$8(_classNames, prefixCls2 + "-reverse", !!reverse), _default$8(_classNames, prefixCls2 + "-" + mode5, !!mode5), _classNames));
    var children = filterEmpty(this.$slots["default"]);
    var pendingItem = pending ? h(
      TimelineItem,
      {
        attrs: { pending: !!pending }
      },
      [h(
        "template",
        { slot: "dot" },
        [pendingDot || h(Icon$1, {
          attrs: { type: "loading" }
        })]
      ), pendingNode]
    ) : null;
    var timeLineItems = reverse ? [pendingItem].concat(_default$5(children.reverse())) : [].concat(_default$5(children), [pendingItem]);
    var getPositionCls = function getPositionCls2(ele, idx) {
      var eleProps = getPropsData(ele);
      if (mode5 === "alternate") {
        if (eleProps.position === "right")
          return prefixCls2 + "-item-right";
        if (eleProps.position === "left")
          return prefixCls2 + "-item-left";
        return idx % 2 === 0 ? prefixCls2 + "-item-left" : prefixCls2 + "-item-right";
      }
      if (mode5 === "left")
        return prefixCls2 + "-item-left";
      if (mode5 === "right")
        return prefixCls2 + "-item-right";
      if (eleProps.position === "right")
        return prefixCls2 + "-item-right";
      return "";
    };
    var truthyItems = timeLineItems.filter(function(item) {
      return !!item;
    });
    var itemsCount = truthyItems.length;
    var lastCls = prefixCls2 + "-item-last";
    var items = truthyItems.map(function(ele, idx) {
      var pendingClass = idx === itemsCount - 2 ? lastCls : "";
      var readyClass = idx === itemsCount - 1 ? lastCls : "";
      return cloneElement(ele, {
        "class": classNames([!reverse && !!pending ? pendingClass : readyClass, getPositionCls(ele, idx)])
      });
    });
    var timelineProps = {
      props: _default$6({}, restProps),
      "class": classString,
      on: getListeners(this)
    };
    return h(
      "ul",
      timelineProps,
      [items]
    );
  }
};
Timeline.Item = TimelineItem;
Timeline.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Timeline.name, Timeline);
  Vue2.component(TimelineItem.name, TimelineItem);
};
function baseIsNaN$1(value27) {
  return value27 !== value27;
}
var _baseIsNaN = baseIsNaN$1;
function strictIndexOf$1(array3, value27, fromIndex) {
  var index2 = fromIndex - 1, length = array3.length;
  while (++index2 < length) {
    if (array3[index2] === value27) {
      return index2;
    }
  }
  return -1;
}
var _strictIndexOf = strictIndexOf$1;
var baseFindIndex = _baseFindIndex, baseIsNaN = _baseIsNaN, strictIndexOf = _strictIndexOf;
function baseIndexOf$1(array3, value27, fromIndex) {
  return value27 === value27 ? strictIndexOf(array3, value27, fromIndex) : baseFindIndex(array3, baseIsNaN, fromIndex);
}
var _baseIndexOf = baseIndexOf$1;
var baseIndexOf = _baseIndexOf;
function arrayIncludes$1(array3, value27) {
  var length = array3 == null ? 0 : array3.length;
  return !!length && baseIndexOf(array3, value27, 0) > -1;
}
var _arrayIncludes = arrayIncludes$1;
function arrayIncludesWith$1(array3, value27, comparator) {
  var index2 = -1, length = array3 == null ? 0 : array3.length;
  while (++index2 < length) {
    if (comparator(value27, array3[index2])) {
      return true;
    }
  }
  return false;
}
var _arrayIncludesWith = arrayIncludesWith$1;
function noop$2() {
}
var noop_1 = noop$2;
var Set$1 = _Set, noop$1 = noop_1, setToArray$1 = _setToArray;
var INFINITY = 1 / 0;
var createSet$1 = !(Set$1 && 1 / setToArray$1(new Set$1([, -0]))[1] == INFINITY) ? noop$1 : function(values) {
  return new Set$1(values);
};
var _createSet = createSet$1;
var SetCache = _SetCache, arrayIncludes = _arrayIncludes, arrayIncludesWith = _arrayIncludesWith, cacheHas = _cacheHas, createSet = _createSet, setToArray = _setToArray;
var LARGE_ARRAY_SIZE = 200;
function baseUniq$1(array3, iteratee, comparator) {
  var index2 = -1, includes = arrayIncludes, length = array3.length, isCommon = true, result = [], seen = result;
  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  } else if (length >= LARGE_ARRAY_SIZE) {
    var set3 = iteratee ? null : createSet(array3);
    if (set3) {
      return setToArray(set3);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache();
  } else {
    seen = iteratee ? [] : result;
  }
  outer:
    while (++index2 < length) {
      var value27 = array3[index2], computed = iteratee ? iteratee(value27) : value27;
      value27 = comparator || value27 !== 0 ? value27 : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value27);
      } else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value27);
      }
    }
  return result;
}
var _baseUniq = baseUniq$1;
var baseIteratee$1 = _baseIteratee, baseUniq = _baseUniq;
function uniqBy(array3, iteratee) {
  return array3 && array3.length ? baseUniq(array3, baseIteratee$1(iteratee)) : [];
}
var uniqBy_1 = uniqBy;
var uniqBy$1 = uniqBy_1;
var baseGet = _baseGet, baseSet = _baseSet, castPath = _castPath;
function basePickBy$1(object3, paths, predicate) {
  var index2 = -1, length = paths.length, result = {};
  while (++index2 < length) {
    var path = paths[index2], value27 = baseGet(object3, path);
    if (predicate(value27, path)) {
      baseSet(result, castPath(path, object3), value27);
    }
  }
  return result;
}
var _basePickBy = basePickBy$1;
var basePickBy = _basePickBy, hasIn = hasIn_1;
function basePick$1(object3, paths) {
  return basePickBy(object3, paths, function(value27, path) {
    return hasIn(object3, path);
  });
}
var _basePick = basePick$1;
var basePick = _basePick, flatRest = _flatRest;
var pick = flatRest(function(object3, paths) {
  return object3 == null ? {} : basePick(object3, paths);
});
var pick_1 = pick;
var pick$1 = pick_1;
function arrayAggregator$1(array3, setter2, iteratee, accumulator) {
  var index2 = -1, length = array3 == null ? 0 : array3.length;
  while (++index2 < length) {
    var value27 = array3[index2];
    setter2(accumulator, value27, iteratee(value27), array3);
  }
  return accumulator;
}
var _arrayAggregator = arrayAggregator$1;
var baseFor = _baseFor, keys2 = keys_1;
function baseForOwn$1(object3, iteratee) {
  return object3 && baseFor(object3, iteratee, keys2);
}
var _baseForOwn = baseForOwn$1;
var isArrayLike = isArrayLike_1;
function createBaseEach$1(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length, index2 = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index2-- : ++index2 < length) {
      if (iteratee(iterable[index2], index2, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var _createBaseEach = createBaseEach$1;
var baseForOwn = _baseForOwn, createBaseEach = _createBaseEach;
var baseEach$1 = createBaseEach(baseForOwn);
var _baseEach = baseEach$1;
var baseEach = _baseEach;
function baseAggregator$1(collection, setter2, iteratee, accumulator) {
  baseEach(collection, function(value27, key2, collection2) {
    setter2(accumulator, value27, iteratee(value27), collection2);
  });
  return accumulator;
}
var _baseAggregator = baseAggregator$1;
var arrayAggregator = _arrayAggregator, baseAggregator = _baseAggregator, baseIteratee = _baseIteratee, isArray2 = isArray_1;
function createAggregator$1(setter2, initializer) {
  return function(collection, iteratee) {
    var func = isArray2(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
    return func(collection, setter2, baseIteratee(iteratee), accumulator);
  };
}
var _createAggregator = createAggregator$1;
var createAggregator = _createAggregator;
var partition = createAggregator(function(result, value27, key2) {
  result[key2 ? 0 : 1].push(value27);
}, function() {
  return [[], []];
});
var partition_1 = partition;
function getError(option, xhr) {
  var msg = "cannot " + option.method + " " + option.action + " " + xhr.status + "'";
  var err = new Error(msg);
  err.status = xhr.status;
  err.method = option.method;
  err.url = option.action;
  return err;
}
function getBody(xhr) {
  var text = xhr.responseText || xhr.response;
  if (!text) {
    return text;
  }
  try {
    return JSON.parse(text);
  } catch (e) {
    return text;
  }
}
function upload(option) {
  var xhr = new window.XMLHttpRequest();
  if (option.onProgress && xhr.upload) {
    xhr.upload.onprogress = function progress(e) {
      if (e.total > 0) {
        e.percent = e.loaded / e.total * 100;
      }
      option.onProgress(e);
    };
  }
  var formData = new window.FormData();
  if (option.data) {
    Object.keys(option.data).forEach(function(key2) {
      var value27 = option.data[key2];
      if (Array.isArray(value27)) {
        value27.forEach(function(item) {
          formData.append(key2 + "[]", item);
        });
        return;
      }
      formData.append(key2, option.data[key2]);
    });
  }
  formData.append(option.filename, option.file);
  xhr.onerror = function error3(e) {
    option.onError(e);
  };
  xhr.onload = function onload() {
    if (xhr.status < 200 || xhr.status >= 300) {
      return option.onError(getError(option, xhr), getBody(xhr));
    }
    option.onSuccess(getBody(xhr), xhr);
  };
  xhr.open(option.method, option.action, true);
  if (option.withCredentials && "withCredentials" in xhr) {
    xhr.withCredentials = true;
  }
  var headers = option.headers || {};
  if (headers["X-Requested-With"] !== null) {
    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
  }
  for (var h in headers) {
    if (headers.hasOwnProperty(h) && headers[h] !== null) {
      xhr.setRequestHeader(h, headers[h]);
    }
  }
  xhr.send(formData);
  return {
    abort: function abort4() {
      xhr.abort();
    }
  };
}
var now = +new Date();
var index$1 = 0;
function uid() {
  return "vc-upload-" + now + "-" + ++index$1;
}
function endsWith(str, suffix2) {
  return str.indexOf(suffix2, str.length - suffix2.length) !== -1;
}
var attrAccept = function(file, acceptedFiles) {
  if (file && acceptedFiles) {
    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
    var fileName = file.name || "";
    var mimeType = file.type || "";
    var baseMimeType = mimeType.replace(/\/.*$/, "");
    return acceptedFilesArray.some(function(type3) {
      var validType = type3.trim();
      if (validType.charAt(0) === ".") {
        return endsWith(fileName.toLowerCase(), validType.toLowerCase());
      } else if (/\/\*$/.test(validType)) {
        return baseMimeType === validType.replace(/\/.*$/, "");
      }
      return mimeType === validType;
    });
  }
  return true;
};
function loopFiles(item, callback) {
  var dirReader = item.createReader();
  var fileList2 = [];
  function sequence() {
    dirReader.readEntries(function(entries) {
      var entryList = Array.prototype.slice.apply(entries);
      fileList2 = fileList2.concat(entryList);
      var isFinished = !entryList.length;
      if (isFinished) {
        callback(fileList2);
      } else {
        sequence();
      }
    });
  }
  sequence();
}
var traverseFileTree = function traverseFileTree2(files, callback, isAccepted) {
  var _traverseFileTree = function _traverseFileTree2(item, path) {
    path = path || "";
    if (item.isFile) {
      item.file(function(file2) {
        if (isAccepted(file2)) {
          if (item.fullPath && !file2.webkitRelativePath) {
            Object.defineProperties(file2, {
              webkitRelativePath: {
                writable: true
              }
            });
            file2.webkitRelativePath = item.fullPath.replace(/^\//, "");
            Object.defineProperties(file2, {
              webkitRelativePath: {
                writable: false
              }
            });
          }
          callback([file2]);
        }
      });
    } else if (item.isDirectory) {
      loopFiles(item, function(entries) {
        entries.forEach(function(entryItem) {
          _traverseFileTree2(entryItem, "" + path + item.name + "/");
        });
      });
    }
  };
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = void 0;
  try {
    for (var _iterator3 = files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator3.next()).done); _iteratorNormalCompletion = true) {
      var file = _step.value;
      _traverseFileTree(file.webkitGetAsEntry());
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator3["return"]) {
        _iterator3["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
};
var traverseFileTree$1 = traverseFileTree;
var upLoadPropTypes = {
  componentTag: PropTypes.string,
  prefixCls: PropTypes.string,
  name: PropTypes.string,
  multiple: PropTypes.bool,
  directory: PropTypes.bool,
  disabled: PropTypes.bool,
  accept: PropTypes.string,
  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
  action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  headers: PropTypes.object,
  beforeUpload: PropTypes.func,
  customRequest: PropTypes.func,
  withCredentials: PropTypes.bool,
  openFileDialogOnClick: PropTypes.bool,
  transformFile: PropTypes.func,
  method: PropTypes.string
};
var AjaxUploader = {
  inheritAttrs: false,
  name: "ajaxUploader",
  mixins: [BaseMixin],
  props: upLoadPropTypes,
  data: function data102() {
    this.reqs = {};
    return {
      uid: uid()
    };
  },
  mounted: function mounted64() {
    this._isMounted = true;
  },
  beforeDestroy: function beforeDestroy47() {
    this._isMounted = false;
    this.abort();
  },
  methods: {
    onChange: function onChange12(e) {
      var files = e.target.files;
      this.uploadFiles(files);
      this.reset();
    },
    onClick: function onClick14() {
      var el = this.$refs.fileInputRef;
      if (!el) {
        return;
      }
      el.click();
    },
    onKeyDown: function onKeyDown23(e) {
      if (e.key === "Enter") {
        this.onClick();
      }
    },
    onFileDrop: function onFileDrop(e) {
      var _this = this;
      var multiple = this.$props.multiple;
      e.preventDefault();
      if (e.type === "dragover") {
        return;
      }
      if (this.directory) {
        traverseFileTree$1(e.dataTransfer.items, this.uploadFiles, function(_file) {
          return attrAccept(_file, _this.accept);
        });
      } else {
        var files = partition_1(Array.prototype.slice.call(e.dataTransfer.files), function(file) {
          return attrAccept(file, _this.accept);
        });
        var successFiles = files[0];
        var errorFiles = files[1];
        if (multiple === false) {
          successFiles = successFiles.slice(0, 1);
        }
        this.uploadFiles(successFiles);
        if (errorFiles.length) {
          this.$emit("reject", errorFiles);
        }
      }
    },
    uploadFiles: function uploadFiles(files) {
      var _this2 = this;
      var postFiles = Array.prototype.slice.call(files);
      postFiles.map(function(file) {
        file.uid = uid();
        return file;
      }).forEach(function(file) {
        _this2.upload(file, postFiles);
      });
    },
    upload: function upload2(file, fileList2) {
      var _this3 = this;
      if (!this.beforeUpload) {
        return setTimeout(function() {
          return _this3.post(file);
        }, 0);
      }
      var before = this.beforeUpload(file, fileList2);
      if (before && before.then) {
        before.then(function(processedFile) {
          var processedFileType = Object.prototype.toString.call(processedFile);
          if (processedFileType === "[object File]" || processedFileType === "[object Blob]") {
            return _this3.post(processedFile);
          }
          return _this3.post(file);
        })["catch"](function(e) {
          console && console.log(e);
        });
      } else if (before !== false) {
        setTimeout(function() {
          return _this3.post(file);
        }, 0);
      }
    },
    post: function post(file) {
      var _this4 = this;
      if (!this._isMounted) {
        return;
      }
      var props2 = this.$props;
      var data109 = props2.data;
      var _props$transformFile = props2.transformFile, transformFile = _props$transformFile === void 0 ? function(originFile) {
        return originFile;
      } : _props$transformFile;
      new Promise(function(resolve) {
        var action = _this4.action;
        if (typeof action === "function") {
          return resolve(action(file));
        }
        resolve(action);
      }).then(function(action) {
        var uid2 = file.uid;
        var request = _this4.customRequest || upload;
        var transform = Promise.resolve(transformFile(file))["catch"](function(e) {
          console.error(e);
        });
        transform.then(function(transformedFile) {
          if (typeof data109 === "function") {
            data109 = data109(file);
          }
          var requestOption = {
            action,
            filename: _this4.name,
            data: data109,
            file: transformedFile,
            headers: _this4.headers,
            withCredentials: _this4.withCredentials,
            method: props2.method || "post",
            onProgress: function onProgress2(e) {
              _this4.$emit("progress", e, file);
            },
            onSuccess: function onSuccess2(ret, xhr) {
              delete _this4.reqs[uid2];
              _this4.$emit("success", ret, file, xhr);
            },
            onError: function onError2(err, ret) {
              delete _this4.reqs[uid2];
              _this4.$emit("error", err, ret, file);
            }
          };
          _this4.reqs[uid2] = request(requestOption);
          _this4.$emit("start", file);
        });
      });
    },
    reset: function reset() {
      this.setState({
        uid: uid()
      });
    },
    abort: function abort(file) {
      var reqs = this.reqs;
      if (file) {
        var uid2 = file;
        if (file && file.uid) {
          uid2 = file.uid;
        }
        if (reqs[uid2] && reqs[uid2].abort) {
          reqs[uid2].abort();
        }
        delete reqs[uid2];
      } else {
        Object.keys(reqs).forEach(function(uid3) {
          if (reqs[uid3] && reqs[uid3].abort) {
            reqs[uid3].abort();
          }
          delete reqs[uid3];
        });
      }
    }
  },
  render: function render226() {
    var _classNames;
    var h = arguments[0];
    var $props = this.$props, $attrs = this.$attrs;
    var Tag2 = $props.componentTag, prefixCls2 = $props.prefixCls, disabled = $props.disabled, multiple = $props.multiple, accept = $props.accept, directory = $props.directory, openFileDialogOnClick = $props.openFileDialogOnClick;
    var cls = classNames((_classNames = {}, _default$8(_classNames, prefixCls2, true), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _classNames));
    var events = disabled ? {} : {
      click: openFileDialogOnClick ? this.onClick : function() {
      },
      keydown: openFileDialogOnClick ? this.onKeyDown : function() {
      },
      drop: this.onFileDrop,
      dragover: this.onFileDrop
    };
    var tagProps = {
      on: _default$6({}, getListeners(this), events),
      attrs: {
        role: "button",
        tabIndex: disabled ? null : "0"
      },
      "class": cls
    };
    return h(
      Tag2,
      tagProps,
      [h("input", {
        attrs: {
          id: $attrs.id,
          type: "file",
          accept,
          directory: directory ? "directory" : null,
          webkitdirectory: directory ? "webkitdirectory" : null,
          multiple
        },
        ref: "fileInputRef",
        on: {
          "click": function click(e) {
            return e.stopPropagation();
          },
          "change": this.onChange
        },
        key: this.uid,
        style: { display: "none" }
      }), this.$slots["default"]]
    );
  }
};
var AjaxUpload = AjaxUploader;
var IFRAME_STYLE = {
  position: "absolute",
  top: 0,
  opacity: 0,
  filter: "alpha(opacity=0)",
  left: 0,
  zIndex: 9999
};
var IframeUploader = {
  mixins: [BaseMixin],
  props: {
    componentTag: PropTypes.string,
    disabled: PropTypes.bool,
    prefixCls: PropTypes.string,
    accept: PropTypes.string,
    multiple: PropTypes.bool,
    data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
    action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    name: PropTypes.string
  },
  data: function data103() {
    this.file = {};
    return {
      uploading: false
    };
  },
  methods: {
    onLoad: function onLoad2() {
      if (!this.uploading) {
        return;
      }
      var file = this.file;
      var response = void 0;
      try {
        var doc = this.getIframeDocument();
        var script = doc.getElementsByTagName("script")[0];
        if (script && script.parentNode === doc.body) {
          doc.body.removeChild(script);
        }
        response = doc.body.innerHTML;
        this.$emit("success", response, file);
      } catch (err) {
        warning$4(false, "cross domain error for Upload. Maybe server should return document.domain script. see Note from https://github.com/react-component/upload");
        response = "cross-domain";
        this.$emit("error", err, null, file);
      }
      this.endUpload();
    },
    onChange: function onChange13() {
      var _this = this;
      var target2 = this.getFormInputNode();
      var file = this.file = {
        uid: uid(),
        name: target2.value && target2.value.substring(target2.value.lastIndexOf("\\") + 1, target2.value.length)
      };
      this.startUpload();
      var props2 = this.$props;
      if (!props2.beforeUpload) {
        return this.post(file);
      }
      var before = props2.beforeUpload(file);
      if (before && before.then) {
        before.then(function() {
          _this.post(file);
        }, function() {
          _this.endUpload();
        });
      } else if (before !== false) {
        this.post(file);
      } else {
        this.endUpload();
      }
    },
    getIframeNode: function getIframeNode() {
      return this.$refs.iframeRef;
    },
    getIframeDocument: function getIframeDocument() {
      return this.getIframeNode().contentDocument;
    },
    getFormNode: function getFormNode() {
      return this.getIframeDocument().getElementById("form");
    },
    getFormInputNode: function getFormInputNode() {
      return this.getIframeDocument().getElementById("input");
    },
    getFormDataNode: function getFormDataNode() {
      return this.getIframeDocument().getElementById("data");
    },
    getFileForMultiple: function getFileForMultiple(file) {
      return this.multiple ? [file] : file;
    },
    getIframeHTML: function getIframeHTML(domain) {
      var domainScript = "";
      var domainInput = "";
      if (domain) {
        var script = "script";
        domainScript = "<" + script + '>document.domain="' + domain + '";</' + script + ">";
        domainInput = '<input name="_documentDomain" value="' + domain + '" />';
      }
      return '\n      <!DOCTYPE html>\n      <html>\n      <head>\n      <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n      <style>\n      body,html {padding:0;margin:0;border:0;overflow:hidden;}\n      </style>\n      ' + domainScript + '\n      </head>\n      <body>\n      <form method="post"\n      encType="multipart/form-data"\n      action="" id="form"\n      style="display:block;height:9999px;position:relative;overflow:hidden;">\n      <input id="input" type="file"\n       name="' + this.name + '"\n       style="position:absolute;top:0;right:0;height:9999px;font-size:9999px;cursor:pointer;"/>\n      ' + domainInput + '\n      <span id="data"></span>\n      </form>\n      </body>\n      </html>\n      ';
    },
    initIframeSrc: function initIframeSrc() {
      if (this.domain) {
        this.getIframeNode().src = "javascript:void((function(){\n          var d = document;\n          d.open();\n          d.domain='" + this.domain + "';\n          d.write('');\n          d.close();\n        })())";
      }
    },
    initIframe: function initIframe() {
      var iframeNode = this.getIframeNode();
      var win = iframeNode.contentWindow;
      var doc = void 0;
      this.domain = this.domain || "";
      this.initIframeSrc();
      try {
        doc = win.document;
      } catch (e) {
        this.domain = document.domain;
        this.initIframeSrc();
        win = iframeNode.contentWindow;
        doc = win.document;
      }
      doc.open("text/html", "replace");
      doc.write(this.getIframeHTML(this.domain));
      doc.close();
      this.getFormInputNode().onchange = this.onChange;
    },
    endUpload: function endUpload() {
      if (this.uploading) {
        this.file = {};
        this.uploading = false;
        this.setState({
          uploading: false
        });
        this.initIframe();
      }
    },
    startUpload: function startUpload() {
      if (!this.uploading) {
        this.uploading = true;
        this.setState({
          uploading: true
        });
      }
    },
    updateIframeWH: function updateIframeWH() {
      var rootNode = this.$el;
      var iframeNode = this.getIframeNode();
      iframeNode.style.height = rootNode.offsetHeight + "px";
      iframeNode.style.width = rootNode.offsetWidth + "px";
    },
    abort: function abort2(file) {
      if (file) {
        var uid2 = file;
        if (file && file.uid) {
          uid2 = file.uid;
        }
        if (uid2 === this.file.uid) {
          this.endUpload();
        }
      } else {
        this.endUpload();
      }
    },
    post: function post2(file) {
      var _this2 = this;
      var formNode = this.getFormNode();
      var dataSpan = this.getFormDataNode();
      var data109 = this.$props.data;
      if (typeof data109 === "function") {
        data109 = data109(file);
      }
      var inputs = document.createDocumentFragment();
      for (var key2 in data109) {
        if (data109.hasOwnProperty(key2)) {
          var input = document.createElement("input");
          input.setAttribute("name", key2);
          input.value = data109[key2];
          inputs.appendChild(input);
        }
      }
      dataSpan.appendChild(inputs);
      new Promise(function(resolve) {
        var action = _this2.action;
        if (typeof action === "function") {
          return resolve(action(file));
        }
        resolve(action);
      }).then(function(action) {
        formNode.setAttribute("action", action);
        formNode.submit();
        dataSpan.innerHTML = "";
        _this2.$emit("start", file);
      });
    }
  },
  mounted: function mounted65() {
    var _this3 = this;
    this.$nextTick(function() {
      _this3.updateIframeWH();
      _this3.initIframe();
    });
  },
  updated: function updated42() {
    var _this4 = this;
    this.$nextTick(function() {
      _this4.updateIframeWH();
    });
  },
  render: function render227() {
    var _classNames;
    var h = arguments[0];
    var _$props = this.$props, Tag2 = _$props.componentTag, disabled = _$props.disabled, prefixCls2 = _$props.prefixCls;
    var iframeStyle = _default$6({}, IFRAME_STYLE, {
      display: this.uploading || disabled ? "none" : ""
    });
    var cls = classNames((_classNames = {}, _default$8(_classNames, prefixCls2, true), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _classNames));
    return h(
      Tag2,
      {
        attrs: { className: cls },
        style: { position: "relative", zIndex: 0 }
      },
      [h("iframe", {
        ref: "iframeRef",
        on: {
          "load": this.onLoad
        },
        style: iframeStyle
      }), this.$slots["default"]]
    );
  }
};
var IframeUpload = IframeUploader;
function empty() {
}
var uploadProps = {
  componentTag: PropTypes.string,
  prefixCls: PropTypes.string,
  action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  name: PropTypes.string,
  multipart: PropTypes.bool,
  directory: PropTypes.bool,
  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
  headers: PropTypes.object,
  accept: PropTypes.string,
  multiple: PropTypes.bool,
  disabled: PropTypes.bool,
  beforeUpload: PropTypes.func,
  customRequest: PropTypes.func,
  method: PropTypes.string,
  withCredentials: PropTypes.bool,
  supportServerRender: PropTypes.bool,
  openFileDialogOnClick: PropTypes.bool,
  transformFile: PropTypes.func
};
var Upload$1 = {
  name: "Upload",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps(uploadProps, {
    componentTag: "span",
    prefixCls: "rc-upload",
    data: {},
    headers: {},
    name: "file",
    multipart: false,
    supportServerRender: false,
    multiple: false,
    beforeUpload: empty,
    withCredentials: false,
    openFileDialogOnClick: true
  }),
  data: function data104() {
    return {
      Component: null
    };
  },
  mounted: function mounted66() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.supportServerRender) {
        _this.setState({
          Component: _this.getComponent()
        }, function() {
          _this.$emit("ready");
        });
      }
    });
  },
  methods: {
    getComponent: function getComponent2() {
      return typeof File !== "undefined" ? AjaxUpload : IframeUpload;
    },
    abort: function abort3(file) {
      this.$refs.uploaderRef.abort(file);
    }
  },
  render: function render228() {
    var h = arguments[0];
    var componentProps = {
      props: _default$6({}, this.$props),
      on: getListeners(this),
      ref: "uploaderRef",
      attrs: this.$attrs
    };
    if (this.supportServerRender) {
      var _ComponentUploader = this.Component;
      if (_ComponentUploader) {
        return h(
          _ComponentUploader,
          componentProps,
          [this.$slots["default"]]
        );
      }
      return null;
    }
    var ComponentUploader = this.getComponent();
    return h(
      ComponentUploader,
      componentProps,
      [this.$slots["default"]]
    );
  }
};
PropTypes.oneOf(["error", "success", "done", "uploading", "removed"]);
function UploadFile(_ref) {
  var uid2 = _ref.uid, name = _ref.name;
  if (!uid2 && uid2 !== 0)
    return false;
  if (!["string", "number"].includes(typeof uid2 === "undefined" ? "undefined" : _default$7(uid2)))
    return false;
  if (name === "" || typeof name !== "string")
    return false;
  return true;
}
({
  file: PropTypes.custom(UploadFile),
  fileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  event: PropTypes.object
});
var ShowUploadListInterface = PropTypes.shape({
  showRemoveIcon: PropTypes.bool,
  showPreviewIcon: PropTypes.bool
}).loose;
var UploadLocale = PropTypes.shape({
  uploading: PropTypes.string,
  removeFile: PropTypes.string,
  downloadFile: PropTypes.string,
  uploadError: PropTypes.string,
  previewFile: PropTypes.string
}).loose;
var UploadProps = {
  type: PropTypes.oneOf(["drag", "select"]),
  name: PropTypes.string,
  defaultFileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  fileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  directory: PropTypes.bool,
  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
  method: PropTypes.oneOf(["POST", "PUT", "post", "put"]),
  headers: PropTypes.object,
  showUploadList: PropTypes.oneOfType([PropTypes.bool, ShowUploadListInterface]),
  multiple: PropTypes.bool,
  accept: PropTypes.string,
  beforeUpload: PropTypes.func,
  listType: PropTypes.oneOf(["text", "picture", "picture-card"]),
  remove: PropTypes.func,
  supportServerRender: PropTypes.bool,
  disabled: PropTypes.bool,
  prefixCls: PropTypes.string,
  customRequest: PropTypes.func,
  withCredentials: PropTypes.bool,
  openFileDialogOnClick: PropTypes.bool,
  locale: UploadLocale,
  height: PropTypes.number,
  id: PropTypes.string,
  previewFile: PropTypes.func,
  transformFile: PropTypes.func
};
({
  fileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  dragState: PropTypes.string
});
var UploadListProps = {
  listType: PropTypes.oneOf(["text", "picture", "picture-card"]),
  items: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  progressAttr: PropTypes.object,
  prefixCls: PropTypes.string,
  showRemoveIcon: PropTypes.bool,
  showDownloadIcon: PropTypes.bool,
  showPreviewIcon: PropTypes.bool,
  locale: UploadLocale,
  previewFile: PropTypes.func
};
var Dragger = {
  name: "AUploadDragger",
  props: UploadProps,
  render: function render229() {
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var draggerProps = {
      props: _default$6({}, props2, {
        type: "drag"
      }),
      on: getListeners(this),
      style: { height: this.height }
    };
    return h(
      Upload,
      draggerProps,
      [this.$slots["default"]]
    );
  }
};
function T() {
  return true;
}
function fileToObject(file) {
  return _default$6({}, file, {
    lastModified: file.lastModified,
    lastModifiedDate: file.lastModifiedDate,
    name: file.name,
    size: file.size,
    type: file.type,
    uid: file.uid,
    percent: 0,
    originFileObj: file
  });
}
function genPercentAdd() {
  var k = 0.1;
  var i = 0.01;
  var end = 0.98;
  return function(s) {
    var start = s;
    if (start >= end) {
      return start;
    }
    start += k;
    k = k - i;
    if (k < 1e-3) {
      k = 1e-3;
    }
    return start;
  };
}
function getFileItem(file, fileList2) {
  var matchKey = file.uid !== void 0 ? "uid" : "name";
  return fileList2.filter(function(item) {
    return item[matchKey] === file[matchKey];
  })[0];
}
function removeFileItem(file, fileList2) {
  var matchKey = file.uid !== void 0 ? "uid" : "name";
  var removed = fileList2.filter(function(item) {
    return item[matchKey] !== file[matchKey];
  });
  if (removed.length === fileList2.length) {
    return null;
  }
  return removed;
}
var extname = function extname2() {
  var url2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var temp = url2.split("/");
  var filename = temp[temp.length - 1];
  var filenameWithoutSuffix = filename.split(/#|\?/)[0];
  return (/\.[^./\\]*$/.exec(filenameWithoutSuffix) || [""])[0];
};
var isImageFileType = function isImageFileType2(type3) {
  return !!type3 && type3.indexOf("image/") === 0;
};
var isImageUrl = function isImageUrl2(file) {
  if (isImageFileType(file.type)) {
    return true;
  }
  var url2 = file.thumbUrl || file.url;
  var extension = extname(url2);
  if (/^data:image\//.test(url2) || /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {
    return true;
  }
  if (/^data:/.test(url2)) {
    return false;
  }
  if (extension) {
    return false;
  }
  return true;
};
var MEASURE_SIZE = 200;
function previewImage(file) {
  return new Promise(function(resolve) {
    if (!isImageFileType(file.type)) {
      resolve("");
      return;
    }
    var canvas = document.createElement("canvas");
    canvas.width = MEASURE_SIZE;
    canvas.height = MEASURE_SIZE;
    canvas.style.cssText = "position: fixed; left: 0; top: 0; width: " + MEASURE_SIZE + "px; height: " + MEASURE_SIZE + "px; z-index: 9999; display: none;";
    document.body.appendChild(canvas);
    var ctx2 = canvas.getContext("2d");
    var img = new Image();
    img.onload = function() {
      var width = img.width, height3 = img.height;
      var drawWidth = MEASURE_SIZE;
      var drawHeight = MEASURE_SIZE;
      var offsetX = 0;
      var offsetY = 0;
      if (width < height3) {
        drawHeight = height3 * (MEASURE_SIZE / width);
        offsetY = -(drawHeight - drawWidth) / 2;
      } else {
        drawWidth = width * (MEASURE_SIZE / height3);
        offsetX = -(drawWidth - drawHeight) / 2;
      }
      ctx2.drawImage(img, offsetX, offsetY, drawWidth, drawHeight);
      var dataURL = canvas.toDataURL();
      document.body.removeChild(canvas);
      resolve(dataURL);
    };
    img.src = window.URL.createObjectURL(file);
  });
}
var UploadList = {
  name: "AUploadList",
  mixins: [BaseMixin],
  props: initDefaultProps(UploadListProps, {
    listType: "text",
    progressAttr: {
      strokeWidth: 2,
      showInfo: false
    },
    showRemoveIcon: true,
    showDownloadIcon: false,
    showPreviewIcon: true,
    previewFile: previewImage
  }),
  inject: {
    configProvider: { "default": function _default120() {
      return ConfigConsumerProps;
    } }
  },
  updated: function updated43() {
    var _this = this;
    this.$nextTick(function() {
      var _$props = _this.$props, listType = _$props.listType, items = _$props.items, previewFile = _$props.previewFile;
      if (listType !== "picture" && listType !== "picture-card") {
        return;
      }
      (items || []).forEach(function(file) {
        if (typeof document === "undefined" || typeof window === "undefined" || !window.FileReader || !window.File || !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) || file.thumbUrl !== void 0) {
          return;
        }
        file.thumbUrl = "";
        if (previewFile) {
          previewFile(file.originFileObj).then(function(previewDataUrl) {
            file.thumbUrl = previewDataUrl || "";
            _this.$forceUpdate();
          });
        }
      });
    });
  },
  methods: {
    handlePreview: function handlePreview(file, e) {
      var _getListeners = getListeners(this), preview = _getListeners.preview;
      if (!preview) {
        return;
      }
      e.preventDefault();
      return this.$emit("preview", file);
    },
    handleDownload: function handleDownload(file) {
      var _getListeners2 = getListeners(this), download = _getListeners2.download;
      if (typeof download === "function") {
        download(file);
      } else if (file.url) {
        window.open(file.url);
      }
    },
    handleClose: function handleClose2(file) {
      this.$emit("remove", file);
    }
  },
  render: function render230() {
    var _this2 = this, _classNames4;
    var h = arguments[0];
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, _getOptionProps$items = _getOptionProps.items, items = _getOptionProps$items === void 0 ? [] : _getOptionProps$items, listType = _getOptionProps.listType, showPreviewIcon = _getOptionProps.showPreviewIcon, showRemoveIcon = _getOptionProps.showRemoveIcon, showDownloadIcon = _getOptionProps.showDownloadIcon, locale3 = _getOptionProps.locale, progressAttr = _getOptionProps.progressAttr;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("upload", customizePrefixCls);
    var list = items.map(function(file) {
      var _classNames, _classNames2;
      var progress = void 0;
      var icon = h(Icon$1, {
        attrs: { type: file.status === "uploading" ? "loading" : "paper-clip" }
      });
      if (listType === "picture" || listType === "picture-card") {
        if (listType === "picture-card" && file.status === "uploading") {
          icon = h(
            "div",
            { "class": prefixCls2 + "-list-item-uploading-text" },
            [locale3.uploading]
          );
        } else if (!file.thumbUrl && !file.url) {
          icon = h(Icon$1, {
            "class": prefixCls2 + "-list-item-thumbnail",
            attrs: { type: "picture", theme: "twoTone" }
          });
        } else {
          var thumbnail = isImageUrl(file) ? h("img", {
            attrs: {
              src: file.thumbUrl || file.url,
              alt: file.name
            },
            "class": prefixCls2 + "-list-item-image"
          }) : h(Icon$1, {
            attrs: { type: "file", theme: "twoTone" },
            "class": prefixCls2 + "-list-item-icon"
          });
          icon = h(
            "a",
            {
              "class": prefixCls2 + "-list-item-thumbnail",
              on: {
                "click": function click(e) {
                  return _this2.handlePreview(file, e);
                }
              },
              attrs: {
                href: file.url || file.thumbUrl,
                target: "_blank",
                rel: "noopener noreferrer"
              }
            },
            [thumbnail]
          );
        }
      }
      if (file.status === "uploading") {
        var progressProps = {
          props: _default$6({}, progressAttr, {
            type: "line",
            percent: file.percent
          })
        };
        var loadingProgress = "percent" in file ? h(Progress, progressProps) : null;
        progress = h(
          "div",
          { "class": prefixCls2 + "-list-item-progress", key: "progress" },
          [loadingProgress]
        );
      }
      var infoUploadingClass = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-list-item", true), _default$8(_classNames, prefixCls2 + "-list-item-" + file.status, true), _default$8(_classNames, prefixCls2 + "-list-item-list-type-" + listType, true), _classNames));
      var linkProps = typeof file.linkProps === "string" ? JSON.parse(file.linkProps) : file.linkProps;
      var removeIcon = showRemoveIcon ? h(Icon$1, {
        attrs: { type: "delete", title: locale3.removeFile },
        on: {
          "click": function click() {
            return _this2.handleClose(file);
          }
        }
      }) : null;
      var downloadIcon = showDownloadIcon && file.status === "done" ? h(Icon$1, {
        attrs: {
          type: "download",
          title: locale3.downloadFile
        },
        on: {
          "click": function click() {
            return _this2.handleDownload(file);
          }
        }
      }) : null;
      var downloadOrDelete = listType !== "picture-card" && h(
        "span",
        {
          key: "download-delete",
          "class": prefixCls2 + "-list-item-card-actions " + (listType === "picture" ? "picture" : "")
        },
        [downloadIcon && h(
          "a",
          {
            attrs: { title: locale3.downloadFile }
          },
          [downloadIcon]
        ), removeIcon && h(
          "a",
          {
            attrs: { title: locale3.removeFile }
          },
          [removeIcon]
        )]
      );
      var listItemNameClass = classNames((_classNames2 = {}, _default$8(_classNames2, prefixCls2 + "-list-item-name", true), _default$8(_classNames2, prefixCls2 + "-list-item-name-icon-count-" + [downloadIcon, removeIcon].filter(function(x) {
        return x;
      }).length, true), _classNames2));
      var preview = file.url ? [h(
        "a",
        _mergeJSXProps([{
          attrs: {
            target: "_blank",
            rel: "noopener noreferrer",
            title: file.name
          },
          "class": listItemNameClass
        }, linkProps, {
          attrs: {
            href: file.url
          },
          on: {
            "click": function click(e) {
              return _this2.handlePreview(file, e);
            }
          }
        }]),
        [file.name]
      ), downloadOrDelete] : [h(
        "span",
        {
          key: "view",
          "class": prefixCls2 + "-list-item-name",
          on: {
            "click": function click(e) {
              return _this2.handlePreview(file, e);
            }
          },
          attrs: {
            title: file.name
          }
        },
        [file.name]
      ), downloadOrDelete];
      var style3 = file.url || file.thumbUrl ? void 0 : {
        pointerEvents: "none",
        opacity: 0.5
      };
      var previewIcon = showPreviewIcon ? h(
        "a",
        {
          attrs: {
            href: file.url || file.thumbUrl,
            target: "_blank",
            rel: "noopener noreferrer",
            title: locale3.previewFile
          },
          style: style3,
          on: {
            "click": function click(e) {
              return _this2.handlePreview(file, e);
            }
          }
        },
        [h(Icon$1, {
          attrs: { type: "eye-o" }
        })]
      ) : null;
      var actions = listType === "picture-card" && file.status !== "uploading" && h(
        "span",
        { "class": prefixCls2 + "-list-item-actions" },
        [previewIcon, file.status === "done" && downloadIcon, removeIcon]
      );
      var message2 = void 0;
      if (file.response && typeof file.response === "string") {
        message2 = file.response;
      } else {
        message2 = file.error && file.error.statusText || locale3.uploadError;
      }
      var iconAndPreview = h("span", [icon, preview]);
      var transitionProps = getTransitionProps$1("fade");
      var dom = h(
        "div",
        { "class": infoUploadingClass, key: file.uid },
        [h(
          "div",
          { "class": prefixCls2 + "-list-item-info" },
          [iconAndPreview]
        ), actions, h(
          "transition",
          transitionProps,
          [progress]
        )]
      );
      var listContainerNameClass = classNames(_default$8({}, prefixCls2 + "-list-picture-card-container", listType === "picture-card"));
      return h(
        "div",
        { key: file.uid, "class": listContainerNameClass },
        [file.status === "error" ? h(
          ToolTip,
          {
            attrs: { title: message2 }
          },
          [dom]
        ) : h("span", [dom])]
      );
    });
    var listClassNames = classNames((_classNames4 = {}, _default$8(_classNames4, prefixCls2 + "-list", true), _default$8(_classNames4, prefixCls2 + "-list-" + listType, true), _classNames4));
    var animationDirection = listType === "picture-card" ? "animate-inline" : "animate";
    var transitionGroupProps = getTransitionProps$1(prefixCls2 + "-" + animationDirection);
    return h(
      "transition-group",
      _mergeJSXProps([transitionGroupProps, {
        attrs: { tag: "div" },
        "class": listClassNames
      }]),
      [list]
    );
  }
};
var Upload = {
  name: "AUpload",
  mixins: [BaseMixin],
  inheritAttrs: false,
  Dragger,
  props: initDefaultProps(UploadProps, {
    type: "select",
    multiple: false,
    action: "",
    data: {},
    accept: "",
    beforeUpload: T,
    showUploadList: true,
    listType: "text",
    disabled: false,
    supportServerRender: true
  }),
  inject: {
    configProvider: { "default": function _default121() {
      return ConfigConsumerProps;
    } }
  },
  data: function data105() {
    this.progressTimer = null;
    return {
      sFileList: this.fileList || this.defaultFileList || [],
      dragState: "drop"
    };
  },
  watch: {
    fileList: function fileList(val) {
      this.sFileList = val || [];
    }
  },
  beforeDestroy: function beforeDestroy48() {
    this.clearProgressTimer();
  },
  methods: {
    onStart: function onStart3(file) {
      var targetItem = fileToObject(file);
      targetItem.status = "uploading";
      var nextFileList = this.sFileList.concat();
      var fileIndex = findIndex$2(nextFileList, function(_ref) {
        var uid2 = _ref.uid;
        return uid2 === targetItem.uid;
      });
      if (fileIndex === -1) {
        nextFileList.push(targetItem);
      } else {
        nextFileList[fileIndex] = targetItem;
      }
      this.onChange({
        file: targetItem,
        fileList: nextFileList
      });
      if (!window.File || {}.TEST_IE) {
        this.autoUpdateProgress(0, targetItem);
      }
    },
    onSuccess: function onSuccess(response, file, xhr) {
      this.clearProgressTimer();
      try {
        if (typeof response === "string") {
          response = JSON.parse(response);
        }
      } catch (e) {
      }
      var fileList2 = this.sFileList;
      var targetItem = getFileItem(file, fileList2);
      if (!targetItem) {
        return;
      }
      targetItem.status = "done";
      targetItem.response = response;
      targetItem.xhr = xhr;
      this.onChange({
        file: _default$6({}, targetItem),
        fileList: fileList2
      });
    },
    onProgress: function onProgress(e, file) {
      var fileList2 = this.sFileList;
      var targetItem = getFileItem(file, fileList2);
      if (!targetItem) {
        return;
      }
      targetItem.percent = e.percent;
      this.onChange({
        event: e,
        file: _default$6({}, targetItem),
        fileList: this.sFileList
      });
    },
    onError: function onError(error3, response, file) {
      this.clearProgressTimer();
      var fileList2 = this.sFileList;
      var targetItem = getFileItem(file, fileList2);
      if (!targetItem) {
        return;
      }
      targetItem.error = error3;
      targetItem.response = response;
      targetItem.status = "error";
      this.onChange({
        file: _default$6({}, targetItem),
        fileList: fileList2
      });
    },
    onReject: function onReject(fileList2) {
      this.$emit("reject", fileList2);
    },
    handleRemove: function handleRemove(file) {
      var _this = this;
      var onRemove2 = this.remove;
      var fileList2 = this.$data.sFileList;
      Promise.resolve(typeof onRemove2 === "function" ? onRemove2(file) : onRemove2).then(function(ret) {
        if (ret === false) {
          return;
        }
        var removedFileList = removeFileItem(file, fileList2);
        if (removedFileList) {
          file.status = "removed";
          if (_this.upload) {
            _this.upload.abort(file);
          }
          _this.onChange({
            file,
            fileList: removedFileList
          });
        }
      });
    },
    handleManualRemove: function handleManualRemove(file) {
      if (this.$refs.uploadRef) {
        this.$refs.uploadRef.abort(file);
      }
      this.handleRemove(file);
    },
    onChange: function onChange14(info3) {
      if (!hasProp(this, "fileList")) {
        this.setState({ sFileList: info3.fileList });
      }
      this.$emit("change", info3);
    },
    onFileDrop: function onFileDrop2(e) {
      this.setState({
        dragState: e.type
      });
    },
    reBeforeUpload: function reBeforeUpload(file, fileList2) {
      var beforeUpload = this.$props.beforeUpload;
      var stateFileList = this.$data.sFileList;
      if (!beforeUpload) {
        return true;
      }
      var result = beforeUpload(file, fileList2);
      if (result === false) {
        this.onChange({
          file,
          fileList: uniqBy$1(stateFileList.concat(fileList2.map(fileToObject)), function(item) {
            return item.uid;
          })
        });
        return false;
      }
      if (result && result.then) {
        return result;
      }
      return true;
    },
    clearProgressTimer: function clearProgressTimer() {
      clearInterval(this.progressTimer);
    },
    autoUpdateProgress: function autoUpdateProgress(_, file) {
      var _this2 = this;
      var getPercent = genPercentAdd();
      var curPercent = 0;
      this.clearProgressTimer();
      this.progressTimer = setInterval(function() {
        curPercent = getPercent(curPercent);
        _this2.onProgress({
          percent: curPercent * 100
        }, file);
      }, 200);
    },
    renderUploadList: function renderUploadList(locale3) {
      var h = this.$createElement;
      var _getOptionProps = getOptionProps(this), _getOptionProps$showU = _getOptionProps.showUploadList, showUploadList = _getOptionProps$showU === void 0 ? {} : _getOptionProps$showU, listType = _getOptionProps.listType, previewFile = _getOptionProps.previewFile, disabled = _getOptionProps.disabled, propLocale = _getOptionProps.locale;
      var showRemoveIcon = showUploadList.showRemoveIcon, showPreviewIcon = showUploadList.showPreviewIcon, showDownloadIcon = showUploadList.showDownloadIcon;
      var fileList2 = this.$data.sFileList;
      var uploadListProps = {
        props: {
          listType,
          items: fileList2,
          previewFile,
          showRemoveIcon: !disabled && showRemoveIcon,
          showPreviewIcon,
          showDownloadIcon,
          locale: _default$6({}, locale3, propLocale)
        },
        on: _default$6({
          remove: this.handleManualRemove
        }, pick$1(getListeners(this), ["download", "preview"]))
      };
      return h(UploadList, uploadListProps);
    }
  },
  render: function render231() {
    var _classNames2;
    var h = arguments[0];
    var _getOptionProps2 = getOptionProps(this), customizePrefixCls = _getOptionProps2.prefixCls, showUploadList = _getOptionProps2.showUploadList, listType = _getOptionProps2.listType, type3 = _getOptionProps2.type, disabled = _getOptionProps2.disabled;
    var _$data = this.$data, fileList2 = _$data.sFileList, dragState = _$data.dragState;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("upload", customizePrefixCls);
    var vcUploadProps = {
      props: _default$6({}, this.$props, {
        prefixCls: prefixCls2,
        beforeUpload: this.reBeforeUpload
      }),
      on: {
        start: this.onStart,
        error: this.onError,
        progress: this.onProgress,
        success: this.onSuccess,
        reject: this.onReject
      },
      ref: "uploadRef",
      attrs: _default$6({}, this.$attrs)
    };
    var children = this.$slots["default"];
    if (!children || disabled) {
      delete vcUploadProps.props.id;
      delete vcUploadProps.attrs.id;
    }
    var uploadList = showUploadList ? h(LocaleReceiver, {
      attrs: {
        componentName: "Upload",
        defaultLocale: defaultLocale.Upload
      },
      scopedSlots: { "default": this.renderUploadList }
    }) : null;
    if (type3 === "drag") {
      var _classNames;
      var dragCls = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-drag", true), _default$8(_classNames, prefixCls2 + "-drag-uploading", fileList2.some(function(file) {
        return file.status === "uploading";
      })), _default$8(_classNames, prefixCls2 + "-drag-hover", dragState === "dragover"), _default$8(_classNames, prefixCls2 + "-disabled", disabled), _classNames));
      return h("span", [h(
        "div",
        {
          "class": dragCls,
          on: {
            "drop": this.onFileDrop,
            "dragover": this.onFileDrop,
            "dragleave": this.onFileDrop
          }
        },
        [h(
          Upload$1,
          _mergeJSXProps([vcUploadProps, { "class": prefixCls2 + "-btn" }]),
          [h(
            "div",
            { "class": prefixCls2 + "-drag-container" },
            [children]
          )]
        )]
      ), uploadList]);
    }
    var uploadButtonCls = classNames(prefixCls2, (_classNames2 = {}, _default$8(_classNames2, prefixCls2 + "-select", true), _default$8(_classNames2, prefixCls2 + "-select-" + listType, true), _default$8(_classNames2, prefixCls2 + "-disabled", disabled), _classNames2));
    var uploadButton = h(
      "div",
      { "class": uploadButtonCls, style: children ? void 0 : { display: "none" } },
      [h(
        Upload$1,
        vcUploadProps,
        [children]
      )]
    );
    if (listType === "picture-card") {
      return h(
        "span",
        { "class": prefixCls2 + "-picture-card-wrapper" },
        [uploadList, uploadButton]
      );
    }
    return h("span", [uploadButton, uploadList]);
  }
};
Upload.Dragger = Dragger;
Upload.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Upload.name, Upload);
  Vue2.component(Dragger.name, Dragger);
};
var IProps = {
  width: PropTypes.any,
  height: PropTypes.any,
  defaultOpen: PropTypes.bool,
  firstEnter: PropTypes.bool,
  open: PropTypes.bool,
  prefixCls: PropTypes.string,
  placement: PropTypes.string,
  level: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
  levelMove: PropTypes.oneOfType([PropTypes.number, PropTypes.func, PropTypes.array]),
  ease: PropTypes.string,
  duration: PropTypes.string,
  handler: PropTypes.any,
  showMask: PropTypes.bool,
  maskStyle: PropTypes.object,
  className: PropTypes.string,
  wrapStyle: PropTypes.object,
  maskClosable: PropTypes.bool,
  afterVisibleChange: PropTypes.func,
  keyboard: PropTypes.bool
};
var IDrawerProps = _default$6({}, IProps, {
  wrapperClassName: PropTypes.string,
  forceRender: PropTypes.bool,
  getContainer: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object, PropTypes.bool])
});
_default$6({}, IProps, {
  getContainer: PropTypes.func,
  getOpenCount: PropTypes.func,
  switchScrollingEffect: PropTypes.func
});
function dataToArray(vars) {
  if (Array.isArray(vars)) {
    return vars;
  }
  return [vars];
}
var transitionEndObject = {
  transition: "transitionend",
  WebkitTransition: "webkitTransitionEnd",
  MozTransition: "transitionend",
  OTransition: "oTransitionEnd otransitionend"
};
var transitionStr = Object.keys(transitionEndObject).filter(function(key2) {
  if (typeof document === "undefined") {
    return false;
  }
  var html = document.getElementsByTagName("html")[0];
  return key2 in (html ? html.style : {});
})[0];
var transitionEnd = transitionEndObject[transitionStr];
function addEventListener(target2, eventType, callback, options2) {
  if (target2.addEventListener) {
    target2.addEventListener(eventType, callback, options2);
  } else if (target2.attachEvent) {
    target2.attachEvent("on" + eventType, callback);
  }
}
function removeEventListener(target2, eventType, callback, options2) {
  if (target2.removeEventListener) {
    target2.removeEventListener(eventType, callback, options2);
  } else if (target2.attachEvent) {
    target2.detachEvent("on" + eventType, callback);
  }
}
function transformArguments(arg, cb) {
  var result = void 0;
  if (typeof arg === "function") {
    result = arg(cb);
  } else {
    result = arg;
  }
  if (Array.isArray(result)) {
    if (result.length === 2) {
      return result;
    }
    return [result[0], result[1]];
  }
  return [result];
}
var isNumeric2 = function isNumeric3(value27) {
  return !isNaN(parseFloat(value27)) && isFinite(value27);
};
function noop4() {
}
var currentDrawer = {};
var windowIsUndefined = !(typeof window !== "undefined" && window.document && window.document.createElement);
Vue.use(_default$3, { name: "ant-ref" });
var Drawer$2 = {
  mixins: [BaseMixin],
  props: initDefaultProps(IDrawerProps, {
    prefixCls: "drawer",
    placement: "left",
    getContainer: "body",
    level: "all",
    duration: ".3s",
    ease: "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
    firstEnter: false,
    showMask: true,
    handler: true,
    maskStyle: {},
    wrapperClassName: "",
    className: ""
  }),
  data: function data106() {
    this.levelDom = [];
    this.contentDom = null;
    this.maskDom = null;
    this.handlerdom = null;
    this.mousePos = null;
    this.sFirstEnter = this.firstEnter;
    this.timeout = null;
    this.children = null;
    this.drawerId = Number((Date.now() + Math.random()).toString().replace(".", Math.round(Math.random() * 9))).toString(16);
    var open6 = this.open !== void 0 ? this.open : !!this.defaultOpen;
    currentDrawer[this.drawerId] = open6;
    this.orignalOpen = this.open;
    this.preProps = _default$6({}, this.$props);
    return {
      sOpen: open6
    };
  },
  mounted: function mounted67() {
    var _this = this;
    this.$nextTick(function() {
      if (!windowIsUndefined) {
        var passiveSupported = false;
        window.addEventListener("test", null, Object.defineProperty({}, "passive", {
          get: function get4() {
            passiveSupported = true;
            return null;
          }
        }));
        _this.passive = passiveSupported ? { passive: false } : false;
      }
      var open6 = _this.getOpen();
      if (_this.handler || open6 || _this.sFirstEnter) {
        _this.getDefault(_this.$props);
        if (open6) {
          _this.isOpenChange = true;
          _this.$nextTick(function() {
            _this.domFocus();
          });
        }
        _this.$forceUpdate();
      }
    });
  },
  watch: {
    open: function(_open2) {
      function open6(_x) {
        return _open2.apply(this, arguments);
      }
      open6.toString = function() {
        return _open2.toString();
      };
      return open6;
    }(function(val) {
      var _this2 = this;
      if (val !== void 0 && val !== this.preProps.open) {
        this.isOpenChange = true;
        if (!this.container) {
          this.getDefault(this.$props);
        }
        this.setState({
          sOpen: open
        });
      }
      this.preProps.open = val;
      if (val) {
        this.$nextTick(function() {
          _this2.domFocus();
        });
      }
    }),
    placement: function placement(val) {
      if (val !== this.preProps.placement) {
        this.contentDom = null;
      }
      this.preProps.placement = val;
    },
    level: function level(val) {
      if (this.preProps.level !== val) {
        this.getParentAndLevelDom(this.$props);
      }
      this.preProps.level = val;
    }
  },
  updated: function updated44() {
    var _this3 = this;
    this.$nextTick(function() {
      if (!_this3.sFirstEnter && _this3.container) {
        _this3.$forceUpdate();
        _this3.sFirstEnter = true;
      }
    });
  },
  beforeDestroy: function beforeDestroy49() {
    delete currentDrawer[this.drawerId];
    delete this.isOpenChange;
    if (this.container) {
      if (this.sOpen) {
        this.setLevelDomTransform(false, true);
      }
      document.body.style.overflow = "";
    }
    this.sFirstEnter = false;
    clearTimeout(this.timeout);
  },
  methods: {
    domFocus: function domFocus() {
      if (this.dom) {
        this.dom.focus();
      }
    },
    onKeyDown: function onKeyDown24(e) {
      if (e.keyCode === KeyCode$2.ESC) {
        e.stopPropagation();
        this.$emit("close", e);
      }
    },
    onMaskTouchEnd: function onMaskTouchEnd(e) {
      this.$emit("close", e);
      this.onTouchEnd(e, true);
    },
    onIconTouchEnd: function onIconTouchEnd(e) {
      this.$emit("handleClick", e);
      this.onTouchEnd(e);
    },
    onTouchEnd: function onTouchEnd2(e, close7) {
      if (this.open !== void 0) {
        return;
      }
      var open6 = close7 || this.sOpen;
      this.isOpenChange = true;
      this.setState({
        sOpen: !open6
      });
    },
    onWrapperTransitionEnd: function onWrapperTransitionEnd(e) {
      if (e.target === this.contentWrapper && e.propertyName.match(/transform$/)) {
        var _open2 = this.getOpen();
        this.dom.style.transition = "";
        if (!_open2 && this.getCurrentDrawerSome()) {
          document.body.style.overflowX = "";
          if (this.maskDom) {
            this.maskDom.style.left = "";
            this.maskDom.style.width = "";
          }
        }
        if (this.afterVisibleChange) {
          this.afterVisibleChange(!!_open2);
        }
      }
    },
    getDefault: function getDefault(props2) {
      this.getParentAndLevelDom(props2);
      if (props2.getContainer || props2.parent) {
        this.container = this.defaultGetContainer();
      }
    },
    getCurrentDrawerSome: function getCurrentDrawerSome() {
      return !Object.keys(currentDrawer).some(function(key2) {
        return currentDrawer[key2];
      });
    },
    getSelfContainer: function getSelfContainer() {
      return this.container;
    },
    getParentAndLevelDom: function getParentAndLevelDom(props2) {
      var _this4 = this;
      if (windowIsUndefined) {
        return;
      }
      var level2 = props2.level, getContainer5 = props2.getContainer;
      this.levelDom = [];
      if (getContainer5) {
        if (typeof getContainer5 === "string") {
          var dom = document.querySelectorAll(getContainer5)[0];
          this.parent = dom;
        }
        if (typeof getContainer5 === "function") {
          this.parent = getContainer5();
        }
        if ((typeof getContainer5 === "undefined" ? "undefined" : _default$7(getContainer5)) === "object" && getContainer5 instanceof window.HTMLElement) {
          this.parent = getContainer5;
        }
      }
      if (!getContainer5 && this.container) {
        this.parent = this.container.parentNode;
      }
      if (level2 === "all") {
        var children = Array.prototype.slice.call(this.parent.children);
        children.forEach(function(child) {
          if (child.nodeName !== "SCRIPT" && child.nodeName !== "STYLE" && child.nodeName !== "LINK" && child !== _this4.container) {
            _this4.levelDom.push(child);
          }
        });
      } else if (level2) {
        dataToArray(level2).forEach(function(key2) {
          document.querySelectorAll(key2).forEach(function(item) {
            _this4.levelDom.push(item);
          });
        });
      }
    },
    setLevelDomTransform: function setLevelDomTransform(open6, openTransition, placementName, value27) {
      var _this5 = this;
      var _$props = this.$props, placement2 = _$props.placement, levelMove = _$props.levelMove, duration2 = _$props.duration, ease = _$props.ease, getContainer5 = _$props.getContainer;
      if (!windowIsUndefined) {
        this.levelDom.forEach(function(dom) {
          if (_this5.isOpenChange || openTransition) {
            dom.style.transition = "transform " + duration2 + " " + ease;
            addEventListener(dom, transitionEnd, _this5.trnasitionEnd);
            var levelValue = open6 ? value27 : 0;
            if (levelMove) {
              var $levelMove = transformArguments(levelMove, { target: dom, open: open6 });
              levelValue = open6 ? $levelMove[0] : $levelMove[1] || 0;
            }
            var $value = typeof levelValue === "number" ? levelValue + "px" : levelValue;
            var placementPos = placement2 === "left" || placement2 === "top" ? $value : "-" + $value;
            dom.style.transform = levelValue ? placementName + "(" + placementPos + ")" : "";
            dom.style.msTransform = levelValue ? placementName + "(" + placementPos + ")" : "";
          }
        });
        if (getContainer5 === "body") {
          var eventArray = ["touchstart"];
          var domArray = [document.body, this.maskDom, this.handlerdom, this.contentDom];
          var right = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth ? getScrollBarSize(1) : 0;
          var widthTransition = "width " + duration2 + " " + ease;
          var trannsformTransition = "transform " + duration2 + " " + ease;
          if (open6 && document.body.style.overflow !== "hidden") {
            document.body.style.overflow = "hidden";
            if (right) {
              document.body.style.position = "relative";
              document.body.style.width = "calc(100% - " + right + "px)";
              this.dom.style.transition = "none";
              switch (placement2) {
                case "right":
                  this.dom.style.transform = "translateX(-" + right + "px)";
                  this.dom.style.msTransform = "translateX(-" + right + "px)";
                  break;
                case "top":
                case "bottom":
                  this.dom.style.width = "calc(100% - " + right + "px)";
                  this.dom.style.transform = "translateZ(0)";
                  break;
              }
              clearTimeout(this.timeout);
              this.timeout = setTimeout(function() {
                _this5.dom.style.transition = trannsformTransition + "," + widthTransition;
                _this5.dom.style.width = "";
                _this5.dom.style.transform = "";
                _this5.dom.style.msTransform = "";
              });
            }
            domArray.forEach(function(item, i) {
              if (!item) {
                return;
              }
              addEventListener(item, eventArray[i] || "touchmove", i ? _this5.removeMoveHandler : _this5.removeStartHandler, _this5.passive);
            });
          } else if (this.getCurrentDrawerSome()) {
            document.body.style.overflow = "";
            if ((this.isOpenChange || openTransition) && right) {
              document.body.style.position = "";
              document.body.style.width = "";
              if (transitionStr) {
                document.body.style.overflowX = "hidden";
              }
              this.dom.style.transition = "none";
              var heightTransition = void 0;
              switch (placement2) {
                case "right": {
                  this.dom.style.transform = "translateX(" + right + "px)";
                  this.dom.style.msTransform = "translateX(" + right + "px)";
                  this.dom.style.width = "100%";
                  widthTransition = "width 0s " + ease + " " + duration2;
                  if (this.maskDom) {
                    this.maskDom.style.left = "-" + right + "px";
                    this.maskDom.style.width = "calc(100% + " + right + "px)";
                  }
                  break;
                }
                case "top":
                case "bottom": {
                  this.dom.style.width = "calc(100% + " + right + "px)";
                  this.dom.style.height = "100%";
                  this.dom.style.transform = "translateZ(0)";
                  heightTransition = "height 0s " + ease + " " + duration2;
                  break;
                }
              }
              clearTimeout(this.timeout);
              this.timeout = setTimeout(function() {
                _this5.dom.style.transition = trannsformTransition + "," + (heightTransition ? heightTransition + "," : "") + widthTransition;
                _this5.dom.style.transform = "";
                _this5.dom.style.msTransform = "";
                _this5.dom.style.width = "";
                _this5.dom.style.height = "";
              });
            }
            domArray.forEach(function(item, i) {
              if (!item) {
                return;
              }
              removeEventListener(item, eventArray[i] || "touchmove", i ? _this5.removeMoveHandler : _this5.removeStartHandler, _this5.passive);
            });
          }
        }
      }
      var _getListeners = getListeners(this), change = _getListeners.change;
      if (change && this.isOpenChange && this.sFirstEnter) {
        change(open6);
        this.isOpenChange = false;
      }
    },
    getChildToRender: function getChildToRender(open6) {
      var _classnames, _this6 = this;
      var h = this.$createElement;
      var _$props2 = this.$props, className = _$props2.className, prefixCls2 = _$props2.prefixCls, placement2 = _$props2.placement, handler8 = _$props2.handler, showMask = _$props2.showMask, maskStyle = _$props2.maskStyle, width = _$props2.width, height3 = _$props2.height, wrapStyle = _$props2.wrapStyle, keyboard = _$props2.keyboard, maskClosable = _$props2.maskClosable;
      var children = this.$slots["default"];
      var wrapperClassname = classNames(prefixCls2, (_classnames = {}, _default$8(_classnames, prefixCls2 + "-" + placement2, true), _default$8(_classnames, prefixCls2 + "-open", open6), _default$8(_classnames, className, !!className), _default$8(_classnames, "no-mask", !showMask), _classnames));
      var isOpenChange = this.isOpenChange;
      var isHorizontal = placement2 === "left" || placement2 === "right";
      var placementName = "translate" + (isHorizontal ? "X" : "Y");
      var placementPos = placement2 === "left" || placement2 === "top" ? "-100%" : "100%";
      var transform = open6 ? "" : placementName + "(" + placementPos + ")";
      if (isOpenChange === void 0 || isOpenChange) {
        var contentValue = this.contentDom ? this.contentDom.getBoundingClientRect()[isHorizontal ? "width" : "height"] : 0;
        var value27 = (isHorizontal ? width : height3) || contentValue;
        this.setLevelDomTransform(open6, false, placementName, value27);
      }
      var handlerChildren = void 0;
      if (handler8 !== false) {
        var handlerDefalut = h(
          "div",
          { "class": "drawer-handle" },
          [h("i", { "class": "drawer-handle-icon" })]
        );
        var handlerSlot = this.handler;
        var handlerSlotVnode = handlerSlot && handlerSlot[0] || handlerDefalut;
        var _getEvents = getEvents(handlerSlotVnode), handleIconClick2 = _getEvents.click;
        handlerChildren = cloneElement(handlerSlotVnode, {
          on: {
            click: function click(e) {
              handleIconClick2 && handleIconClick2();
              _this6.onIconTouchEnd(e);
            }
          },
          directives: [{
            name: "ant-ref",
            value: function value28(c) {
              _this6.handlerdom = c;
            }
          }]
        });
      }
      var domContProps = {
        "class": wrapperClassname,
        directives: [{
          name: "ant-ref",
          value: function value28(c) {
            _this6.dom = c;
          }
        }],
        on: {
          transitionend: this.onWrapperTransitionEnd,
          keydown: open6 && keyboard ? this.onKeyDown : noop4
        },
        style: wrapStyle
      };
      var directivesMaskDom = [{
        name: "ant-ref",
        value: function value28(c) {
          _this6.maskDom = c;
        }
      }];
      var directivesContentWrapper = [{
        name: "ant-ref",
        value: function value28(c) {
          _this6.contentWrapper = c;
        }
      }];
      var directivesContentDom = [{
        name: "ant-ref",
        value: function value28(c) {
          _this6.contentDom = c;
        }
      }];
      return h(
        "div",
        _mergeJSXProps([domContProps, {
          attrs: { tabIndex: -1 }
        }]),
        [showMask && h("div", _mergeJSXProps([{
          key: open6,
          "class": prefixCls2 + "-mask",
          on: {
            "click": maskClosable ? this.onMaskTouchEnd : noop4
          },
          style: maskStyle
        }, { directives: directivesMaskDom }])), h(
          "div",
          _mergeJSXProps([{
            "class": prefixCls2 + "-content-wrapper",
            style: {
              transform,
              msTransform: transform,
              width: isNumeric2(width) ? width + "px" : width,
              height: isNumeric2(height3) ? height3 + "px" : height3
            }
          }, { directives: directivesContentWrapper }]),
          [h(
            "div",
            _mergeJSXProps([{
              "class": prefixCls2 + "-content"
            }, { directives: directivesContentDom }, {
              on: {
                "touchstart": open6 ? this.removeStartHandler : noop4,
                "touchmove": open6 ? this.removeMoveHandler : noop4
              }
            }]),
            [children]
          ), handlerChildren]
        )]
      );
    },
    getOpen: function getOpen() {
      return this.open !== void 0 ? this.open : this.sOpen;
    },
    getTouchParentScroll: function getTouchParentScroll(root2, currentTarget, differX, differY) {
      if (!currentTarget || currentTarget === document) {
        return false;
      }
      if (currentTarget === root2.parentNode) {
        return true;
      }
      var isY = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differY);
      var isX = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differX);
      var scrollY = currentTarget.scrollHeight - currentTarget.clientHeight;
      var scrollX = currentTarget.scrollWidth - currentTarget.clientWidth;
      var t = currentTarget.scrollTop;
      var l = currentTarget.scrollLeft;
      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft + 1, currentTarget.scrollTop + 1);
      }
      var currentT = currentTarget.scrollTop;
      var currentL = currentTarget.scrollLeft;
      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft - 1, currentTarget.scrollTop - 1);
      }
      if (isY && (!scrollY || !(currentT - t) || scrollY && (currentTarget.scrollTop >= scrollY && differY < 0 || currentTarget.scrollTop <= 0 && differY > 0)) || isX && (!scrollX || !(currentL - l) || scrollX && (currentTarget.scrollLeft >= scrollX && differX < 0 || currentTarget.scrollLeft <= 0 && differX > 0))) {
        return this.getTouchParentScroll(root2, currentTarget.parentNode, differX, differY);
      }
      return false;
    },
    removeStartHandler: function removeStartHandler(e) {
      if (e.touches.length > 1) {
        return;
      }
      this.startPos = {
        x: e.touches[0].clientX,
        y: e.touches[0].clientY
      };
    },
    removeMoveHandler: function removeMoveHandler(e) {
      if (e.changedTouches.length > 1) {
        return;
      }
      var currentTarget = e.currentTarget;
      var differX = e.changedTouches[0].clientX - this.startPos.x;
      var differY = e.changedTouches[0].clientY - this.startPos.y;
      if (currentTarget === this.maskDom || currentTarget === this.handlerdom || currentTarget === this.contentDom && this.getTouchParentScroll(currentTarget, e.target, differX, differY)) {
        e.preventDefault();
      }
    },
    trnasitionEnd: function trnasitionEnd(e) {
      removeEventListener(e.target, transitionEnd, this.trnasitionEnd);
      e.target.style.transition = "";
    },
    defaultGetContainer: function defaultGetContainer3() {
      if (windowIsUndefined) {
        return null;
      }
      var container = document.createElement("div");
      this.parent.appendChild(container);
      if (this.wrapperClassName) {
        container.className = this.wrapperClassName;
      }
      return container;
    }
  },
  render: function render232() {
    var _this7 = this;
    var h = arguments[0];
    var _$props3 = this.$props, getContainer5 = _$props3.getContainer, wrapperClassName = _$props3.wrapperClassName, handler8 = _$props3.handler, forceRender = _$props3.forceRender;
    var open6 = this.getOpen();
    var portal = null;
    currentDrawer[this.drawerId] = open6 ? this.container : open6;
    var children = this.getChildToRender(this.sFirstEnter ? open6 : false);
    if (!getContainer5) {
      var directives = [{
        name: "ant-ref",
        value: function value27(c) {
          _this7.container = c;
        }
      }];
      return h(
        "div",
        _mergeJSXProps([{ "class": wrapperClassName }, { directives }]),
        [children]
      );
    }
    if (!this.container || !open6 && !this.sFirstEnter) {
      return null;
    }
    var $forceRender = !!handler8 || forceRender;
    if ($forceRender || open6 || this.dom) {
      portal = h(Portal$1, {
        attrs: { getContainer: this.getSelfContainer, children }
      });
    }
    return portal;
  }
};
var Drawer$3 = Drawer$2;
var Drawer = {
  name: "ADrawer",
  props: {
    closable: PropTypes.bool.def(true),
    destroyOnClose: PropTypes.bool,
    getContainer: PropTypes.any,
    maskClosable: PropTypes.bool.def(true),
    mask: PropTypes.bool.def(true),
    maskStyle: PropTypes.object,
    wrapStyle: PropTypes.object,
    bodyStyle: PropTypes.object,
    headerStyle: PropTypes.object,
    drawerStyle: PropTypes.object,
    title: PropTypes.any,
    visible: PropTypes.bool,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).def(256),
    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).def(256),
    zIndex: PropTypes.number,
    prefixCls: PropTypes.string,
    placement: PropTypes.oneOf(["top", "right", "bottom", "left"]).def("right"),
    level: PropTypes.any.def(null),
    wrapClassName: PropTypes.string,
    handle: PropTypes.any,
    afterVisibleChange: PropTypes.func,
    keyboard: PropTypes.bool.def(true)
  },
  mixins: [BaseMixin],
  data: function data107() {
    this.destroyClose = false;
    this.preVisible = this.$props.visible;
    return {
      _push: false
    };
  },
  inject: {
    parentDrawer: {
      "default": function _default122() {
        return null;
      }
    },
    configProvider: { "default": function _default123() {
      return ConfigConsumerProps;
    } }
  },
  provide: function provide29() {
    return {
      parentDrawer: this
    };
  },
  mounted: function mounted68() {
    var visible11 = this.visible;
    if (visible11 && this.parentDrawer) {
      this.parentDrawer.push();
    }
  },
  updated: function updated45() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.preVisible !== _this.visible && _this.parentDrawer) {
        if (_this.visible) {
          _this.parentDrawer.push();
        } else {
          _this.parentDrawer.pull();
        }
      }
      _this.preVisible = _this.visible;
    });
  },
  beforeDestroy: function beforeDestroy50() {
    if (this.parentDrawer) {
      this.parentDrawer.pull();
    }
  },
  methods: {
    domFocus: function domFocus2() {
      if (this.$refs.vcDrawer) {
        this.$refs.vcDrawer.domFocus();
      }
    },
    close: function close6(e) {
      this.$emit("close", e);
    },
    push: function push() {
      this.setState({
        _push: true
      });
    },
    pull: function pull() {
      var _this2 = this;
      this.setState({
        _push: false
      }, function() {
        _this2.domFocus();
      });
    },
    onDestroyTransitionEnd: function onDestroyTransitionEnd() {
      var isDestroyOnClose = this.getDestroyOnClose();
      if (!isDestroyOnClose) {
        return;
      }
      if (!this.visible) {
        this.destroyClose = true;
        this.$forceUpdate();
      }
    },
    getDestroyOnClose: function getDestroyOnClose() {
      return this.destroyOnClose && !this.visible;
    },
    getPushTransform: function getPushTransform(placement2) {
      if (placement2 === "left" || placement2 === "right") {
        return "translateX(" + (placement2 === "left" ? 180 : -180) + "px)";
      }
      if (placement2 === "top" || placement2 === "bottom") {
        return "translateY(" + (placement2 === "top" ? 180 : -180) + "px)";
      }
    },
    getRcDrawerStyle: function getRcDrawerStyle() {
      var _$props = this.$props, zIndex = _$props.zIndex, placement2 = _$props.placement, wrapStyle = _$props.wrapStyle;
      var push2 = this.$data._push;
      return _default$6({
        zIndex,
        transform: push2 ? this.getPushTransform(placement2) : void 0
      }, wrapStyle);
    },
    renderHeader: function renderHeader(prefixCls2) {
      var h = this.$createElement;
      var _$props2 = this.$props, closable = _$props2.closable, headerStyle = _$props2.headerStyle;
      var title = getComponentFromProp(this, "title");
      if (!title && !closable) {
        return null;
      }
      var headerClassName = title ? prefixCls2 + "-header" : prefixCls2 + "-header-no-title";
      return h(
        "div",
        { "class": headerClassName, style: headerStyle },
        [title && h(
          "div",
          { "class": prefixCls2 + "-title" },
          [title]
        ), closable ? this.renderCloseIcon(prefixCls2) : null]
      );
    },
    renderCloseIcon: function renderCloseIcon2(prefixCls2) {
      var h = this.$createElement;
      var closable = this.closable;
      return closable && h(
        "button",
        {
          key: "closer",
          on: {
            "click": this.close
          },
          attrs: { "aria-label": "Close" },
          "class": prefixCls2 + "-close"
        },
        [h(Icon$1, {
          attrs: { type: "close" }
        })]
      );
    },
    renderBody: function renderBody(prefixCls2) {
      var h = this.$createElement;
      if (this.destroyClose && !this.visible) {
        return null;
      }
      this.destroyClose = false;
      var _$props3 = this.$props, bodyStyle = _$props3.bodyStyle, drawerStyle = _$props3.drawerStyle;
      var containerStyle = {};
      var isDestroyOnClose = this.getDestroyOnClose();
      if (isDestroyOnClose) {
        containerStyle.opacity = 0;
        containerStyle.transition = "opacity .3s";
      }
      return h(
        "div",
        {
          "class": prefixCls2 + "-wrapper-body",
          style: _default$6({}, containerStyle, drawerStyle),
          on: {
            "transitionend": this.onDestroyTransitionEnd
          }
        },
        [this.renderHeader(prefixCls2), h(
          "div",
          { key: "body", "class": prefixCls2 + "-body", style: bodyStyle },
          [this.$slots["default"]]
        )]
      );
    }
  },
  render: function render233() {
    var _classnames;
    var h = arguments[0];
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, width = props2.width, height3 = props2.height, visible11 = props2.visible, placement2 = props2.placement, wrapClassName = props2.wrapClassName, mask = props2.mask, rest = _default$2(props2, ["prefixCls", "width", "height", "visible", "placement", "wrapClassName", "mask"]);
    var haveMask = mask ? "" : "no-mask";
    var offsetStyle = {};
    if (placement2 === "left" || placement2 === "right") {
      offsetStyle.width = typeof width === "number" ? width + "px" : width;
    } else {
      offsetStyle.height = typeof height3 === "number" ? height3 + "px" : height3;
    }
    var handler8 = getComponentFromProp(this, "handle") || false;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("drawer", customizePrefixCls);
    var vcDrawerProps = {
      ref: "vcDrawer",
      props: _default$6({}, omit$2(rest, ["closable", "destroyOnClose", "drawerStyle", "headerStyle", "bodyStyle", "title", "push", "visible", "getPopupContainer", "rootPrefixCls", "getPrefixCls", "renderEmpty", "csp", "pageHeader", "autoInsertSpaceInButton"]), {
        handler: handler8
      }, offsetStyle, {
        prefixCls: prefixCls2,
        open: visible11,
        showMask: mask,
        placement: placement2,
        className: classNames((_classnames = {}, _default$8(_classnames, wrapClassName, !!wrapClassName), _default$8(_classnames, haveMask, !!haveMask), _classnames)),
        wrapStyle: this.getRcDrawerStyle()
      }),
      on: _default$6({}, getListeners(this))
    };
    return h(
      Drawer$3,
      vcDrawerProps,
      [this.renderBody(prefixCls2)]
    );
  }
};
Drawer.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Drawer.name, Drawer);
};
var Drawer$1 = Drawer;
var skeletonAvatarProps = {
  prefixCls: PropTypes.string,
  size: PropTypes.oneOfType([PropTypes.oneOf(["large", "small", "default"]), PropTypes.number]),
  shape: PropTypes.oneOf(["circle", "square"])
};
var SkeletonAvatarProps = PropTypes.shape(skeletonAvatarProps).loose;
var Avatar = {
  props: initDefaultProps(skeletonAvatarProps, {
    size: "large"
  }),
  render: function render234() {
    var _classNames, _classNames2;
    var h = arguments[0];
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, size = _$props.size, shape2 = _$props.shape;
    var sizeCls = classNames((_classNames = {}, _default$8(_classNames, prefixCls2 + "-lg", size === "large"), _default$8(_classNames, prefixCls2 + "-sm", size === "small"), _classNames));
    var shapeCls = classNames((_classNames2 = {}, _default$8(_classNames2, prefixCls2 + "-circle", shape2 === "circle"), _default$8(_classNames2, prefixCls2 + "-square", shape2 === "square"), _classNames2));
    var sizeStyle = typeof size === "number" ? {
      width: size + "px",
      height: size + "px",
      lineHeight: size + "px"
    } : {};
    return h("span", { "class": classNames(prefixCls2, sizeCls, shapeCls), style: sizeStyle });
  }
};
var Avatar$1 = Avatar;
var skeletonTitleProps = {
  prefixCls: PropTypes.string,
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
};
var SkeletonTitleProps = PropTypes.shape(skeletonTitleProps);
var Title = {
  props: skeletonTitleProps,
  render: function render235() {
    var h = arguments[0];
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, width = _$props.width;
    var zWidth = typeof width === "number" ? width + "px" : width;
    return h("h3", { "class": prefixCls2, style: { width: zWidth } });
  }
};
var Title$1 = Title;
var widthUnit = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);
var skeletonParagraphProps = {
  prefixCls: PropTypes.string,
  width: PropTypes.oneOfType([widthUnit, PropTypes.arrayOf(widthUnit)]),
  rows: PropTypes.number
};
var SkeletonParagraphProps = PropTypes.shape(skeletonParagraphProps);
var Paragraph = {
  props: skeletonParagraphProps,
  methods: {
    getWidth: function getWidth3(index2) {
      var width = this.width, _rows = this.rows, rows = _rows === void 0 ? 2 : _rows;
      if (Array.isArray(width)) {
        return width[index2];
      }
      if (rows - 1 === index2) {
        return width;
      }
      return void 0;
    }
  },
  render: function render236() {
    var _this = this;
    var h = arguments[0];
    var _$props = this.$props, prefixCls2 = _$props.prefixCls, rows = _$props.rows;
    var rowList = [].concat(_default$5(Array(rows))).map(function(_, index2) {
      var width = _this.getWidth(index2);
      return h("li", { key: index2, style: { width: typeof width === "number" ? width + "px" : width } });
    });
    return h(
      "ul",
      { "class": prefixCls2 },
      [rowList]
    );
  }
};
var Paragraph$1 = Paragraph;
var SkeletonProps = {
  active: PropTypes.bool,
  loading: PropTypes.bool,
  prefixCls: PropTypes.string,
  children: PropTypes.any,
  avatar: PropTypes.oneOfType([PropTypes.string, SkeletonAvatarProps, PropTypes.bool]),
  title: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, SkeletonTitleProps]),
  paragraph: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, SkeletonParagraphProps])
};
function getComponentProps(prop) {
  if (prop && (typeof prop === "undefined" ? "undefined" : _default$7(prop)) === "object") {
    return prop;
  }
  return {};
}
function getAvatarBasicProps(hasTitle, hasParagraph) {
  if (hasTitle && !hasParagraph) {
    return { shape: "square" };
  }
  return { shape: "circle" };
}
function getTitleBasicProps(hasAvatar, hasParagraph) {
  if (!hasAvatar && hasParagraph) {
    return { width: "38%" };
  }
  if (hasAvatar && hasParagraph) {
    return { width: "50%" };
  }
  return {};
}
function getParagraphBasicProps(hasAvatar, hasTitle) {
  var basicProps = {};
  if (!hasAvatar || !hasTitle) {
    basicProps.width = "61%";
  }
  if (!hasAvatar && hasTitle) {
    basicProps.rows = 3;
  } else {
    basicProps.rows = 2;
  }
  return basicProps;
}
var Skeleton = {
  name: "ASkeleton",
  props: initDefaultProps(SkeletonProps, {
    avatar: false,
    title: true,
    paragraph: true
  }),
  inject: {
    configProvider: { "default": function _default124() {
      return ConfigConsumerProps;
    } }
  },
  render: function render237() {
    var h = arguments[0];
    var _$props = this.$props, customizePrefixCls = _$props.prefixCls, loading2 = _$props.loading, avatar = _$props.avatar, title = _$props.title, paragraph = _$props.paragraph, active = _$props.active;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("skeleton", customizePrefixCls);
    if (loading2 || !hasProp(this, "loading")) {
      var _classNames;
      var hasAvatar = !!avatar || avatar === "";
      var hasTitle = !!title;
      var hasParagraph = !!paragraph;
      var avatarNode = void 0;
      if (hasAvatar) {
        var avatarProps = {
          props: _default$6({
            prefixCls: prefixCls2 + "-avatar"
          }, getAvatarBasicProps(hasTitle, hasParagraph), getComponentProps(avatar))
        };
        avatarNode = h(
          "div",
          { "class": prefixCls2 + "-header" },
          [h(Avatar$1, avatarProps)]
        );
      }
      var contentNode = void 0;
      if (hasTitle || hasParagraph) {
        var $title = void 0;
        if (hasTitle) {
          var titleProps = {
            props: _default$6({
              prefixCls: prefixCls2 + "-title"
            }, getTitleBasicProps(hasAvatar, hasParagraph), getComponentProps(title))
          };
          $title = h(Title$1, titleProps);
        }
        var paragraphNode = void 0;
        if (hasParagraph) {
          var paragraphProps = {
            props: _default$6({
              prefixCls: prefixCls2 + "-paragraph"
            }, getParagraphBasicProps(hasAvatar, hasTitle), getComponentProps(paragraph))
          };
          paragraphNode = h(Paragraph$1, paragraphProps);
        }
        contentNode = h(
          "div",
          { "class": prefixCls2 + "-content" },
          [$title, paragraphNode]
        );
      }
      var cls = classNames(prefixCls2, (_classNames = {}, _default$8(_classNames, prefixCls2 + "-with-avatar", hasAvatar), _default$8(_classNames, prefixCls2 + "-active", active), _classNames));
      return h(
        "div",
        { "class": cls },
        [avatarNode, contentNode]
      );
    }
    var children = this.$slots["default"];
    return children && children.length === 1 ? children[0] : h("span", [children]);
  }
};
Skeleton.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Skeleton.name, Skeleton);
};
var Skeleton$1 = Skeleton;
var CommentProps = {
  actions: PropTypes.array,
  author: PropTypes.any,
  avatar: PropTypes.any,
  content: PropTypes.any,
  prefixCls: PropTypes.string,
  datetime: PropTypes.any
};
var Comment = {
  name: "AComment",
  props: CommentProps,
  inject: {
    configProvider: { "default": function _default125() {
      return ConfigConsumerProps;
    } }
  },
  methods: {
    getAction: function getAction2(actions) {
      var h = this.$createElement;
      if (!actions || !actions.length) {
        return null;
      }
      var actionList = actions.map(function(action, index2) {
        return h(
          "li",
          { key: "action-" + index2 },
          [action]
        );
      });
      return actionList;
    },
    renderNested: function renderNested(prefixCls2, children) {
      var h = this.$createElement;
      return h(
        "div",
        { "class": prefixCls2 + "-nested" },
        [children]
      );
    }
  },
  render: function render238() {
    var h = arguments[0];
    var customizePrefixCls = this.$props.prefixCls;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("comment", customizePrefixCls);
    var actions = getComponentFromProp(this, "actions");
    var author = getComponentFromProp(this, "author");
    var avatar = getComponentFromProp(this, "avatar");
    var content = getComponentFromProp(this, "content");
    var datetime = getComponentFromProp(this, "datetime");
    var avatarDom = h(
      "div",
      { "class": prefixCls2 + "-avatar" },
      [typeof avatar === "string" ? h("img", {
        attrs: { src: avatar, alt: "comment-avatar" }
      }) : avatar]
    );
    var actionDom = actions && actions.length ? h(
      "ul",
      { "class": prefixCls2 + "-actions" },
      [this.getAction(actions)]
    ) : null;
    var authorContent = h(
      "div",
      { "class": prefixCls2 + "-content-author" },
      [author && h(
        "span",
        { "class": prefixCls2 + "-content-author-name" },
        [author]
      ), datetime && h(
        "span",
        { "class": prefixCls2 + "-content-author-time" },
        [datetime]
      )]
    );
    var contentDom = h(
      "div",
      { "class": prefixCls2 + "-content" },
      [authorContent, h(
        "div",
        { "class": prefixCls2 + "-content-detail" },
        [content]
      ), actionDom]
    );
    var comment = h(
      "div",
      { "class": prefixCls2 + "-inner" },
      [avatarDom, contentDom]
    );
    var children = this.$slots["default"];
    return h(
      "div",
      _mergeJSXProps([{ "class": prefixCls2 }, { on: getListeners(this) }]),
      [comment, children ? this.renderNested(prefixCls2, children) : null]
    );
  }
};
Comment.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Comment.name, Comment);
};
var Comment$1 = Comment;
function getWatch() {
  var keys3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var watch = {};
  keys3.forEach(function(k) {
    watch[k] = function(value27) {
      this._proxyVm._data[k] = value27;
    };
  });
  return watch;
}
var ConfigProvider = {
  name: "AConfigProvider",
  props: {
    getPopupContainer: PropTypes.func,
    prefixCls: PropTypes.string,
    renderEmpty: PropTypes.func,
    csp: PropTypes.object,
    autoInsertSpaceInButton: PropTypes.bool,
    locale: PropTypes.object,
    pageHeader: PropTypes.object,
    transformCellText: PropTypes.func
  },
  provide: function provide30() {
    var _self = this;
    this._proxyVm = new Vue({
      data: function data109() {
        return _default$6({}, _self.$props, {
          getPrefixCls: _self.getPrefixCls,
          renderEmpty: _self.renderEmptyComponent
        });
      }
    });
    return {
      configProvider: this._proxyVm._data
    };
  },
  watch: _default$6({}, getWatch(["prefixCls", "csp", "autoInsertSpaceInButton", "locale", "pageHeader", "transformCellText"])),
  methods: {
    renderEmptyComponent: function renderEmptyComponent(h, name) {
      var renderEmpty$1 = getComponentFromProp(this, "renderEmpty", {}, false) || renderEmpty2;
      return renderEmpty$1(h, name);
    },
    getPrefixCls: function getPrefixCls4(suffixCls, customizePrefixCls) {
      var _$props$prefixCls = this.$props.prefixCls, prefixCls2 = _$props$prefixCls === void 0 ? "ant" : _$props$prefixCls;
      if (customizePrefixCls)
        return customizePrefixCls;
      return suffixCls ? prefixCls2 + "-" + suffixCls : prefixCls2;
    },
    renderProvider: function renderProvider(legacyLocale) {
      var h = this.$createElement;
      return h(
        LocaleProvider$1,
        {
          attrs: { locale: this.locale || legacyLocale, _ANT_MARK__: ANT_MARK }
        },
        [this.$slots["default"] ? filterEmpty(this.$slots["default"])[0] : null]
      );
    }
  },
  render: function render239() {
    var _this = this;
    var h = arguments[0];
    return h(LocaleReceiver, {
      scopedSlots: { "default": function _default130(_, __, legacyLocale) {
        return _this.renderProvider(legacyLocale);
      } }
    });
  }
};
ConfigProvider.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(ConfigProvider.name, ConfigProvider);
};
var ConfigProvider$1 = ConfigProvider;
var NoFound = {
  functional: true,
  render: function render240() {
    var h = arguments[0];
    return h(
      "svg",
      {
        attrs: { width: "252", height: "294" }
      },
      [h("defs", [h("path", {
        attrs: { d: "M0 .387h251.772v251.772H0z" }
      })]), h(
        "g",
        {
          attrs: { fill: "none", fillRule: "evenodd" }
        },
        [h(
          "g",
          {
            attrs: { transform: "translate(0 .012)" }
          },
          [h("mask", {
            attrs: { fill: "#fff" }
          }), h("path", {
            attrs: {
              d: "M0 127.32v-2.095C0 56.279 55.892.387 124.838.387h2.096c68.946 0 124.838 55.892 124.838 124.838v2.096c0 68.946-55.892 124.838-124.838 124.838h-2.096C55.892 252.16 0 196.267 0 127.321",
              fill: "#E4EBF7",
              mask: "url(#b)"
            }
          })]
        ), h("path", {
          attrs: {
            d: "M39.755 130.84a8.276 8.276 0 1 1-16.468-1.66 8.276 8.276 0 0 1 16.468 1.66",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M36.975 134.297l10.482 5.943M48.373 146.508l-12.648 10.788",
            stroke: "#FFF",
            strokeWidth: "2"
          }
        }), h("path", {
          attrs: {
            d: "M39.875 159.352a5.667 5.667 0 1 1-11.277-1.136 5.667 5.667 0 0 1 11.277 1.136M57.588 143.247a5.708 5.708 0 1 1-11.358-1.145 5.708 5.708 0 0 1 11.358 1.145M99.018 26.875l29.82-.014a4.587 4.587 0 1 0-.003-9.175l-29.82.013a4.587 4.587 0 1 0 .003 9.176M110.424 45.211l29.82-.013a4.588 4.588 0 0 0-.004-9.175l-29.82.013a4.587 4.587 0 1 0 .004 9.175",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M112.798 26.861v-.002l15.784-.006a4.588 4.588 0 1 0 .003 9.175l-15.783.007v-.002a4.586 4.586 0 0 0-.004-9.172M184.523 135.668c-.553 5.485-5.447 9.483-10.931 8.93-5.485-.553-9.483-5.448-8.93-10.932.552-5.485 5.447-9.483 10.932-8.93 5.485.553 9.483 5.447 8.93 10.932",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M179.26 141.75l12.64 7.167M193.006 156.477l-15.255 13.011",
            stroke: "#FFF",
            strokeWidth: "2"
          }
        }), h("path", {
          attrs: {
            d: "M184.668 170.057a6.835 6.835 0 1 1-13.6-1.372 6.835 6.835 0 0 1 13.6 1.372M203.34 153.325a6.885 6.885 0 1 1-13.7-1.382 6.885 6.885 0 0 1 13.7 1.382",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M151.931 192.324a2.222 2.222 0 1 1-4.444 0 2.222 2.222 0 0 1 4.444 0zM225.27 116.056a2.222 2.222 0 1 1-4.445 0 2.222 2.222 0 0 1 4.444 0zM216.38 151.08a2.223 2.223 0 1 1-4.446-.001 2.223 2.223 0 0 1 4.446 0zM176.917 107.636a2.223 2.223 0 1 1-4.445 0 2.223 2.223 0 0 1 4.445 0zM195.291 92.165a2.223 2.223 0 1 1-4.445 0 2.223 2.223 0 0 1 4.445 0zM202.058 180.711a2.223 2.223 0 1 1-4.446 0 2.223 2.223 0 0 1 4.446 0z",
            stroke: "#FFF",
            strokeWidth: "2"
          }
        }), h("path", {
          attrs: {
            stroke: "#FFF",
            strokeWidth: "2",
            d: "M214.404 153.302l-1.912 20.184-10.928 5.99M173.661 174.792l-6.356 9.814h-11.36l-4.508 6.484M174.941 125.168v-15.804M220.824 117.25l-12.84 7.901-15.31-7.902V94.39"
          }
        }), h("path", {
          attrs: {
            d: "M166.588 65.936h-3.951a4.756 4.756 0 0 1-4.743-4.742 4.756 4.756 0 0 1 4.743-4.743h3.951a4.756 4.756 0 0 1 4.743 4.743 4.756 4.756 0 0 1-4.743 4.742",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M174.823 30.03c0-16.281 13.198-29.48 29.48-29.48 16.28 0 29.48 13.199 29.48 29.48 0 16.28-13.2 29.48-29.48 29.48-16.282 0-29.48-13.2-29.48-29.48",
            fill: "#1890FF"
          }
        }), h("path", {
          attrs: {
            d: "M205.952 38.387c.5.5.785 1.142.785 1.928s-.286 1.465-.785 1.964c-.572.5-1.214.75-2 .75-.785 0-1.429-.285-1.929-.785-.572-.5-.82-1.143-.82-1.929s.248-1.428.82-1.928c.5-.5 1.144-.75 1.93-.75.785 0 1.462.25 1.999.75m4.285-19.463c1.428 1.249 2.143 2.963 2.143 5.142 0 1.712-.427 3.13-1.219 4.25-.067.096-.137.18-.218.265-.416.429-1.41 1.346-2.956 2.699a5.07 5.07 0 0 0-1.428 1.75 5.207 5.207 0 0 0-.536 2.357v.5h-4.107v-.5c0-1.357.215-2.536.714-3.5.464-.964 1.857-2.464 4.178-4.536l.43-.5c.643-.785.964-1.643.964-2.535 0-1.18-.358-2.108-1-2.785-.678-.68-1.643-1.001-2.858-1.001-1.536 0-2.642.464-3.357 1.43-.37.5-.621 1.135-.76 1.904a1.999 1.999 0 0 1-1.971 1.63h-.004c-1.277 0-2.257-1.183-1.98-2.43.337-1.518 1.02-2.78 2.073-3.784 1.536-1.5 3.607-2.25 6.25-2.25 2.32 0 4.214.607 5.642 1.894",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M52.04 76.131s21.81 5.36 27.307 15.945c5.575 10.74-6.352 9.26-15.73 4.935-10.86-5.008-24.7-11.822-11.577-20.88",
            fill: "#FFB594"
          }
        }), h("path", {
          attrs: {
            d: "M90.483 67.504l-.449 2.893c-.753.49-4.748-2.663-4.748-2.663l-1.645.748-1.346-5.684s6.815-4.589 8.917-5.018c2.452-.501 9.884.94 10.7 2.278 0 0 1.32.486-2.227.69-3.548.203-5.043.447-6.79 3.132-1.747 2.686-2.412 3.624-2.412 3.624",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M128.055 111.367c-2.627-7.724-6.15-13.18-8.917-15.478-3.5-2.906-9.34-2.225-11.366-4.187-1.27-1.231-3.215-1.197-3.215-1.197s-14.98-3.158-16.828-3.479c-2.37-.41-2.124-.714-6.054-1.405-1.57-1.907-2.917-1.122-2.917-1.122l-7.11-1.383c-.853-1.472-2.423-1.023-2.423-1.023l-2.468-.897c-1.645 9.976-7.74 13.796-7.74 13.796 1.795 1.122 15.703 8.3 15.703 8.3l5.107 37.11s-3.321 5.694 1.346 9.109c0 0 19.883-3.743 34.921-.329 0 0 3.047-2.546.972-8.806.523-3.01 1.394-8.263 1.736-11.622.385.772 2.019 1.918 3.14 3.477 0 0 9.407-7.365 11.052-14.012-.832-.723-1.598-1.585-2.267-2.453-.567-.736-.358-2.056-.765-2.717-.669-1.084-1.804-1.378-1.907-1.682",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M101.09 289.998s4.295 2.041 7.354 1.021c2.821-.94 4.53.668 7.08 1.178 2.55.51 6.874 1.1 11.686-1.26-.103-5.51-6.889-3.98-11.96-6.713-2.563-1.38-3.784-4.722-3.598-8.799h-9.402s-1.392 10.52-1.16 14.573",
            fill: "#CBD1D1"
          }
        }), h("path", {
          attrs: {
            d: "M101.067 289.826s2.428 1.271 6.759.653c3.058-.437 3.712.481 7.423 1.031 3.712.55 10.724-.069 11.823-.894.413 1.1-.343 2.063-.343 2.063s-1.512.603-4.812.824c-2.03.136-5.8.291-7.607-.503-1.787-1.375-5.247-1.903-5.728-.241-3.918.95-7.355-.286-7.355-.286l-.16-2.647z",
            fill: "#2B0849"
          }
        }), h("path", {
          attrs: {
            d: "M108.341 276.044h3.094s-.103 6.702 4.536 8.558c-4.64.618-8.558-2.303-7.63-8.558",
            fill: "#A4AABA"
          }
        }), h("path", {
          attrs: {
            d: "M57.542 272.401s-2.107 7.416-4.485 12.306c-1.798 3.695-4.225 7.492 5.465 7.492 6.648 0 8.953-.48 7.423-6.599-1.53-6.12.266-13.199.266-13.199h-8.669z",
            fill: "#CBD1D1"
          }
        }), h("path", {
          attrs: {
            d: "M51.476 289.793s2.097 1.169 6.633 1.169c6.083 0 8.249-1.65 8.249-1.65s.602 1.114-.619 2.165c-.993.855-3.597 1.591-7.39 1.546-4.145-.048-5.832-.566-6.736-1.168-.825-.55-.687-1.58-.137-2.062",
            fill: "#2B0849"
          }
        }), h("path", {
          attrs: {
            d: "M58.419 274.304s.033 1.519-.314 2.93c-.349 1.42-1.078 3.104-1.13 4.139-.058 1.151 4.537 1.58 5.155.034.62-1.547 1.294-6.427 1.913-7.252.619-.825-4.903-2.119-5.624.15",
            fill: "#A4AABA"
          }
        }), h("path", {
          attrs: {
            d: "M99.66 278.514l13.378.092s1.298-54.52 1.853-64.403c.554-9.882 3.776-43.364 1.002-63.128l-12.547-.644-22.849.78s-.434 3.966-1.195 9.976c-.063.496-.682.843-.749 1.365-.075.585.423 1.354.32 1.966-2.364 14.08-6.377 33.104-8.744 46.677-.116.666-1.234 1.009-1.458 2.691-.04.302.211 1.525.112 1.795-6.873 18.744-10.949 47.842-14.277 61.885l14.607-.014s2.197-8.57 4.03-16.97c2.811-12.886 23.111-85.01 23.111-85.01l3.016-.521 1.043 46.35s-.224 1.234.337 2.02c.56.785-.56 1.123-.392 2.244l.392 1.794s-.449 7.178-.898 11.89c-.448 4.71-.092 39.165-.092 39.165",
            fill: "#7BB2F9"
          }
        }), h("path", {
          attrs: {
            d: "M76.085 221.626c1.153.094 4.038-2.019 6.955-4.935M106.36 225.142s2.774-1.11 6.103-3.883",
            stroke: "#648BD8",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M107.275 222.1s2.773-1.11 6.102-3.884",
            stroke: "#648BD8",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M74.74 224.767s2.622-.591 6.505-3.365M86.03 151.634c-.27 3.106.3 8.525-4.336 9.123M103.625 149.88s.11 14.012-1.293 15.065c-2.219 1.664-2.99 1.944-2.99 1.944M99.79 150.438s.035 12.88-1.196 24.377M93.673 175.911s7.212-1.664 9.431-1.664M74.31 205.861a212.013 212.013 0 0 1-.979 4.56s-1.458 1.832-1.009 3.776c.449 1.944-.947 2.045-4.985 15.355-1.696 5.59-4.49 18.591-6.348 27.597l-.231 1.12M75.689 197.807a320.934 320.934 0 0 1-.882 4.754M82.591 152.233L81.395 162.7s-1.097.15-.5 2.244c.113 1.346-2.674 15.775-5.18 30.43M56.12 274.418h13.31",
            stroke: "#648BD8",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M116.241 148.22s-17.047-3.104-35.893.2c.158 2.514-.003 4.15-.003 4.15s14.687-2.818 35.67-.312c.252-2.355.226-4.038.226-4.038",
            fill: "#192064"
          }
        }), h("path", {
          attrs: {
            d: "M106.322 151.165l.003-4.911a.81.81 0 0 0-.778-.815c-2.44-.091-5.066-.108-7.836-.014a.818.818 0 0 0-.789.815l-.003 4.906a.81.81 0 0 0 .831.813c2.385-.06 4.973-.064 7.73.017a.815.815 0 0 0 .842-.81",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M105.207 150.233l.002-3.076a.642.642 0 0 0-.619-.646 94.321 94.321 0 0 0-5.866-.01.65.65 0 0 0-.63.647v3.072a.64.64 0 0 0 .654.644 121.12 121.12 0 0 1 5.794.011c.362.01.665-.28.665-.642",
            fill: "#192064"
          }
        }), h("path", {
          attrs: {
            d: "M100.263 275.415h12.338M101.436 270.53c.006 3.387.042 5.79.111 6.506M101.451 264.548a915.75 915.75 0 0 0-.015 4.337M100.986 174.965l.898 44.642s.673 1.57-.225 2.692c-.897 1.122 2.468.673.898 2.243-1.57 1.57.897 1.122 0 3.365-.596 1.489-.994 21.1-1.096 35.146",
            stroke: "#648BD8",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M46.876 83.427s-.516 6.045 7.223 5.552c11.2-.712 9.218-9.345 31.54-21.655-.786-2.708-2.447-4.744-2.447-4.744s-11.068 3.11-22.584 8.046c-6.766 2.9-13.395 6.352-13.732 12.801M104.46 91.057l.941-5.372-8.884-11.43-5.037 5.372-1.74 7.834a.321.321 0 0 0 .108.32c.965.8 6.5 5.013 14.347 3.544a.332.332 0 0 0 .264-.268",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M93.942 79.387s-4.533-2.853-2.432-6.855c1.623-3.09 4.513 1.133 4.513 1.133s.52-3.642 3.121-3.642c.52-1.04 1.561-4.162 1.561-4.162s11.445 2.601 13.526 3.121c0 5.203-2.304 19.424-7.84 19.861-8.892.703-12.449-9.456-12.449-9.456",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M113.874 73.446c2.601-2.081 3.47-9.722 3.47-9.722s-2.479-.49-6.64-2.05c-4.683-2.081-12.798-4.747-17.48.976-9.668 3.223-2.05 19.823-2.05 19.823l2.713-3.021s-3.935-3.287-2.08-6.243c2.17-3.462 3.92 1.073 3.92 1.073s.637-2.387 3.581-3.342c.355-.71 1.036-2.674 1.432-3.85a1.073 1.073 0 0 1 1.263-.704c2.4.558 8.677 2.019 11.356 2.662.522.125.871.615.82 1.15l-.305 3.248z",
            fill: "#520038"
          }
        }), h("path", {
          attrs: {
            d: "M104.977 76.064c-.103.61-.582 1.038-1.07.956-.489-.083-.801-.644-.698-1.254.103-.61.582-1.038 1.07-.956.488.082.8.644.698 1.254M112.132 77.694c-.103.61-.582 1.038-1.07.956-.488-.083-.8-.644-.698-1.254.103-.61.582-1.038 1.07-.956.488.082.8.643.698 1.254",
            fill: "#552950"
          }
        }), h("path", {
          attrs: {
            stroke: "#DB836E",
            strokeWidth: "1.118",
            strokeLinecap: "round",
            strokeLinejoin: "round",
            d: "M110.13 74.84l-.896 1.61-.298 4.357h-2.228"
          }
        }), h("path", {
          attrs: {
            d: "M110.846 74.481s1.79-.716 2.506.537",
            stroke: "#5C2552",
            strokeWidth: "1.118",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M92.386 74.282s.477-1.114 1.113-.716c.637.398 1.274 1.433.558 1.99-.717.556.159 1.67.159 1.67",
            stroke: "#DB836E",
            strokeWidth: "1.118",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M103.287 72.93s1.83 1.113 4.137.954",
            stroke: "#5C2552",
            strokeWidth: "1.118",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M103.685 81.762s2.227 1.193 4.376 1.193M104.64 84.308s.954.398 1.511.318M94.693 81.205s2.308 7.4 10.424 7.639",
            stroke: "#DB836E",
            strokeWidth: "1.118",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M81.45 89.384s.45 5.647-4.935 12.787M69 82.654s-.726 9.282-8.204 14.206",
            stroke: "#E4EBF7",
            strokeWidth: "1.101",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M129.405 122.865s-5.272 7.403-9.422 10.768",
            stroke: "#E4EBF7",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M119.306 107.329s.452 4.366-2.127 32.062",
            stroke: "#E4EBF7",
            strokeWidth: "1.101",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M150.028 151.232h-49.837a1.01 1.01 0 0 1-1.01-1.01v-31.688c0-.557.452-1.01 1.01-1.01h49.837c.558 0 1.01.453 1.01 1.01v31.688a1.01 1.01 0 0 1-1.01 1.01",
            fill: "#F2D7AD"
          }
        }), h("path", {
          attrs: {
            d: "M150.29 151.232h-19.863v-33.707h20.784v32.786a.92.92 0 0 1-.92.92",
            fill: "#F4D19D"
          }
        }), h("path", {
          attrs: {
            d: "M123.554 127.896H92.917a.518.518 0 0 1-.425-.816l6.38-9.113c.193-.277.51-.442.85-.442h31.092l-7.26 10.371z",
            fill: "#F2D7AD"
          }
        }), h("path", {
          attrs: { fill: "#CC9B6E", d: "M123.689 128.447H99.25v-.519h24.169l7.183-10.26.424.298z" }
        }), h("path", {
          attrs: {
            d: "M158.298 127.896h-18.669a2.073 2.073 0 0 1-1.659-.83l-7.156-9.541h19.965c.49 0 .95.23 1.244.622l6.69 8.92a.519.519 0 0 1-.415.83",
            fill: "#F4D19D"
          }
        }), h("path", {
          attrs: {
            fill: "#CC9B6E",
            d: "M157.847 128.479h-19.384l-7.857-10.475.415-.31 7.7 10.266h19.126zM130.554 150.685l-.032-8.177.519-.002.032 8.177z"
          }
        }), h("path", {
          attrs: {
            fill: "#CC9B6E",
            d: "M130.511 139.783l-.08-21.414.519-.002.08 21.414zM111.876 140.932l-.498-.143 1.479-5.167.498.143zM108.437 141.06l-2.679-2.935 2.665-3.434.41.318-2.397 3.089 2.384 2.612zM116.607 141.06l-.383-.35 2.383-2.612-2.397-3.089.41-.318 2.665 3.434z"
          }
        }), h("path", {
          attrs: {
            d: "M154.316 131.892l-3.114-1.96.038 3.514-1.043.092c-1.682.115-3.634.23-4.789.23-1.902 0-2.693 2.258 2.23 2.648l-2.645-.596s-2.168 1.317.504 2.3c0 0-1.58 1.217.561 2.58-.584 3.504 5.247 4.058 7.122 3.59 1.876-.47 4.233-2.359 4.487-5.16.28-3.085-.89-5.432-3.35-7.238",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M153.686 133.577s-6.522.47-8.36.372c-1.836-.098-1.904 2.19 2.359 2.264 3.739.15 5.451-.044 5.451-.044",
            stroke: "#DB836E",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M145.16 135.877c-1.85 1.346.561 2.355.561 2.355s3.478.898 6.73.617",
            stroke: "#DB836E",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M151.89 141.71s-6.28.111-6.73-2.132c-.223-1.346.45-1.402.45-1.402M146.114 140.868s-1.103 3.16 5.44 3.533M151.202 129.932v3.477M52.838 89.286c3.533-.337 8.423-1.248 13.582-7.754",
            stroke: "#DB836E",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M168.567 248.318a6.647 6.647 0 0 1-6.647-6.647v-66.466a6.647 6.647 0 1 1 13.294 0v66.466a6.647 6.647 0 0 1-6.647 6.647",
            fill: "#5BA02E"
          }
        }), h("path", {
          attrs: {
            d: "M176.543 247.653a6.647 6.647 0 0 1-6.646-6.647v-33.232a6.647 6.647 0 1 1 13.293 0v33.232a6.647 6.647 0 0 1-6.647 6.647",
            fill: "#92C110"
          }
        }), h("path", {
          attrs: {
            d: "M186.443 293.613H158.92a3.187 3.187 0 0 1-3.187-3.187v-46.134a3.187 3.187 0 0 1 3.187-3.187h27.524a3.187 3.187 0 0 1 3.187 3.187v46.134a3.187 3.187 0 0 1-3.187 3.187",
            fill: "#F2D7AD"
          }
        }), h("path", {
          attrs: {
            d: "M88.979 89.48s7.776 5.384 16.6 2.842",
            stroke: "#E4EBF7",
            strokeWidth: "1.101",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        })]
      )]
    );
  }
};
var noFound = NoFound;
var ServerError = {
  functional: true,
  render: function render241() {
    var h = arguments[0];
    return h(
      "svg",
      {
        attrs: { width: "254", height: "294" }
      },
      [h("defs", [h("path", {
        attrs: { d: "M0 .335h253.49v253.49H0z" }
      }), h("path", {
        attrs: { d: "M0 293.665h253.49V.401H0z" }
      })]), h(
        "g",
        {
          attrs: { fill: "none", fillRule: "evenodd" }
        },
        [h(
          "g",
          {
            attrs: { transform: "translate(0 .067)" }
          },
          [h("mask", {
            attrs: { fill: "#fff" }
          }), h("path", {
            attrs: {
              d: "M0 128.134v-2.11C0 56.608 56.273.334 125.69.334h2.11c69.416 0 125.69 56.274 125.69 125.69v2.11c0 69.417-56.274 125.69-125.69 125.69h-2.11C56.273 253.824 0 197.551 0 128.134",
              fill: "#E4EBF7",
              mask: "url(#b)"
            }
          })]
        ), h("path", {
          attrs: {
            d: "M39.989 132.108a8.332 8.332 0 1 1-16.581-1.671 8.332 8.332 0 0 1 16.58 1.671",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M37.19 135.59l10.553 5.983M48.665 147.884l-12.734 10.861",
            stroke: "#FFF",
            strokeWidth: "2"
          }
        }), h("path", {
          attrs: {
            d: "M40.11 160.816a5.706 5.706 0 1 1-11.354-1.145 5.706 5.706 0 0 1 11.354 1.145M57.943 144.6a5.747 5.747 0 1 1-11.436-1.152 5.747 5.747 0 0 1 11.436 1.153M99.656 27.434l30.024-.013a4.619 4.619 0 1 0-.004-9.238l-30.024.013a4.62 4.62 0 0 0 .004 9.238M111.14 45.896l30.023-.013a4.62 4.62 0 1 0-.004-9.238l-30.024.013a4.619 4.619 0 1 0 .004 9.238",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M113.53 27.421v-.002l15.89-.007a4.619 4.619 0 1 0 .005 9.238l-15.892.007v-.002a4.618 4.618 0 0 0-.004-9.234M150.167 70.091h-3.979a4.789 4.789 0 0 1-4.774-4.775 4.788 4.788 0 0 1 4.774-4.774h3.979a4.789 4.789 0 0 1 4.775 4.774 4.789 4.789 0 0 1-4.775 4.775",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M171.687 30.234c0-16.392 13.289-29.68 29.681-29.68 16.392 0 29.68 13.288 29.68 29.68 0 16.393-13.288 29.681-29.68 29.681s-29.68-13.288-29.68-29.68",
            fill: "#FF603B"
          }
        }), h("path", {
          attrs: {
            d: "M203.557 19.435l-.676 15.035a1.514 1.514 0 0 1-3.026 0l-.675-15.035a2.19 2.19 0 1 1 4.377 0m-.264 19.378c.513.477.77 1.1.77 1.87s-.257 1.393-.77 1.907c-.55.476-1.21.733-1.943.733a2.545 2.545 0 0 1-1.87-.77c-.55-.514-.806-1.136-.806-1.87 0-.77.256-1.393.806-1.87.513-.513 1.137-.733 1.87-.733.77 0 1.43.22 1.943.733",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M119.3 133.275c4.426-.598 3.612-1.204 4.079-4.778.675-5.18-3.108-16.935-8.262-25.118-1.088-10.72-12.598-11.24-12.598-11.24s4.312 4.895 4.196 16.199c1.398 5.243.804 14.45.804 14.45s5.255 11.369 11.78 10.487",
            fill: "#FFB594"
          }
        }), h("path", {
          attrs: {
            d: "M100.944 91.61s1.463-.583 3.211.582c8.08 1.398 10.368 6.706 11.3 11.368 1.864 1.282 1.864 2.33 1.864 3.496.365.777 1.515 3.03 1.515 3.03s-7.225 1.748-10.954 6.758c-1.399-6.41-6.936-25.235-6.936-25.235",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M94.008 90.5l1.019-5.815-9.23-11.874-5.233 5.581-2.593 9.863s8.39 5.128 16.037 2.246",
            fill: "#FFB594"
          }
        }), h("path", {
          attrs: {
            d: "M82.931 78.216s-4.557-2.868-2.445-6.892c1.632-3.107 4.537 1.139 4.537 1.139s.524-3.662 3.139-3.662c.523-1.046 1.569-4.184 1.569-4.184s11.507 2.615 13.6 3.138c-.001 5.23-2.317 19.529-7.884 19.969-8.94.706-12.516-9.508-12.516-9.508",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M102.971 72.243c2.616-2.093 3.489-9.775 3.489-9.775s-2.492-.492-6.676-2.062c-4.708-2.092-12.867-4.771-17.575.982-9.54 4.41-2.062 19.93-2.062 19.93l2.729-3.037s-3.956-3.304-2.092-6.277c2.183-3.48 3.943 1.08 3.943 1.08s.64-2.4 3.6-3.36c.356-.714 1.04-2.69 1.44-3.872a1.08 1.08 0 0 1 1.27-.707c2.41.56 8.723 2.03 11.417 2.676.524.126.876.619.825 1.156l-.308 3.266z",
            fill: "#520038"
          }
        }), h("path", {
          attrs: {
            d: "M101.22 76.514c-.104.613-.585 1.044-1.076.96-.49-.082-.805-.646-.702-1.26.104-.613.585-1.044 1.076-.961.491.083.805.647.702 1.26M94.26 75.074c-.104.613-.585 1.044-1.076.96-.49-.082-.805-.646-.702-1.26.104-.613.585-1.044 1.076-.96.491.082.805.646.702 1.26",
            fill: "#552950"
          }
        }), h("path", {
          attrs: {
            stroke: "#DB836E",
            strokeWidth: "1.063",
            strokeLinecap: "round",
            strokeLinejoin: "round",
            d: "M99.206 73.644l-.9 1.62-.3 4.38h-2.24"
          }
        }), h("path", {
          attrs: {
            d: "M99.926 73.284s1.8-.72 2.52.54",
            stroke: "#5C2552",
            strokeWidth: "1.117",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M81.367 73.084s.48-1.12 1.12-.72c.64.4 1.28 1.44.56 2s.16 1.68.16 1.68",
            stroke: "#DB836E",
            strokeWidth: "1.117",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M92.326 71.724s1.84 1.12 4.16.96",
            stroke: "#5C2552",
            strokeWidth: "1.117",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M92.726 80.604s2.24 1.2 4.4 1.2M93.686 83.164s.96.4 1.52.32M83.687 80.044s1.786 6.547 9.262 7.954",
            stroke: "#DB836E",
            strokeWidth: "1.063",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M95.548 91.663s-1.068 2.821-8.298 2.105c-7.23-.717-10.29-5.044-10.29-5.044",
            stroke: "#E4EBF7",
            strokeWidth: "1.136",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M78.126 87.478s6.526 4.972 16.47 2.486c0 0 9.577 1.02 11.536 5.322 5.36 11.77.543 36.835 0 39.962 3.496 4.055-.466 8.483-.466 8.483-15.624-3.548-35.81-.6-35.81-.6-4.849-3.546-1.223-9.044-1.223-9.044L62.38 110.32c-2.485-15.227.833-19.803 3.549-20.743 3.03-1.049 8.04-1.282 8.04-1.282.496-.058 1.08-.076 1.37-.233 2.36-1.282 2.787-.583 2.787-.583",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M65.828 89.81s-6.875.465-7.59 8.156c-.466 8.857 3.03 10.954 3.03 10.954s6.075 22.102 16.796 22.957c8.39-2.176 4.758-6.702 4.661-11.42-.233-11.304-7.108-16.897-7.108-16.897s-4.212-13.75-9.789-13.75",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M71.716 124.225s.855 11.264 9.828 6.486c4.765-2.536 7.581-13.828 9.789-22.568 1.456-5.768 2.58-12.197 2.58-12.197l-4.973-1.709s-2.408 5.516-7.769 12.275c-4.335 5.467-9.144 11.11-9.455 17.713",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M108.463 105.191s1.747 2.724-2.331 30.535c2.376 2.216 1.053 6.012-.233 7.51",
            stroke: "#E4EBF7",
            strokeWidth: "1.085",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M123.262 131.527s-.427 2.732-11.77 1.981c-15.187-1.006-25.326-3.25-25.326-3.25l.933-5.8s.723.215 9.71-.068c11.887-.373 18.714-6.07 24.964-1.022 4.039 3.263 1.489 8.16 1.489 8.16",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M70.24 90.974s-5.593-4.739-11.054 2.68c-3.318 7.223.517 15.284 2.664 19.578-.31 3.729 2.33 4.311 2.33 4.311s.108.895 1.516 2.68c4.078-7.03 6.72-9.166 13.711-12.546-.328-.656-1.877-3.265-1.825-3.767.175-1.69-1.282-2.623-1.282-2.623s-.286-.156-1.165-2.738c-.788-2.313-2.036-5.177-4.895-7.575",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M90.232 288.027s4.855 2.308 8.313 1.155c3.188-1.063 5.12.755 8.002 1.331 2.881.577 7.769 1.243 13.207-1.424-.117-6.228-7.786-4.499-13.518-7.588-2.895-1.56-4.276-5.336-4.066-9.944H91.544s-1.573 11.89-1.312 16.47",
            fill: "#CBD1D1"
          }
        }), h("path", {
          attrs: {
            d: "M90.207 287.833s2.745 1.437 7.639.738c3.456-.494 3.223.66 7.418 1.282 4.195.621 13.092-.194 14.334-1.126.466 1.242-.388 2.33-.388 2.33s-1.709.682-5.438.932c-2.295.154-8.098.276-10.14-.621-2.02-1.554-4.894-1.515-6.06-.234-4.427 1.075-7.184-.31-7.184-.31l-.181-2.991z",
            fill: "#2B0849"
          }
        }), h("path", {
          attrs: {
            d: "M98.429 272.257h3.496s-.117 7.574 5.127 9.671c-5.244.7-9.672-2.602-8.623-9.671",
            fill: "#A4AABA"
          }
        }), h("path", {
          attrs: {
            d: "M44.425 272.046s-2.208 7.774-4.702 12.899c-1.884 3.874-4.428 7.854 5.729 7.854 6.97 0 9.385-.503 7.782-6.917-1.604-6.415.279-13.836.279-13.836h-9.088z",
            fill: "#CBD1D1"
          }
        }), h("path", {
          attrs: {
            d: "M38.066 290.277s2.198 1.225 6.954 1.225c6.376 0 8.646-1.73 8.646-1.73s.63 1.168-.649 2.27c-1.04.897-3.77 1.668-7.745 1.621-4.347-.05-6.115-.593-7.062-1.224-.864-.577-.72-1.657-.144-2.162",
            fill: "#2B0849"
          }
        }), h("path", {
          attrs: {
            d: "M45.344 274.041s.035 1.592-.329 3.07c-.365 1.49-1.13 3.255-1.184 4.34-.061 1.206 4.755 1.657 5.403.036.65-1.622 1.357-6.737 2.006-7.602.648-.865-5.14-2.222-5.896.156",
            fill: "#A4AABA"
          }
        }), h("path", {
          attrs: {
            d: "M89.476 277.57l13.899.095s1.349-56.643 1.925-66.909c.576-10.267 3.923-45.052 1.042-65.585l-13.037-.669-23.737.81s-.452 4.12-1.243 10.365c-.065.515-.708.874-.777 1.417-.078.608.439 1.407.332 2.044-2.455 14.627-5.797 32.736-8.256 46.837-.121.693-1.282 1.048-1.515 2.796-.042.314.22 1.584.116 1.865-7.14 19.473-12.202 52.601-15.66 67.19l15.176-.015s2.282-10.145 4.185-18.871c2.922-13.389 24.012-88.32 24.012-88.32l3.133-.954-.158 48.568s-.233 1.282.35 2.098c.583.815-.581 1.167-.408 2.331l.408 1.864s-.466 7.458-.932 12.352c-.467 4.895 1.145 40.69 1.145 40.69",
            fill: "#7BB2F9"
          }
        }), h("path", {
          attrs: {
            d: "M64.57 218.881c1.197.099 4.195-2.097 7.225-5.127M96.024 222.534s2.881-1.152 6.34-4.034",
            stroke: "#648BD8",
            strokeWidth: "1.085",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M96.973 219.373s2.882-1.153 6.34-4.034",
            stroke: "#648BD8",
            strokeWidth: "1.032",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M63.172 222.144s2.724-.614 6.759-3.496M74.903 146.166c-.281 3.226.31 8.856-4.506 9.478M93.182 144.344s.115 14.557-1.344 15.65c-2.305 1.73-3.107 2.02-3.107 2.02M89.197 144.923s.269 13.144-1.01 25.088M83.525 170.71s6.81-1.051 9.116-1.051M46.026 270.045l-.892 4.538M46.937 263.289l-.815 4.157M62.725 202.503c-.33 1.618-.102 1.904-.449 3.438 0 0-2.756 1.903-2.29 3.923.466 2.02-.31 3.424-4.505 17.252-1.762 5.807-4.233 18.922-6.165 28.278-.03.144-.521 2.646-1.14 5.8M64.158 194.136c-.295 1.658-.6 3.31-.917 4.938M71.33 146.787l-1.244 10.877s-1.14.155-.519 2.33c.117 1.399-2.778 16.39-5.382 31.615M44.242 273.727H58.07",
            stroke: "#648BD8",
            strokeWidth: "1.085",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M106.18 142.117c-3.028-.489-18.825-2.744-36.219.2a.625.625 0 0 0-.518.644c.063 1.307.044 2.343.015 2.995a.617.617 0 0 0 .716.636c3.303-.534 17.037-2.412 35.664-.266.347.04.66-.214.692-.56.124-1.347.16-2.425.17-3.029a.616.616 0 0 0-.52-.62",
            fill: "#192064"
          }
        }), h("path", {
          attrs: {
            d: "M96.398 145.264l.003-5.102a.843.843 0 0 0-.809-.847 114.104 114.104 0 0 0-8.141-.014.85.85 0 0 0-.82.847l-.003 5.097c0 .476.388.857.864.845 2.478-.064 5.166-.067 8.03.017a.848.848 0 0 0 .876-.843",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M95.239 144.296l.002-3.195a.667.667 0 0 0-.643-.672c-1.9-.061-3.941-.073-6.094-.01a.675.675 0 0 0-.654.672l-.002 3.192c0 .376.305.677.68.669 1.859-.042 3.874-.043 6.02.012.376.01.69-.291.691-.668",
            fill: "#192064"
          }
        }), h("path", {
          attrs: {
            d: "M90.102 273.522h12.819M91.216 269.761c.006 3.519-.072 5.55 0 6.292M90.923 263.474c-.009 1.599-.016 2.558-.016 4.505M90.44 170.404l.932 46.38s.7 1.631-.233 2.796c-.932 1.166 2.564.7.932 2.33-1.63 1.633.933 1.166 0 3.497-.618 1.546-1.031 21.921-1.138 36.513",
            stroke: "#648BD8",
            strokeWidth: "1.085",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M73.736 98.665l2.214 4.312s2.098.816 1.865 2.68l.816 2.214M64.297 116.611c.233-.932 2.176-7.147 12.585-10.488M77.598 90.042s7.691 6.137 16.547 2.72",
            stroke: "#E4EBF7",
            strokeWidth: "1.085",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M91.974 86.954s5.476-.816 7.574-4.545c1.297-.345.72 2.212-.33 3.671-.7.971-1.01 1.554-1.01 1.554s.194.31.155.816c-.053.697-.175.653-.272 1.048-.081.335.108.657 0 1.049-.046.17-.198.5-.382.878-.12.249-.072.687-.2.948-.231.469-1.562 1.87-2.622 2.855-3.826 3.554-5.018 1.644-6.001-.408-.894-1.865-.661-5.127-.874-6.875-.35-2.914-2.622-3.03-1.923-4.429.343-.685 2.87.69 3.263 1.748.757 2.04 2.952 1.807 2.622 1.69",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M99.8 82.429c-.465.077-.35.272-.97 1.243-.622.971-4.817 2.932-6.39 3.224-2.589.48-2.278-1.56-4.254-2.855-1.69-1.107-3.562-.638-1.398 1.398.99.932.932 1.107 1.398 3.205.335 1.506-.64 3.67.7 5.593",
            stroke: "#DB836E",
            strokeWidth: ".774",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M79.543 108.673c-2.1 2.926-4.266 6.175-5.557 8.762",
            stroke: "#E59788",
            strokeWidth: ".774",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M87.72 124.768s-2.098-1.942-5.127-2.719c-3.03-.777-3.574-.155-5.516.078-1.942.233-3.885-.932-3.652.7.233 1.63 5.05 1.01 5.206 2.097.155 1.087-6.37 2.796-8.313 2.175-.777.777.466 1.864 2.02 2.175.233 1.554 2.253 1.554 2.253 1.554s.699 1.01 2.641 1.088c2.486 1.32 8.934-.7 10.954-1.554 2.02-.855-.466-5.594-.466-5.594",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M73.425 122.826s.66 1.127 3.167 1.418c2.315.27 2.563.583 2.563.583s-2.545 2.894-9.07 2.272M72.416 129.274s3.826.097 4.933-.718M74.98 130.75s1.961.136 3.36-.505M77.232 131.916s1.748.019 2.914-.505M73.328 122.321s-.595-1.032 1.262-.427c1.671.544 2.833.055 5.128.155 1.389.061 3.067-.297 3.982.15 1.606.784 3.632 2.181 3.632 2.181s10.526 1.204 19.033-1.127M78.864 108.104s-8.39 2.758-13.168 12.12",
            stroke: "#E59788",
            strokeWidth: ".774",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M109.278 112.533s3.38-3.613 7.575-4.662",
            stroke: "#E4EBF7",
            strokeWidth: "1.085",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M107.375 123.006s9.697-2.745 11.445-.88",
            stroke: "#E59788",
            strokeWidth: ".774",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M194.605 83.656l3.971-3.886M187.166 90.933l3.736-3.655M191.752 84.207l-4.462-4.56M198.453 91.057l-4.133-4.225M129.256 163.074l3.718-3.718M122.291 170.039l3.498-3.498M126.561 163.626l-4.27-4.27M132.975 170.039l-3.955-3.955",
            stroke: "#BFCDDD",
            strokeWidth: "2",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M190.156 211.779h-1.604a4.023 4.023 0 0 1-4.011-4.011V175.68a4.023 4.023 0 0 1 4.01-4.01h1.605a4.023 4.023 0 0 1 4.011 4.01v32.088a4.023 4.023 0 0 1-4.01 4.01",
            fill: "#A3B4C6"
          }
        }), h("path", {
          attrs: {
            d: "M237.824 212.977a4.813 4.813 0 0 1-4.813 4.813h-86.636a4.813 4.813 0 0 1 0-9.626h86.636a4.813 4.813 0 0 1 4.813 4.813",
            fill: "#A3B4C6"
          }
        }), h("mask", {
          attrs: { fill: "#fff" }
        }), h("path", {
          attrs: { fill: "#A3B4C6", mask: "url(#d)", d: "M154.098 190.096h70.513v-84.617h-70.513z" }
        }), h("path", {
          attrs: {
            d: "M224.928 190.096H153.78a3.219 3.219 0 0 1-3.208-3.209V167.92a3.219 3.219 0 0 1 3.208-3.21h71.148a3.219 3.219 0 0 1 3.209 3.21v18.967a3.219 3.219 0 0 1-3.21 3.209M224.928 130.832H153.78a3.218 3.218 0 0 1-3.208-3.208v-18.968a3.219 3.219 0 0 1 3.208-3.209h71.148a3.219 3.219 0 0 1 3.209 3.21v18.967a3.218 3.218 0 0 1-3.21 3.208",
            fill: "#BFCDDD",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M159.563 120.546a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M166.98 120.546a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M174.397 120.546a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M222.539 120.546h-22.461a.802.802 0 0 1-.802-.802v-3.208c0-.443.359-.803.802-.803h22.46c.444 0 .803.36.803.803v3.208c0 .443-.36.802-.802.802",
            fill: "#FFF",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M224.928 160.464H153.78a3.218 3.218 0 0 1-3.208-3.209v-18.967a3.219 3.219 0 0 1 3.208-3.209h71.148a3.219 3.219 0 0 1 3.209 3.209v18.967a3.218 3.218 0 0 1-3.21 3.209",
            fill: "#BFCDDD",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M173.455 130.832h49.301M164.984 130.832h6.089M155.952 130.832h6.75M173.837 160.613h49.3M165.365 160.613h6.089M155.57 160.613h6.751",
            stroke: "#7C90A5",
            strokeWidth: "1.124",
            strokeLinecap: "round",
            strokeLinejoin: "round",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M159.563 151.038a2.407 2.407 0 1 1 0-4.814 2.407 2.407 0 0 1 0 4.814M166.98 151.038a2.407 2.407 0 1 1 0-4.814 2.407 2.407 0 0 1 0 4.814M174.397 151.038a2.407 2.407 0 1 1 .001-4.814 2.407 2.407 0 0 1 0 4.814M222.539 151.038h-22.461a.802.802 0 0 1-.802-.802v-3.209c0-.443.359-.802.802-.802h22.46c.444 0 .803.36.803.802v3.209c0 .443-.36.802-.802.802M159.563 179.987a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M166.98 179.987a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M174.397 179.987a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M222.539 179.987h-22.461a.802.802 0 0 1-.802-.802v-3.209c0-.443.359-.802.802-.802h22.46c.444 0 .803.36.803.802v3.209c0 .443-.36.802-.802.802",
            fill: "#FFF",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M203.04 221.108h-27.372a2.413 2.413 0 0 1-2.406-2.407v-11.448a2.414 2.414 0 0 1 2.406-2.407h27.372a2.414 2.414 0 0 1 2.407 2.407V218.7a2.413 2.413 0 0 1-2.407 2.407",
            fill: "#BFCDDD",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M177.259 207.217v11.52M201.05 207.217v11.52",
            stroke: "#A3B4C6",
            strokeWidth: "1.124",
            strokeLinecap: "round",
            strokeLinejoin: "round",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M162.873 267.894a9.422 9.422 0 0 1-9.422-9.422v-14.82a9.423 9.423 0 0 1 18.845 0v14.82a9.423 9.423 0 0 1-9.423 9.422",
            fill: "#5BA02E",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M171.22 267.83a9.422 9.422 0 0 1-9.422-9.423v-3.438a9.423 9.423 0 0 1 18.845 0v3.438a9.423 9.423 0 0 1-9.422 9.423",
            fill: "#92C110",
            mask: "url(#d)"
          }
        }), h("path", {
          attrs: {
            d: "M181.31 293.666h-27.712a3.209 3.209 0 0 1-3.209-3.21V269.79a3.209 3.209 0 0 1 3.209-3.21h27.711a3.209 3.209 0 0 1 3.209 3.21v20.668a3.209 3.209 0 0 1-3.209 3.209",
            fill: "#F2D7AD",
            mask: "url(#d)"
          }
        })]
      )]
    );
  }
};
var serverError = ServerError;
var Unauthorized = {
  functional: true,
  render: function render242() {
    var h = arguments[0];
    return h(
      "svg",
      {
        attrs: { width: "251", height: "294" }
      },
      [h(
        "g",
        {
          attrs: { fill: "none", fillRule: "evenodd" }
        },
        [h("path", {
          attrs: {
            d: "M0 129.023v-2.084C0 58.364 55.591 2.774 124.165 2.774h2.085c68.574 0 124.165 55.59 124.165 124.165v2.084c0 68.575-55.59 124.166-124.165 124.166h-2.085C55.591 253.189 0 197.598 0 129.023",
            fill: "#E4EBF7"
          }
        }), h("path", {
          attrs: {
            d: "M41.417 132.92a8.231 8.231 0 1 1-16.38-1.65 8.231 8.231 0 0 1 16.38 1.65",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M38.652 136.36l10.425 5.91M49.989 148.505l-12.58 10.73",
            stroke: "#FFF",
            strokeWidth: "2"
          }
        }), h("path", {
          attrs: {
            d: "M41.536 161.28a5.636 5.636 0 1 1-11.216-1.13 5.636 5.636 0 0 1 11.216 1.13M59.154 145.261a5.677 5.677 0 1 1-11.297-1.138 5.677 5.677 0 0 1 11.297 1.138M100.36 29.516l29.66-.013a4.562 4.562 0 1 0-.004-9.126l-29.66.013a4.563 4.563 0 0 0 .005 9.126M111.705 47.754l29.659-.013a4.563 4.563 0 1 0-.004-9.126l-29.66.013a4.563 4.563 0 1 0 .005 9.126",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M114.066 29.503V29.5l15.698-.007a4.563 4.563 0 1 0 .004 9.126l-15.698.007v-.002a4.562 4.562 0 0 0-.004-9.122M185.405 137.723c-.55 5.455-5.418 9.432-10.873 8.882-5.456-.55-9.432-5.418-8.882-10.873.55-5.455 5.418-9.432 10.873-8.882 5.455.55 9.432 5.418 8.882 10.873",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M180.17 143.772l12.572 7.129M193.841 158.42L178.67 171.36",
            stroke: "#FFF",
            strokeWidth: "2"
          }
        }), h("path", {
          attrs: {
            d: "M185.55 171.926a6.798 6.798 0 1 1-13.528-1.363 6.798 6.798 0 0 1 13.527 1.363M204.12 155.285a6.848 6.848 0 1 1-13.627-1.375 6.848 6.848 0 0 1 13.626 1.375",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M152.988 194.074a2.21 2.21 0 1 1-4.42 0 2.21 2.21 0 0 1 4.42 0zM225.931 118.217a2.21 2.21 0 1 1-4.421 0 2.21 2.21 0 0 1 4.421 0zM217.09 153.051a2.21 2.21 0 1 1-4.421 0 2.21 2.21 0 0 1 4.42 0zM177.84 109.842a2.21 2.21 0 1 1-4.422 0 2.21 2.21 0 0 1 4.421 0zM196.114 94.454a2.21 2.21 0 1 1-4.421 0 2.21 2.21 0 0 1 4.421 0zM202.844 182.523a2.21 2.21 0 1 1-4.42 0 2.21 2.21 0 0 1 4.42 0z",
            stroke: "#FFF",
            strokeWidth: "2"
          }
        }), h("path", {
          attrs: {
            stroke: "#FFF",
            strokeWidth: "2",
            d: "M215.125 155.262l-1.902 20.075-10.87 5.958M174.601 176.636l-6.322 9.761H156.98l-4.484 6.449M175.874 127.28V111.56M221.51 119.404l-12.77 7.859-15.228-7.86V96.668"
          }
        }), h("path", {
          attrs: {
            d: "M180.68 29.32C180.68 13.128 193.806 0 210 0c16.193 0 29.32 13.127 29.32 29.32 0 16.194-13.127 29.322-29.32 29.322-16.193 0-29.32-13.128-29.32-29.321",
            fill: "#A26EF4"
          }
        }), h("path", {
          attrs: {
            d: "M221.45 41.706l-21.563-.125a1.744 1.744 0 0 1-1.734-1.754l.071-12.23a1.744 1.744 0 0 1 1.754-1.734l21.562.125c.964.006 1.74.791 1.735 1.755l-.071 12.229a1.744 1.744 0 0 1-1.754 1.734",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M215.106 29.192c-.015 2.577-2.049 4.654-4.543 4.64-2.494-.014-4.504-2.115-4.489-4.693l.04-6.925c.016-2.577 2.05-4.654 4.543-4.64 2.494.015 4.504 2.116 4.49 4.693l-.04 6.925zm-4.53-14.074a6.877 6.877 0 0 0-6.916 6.837l-.043 7.368a6.877 6.877 0 0 0 13.754.08l.042-7.368a6.878 6.878 0 0 0-6.837-6.917zM167.566 68.367h-3.93a4.73 4.73 0 0 1-4.717-4.717 4.73 4.73 0 0 1 4.717-4.717h3.93a4.73 4.73 0 0 1 4.717 4.717 4.73 4.73 0 0 1-4.717 4.717",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M168.214 248.838a6.611 6.611 0 0 1-6.61-6.611v-66.108a6.611 6.611 0 0 1 13.221 0v66.108a6.611 6.611 0 0 1-6.61 6.61",
            fill: "#5BA02E"
          }
        }), h("path", {
          attrs: {
            d: "M176.147 248.176a6.611 6.611 0 0 1-6.61-6.61v-33.054a6.611 6.611 0 1 1 13.221 0v33.053a6.611 6.611 0 0 1-6.61 6.611",
            fill: "#92C110"
          }
        }), h("path", {
          attrs: {
            d: "M185.994 293.89h-27.376a3.17 3.17 0 0 1-3.17-3.17v-45.887a3.17 3.17 0 0 1 3.17-3.17h27.376a3.17 3.17 0 0 1 3.17 3.17v45.886a3.17 3.17 0 0 1-3.17 3.17",
            fill: "#F2D7AD"
          }
        }), h("path", {
          attrs: {
            d: "M81.972 147.673s6.377-.927 17.566-1.28c11.729-.371 17.57 1.086 17.57 1.086s3.697-3.855.968-8.424c1.278-12.077 5.982-32.827.335-48.273-1.116-1.339-3.743-1.512-7.536-.62-1.337.315-7.147-.149-7.983-.1l-15.311-.347s-3.487-.17-8.035-.508c-1.512-.113-4.227-1.683-5.458-.338-.406.443-2.425 5.669-1.97 16.077l8.635 35.642s-3.141 3.61 1.219 7.085",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M75.768 73.325l-.9-6.397 11.982-6.52s7.302-.118 8.038 1.205c.737 1.324-5.616.993-5.616.993s-1.836 1.388-2.615 2.5c-1.654 2.363-.986 6.471-8.318 5.986-1.708.284-2.57 2.233-2.57 2.233",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M52.44 77.672s14.217 9.406 24.973 14.444c1.061.497-2.094 16.183-11.892 11.811-7.436-3.318-20.162-8.44-21.482-14.496-.71-3.258 2.543-7.643 8.401-11.76M141.862 80.113s-6.693 2.999-13.844 6.876c-3.894 2.11-10.137 4.704-12.33 7.988-6.224 9.314 3.536 11.22 12.947 7.503 6.71-2.651 28.999-12.127 13.227-22.367",
            fill: "#FFB594"
          }
        }), h("path", {
          attrs: {
            d: "M76.166 66.36l3.06 3.881s-2.783 2.67-6.31 5.747c-7.103 6.195-12.803 14.296-15.995 16.44-3.966 2.662-9.754 3.314-12.177-.118-3.553-5.032.464-14.628 31.422-25.95",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M64.674 85.116s-2.34 8.413-8.912 14.447c.652.548 18.586 10.51 22.144 10.056 5.238-.669 6.417-18.968 1.145-20.531-.702-.208-5.901-1.286-8.853-2.167-.87-.26-1.611-1.71-3.545-.936l-1.98-.869zM128.362 85.826s5.318 1.956 7.325 13.734c-.546.274-17.55 12.35-21.829 7.805-6.534-6.94-.766-17.393 4.275-18.61 4.646-1.121 5.03-1.37 10.23-2.929",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M78.18 94.656s.911 7.41-4.914 13.078",
            stroke: "#E4EBF7",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M87.397 94.68s3.124 2.572 10.263 2.572c7.14 0 9.074-3.437 9.074-3.437",
            stroke: "#E4EBF7",
            strokeWidth: ".932",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M117.184 68.639l-6.781-6.177s-5.355-4.314-9.223-.893c-3.867 3.422 4.463 2.083 5.653 4.165 1.19 2.082.848 1.143-2.083.446-5.603-1.331-2.082.893 2.975 5.355 2.091 1.845 6.992.955 6.992.955l2.467-3.851z",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M105.282 91.315l-.297-10.937-15.918-.027-.53 10.45c-.026.403.17.788.515.999 2.049 1.251 9.387 5.093 15.799.424.287-.21.443-.554.431-.91",
            fill: "#FFB594"
          }
        }), h("path", {
          attrs: {
            d: "M107.573 74.24c.817-1.147.982-9.118 1.015-11.928a1.046 1.046 0 0 0-.965-1.055l-4.62-.365c-7.71-1.044-17.071.624-18.253 6.346-5.482 5.813-.421 13.244-.421 13.244s1.963 3.566 4.305 6.791c.756 1.041.398-3.731 3.04-5.929 5.524-4.594 15.899-7.103 15.899-7.103",
            fill: "#5C2552"
          }
        }), h("path", {
          attrs: {
            d: "M88.426 83.206s2.685 6.202 11.602 6.522c7.82.28 8.973-7.008 7.434-17.505l-.909-5.483c-6.118-2.897-15.478.54-15.478.54s-.576 2.044-.19 5.504c-2.276 2.066-1.824 5.618-1.824 5.618s-.905-1.922-1.98-2.321c-.86-.32-1.897.089-2.322 1.98-1.04 4.632 3.667 5.145 3.667 5.145",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            stroke: "#DB836E",
            strokeWidth: "1.145",
            strokeLinecap: "round",
            strokeLinejoin: "round",
            d: "M100.843 77.099l1.701-.928-1.015-4.324.674-1.406"
          }
        }), h("path", {
          attrs: {
            d: "M105.546 74.092c-.022.713-.452 1.279-.96 1.263-.51-.016-.904-.607-.882-1.32.021-.713.452-1.278.96-1.263.51.016.904.607.882 1.32M97.592 74.349c-.022.713-.452 1.278-.961 1.263-.509-.016-.904-.607-.882-1.32.022-.713.452-1.279.961-1.263.51.016.904.606.882 1.32",
            fill: "#552950"
          }
        }), h("path", {
          attrs: {
            d: "M91.132 86.786s5.269 4.957 12.679 2.327",
            stroke: "#DB836E",
            strokeWidth: "1.145",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M99.776 81.903s-3.592.232-1.44-2.79c1.59-1.496 4.897-.46 4.897-.46s1.156 3.906-3.457 3.25",
            fill: "#DB836E"
          }
        }), h("path", {
          attrs: {
            d: "M102.88 70.6s2.483.84 3.402.715M93.883 71.975s2.492-1.144 4.778-1.073",
            stroke: "#5C2552",
            strokeWidth: "1.526",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M86.32 77.374s.961.879 1.458 2.106c-.377.48-1.033 1.152-.236 1.809M99.337 83.719s1.911.151 2.509-.254",
            stroke: "#DB836E",
            strokeWidth: "1.145",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M87.782 115.821l15.73-3.012M100.165 115.821l10.04-2.008",
            stroke: "#E4EBF7",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M66.508 86.763s-1.598 8.83-6.697 14.078",
            stroke: "#E4EBF7",
            strokeWidth: "1.114",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M128.31 87.934s3.013 4.121 4.06 11.785",
            stroke: "#E4EBF7",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M64.09 84.816s-6.03 9.912-13.607 9.903",
            stroke: "#DB836E",
            strokeWidth: ".795",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M112.366 65.909l-.142 5.32s5.993 4.472 11.945 9.202c4.482 3.562 8.888 7.455 10.985 8.662 4.804 2.766 8.9 3.355 11.076 1.808 4.071-2.894 4.373-9.878-8.136-15.263-4.271-1.838-16.144-6.36-25.728-9.73",
            fill: "#FFC6A0"
          }
        }), h("path", {
          attrs: {
            d: "M130.532 85.488s4.588 5.757 11.619 6.214",
            stroke: "#DB836E",
            strokeWidth: ".75",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M121.708 105.73s-.393 8.564-1.34 13.612",
            stroke: "#E4EBF7",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M115.784 161.512s-3.57-1.488-2.678-7.14",
            stroke: "#648BD8",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M101.52 290.246s4.326 2.057 7.408 1.03c2.842-.948 4.564.673 7.132 1.186 2.57.514 6.925 1.108 11.772-1.269-.104-5.551-6.939-4.01-12.048-6.763-2.582-1.39-3.812-4.757-3.625-8.863h-9.471s-1.402 10.596-1.169 14.68",
            fill: "#CBD1D1"
          }
        }), h("path", {
          attrs: {
            d: "M101.496 290.073s2.447 1.281 6.809.658c3.081-.44 3.74.485 7.479 1.039 3.739.554 10.802-.07 11.91-.9.415 1.108-.347 2.077-.347 2.077s-1.523.608-4.847.831c-2.045.137-5.843.293-7.663-.507-1.8-1.385-5.286-1.917-5.77-.243-3.947.958-7.41-.288-7.41-.288l-.16-2.667z",
            fill: "#2B0849"
          }
        }), h("path", {
          attrs: {
            d: "M108.824 276.19h3.116s-.103 6.751 4.57 8.62c-4.673.624-8.62-2.32-7.686-8.62",
            fill: "#A4AABA"
          }
        }), h("path", {
          attrs: {
            d: "M57.65 272.52s-2.122 7.47-4.518 12.396c-1.811 3.724-4.255 7.548 5.505 7.548 6.698 0 9.02-.483 7.479-6.648-1.541-6.164.268-13.296.268-13.296H57.65z",
            fill: "#CBD1D1"
          }
        }), h("path", {
          attrs: {
            d: "M51.54 290.04s2.111 1.178 6.682 1.178c6.128 0 8.31-1.662 8.31-1.662s.605 1.122-.624 2.18c-1 .862-3.624 1.603-7.444 1.559-4.177-.049-5.876-.57-6.786-1.177-.831-.554-.692-1.593-.138-2.078",
            fill: "#2B0849"
          }
        }), h("path", {
          attrs: {
            d: "M58.533 274.438s.034 1.529-.315 2.95c-.352 1.431-1.087 3.127-1.139 4.17-.058 1.16 4.57 1.592 5.194.035.623-1.559 1.303-6.475 1.927-7.306.622-.831-4.94-2.135-5.667.15",
            fill: "#A4AABA"
          }
        }), h("path", {
          attrs: {
            d: "M100.885 277.015l13.306.092s1.291-54.228 1.843-64.056c.552-9.828 3.756-43.13.997-62.788l-12.48-.64-22.725.776s-.433 3.944-1.19 9.921c-.062.493-.677.838-.744 1.358-.075.582.42 1.347.318 1.956-2.35 14.003-6.343 32.926-8.697 46.425-.116.663-1.227 1.004-1.45 2.677-.04.3.21 1.516.112 1.785-6.836 18.643-10.89 47.584-14.2 61.551l14.528-.014s2.185-8.524 4.008-16.878c2.796-12.817 22.987-84.553 22.987-84.553l3-.517 1.037 46.1s-.223 1.228.334 2.008c.558.782-.556 1.117-.39 2.233l.39 1.784s-.446 7.14-.892 11.826c-.446 4.685-.092 38.954-.092 38.954",
            fill: "#7BB2F9"
          }
        }), h("path", {
          attrs: {
            d: "M77.438 220.434c1.146.094 4.016-2.008 6.916-4.91M107.55 223.931s2.758-1.103 6.069-3.862",
            stroke: "#648BD8",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M108.459 220.905s2.759-1.104 6.07-3.863",
            stroke: "#648BD8",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M76.099 223.557s2.608-.587 6.47-3.346M87.33 150.82c-.27 3.088.297 8.478-4.315 9.073M104.829 149.075s.11 13.936-1.286 14.983c-2.207 1.655-2.975 1.934-2.975 1.934M101.014 149.63s.035 12.81-1.19 24.245M94.93 174.965s7.174-1.655 9.38-1.655M75.671 204.754c-.316 1.55-.64 3.067-.973 4.535 0 0-1.45 1.822-1.003 3.756.446 1.934-.943 2.034-4.96 15.273-1.686 5.559-4.464 18.49-6.313 27.447-.078.38-4.018 18.06-4.093 18.423M77.043 196.743a313.269 313.269 0 0 1-.877 4.729M83.908 151.414l-1.19 10.413s-1.091.148-.496 2.23c.111 1.34-2.66 15.692-5.153 30.267M57.58 272.94h13.238",
            stroke: "#648BD8",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        }), h("path", {
          attrs: {
            d: "M117.377 147.423s-16.955-3.087-35.7.199c.157 2.501-.002 4.128-.002 4.128s14.607-2.802 35.476-.31c.251-2.342.226-4.017.226-4.017",
            fill: "#192064"
          }
        }), h("path", {
          attrs: {
            d: "M107.511 150.353l.004-4.885a.807.807 0 0 0-.774-.81c-2.428-.092-5.04-.108-7.795-.014a.814.814 0 0 0-.784.81l-.003 4.88c0 .456.371.82.827.808a140.76 140.76 0 0 1 7.688.017.81.81 0 0 0 .837-.806",
            fill: "#FFF"
          }
        }), h("path", {
          attrs: {
            d: "M106.402 149.426l.002-3.06a.64.64 0 0 0-.616-.643 94.135 94.135 0 0 0-5.834-.009.647.647 0 0 0-.626.643l-.001 3.056c0 .36.291.648.651.64 1.78-.04 3.708-.041 5.762.012.36.009.662-.279.662-.64",
            fill: "#192064"
          }
        }), h("path", {
          attrs: {
            d: "M101.485 273.933h12.272M102.652 269.075c.006 3.368.04 5.759.11 6.47M102.667 263.125c-.009 1.53-.015 2.98-.016 4.313M102.204 174.024l.893 44.402s.669 1.561-.224 2.677c-.892 1.116 2.455.67.893 2.231-1.562 1.562.893 1.116 0 3.347-.592 1.48-.988 20.987-1.09 34.956",
            stroke: "#648BD8",
            strokeWidth: "1.051",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        })]
      )]
    );
  }
};
var unauthorized = Unauthorized;
var IconMap = {
  success: "check-circle",
  error: "close-circle",
  info: "exclamation-circle",
  warning: "warning"
};
var ExceptionMap = {
  "404": noFound,
  "500": serverError,
  "403": unauthorized
};
var ExceptionStatus = Object.keys(ExceptionMap);
var ResultProps = {
  prefixCls: PropTypes.string,
  icon: PropTypes.any,
  status: PropTypes.oneOf(["success", "error", "info", "warning", "404", "403", "500"]).def("info"),
  title: PropTypes.any,
  subTitle: PropTypes.any,
  extra: PropTypes.any
};
var renderIcon2 = function renderIcon3(h, prefixCls2, _ref) {
  var status = _ref.status, icon = _ref.icon;
  if (ExceptionStatus.includes("" + status)) {
    var SVGComponent = ExceptionMap[status];
    return h(
      "div",
      { "class": prefixCls2 + "-icon " + prefixCls2 + "-image" },
      [h(SVGComponent)]
    );
  }
  var iconString = IconMap[status];
  var iconNode = icon || h(Icon$1, {
    attrs: { type: iconString, theme: "filled" }
  });
  return h(
    "div",
    { "class": prefixCls2 + "-icon" },
    [iconNode]
  );
};
var renderExtra2 = function renderExtra3(h, prefixCls2, extra) {
  return extra && h(
    "div",
    { "class": prefixCls2 + "-extra" },
    [extra]
  );
};
var Result = {
  name: "AResult",
  props: ResultProps,
  inject: {
    configProvider: { "default": function _default126() {
      return ConfigConsumerProps;
    } }
  },
  render: function render243(h) {
    var customizePrefixCls = this.prefixCls, status = this.status;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("result", customizePrefixCls);
    var title = getComponentFromProp(this, "title");
    var subTitle = getComponentFromProp(this, "subTitle");
    var icon = getComponentFromProp(this, "icon");
    var extra = getComponentFromProp(this, "extra");
    return h(
      "div",
      { "class": prefixCls2 + " " + prefixCls2 + "-" + status },
      [renderIcon2(h, prefixCls2, { status, icon }), h(
        "div",
        { "class": prefixCls2 + "-title" },
        [title]
      ), subTitle && h(
        "div",
        { "class": prefixCls2 + "-subtitle" },
        [subTitle]
      ), this.$slots["default"] && h(
        "div",
        { "class": prefixCls2 + "-content" },
        [this.$slots["default"]]
      ), renderExtra2(h, prefixCls2, extra)]
    );
  }
};
Result.PRESENTED_IMAGE_403 = ExceptionMap[403];
Result.PRESENTED_IMAGE_404 = ExceptionMap[404];
Result.PRESENTED_IMAGE_500 = ExceptionMap[500];
Result.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Result.name, Result);
};
var Result$1 = Result;
var ColProps = {
  child: PropTypes.any,
  bordered: PropTypes.bool,
  colon: PropTypes.bool,
  type: PropTypes.oneOf(["label", "content"]),
  layout: PropTypes.oneOf(["horizontal", "vertical"])
};
var Col = {
  functional: true,
  props: ColProps,
  render: function render244(h, ctx2) {
    var _ref;
    var _ctx$props = ctx2.props, child = _ctx$props.child, bordered = _ctx$props.bordered, colon = _ctx$props.colon, type3 = _ctx$props.type, layout = _ctx$props.layout;
    var _getOptionProps = getOptionProps(child), prefixCls2 = _getOptionProps.prefixCls, _getOptionProps$span = _getOptionProps.span, span = _getOptionProps$span === void 0 ? 1 : _getOptionProps$span;
    var key2 = ctx2.data.key;
    var label = getComponentFromProp(child, "label");
    var slots = getSlots(child);
    var labelProps = {
      attrs: {},
      "class": [prefixCls2 + "-item-label", (_ref = {}, _default$8(_ref, prefixCls2 + "-item-colon", colon), _default$8(_ref, prefixCls2 + "-item-no-label", !label), _ref)],
      key: key2 + "-label"
    };
    if (layout === "vertical") {
      labelProps.attrs.colSpan = span * 2 - 1;
    }
    if (bordered) {
      if (type3 === "label") {
        return h(
          "th",
          labelProps,
          [label]
        );
      }
      return h(
        "td",
        {
          "class": prefixCls2 + "-item-content",
          key: key2 + "-content",
          attrs: { colSpan: span * 2 - 1 }
        },
        [slots["default"]]
      );
    }
    if (layout === "vertical") {
      if (type3 === "content") {
        return h(
          "td",
          {
            attrs: { colSpan: span },
            "class": prefixCls2 + "-item"
          },
          [h(
            "span",
            { "class": prefixCls2 + "-item-content", key: key2 + "-content" },
            [slots["default"]]
          )]
        );
      }
      return h(
        "td",
        {
          attrs: { colSpan: span },
          "class": prefixCls2 + "-item"
        },
        [h(
          "span",
          {
            "class": [prefixCls2 + "-item-label", _default$8({}, prefixCls2 + "-item-colon", colon)],
            key: key2 + "-label"
          },
          [label]
        )]
      );
    }
    return h(
      "td",
      {
        attrs: { colSpan: span },
        "class": prefixCls2 + "-item"
      },
      [h(
        "span",
        labelProps,
        [label]
      ), h(
        "span",
        { "class": prefixCls2 + "-item-content", key: key2 + "-content" },
        [slots["default"]]
      )]
    );
  }
};
var Col$1 = Col;
var DescriptionsItemProps = {
  prefixCls: PropTypes.string,
  label: PropTypes.any,
  span: PropTypes.number
};
function toArray(value27) {
  var ret = value27;
  if (value27 === void 0) {
    ret = [];
  } else if (!Array.isArray(value27)) {
    ret = [value27];
  }
  return ret;
}
var DescriptionsItem = {
  name: "ADescriptionsItem",
  props: initDefaultProps(DescriptionsItemProps, { span: 1 })
};
var DescriptionsProps = {
  prefixCls: PropTypes.string,
  bordered: PropTypes.bool,
  size: PropTypes.oneOf(["default", "middle", "small"]).def("default"),
  title: PropTypes.any,
  column: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),
  layout: PropTypes.oneOf(["horizontal", "vertical"]),
  colon: PropTypes.bool
};
var generateChildrenRows = function generateChildrenRows2(children, column) {
  var rows = [];
  var columns3 = null;
  var leftSpans = void 0;
  var itemNodes = toArray(children);
  itemNodes.forEach(function(node, index2) {
    var itemProps = getOptionProps(node);
    var itemNode = node;
    if (!columns3) {
      leftSpans = column;
      columns3 = [];
      rows.push(columns3);
    }
    var lastItem = index2 === itemNodes.length - 1;
    var lastSpanSame = true;
    if (lastItem) {
      lastSpanSame = !itemProps.span || itemProps.span === leftSpans;
      itemNode = cloneElement(itemNode, {
        props: {
          span: leftSpans
        }
      });
    }
    var _itemProps$span = itemProps.span, span = _itemProps$span === void 0 ? 1 : _itemProps$span;
    columns3.push(itemNode);
    leftSpans -= span;
    if (leftSpans <= 0) {
      columns3 = null;
      warning$4(leftSpans === 0 && lastSpanSame, "Descriptions", "Sum of column `span` in a line exceeds `column` of Descriptions.");
    }
  });
  return rows;
};
var defaultColumnMap = {
  xxl: 3,
  xl: 3,
  lg: 3,
  md: 3,
  sm: 2,
  xs: 1
};
var Descriptions = {
  name: "ADescriptions",
  Item: DescriptionsItem,
  mixins: [BaseMixin],
  inject: {
    configProvider: { "default": function _default127() {
      return ConfigConsumerProps;
    } }
  },
  props: initDefaultProps(DescriptionsProps, {
    column: defaultColumnMap
  }),
  data: function data108() {
    return {
      screens: {},
      token: void 0
    };
  },
  methods: {
    getColumn: function getColumn() {
      var column = this.$props.column;
      if ((typeof column === "undefined" ? "undefined" : _default$7(column)) === "object") {
        for (var i = 0; i < responsiveArray$1.length; i++) {
          var breakpoint = responsiveArray$1[i];
          if (this.screens[breakpoint] && column[breakpoint] !== void 0) {
            return column[breakpoint] || defaultColumnMap[breakpoint];
          }
        }
      }
      if (typeof column === "number") {
        return column;
      }
      return 3;
    },
    renderRow: function renderRow(children, index2, _ref, bordered, layout, colon) {
      var prefixCls2 = _ref.prefixCls;
      var h = this.$createElement;
      var renderCol = function renderCol2(colItem, type3, idx) {
        return h(Col$1, {
          attrs: {
            child: colItem,
            bordered,
            colon,
            type: type3,
            layout
          },
          key: type3 + "-" + (colItem.key || idx)
        });
      };
      var cloneChildren = [];
      var cloneContentChildren = [];
      toArray(children).forEach(function(childrenItem, idx) {
        cloneChildren.push(renderCol(childrenItem, "label", idx));
        if (layout === "vertical") {
          cloneContentChildren.push(renderCol(childrenItem, "content", idx));
        } else if (bordered) {
          cloneChildren.push(renderCol(childrenItem, "content", idx));
        }
      });
      if (layout === "vertical") {
        return [h(
          "tr",
          { "class": prefixCls2 + "-row", key: "label-" + index2 },
          [cloneChildren]
        ), h(
          "tr",
          { "class": prefixCls2 + "-row", key: "content-" + index2 },
          [cloneContentChildren]
        )];
      }
      return h(
        "tr",
        { "class": prefixCls2 + "-row", key: index2 },
        [cloneChildren]
      );
    }
  },
  mounted: function mounted69() {
    var _this = this;
    var column = this.$props.column;
    this.token = ResponsiveObserve.subscribe(function(screens2) {
      if ((typeof column === "undefined" ? "undefined" : _default$7(column)) !== "object") {
        return;
      }
      _this.setState({
        screens: screens2
      });
    });
  },
  beforeDestroy: function beforeDestroy51() {
    ResponsiveObserve.unsubscribe(this.token);
  },
  render: function render245() {
    var _ref2, _this2 = this;
    var h = arguments[0];
    var _$props = this.$props, customizePrefixCls = _$props.prefixCls, size = _$props.size, _$props$bordered = _$props.bordered, bordered = _$props$bordered === void 0 ? false : _$props$bordered, _$props$layout = _$props.layout, layout = _$props$layout === void 0 ? "horizontal" : _$props$layout, _$props$colon = _$props.colon, colon = _$props$colon === void 0 ? true : _$props$colon;
    var title = getComponentFromProp(this, "title") || null;
    var getPrefixCls5 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("descriptions", customizePrefixCls);
    var column = this.getColumn();
    var children = this.$slots["default"];
    var cloneChildren = toArray(children).map(function(child) {
      if (isValidElement(child)) {
        return cloneElement(child, {
          props: {
            prefixCls: prefixCls2
          }
        });
      }
      return null;
    }).filter(function(node) {
      return node;
    });
    var childrenArray = generateChildrenRows(cloneChildren, column);
    return h(
      "div",
      {
        "class": [prefixCls2, (_ref2 = {}, _default$8(_ref2, prefixCls2 + "-" + size, size !== "default"), _default$8(_ref2, prefixCls2 + "-bordered", !!bordered), _ref2)]
      },
      [title && h(
        "div",
        { "class": prefixCls2 + "-title" },
        [title]
      ), h(
        "div",
        { "class": prefixCls2 + "-view" },
        [h("table", [h("tbody", [childrenArray.map(function(child, index2) {
          return _this2.renderRow(child, index2, {
            prefixCls: prefixCls2
          }, bordered, layout, colon);
        })])])]
      )]
    );
  }
};
Descriptions.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(Descriptions.name, Descriptions);
  Vue2.component(Descriptions.Item.name, Descriptions.Item);
};
var Descriptions$1 = Descriptions;
var PageHeaderProps = {
  backIcon: PropTypes.any,
  prefixCls: PropTypes.string,
  title: PropTypes.any,
  subTitle: PropTypes.any,
  breadcrumb: PropTypes.object,
  tags: PropTypes.any,
  footer: PropTypes.any,
  extra: PropTypes.any,
  avatar: PropTypes.object,
  ghost: PropTypes.bool
};
var renderBack = function renderBack2(instance, prefixCls2, backIcon, onBack) {
  var h = instance.$createElement;
  if (!backIcon || !onBack) {
    return null;
  }
  return h(
    LocaleReceiver,
    {
      attrs: { componentName: "PageHeader" }
    },
    [function(_ref) {
      var back = _ref.back;
      return h(
        "div",
        { "class": prefixCls2 + "-back" },
        [h(
          TransButton$1,
          {
            on: {
              "click": function click(e) {
                instance.$emit("back", e);
              }
            },
            "class": prefixCls2 + "-back-button",
            attrs: {
              "aria-label": back
            }
          },
          [backIcon]
        )]
      );
    }]
  );
};
var renderBreadcrumb = function renderBreadcrumb2(h, breadcrumb) {
  return h(Breadcrumb, breadcrumb);
};
var renderTitle2 = function renderTitle3(h, prefixCls2, instance) {
  var avatar = instance.avatar;
  var title = getComponentFromProp(instance, "title");
  var subTitle = getComponentFromProp(instance, "subTitle");
  var tags = getComponentFromProp(instance, "tags");
  var extra = getComponentFromProp(instance, "extra");
  var backIcon = getComponentFromProp(instance, "backIcon") !== void 0 ? getComponentFromProp(instance, "backIcon") : h(Icon$1, {
    attrs: { type: "arrow-left" }
  });
  var onBack = instance.$listeners.back;
  var headingPrefixCls = prefixCls2 + "-heading";
  if (title || subTitle || tags || extra) {
    var backIconDom = renderBack(instance, prefixCls2, backIcon, onBack);
    return h(
      "div",
      { "class": headingPrefixCls },
      [backIconDom, avatar && h(Avatar$2, avatar), title && h(
        "span",
        { "class": headingPrefixCls + "-title" },
        [title]
      ), subTitle && h(
        "span",
        { "class": headingPrefixCls + "-sub-title" },
        [subTitle]
      ), tags && h(
        "span",
        { "class": headingPrefixCls + "-tags" },
        [tags]
      ), extra && h(
        "span",
        { "class": headingPrefixCls + "-extra" },
        [extra]
      )]
    );
  }
  return null;
};
var renderFooter5 = function renderFooter6(h, prefixCls2, footer) {
  if (footer) {
    return h(
      "div",
      { "class": prefixCls2 + "-footer" },
      [footer]
    );
  }
  return null;
};
var renderChildren6 = function renderChildren7(h, prefixCls2, children) {
  return h(
    "div",
    { "class": prefixCls2 + "-content" },
    [children]
  );
};
var PageHeader = {
  name: "APageHeader",
  props: PageHeaderProps,
  inject: {
    configProvider: { "default": function _default128() {
      return ConfigConsumerProps;
    } }
  },
  render: function render246(h) {
    var _configProvider = this.configProvider, getPrefixCls5 = _configProvider.getPrefixCls, pageHeader = _configProvider.pageHeader;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, breadcrumb = props2.breadcrumb;
    var footer = getComponentFromProp(this, "footer");
    var children = this.$slots["default"];
    var ghost = true;
    if ("ghost" in props2) {
      ghost = props2.ghost;
    } else if (pageHeader && "ghost" in pageHeader) {
      ghost = pageHeader.ghost;
    }
    var prefixCls2 = getPrefixCls5("page-header", customizePrefixCls);
    var breadcrumbDom = breadcrumb && breadcrumb.props && breadcrumb.props.routes ? renderBreadcrumb(h, breadcrumb) : null;
    var className = [prefixCls2, _default$8({
      "has-breadcrumb": breadcrumbDom,
      "has-footer": footer
    }, prefixCls2 + "-ghost", ghost)];
    return h(
      "div",
      { "class": className },
      [breadcrumbDom, renderTitle2(h, prefixCls2, this), children && renderChildren6(h, prefixCls2, children), renderFooter5(h, prefixCls2, footer)]
    );
  }
};
PageHeader.install = function(Vue2) {
  Vue2.use(Base);
  Vue2.component(PageHeader.name, PageHeader);
};
var PageHeader$1 = PageHeader;
var SpaceSizeType = PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(["small", "middle", "large"])]);
var spaceSize = {
  small: 8,
  middle: 16,
  large: 24
};
var SpaceProps = {
  prefixCls: PropTypes.string,
  size: SpaceSizeType,
  direction: PropTypes.oneOf(["horizontal", "vertical"]),
  align: PropTypes.oneOf(["start", "end", "center", "baseline"])
};
var Space = {
  functional: true,
  name: "ASpace",
  props: initDefaultProps(SpaceProps, {
    size: "small",
    direction: "horizontal"
  }),
  inject: {
    configProvider: { "default": function _default129() {
      return ConfigConsumerProps;
    } }
  },
  render: function render247(h, content) {
    var _ref;
    var customizePrefixCls = content.prefixCls, configProvider = content.injections.configProvider, children = content.children;
    var _content$props = content.props, align = _content$props.align, size = _content$props.size, direction = _content$props.direction;
    var getPrefixCls5 = configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls5("space", customizePrefixCls);
    var items = filterEmpty(children);
    var len = items.length;
    if (len === 0) {
      return null;
    }
    var mergedAlign = align === void 0 && direction === "horizontal" ? "center" : align;
    var someSpaceClass = [(_ref = {}, _default$8(_ref, prefixCls2, true), _default$8(_ref, prefixCls2 + "-" + direction, true), _default$8(_ref, prefixCls2 + "-align-" + mergedAlign, mergedAlign), _ref)];
    if (content.data["class"]) {
      someSpaceClass.push(content.data["class"]);
    }
    var itemClassName = prefixCls2 + "-item";
    var marginDirection = "marginRight";
    return h(
      "div",
      _mergeJSXProps([content.data, { "class": someSpaceClass }]),
      [items.map(function(child, i) {
        return h(
          "div",
          {
            "class": itemClassName,
            key: itemClassName + "-" + i,
            style: i === len - 1 ? {} : _default$8({}, direction === "vertical" ? "marginBottom" : marginDirection, typeof size === "string" ? spaceSize[size] + "px" : size + "px")
          },
          [child]
        );
      })]
    );
  }
};
Space.install = function(Vue2) {
  Vue2.component(Space.name, Space);
};
var Space$1 = Space;
var components$1 = [
  Base,
  Affix$1,
  Anchor,
  AutoComplete$1,
  Alert$1,
  Avatar$2,
  BackTop$1,
  Badge,
  Breadcrumb,
  Button$1,
  Calendar$3,
  Card,
  Collapse,
  Carousel$1,
  Cascader$1,
  Checkbox,
  Col$2,
  DatePicker$1,
  Divider$1,
  Dropdown$1,
  Form$3,
  Form$1,
  Icon$1,
  Input,
  InputNumber$1,
  Layout$1,
  List$2,
  LocaleProvider$1,
  Menu$1,
  Mentions$1,
  Modal,
  Pagination,
  Popconfirm$1,
  Popover$1,
  Progress,
  Radio,
  Rate$1,
  Row,
  Select$5,
  Slider$1,
  Spin,
  Statistic,
  Steps$1,
  Switch$1,
  Table$1,
  Transfer$1,
  Tree,
  TreeSelect$1,
  Tabs,
  Tag,
  TimePicker$1,
  Timeline,
  ToolTip,
  Upload,
  Drawer$1,
  Skeleton$1,
  Comment$1,
  ConfigProvider$1,
  Empty$1,
  Result$1,
  Descriptions$1,
  PageHeader$1,
  Space$1
];
var install$1 = function install6(Vue2) {
  components$1.map(function(component) {
    Vue2.use(component);
  });
  Vue2.prototype.$message = message;
  Vue2.prototype.$notification = notification;
  Vue2.prototype.$info = Modal.info;
  Vue2.prototype.$success = Modal.success;
  Vue2.prototype.$error = Modal.error;
  Vue2.prototype.$warning = Modal.warning;
  Vue2.prototype.$confirm = Modal.confirm;
  Vue2.prototype.$destroyAll = Modal.destroyAll;
};
if (typeof window !== "undefined" && window.Vue) {
  install$1(window.Vue);
}
=======
>>>>>>> 512566f2f7dfc72d1e9ab0db6dd850af29a315dd
var render$3 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("a-checkbox", {
    attrs: {
      "checked": _vm.value,
      "indeterminate": _vm.indeterminate
    },
    on: {
      "change": _vm.change
    }
  }, [_vm._v(_vm._s(_vm.label))]);
};
var staticRenderFns$3 = [];
const __vue2_script$3 = {
  name: "ICheckbox",
  props: {
    value: {
      type: Boolean
    },
    label: {
      type: String
    },
    indeterminate: {
      type: Boolean
    }
  },
  methods: {
    change(e) {
      this.$emit("input", e.target.checked);
    }
  }
};
const __cssModules$3 = {};
var __component__$3 = /* @__PURE__ */ normalizeComponent(
  __vue2_script$3,
  render$3,
  staticRenderFns$3,
  false,
  __vue2_injectStyles$3,
  null,
  null,
  null
);
function __vue2_injectStyles$3(context) {
  for (let o in __cssModules$3) {
    this[o] = __cssModules$3[o];
  }
}
var ICheckbox = /* @__PURE__ */ function() {
  return __component__$3.exports;
}();
var render$2 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "c-select-box"
  }, [_c("div", {
    staticClass: "c-check-all"
  }, [_c("div", {
    staticClass: "c-item-select c-cataract",
    on: {
      "click": _vm.selectAll
    }
  }), _c("a-checkbox", {
    staticClass: "c-check-item",
    model: {
      value: _vm.all,
      callback: function($$v) {
        _vm.all = $$v;
      },
      expression: "all"
    }
  }, [_vm._v("\u5168\u9009")])], 1), _vm._l(_vm.data, function(item) {
    return _c("div", {
      key: item.id
    }, [item.children && item.children.length ? _c("div", {
      class: _vm.itemClasses(item),
      on: {
        "click": function($event) {
          return _vm.$emit("on-child", {
            item,
            level: _vm.level
          });
        }
      }
    }, [_c("i-checkbox", {
      attrs: {
        "indeterminate": _vm.itemIndeterminate(item),
        "label": item.value
      },
      model: {
        value: item.check,
        callback: function($$v) {
          _vm.$set(item, "check", $$v);
        },
        expression: "item.check"
      }
    }), _c("a-icon", {
      staticClass: "c-check-arrow",
      attrs: {
        "type": "right"
      }
    }), _c("span", {
      staticClass: "c-item-checkbox c-cataract",
      on: {
        "click": function($event) {
          return _vm.selectItem(item);
        }
      }
    })], 1) : _c("i-checkbox", {
      staticClass: "c-check-item",
      attrs: {
        "label": item.value
      },
      model: {
        value: item.check,
        callback: function($$v) {
          _vm.$set(item, "check", $$v);
        },
        expression: "item.check"
      }
    })], 1);
  })], 2);
};
var staticRenderFns$2 = [];
;
var selectBox_vue_vue_type_style_index_0_scoped_true_lang = "";
const computeChild = (list, Vue) => {
  list.forEach((item) => {
    if (item.children && item.children.length) {
      const child = item.children;
      if (child.every((ret) => ret.check))
        Vue.$set(item, "check", true);
      else
        Vue.$set(item, "check", false);
      child && computeChild(child, Vue);
    }
  });
};
const __vue2_script$2 = {
  name: "selectBox",
  components: { ICheckbox },
  props: {
    value: {
      type: [String, Number]
    },
    data: {
      type: Array
    },
    level: {
      type: Number
    }
  },
  computed: {
    itemClasses() {
      return (item) => {
        const cls = ["c-check-item"];
        item.value === this.value && cls.push("active");
        return cls;
      };
    },
    all() {
      const len = this.data.filter((ret) => ret.check).length;
      return this.data.length === len;
    }
  },
  methods: {
    selectAll() {
      this.$emit("on-select", {
        check: !this.all,
        level: this.level
      });
    },
    selectItem(item) {
      this.$emit("on-select", {
        check: !item.check,
        level: this.level,
        cat: item.value
      });
    },
    selectItem1(e) {
      console.log(e);
      console.log(this.data);
    },
    itemIndeterminate(child) {
      const hasChild = (meta) => {
        return meta.children.reduce((sum, item) => {
          let foundChilds = [];
          if (item.check)
            sum.push(item);
          if (item.children)
            foundChilds = hasChild(item);
          return sum.concat(foundChilds);
        }, []);
      };
      const some = hasChild(child).length > 0;
      const every = child.children && child.children.every((ret) => ret.check);
      return some && !every;
    }
  },
  watch: {
    data: {
      handler(nVal, oVal) {
        computeChild(nVal, this);
      },
      deep: true
    }
  },
  mounted() {
    computeChild(this.data, this);
  }
};
const __cssModules$2 = {};
var __component__$2 = /* @__PURE__ */ normalizeComponent(
  __vue2_script$2,
  render$2,
  staticRenderFns$2,
  false,
  __vue2_injectStyles$2,
<<<<<<< HEAD
  "ea3d3212",
=======
  "486182da",
>>>>>>> 512566f2f7dfc72d1e9ab0db6dd850af29a315dd
  null,
  null
);
function __vue2_injectStyles$2(context) {
  for (let o in __cssModules$2) {
    this[o] = __cssModules$2[o];
  }
}
var SelectBox = /* @__PURE__ */ function() {
  return __component__$2.exports;
}();
var render$1 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "c-selecter"
  }, [_c("a-row", {
    attrs: {
      "gutter": 12
    }
  }, [_c("a-col", {
    attrs: {
      "span": 16
    }
  }, [_c("a-row", _vm._l(_vm.resource, function(box, idx) {
    return _c("a-col", {
      key: idx,
      attrs: {
        "span": _vm.col
      }
    }, [_c("select-item", {
      attrs: {
        "title": box.title
      }
    }, [_c("select-box", {
      attrs: {
        "data": box.data,
        "level": box.level
      },
      on: {
        "on-child": _vm.pushChild,
        "on-select": _vm.selectAll
      },
      model: {
        value: box.current,
        callback: function($$v) {
          _vm.$set(box, "current", $$v);
        },
        expression: "box.current"
      }
    })], 1)], 1);
  }), 1)], 1), _c("a-col", {
    attrs: {
      "span": 7,
      "offset": "1"
    }
  }, [_vm.resultLen && _vm.transfer ? _c("select-item", {
    attrs: {
      "title": "\u5DF2\u9009",
      "clear": ""
    },
    on: {
      "on-clear": function($event) {
        return _vm.$emit("on-clear", {
          list: _vm.data
        });
      }
    }
  }, _vm._l(_vm.result, function(item) {
    return _c("div", {
      key: item.id,
      staticClass: "c-pop-tip"
    }, [_c("a-tag", {
      staticClass: "c-tag-item",
      attrs: {
        "closable": ""
      },
      on: {
        "close": function($event) {
          return _vm.handleClose(item.value);
        }
      }
    }, [_vm._v(_vm._s(item.value))])], 1);
  }), 0) : _vm._e()], 1)], 1)], 1);
};
var staticRenderFns$1 = [];
;
var select_vue_vue_type_style_index_0_scoped_true_lang = "";
const __vue2_script$1 = {
  name: "selecter",
  components: { SelectItem, SelectBox },
  props: {
    value: {
      type: Array
    },
    title: {
      type: Array
    },
    data: {
      type: Array
    },
    transfer: {
      type: Boolean,
      default: true
    }
  },
  data() {
    return {
      resource: []
    };
  },
  computed: {
    col() {
      return this.resource.length > 1 ? 24 / this.resource.length : 12;
    },
    result() {
      return this.value;
    },
    resultLen() {
      return Boolean(this.value.length);
    }
  },
  watch: {
    data(nVal) {
      if (nVal && nVal.length)
        this.updateResource();
      else
        this.resource = [];
    }
  },
  methods: {
    updateResource() {
      this.resource = [];
      this.resource.push({
        data: this.data,
        current: "",
        level: 1,
        title: this.title[0]
      });
    },
    handleClose(name) {
      this.$emit("on-delete", { list: this.data, name });
    },
    selectAll({ level, check, cat }) {
      let index2 = level - 2;
      let current = index2 > -1 ? this.resource[index2].current : "";
      cat && (current = cat);
      this.$emit("on-select", {
        check,
        current,
        list: this.data
      });
    },
    pushChild(params) {
      const { item, level } = params;
      const len = this.resource.length;
      if (level <= len - 1) {
        this.resource.splice(level, len - level);
      }
      this.resource.push({
        data: item.children,
        current: "",
        level: level + 1,
        title: this.title[level] || item.value
      });
      this.resource[level - 1].current = item.value;
    }
  },
  created() {
    this.updateResource();
  }
};
const __cssModules$1 = {};
var __component__$1 = /* @__PURE__ */ normalizeComponent(
  __vue2_script$1,
  render$1,
  staticRenderFns$1,
  false,
  __vue2_injectStyles$1,
<<<<<<< HEAD
  "a08e85b8",
=======
  "ba832ea4",
>>>>>>> 512566f2f7dfc72d1e9ab0db6dd850af29a315dd
  null,
  null
);
function __vue2_injectStyles$1(context) {
  for (let o in __cssModules$1) {
    this[o] = __cssModules$1[o];
  }
}
var Selecter = /* @__PURE__ */ function() {
  return __component__$1.exports;
}();
Selecter.install = function(Vue) {
  Vue.component(Selecter.name, Selecter);
};
var render = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("select-item", {
    attrs: {
      "title": _vm.title
    }
  }, [_c("a-radio-group", {
    model: {
      value: _vm.current,
      callback: function($$v) {
        _vm.current = $$v;
      },
      expression: "current"
    }
  }, _vm._l(_vm.versions, function(r) {
    return _c("a-radio", {
      key: r.value,
      staticClass: "c-version-item",
      attrs: {
        "value": r.value
      }
    }, [_vm._v(_vm._s(r.label))]);
  }), 1)], 1);
};
var staticRenderFns = [];
;
var version_vue_vue_type_style_index_0_scoped_true_lang = "";
const __vue2_script = {
  name: "Version",
  components: { SelectItem },
  props: {
    value: {
      type: [String, Number],
      default: "NONE"
    },
    data: {
      type: Array,
      default() {
        return [];
      }
    },
    title: {
      type: String,
      default: "\u7248\u672C",
      required: true
    },
    android: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    current: {
      get() {
        return this.value;
      },
      set(val) {
        this.$emit("input", val);
      }
    },
    vername() {
      return this.android ? "Android" : "iOS";
    },
    versions() {
      const data = this.data.map((ret) => {
        return {
          label: `${this.vername} ${ret}\u53CA\u4EE5\u4E0A`,
          value: ret
        };
      });
      return [{ label: "\u4E0D\u9650", value: "NONE" }, ...data];
    }
  }
};
const __cssModules = {};
var __component__ = /* @__PURE__ */ normalizeComponent(
  __vue2_script,
<<<<<<< HEAD
  render248,
  staticRenderFns,
  false,
  __vue2_injectStyles,
  "89321ea8",
=======
  render,
  staticRenderFns,
  false,
  __vue2_injectStyles,
  "1537e450",
>>>>>>> 512566f2f7dfc72d1e9ab0db6dd850af29a315dd
  null,
  null
);
function __vue2_injectStyles(context) {
  for (let o in __cssModules) {
    this[o] = __cssModules[o];
  }
}
var Version = /* @__PURE__ */ function() {
  return __component__.exports;
}();
Version.install = function(Vue) {
  Vue.component(Version.name, Version);
};
const components = [
  DragWeektime,
  Selecter,
  Version,
  ICheckbox
];
const install = (Vue) => {
  components.forEach((component) => {
    Vue.component(component.name, component);
  });
};
var index = {
  install,
  DragWeektime,
  Selecter,
  Version,
  ICheckbox
};
export { index as default };
